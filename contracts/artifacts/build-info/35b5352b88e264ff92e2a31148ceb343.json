{
	"id": "35b5352b88e264ff92e2a31148ceb343",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DeAnt3Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\r\n\r\ncontract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable {\r\n    string private _name;\r\n    string private _symbol;\r\n    uint8 private _decimals;\r\n    uint256 private _rewardAmt;\r\n    uint256 private _cap;\r\n    uint256 private _taxFee;\r\n    uint256 public totalBurned;\r\n    address[] private _signers;\r\n    mapping(address => bool) public _mapSigners;\r\n    mapping(uint256 => bool) public uniqueIdExists;\r\n    mapping(address => uint256) public userTotalBurned;\r\n\r\n    function initialize(\r\n        string memory _NAME,\r\n        string memory _SYMBOL,\r\n        uint8 _DECIMALS,\r\n        uint256 cap,\r\n        uint256 initialBalance,\r\n        uint256 taxFee\r\n    ) public initializer {\r\n        __Ownable_init();\r\n        __ERC20_init(_NAME, _SYMBOL);\r\n        __ERC20Capped_init(cap * 10**_DECIMALS);\r\n        _name = _NAME;\r\n        _symbol = _SYMBOL;\r\n        _decimals = _DECIMALS;\r\n        _rewardAmt = 0.1 ether;\r\n        _cap = cap;\r\n        _taxFee = taxFee;\r\n        _mint(address(this), initialBalance);\r\n    }\r\n\r\n    receive() external payable {}\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return _decimals;\r\n    }\r\n\r\n    function getRewardAmt() public view returns (uint256) {\r\n        return _rewardAmt;\r\n    }\r\n\r\n    function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {\r\n        _rewardAmt = _newAmt;\r\n    }\r\n\r\n    function getTaxFee() public view returns (uint256) {\r\n        return _taxFee;\r\n    }\r\n\r\n    function setTaxFee(uint256 _newTaxFee) external onlyOwner {\r\n        _taxFee = _newTaxFee;\r\n    }\r\n\r\n    function signers() external view returns (address[] memory) {\r\n        return _signers;\r\n    }\r\n\r\n    function setSigners(address[] memory signers_) external virtual onlyOwner {\r\n        _updateMap(_signers, false, _mapSigners);\r\n        delete _signers;\r\n        _signers = signers_;\r\n        _updateMap(signers_, true, _mapSigners);\r\n    }\r\n\r\n    function mapSigner(address signer) external view returns (bool) {\r\n        return _mapSigners[signer];\r\n    }\r\n\r\n    function _updateMap(\r\n        address[] memory arr,\r\n        bool status,\r\n        mapping(address => bool) storage map\r\n    ) internal {\r\n        for (uint64 i = 0; i < arr.length; i++) {\r\n            map[arr[i]] = status;\r\n        }\r\n    }\r\n\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        override\r\n        returns (bool)\r\n    {\r\n        if (msg.sender == owner()) {\r\n            super.transfer(recipient, amount);\r\n        } else {\r\n            uint256 burnAmt = _calculateBurnAmt(amount);\r\n            _burnAndUpdate(msg.sender, burnAmt);\r\n            uint256 newAmt = amount - burnAmt;\r\n            super.transfer(recipient, newAmt);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        uint256 newAmt = _calculateBurnAmt(amount);\r\n        _burnAndUpdate(from, newAmt);\r\n        super.transferFrom(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    function _calculateBurnAmt(uint256 amount) private view returns (uint256) {\r\n        uint256 burnAmt = (amount * _taxFee) / 100;\r\n        return burnAmt;\r\n    }\r\n\r\n    function _burnAndUpdate(address account, uint256 amount) private {\r\n        _burn(account, amount);\r\n        totalBurned = totalBurned + amount;\r\n        userTotalBurned[account] = userTotalBurned[account] + amount;\r\n    }\r\n\r\n    function permitMint(\r\n        address payable recipient,\r\n        uint256 uniqueId,\r\n        uint256 amount,\r\n        uint256 deadline,\r\n        uint8[] memory v,\r\n        bytes32[] memory r,\r\n        bytes32[] memory s\r\n    ) public virtual {\r\n        require(deadline >= block.timestamp, \"Expired deadline\");\r\n        require(!uniqueIdExists[uniqueId], \"Unique id exists\");\r\n\r\n        address spender = msg.sender;\r\n        address owner = super.owner();\r\n\r\n        bytes32 permitTxHash = keccak256(\r\n            abi.encodePacked(\r\n                bytes1(0x19),\r\n                bytes1(0),\r\n                owner,\r\n                spender,\r\n                recipient,\r\n                amount,\r\n                uniqueId,\r\n                deadline\r\n            )\r\n        );\r\n\r\n        address lastAddr = address(0);\r\n        uint8 verifiedSigners = 0;\r\n        for (uint64 i = 0; i < v.length; i++) {\r\n            address recovered = ecrecover(permitTxHash, v[i], r[i], s[i]);\r\n            if (recovered > lastAddr && _mapSigners[recovered])\r\n                verifiedSigners++;\r\n            lastAddr = recovered;\r\n        }\r\n\r\n        require(verifiedSigners >= 2, \"Invalid signers\");\r\n        uniqueIdExists[uniqueId] = true;\r\n\r\n        (bool success, ) = recipient.call{value: _rewardAmt * amount}(\"\");\r\n        require(success, \"Failed to send Mech\");\r\n        super._mint(recipient, amount);\r\n    }\r\n\r\n    // function _permitMintTest(address payable recipient, uint256 amount)\r\n    //     public\r\n    //     virtual\r\n    // {\r\n    //     super._mint(recipient, amount);\r\n    //     sendMech(recipient, 0.1 ether);\r\n    // }\r\n\r\n    // function sendMech(address payable _to, uint256 _amount) public {\r\n    //     // Note that \"to\" is declared as payable\r\n    //     (bool success, ) = _to.call{value: _amount}(\"\");\r\n    //     require(success, \"Failed to send Ether\");\r\n    // }\r\n}\r\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n *\n * @custom:storage-size 51\n */\nabstract contract ERC20CappedUpgradeable is Initializable, ERC20Upgradeable {\n    uint256 private _cap;\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    function __ERC20Capped_init(uint256 cap_) internal onlyInitializing {\n        __ERC20Capped_init_unchained(cap_);\n    }\n\n    function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {\n        require(cap_ > 0, \"ERC20Capped: cap is 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_mint}.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\");\n        super._mint(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n     * initialization step. This is essential to configure modules that are added through upgrades and that require\n     * initialization.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized < type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20Upgradeable.sol\";\nimport \"./extensions/IERC20MetadataUpgradeable.sol\";\nimport \"../../utils/ContextUpgradeable.sol\";\nimport \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20Upgradeable.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n                /// @solidity memory-safe-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ``` contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1482:13245  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1482:13245  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3668:3680  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3430:3521  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3512:3514  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3430:3521  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3819:3826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3854  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2560  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2579:2584  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2584  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4853:4857  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4923:4930  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4932:4938  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4915  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4956:4960  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5656:5660  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5728:5732  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5743:5749  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5727  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5770:5774  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5776:5778  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5780:5786  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5769  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5804:5808  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6298:6302  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6405:6415  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6386  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6415  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6360  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2760:2773  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2799  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2785:2799  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7122:7129  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7114  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7078:7130  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7168:7183  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7164  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7183  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7268:7273  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7275:7282  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7303:7318  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7318  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7267  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4145:4149  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4216:4218  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4220:4226  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4208  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4402:4409  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4439  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4455  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10447:10817  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10578:10597  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10656:10677  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10745  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10738  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10745  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10754  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10763  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10447:10817  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11539  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11252  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11280  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11265:11270  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11272:11279  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11264  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11280  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11280  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11294:11310  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11294:11331  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11290:11533  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11375:11381  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11371  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11381  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11508  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11466:11471  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11473:11480  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11501:11507  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11498  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11507  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11465  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11508  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11218:11539  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11539  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7812:8463  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7938:7956  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8016:8032  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8132:8151  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8163  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8187:8208  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8294  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8303:8323  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8323  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8356  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8317:8323  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8317:8323  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8397:8399  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8391:8395  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8401:8407  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8419:8456  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12123:12244  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220201226ba3962a64cd3b351151a00b90bf3e70ebac6945ae90df61c58329f18b664736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610887806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060603680546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060603780546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220201226ba3962a64cd3b351151a00b90bf3e70ebac6945ae90df61c58329f18b664736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x887 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SLT 0x26 0xBA CODECOPY PUSH3 0xA64CD3 0xB3 MLOAD ISZERO BYTE STOP 0xB9 SIGNEXTEND RETURN 0xE7 0xE 0xBA 0xC6 SWAP5 GAS 0xE9 0xD 0xF6 SHR PC ORIGIN SWAP16 XOR 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "1482:11763:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_822": {
									"entryPoint": 856,
									"id": 822,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_876": {
									"entryPoint": null,
									"id": 876,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_1353": {
									"entryPoint": null,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_865": {
									"entryPoint": 1148,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_649": {
									"entryPoint": 1270,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_444": {
									"entryPoint": 813,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_469": {
									"entryPoint": 562,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_572": {
									"entryPoint": 671,
									"id": 572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_531": {
									"entryPoint": 622,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_357": {
									"entryPoint": 416,
									"id": 357,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_367": {
									"entryPoint": 656,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_502": {
									"entryPoint": 586,
									"id": 502,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_426": {
									"entryPoint": 799,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:9",
																"statements": []
															},
															"src": "294:140:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:9"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:9"
															},
															"nodeType": "YulIf",
															"src": "443:91:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:597:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:9"
															},
															"nodeType": "YulIf",
															"src": "713:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:9",
														"type": ""
													}
												],
												"src": "616:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:9"
															},
															"nodeType": "YulIf",
															"src": "891:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:9",
														"type": ""
													}
												],
												"src": "794:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:9",
														"type": ""
													}
												],
												"src": "1053:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:9",
														"type": ""
													}
												],
												"src": "1245:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:9"
															},
															"nodeType": "YulIf",
															"src": "1541:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:9",
														"type": ""
													}
												],
												"src": "1427:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:9",
														"type": ""
													}
												],
												"src": "1760:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:9"
															},
															"nodeType": "YulIf",
															"src": "2029:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:9",
														"type": ""
													}
												],
												"src": "1949:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:9"
															},
															"nodeType": "YulIf",
															"src": "2237:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:9",
														"type": ""
													}
												],
												"src": "2140:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:9"
															},
															"nodeType": "YulIf",
															"src": "2548:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:9"
															},
															"nodeType": "YulIf",
															"src": "2618:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:9",
														"type": ""
													}
												],
												"src": "2405:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:9"
															},
															"nodeType": "YulIf",
															"src": "2848:136:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:9",
														"type": ""
													}
												],
												"src": "2790:225:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:9",
														"type": ""
													}
												],
												"src": "3020:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:9",
														"type": ""
													}
												],
												"src": "3426:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:9",
														"type": ""
													}
												],
												"src": "3831:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:9",
														"type": ""
													}
												],
												"src": "4234:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:9",
														"type": ""
													}
												],
												"src": "4592:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:9",
														"type": ""
													}
												],
												"src": "4998:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:9",
														"type": ""
													}
												],
												"src": "5402:402:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6035545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526033602052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060603680546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060603780546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260336020526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220201226ba3962a64cd3b351151a00b90bf3e70ebac6945ae90df61c58329f18b664736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 SLT 0x26 0xBA CODECOPY PUSH3 0xA64CD3 0xB3 MLOAD ISZERO BYTE STOP 0xB9 SIGNEXTEND RETURN 0xE7 0xE 0xBA 0xC6 SWAP5 GAS 0xE9 0xD 0xF6 SHR PC ORIGIN SWAP16 XOR 0xB6 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "1482:11763:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4770:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:9;;1211:22;1193:41;;1181:2;1166:18;4770:197:2;1053:187:9;3581:106:2;3668:12;;3581:106;;;1391:25:9;;;1379:2;1364:18;3581:106:2;1245:177:9;5529:286:2;;;;;;:::i;:::-;;:::i;3430:91::-;;;3512:2;1902:36:9;;1890:2;1875:18;3430:91:2;1760:184:9;6210:234:2;;;;;;:::i;:::-;;:::i;3745:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2704:102;;;:::i;6931:427::-;;;;;;:::i;:::-;;:::i;4066:189::-;;;;;;:::i;:::-;;:::i;4313:149::-;;;;;;:::i;:::-;;:::i;2493:98::-;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:7;4907:32:2;929:10:7;4923:7:2;4932:6;4907:8;:32::i;:::-;-1:-1:-1;4956:4:2;;4770:197;-1:-1:-1;;;4770:197:2:o;5529:286::-;5656:4;929:10:7;5712:38:2;5728:4;929:10:7;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;:::-;-1:-1:-1;5804:4:2;;5529:286;-1:-1:-1;;;;5529:286:2:o;6210:234::-;6298:4;929:10:7;6352:64:2;929:10:7;6368:7:2;6405:10;6377:25;929:10:7;6368:7:2;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;2704:102::-;2760:13;2792:7;2785:14;;;;;:::i;6931:427::-;7024:4;929:10:7;7024:4:2;7105:25;929:10:7;7122:7:2;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:2;;3222:2:9;7140:85:2;;;3204:21:9;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:9;;;3344:35;3396:19;;7140:85:2;;;;;;;;;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;4066:189::-;4145:4;929:10:7;4199:28:2;929:10:7;4216:2:2;4220:6;4199:9;:28::i;4313:149::-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;10447:370::-;-1:-1:-1;;;;;10578:19:2;;10570:68;;;;-1:-1:-1;;;10570:68:2;;3628:2:9;10570:68:2;;;3610:21:9;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:9;;;3750:34;3801:19;;10570:68:2;3426:400:9;10570:68:2;-1:-1:-1;;;;;10656:21:2;;10648:68;;;;-1:-1:-1;;;10648:68:2;;4033:2:9;10648:68:2;;;4015:21:9;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:9;;;4155:32;4204:19;;10648:68:2;3831:398:9;10648:68:2;-1:-1:-1;;;;;10727:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1391:25:9;;;10778:32:2;;1364:18:9;10778:32:2;;;;;;;10447:370;;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:2;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:2;;4436:2:9;11347:68:2;;;4418:21:9;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11347:68:2;4234:353:9;11347:68:2;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;:::-;11218:321;11098:441;;;:::o;7812:651::-;-1:-1:-1;;;;;7938:18:2;;7930:68;;;;-1:-1:-1;;;7930:68:2;;4794:2:9;7930:68:2;;;4776:21:9;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:9;;;4916:35;4968:19;;7930:68:2;4592:401:9;7930:68:2;-1:-1:-1;;;;;8016:16:2;;8008:64;;;;-1:-1:-1;;;8008:64:2;;5200:2:9;8008:64:2;;;5182:21:9;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:9;;;5322:33;5372:19;;8008:64:2;4998:399:9;8008:64:2;-1:-1:-1;;;;;8154:15:2;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:2;;5604:2:9;8179:72:2;;;5586:21:9;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:9;;;5726:36;5779:19;;8179:72:2;5402:402:9;8179:72:2;-1:-1:-1;;;;;8285:15:2;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:2;8391:4;-1:-1:-1;;;;;8382:26:2;;8401:6;8382:26;;;;1391:25:9;;1379:2;1364:18;;1245:177;8382:26:2;;;;;;;;8419:37;12123:121;14:597:9;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:9;574:15;-1:-1:-1;;570:29:9;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:9:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:9;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:9:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:9:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:9;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "474",
								"totalCost": "437074"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51264",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1482,
									"end": 13245,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220201226ba3962a64cd3b351151a00b90bf3e70ebac6945ae90df61c58329f18b664736f6c634300080b0033",
									".code": [
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1482,
											"end": 13245,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3430,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5712,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5804,
											"end": 5808,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6405,
											"end": 6415,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2792,
											"end": 2799,
											"name": "PUSH",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7129,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 7268,
											"end": 7273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7275,
											"end": 7282,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7300,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10578,
											"end": 10597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10578,
											"end": 10597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10738,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11272,
											"end": 11279,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11255,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11294,
											"end": 11310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11331,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11290,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11290,
											"end": 11533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11375,
											"end": 11381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11381,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11466,
											"end": 11471,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11473,
											"end": 11480,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11501,
											"end": 11507,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11482,
											"end": 11498,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11482,
											"end": 11507,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11457,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11218,
											"end": 11539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7812,
											"end": 8463,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7812,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8016,
											"end": 8032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8132,
											"end": 8151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8323,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8397,
											"end": 8399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8395,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12123,
											"end": 12244,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 301,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 309,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 311,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 892,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
				"ERC20CappedUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:storage-size": "51",
						"details": "Extension of {ERC20} that adds a cap to the supply of tokens.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:storage-size\":\"51\",\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":\"ERC20CappedUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6\",\"dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 301,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 309,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 311,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 892,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 982,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "_cap",
								"offset": 0,
								"slot": "101",
								"type": "t_uint256"
							},
							{
								"astId": 1057,
								"contract": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:ERC20CappedUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:7366  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208630b8cbb7394cb9eb9b53692c2e1d677c40cb9dd45fb91e50cbea1260d43abd64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208630b8cbb7394cb9eb9b53692c2e1d677c40cb9dd45fb91e50cbea1260d43abd64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 ADDRESS 0xB8 0xCB 0xB7 CODECOPY 0x4C 0xB9 0xEB SWAP12 MSTORE8 PUSH10 0x2C2E1D677C40CB9DD45F 0xB9 0x1E POP 0xCB 0xEA SLT PUSH1 0xD4 GASPRICE 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "194:7172:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:7172:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208630b8cbb7394cb9eb9b53692c2e1d677c40cb9dd45fb91e50cbea1260d43abd64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 ADDRESS 0xB8 0xCB 0xB7 CODECOPY 0x4C 0xB9 0xEB SWAP12 MSTORE8 PUSH10 0x2C2E1D677C40CB9DD45F 0xB9 0x1E POP 0xCB 0xEA SLT PUSH1 0xD4 GASPRICE 0xBD PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "194:7172:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 7366,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208630b8cbb7394cb9eb9b53692c2e1d677c40cb9dd45fb91e50cbea1260d43abd64736f6c634300080b0033",
									".code": [
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 7366,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/DeAnt3Token.sol": {
				"DeAnt3Token": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_mapSigners",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardAmt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTaxFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_NAME",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_SYMBOL",
									"type": "string"
								},
								{
									"internalType": "uint8",
									"name": "_DECIMALS",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "cap",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "initialBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "taxFee",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "signer",
									"type": "address"
								}
							],
							"name": "mapSigner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "uniqueId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8[]",
									"name": "v",
									"type": "uint8[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "r",
									"type": "bytes32[]"
								},
								{
									"internalType": "bytes32[]",
									"name": "s",
									"type": "bytes32[]"
								}
							],
							"name": "permitMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newAmt",
									"type": "uint256"
								}
							],
							"name": "setRewardAmtInWei",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "signers_",
									"type": "address[]"
								}
							],
							"name": "setSigners",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newTaxFee",
									"type": "uint256"
								}
							],
							"name": "setTaxFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signers",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uniqueIdExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userTotalBurned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"cap()": {
								"details": "Returns the cap on the token's total supply."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DeAnt3Token.sol\":243:5613  contract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DeAnt3Token.sol\":243:5613  contract DeAnt3Token is ERC20CappedUpgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc4081a4c\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe4c97e6a\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe4c97e6a\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf66608fe\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf9342285\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xc4081a4c\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd89135cd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xa457c2d7\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xac7fa3c6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xb24a0893\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa3772662\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x313ce567\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x3de47e32\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x3de47e32\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x46f0975a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x355274ea\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x18160ddd\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1e0d4ce9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2b9a1d3c\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x07c351dd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DeAnt3Token.sol\":2178:2287  function mapSigner(address signer) external view returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2260:2279  _mapSigners[signer] */\n      and\n        /* \"contracts/DeAnt3Token.sol\":2236:2240  bool */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2260:2279  _mapSigners[signer] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":2260:2271  _mapSigners */\n      0xd2\n        /* \"contracts/DeAnt3Token.sol\":2260:2279  _mapSigners[signer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":2178:2287  function mapSigner(address signer) external view returns (bool) {... */\n      jump\n    tag_46:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"contracts/DeAnt3Token.sol\":2178:2287  function mapSigner(address signer) external view returns (bool) {... */\n      tag_43\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_46\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3668:3680  _totalSupply */\n      sload(0x35)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_59:\n      mload(0x40)\n        /* \"#utility.yul\":1662:1687   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1650:1652   */\n      0x20\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_43\n        /* \"#utility.yul\":1516:1693   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":662:712  mapping(address => uint256) public userTotalBurned */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_59\n      tag_65\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_65:\n      mstore(0x20, 0xd4)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/DeAnt3Token.sol\":3017:3323  function transferFrom(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_46\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":721:1271  function initialize(... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/DeAnt3Token.sol\":1316:1416  function decimals() public view virtual override returns (uint8) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1399:1408  _decimals */\n      sload(0xcc)\n        /* \"contracts/DeAnt3Token.sol\":1316:1416  function decimals() public view virtual override returns (uint8) {... */\n      mload(0x40)\n        /* \"contracts/DeAnt3Token.sol\":1399:1408  _decimals */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4235:4271   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4223:4225   */\n      0x20\n        /* \"#utility.yul\":4208:4226   */\n      add\n        /* \"contracts/DeAnt3Token.sol\":1316:1416  function decimals() public view virtual override returns (uint8) {... */\n      tag_43\n        /* \"#utility.yul\":4093:4277   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":929:1010  function cap() public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":999:1003  _cap */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":929:1010  function cap() public view virtual returns (uint256) {... */\n      jump(tag_59)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_46\n      tag_90\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":559:602  mapping(address => bool) public _mapSigners */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_46\n      tag_95\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_95:\n      mstore(0x20, 0xd2)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/DeAnt3Token.sol\":1829:1923  function signers() external view returns (address[] memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_59\n      tag_105\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3819:3826  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3854  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3845:3863  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3745:3870  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_75\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      sload(0x98)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5091:5142   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5079:5081   */\n      0x20\n        /* \"#utility.yul\":5064:5082   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      tag_43\n        /* \"#utility.yul\":4945:5148   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      tag_41\n      tag_118\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1931:2170  function setSigners(address[] memory signers_) external virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_75\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_125\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_125:\n      pop\n      tag_46\n      tag_127\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":2544:3009  function transfer(address recipient, uint256 amount)... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_46\n      tag_132\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1424:1514  function getRewardAmt() public view returns (uint256) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1496:1506  _rewardAmt */\n      sload(0xcd)\n        /* \"contracts/DeAnt3Token.sol\":1424:1514  function getRewardAmt() public view returns (uint256) {... */\n      jump(tag_59)\n        /* \"contracts/DeAnt3Token.sol\":1522:1624  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_75\n      tag_141\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1724:1821  function setTaxFee(uint256 _newTaxFee) external onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_75\n      tag_146\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":493:519  uint256 public totalBurned */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_59\n      sload(0xd0)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_59\n      tag_154\n      calldatasize\n      0x04\n      tag_155\n      jump\t// in\n    tag_154:\n      tag_156\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":3729:5132  function permitMint(... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_75\n      tag_160\n      calldatasize\n      0x04\n      tag_161\n      jump\t// in\n    tag_160:\n      tag_162\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      tag_75\n      tag_165\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_165:\n      tag_166\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1632:1716  function getTaxFee() public view returns (uint256) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1701:1708  _taxFee */\n      sload(0xcf)\n        /* \"contracts/DeAnt3Token.sol\":1632:1716  function getTaxFee() public view returns (uint256) {... */\n      jump(tag_59)\n        /* \"contracts/DeAnt3Token.sol\":609:655  mapping(uint256 => bool) public uniqueIdExists */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_46\n      tag_173\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_173:\n      mstore(0x20, 0xd3)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2560  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2579:2584  _name */\n      0x36\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2584  return _name */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_179\n      swap1\n      tag_178\n      jump\t// in\n    tag_179:\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_181\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_180)\n    tag_181:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_182:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_182\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2493:2591  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4853:4857  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4923:4930  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4932:4938  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4915  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4907:4939  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4956:4960  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4949:4960  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4770:4967  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_184:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":3017:3323  function transferFrom(... */\n    tag_72:\n        /* \"contracts/DeAnt3Token.sol\":3148:3152  bool */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":3165:3179  uint256 newAmt */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":3182:3207  _calculateBurnAmt(amount) */\n      tag_191\n        /* \"contracts/DeAnt3Token.sol\":3200:3206  amount */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":3182:3199  _calculateBurnAmt */\n      tag_192\n        /* \"contracts/DeAnt3Token.sol\":3182:3207  _calculateBurnAmt(amount) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/DeAnt3Token.sol\":3165:3207  uint256 newAmt = _calculateBurnAmt(amount) */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":3218:3246  _burnAndUpdate(from, newAmt) */\n      tag_193\n        /* \"contracts/DeAnt3Token.sol\":3233:3237  from */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":3239:3245  newAmt */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":3218:3232  _burnAndUpdate */\n      tag_194\n        /* \"contracts/DeAnt3Token.sol\":3218:3246  _burnAndUpdate(from, newAmt) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/DeAnt3Token.sol\":3257:3293  super.transferFrom(from, to, amount) */\n      tag_195\n        /* \"contracts/DeAnt3Token.sol\":3276:3280  from */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":3282:3284  to */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":3286:3292  amount */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":3257:3275  super.transferFrom */\n      tag_196\n        /* \"contracts/DeAnt3Token.sol\":3257:3293  super.transferFrom(from, to, amount) */\n      jump\t// in\n    tag_195:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":3311:3315  true */\n      0x01\n      swap6\n        /* \"contracts/DeAnt3Token.sol\":3017:3323  function transferFrom(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":721:1271  function initialize(... */\n    tag_78:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3111:3130  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3134:3147  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3133:3147  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3212:3213  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3209  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3197:3213  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3179:3213  isTopLevelCall && _initialized < 1 */\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3178:3286  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_202\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3258:3262  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1495  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1476:1499  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_202\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3280  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3268:3285  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3219:3285  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9866:9868   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9848:9869   */\n      mstore\n        /* \"#utility.yul\":9905:9907   */\n      0x2e\n        /* \"#utility.yul\":9885:9903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9878:9908   */\n      mstore\n        /* \"#utility.yul\":9944:9978   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":9924:9942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9917:9979   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":9995:10013   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9988:10032   */\n      mstore\n        /* \"#utility.yul\":10049:10068   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3157:3358  require(... */\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3380  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3383:3384  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3368:3384  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3441  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3428:3448  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3394:3459  if (isTopLevelCall) {... */\n    tag_206:\n        /* \"contracts/DeAnt3Token.sol\":946:962  __Ownable_init() */\n      tag_208\n        /* \"contracts/DeAnt3Token.sol\":946:960  __Ownable_init */\n      tag_209\n        /* \"contracts/DeAnt3Token.sol\":946:962  __Ownable_init() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/DeAnt3Token.sol\":973:1001  __ERC20_init(_NAME, _SYMBOL) */\n      tag_210\n        /* \"contracts/DeAnt3Token.sol\":986:991  _NAME */\n      dup8\n        /* \"contracts/DeAnt3Token.sol\":993:1000  _SYMBOL */\n      dup8\n        /* \"contracts/DeAnt3Token.sol\":973:985  __ERC20_init */\n      tag_211\n        /* \"contracts/DeAnt3Token.sol\":973:1001  __ERC20_init(_NAME, _SYMBOL) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/DeAnt3Token.sol\":1012:1051  __ERC20Capped_init(cap * 10**_DECIMALS) */\n      tag_212\n        /* \"contracts/DeAnt3Token.sol\":1037:1050  10**_DECIMALS */\n      tag_213\n        /* \"contracts/DeAnt3Token.sol\":1041:1050  _DECIMALS */\n      dup7\n        /* \"contracts/DeAnt3Token.sol\":1037:1039  10 */\n      0x0a\n        /* \"contracts/DeAnt3Token.sol\":1037:1050  10**_DECIMALS */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"contracts/DeAnt3Token.sol\":1031:1050  cap * 10**_DECIMALS */\n      tag_215\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1031:1034  cap */\n      dup7\n        /* \"contracts/DeAnt3Token.sol\":1031:1050  cap * 10**_DECIMALS */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"contracts/DeAnt3Token.sol\":1012:1030  __ERC20Capped_init */\n      tag_217\n        /* \"contracts/DeAnt3Token.sol\":1012:1051  __ERC20Capped_init(cap * 10**_DECIMALS) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/DeAnt3Token.sol\":1062:1075  _name = _NAME */\n      dup7\n      mload\n      tag_218\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1062:1067  _name */\n      0xca\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1062:1075  _name = _NAME */\n      0x20\n      dup11\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1086:1103  _symbol = _SYMBOL */\n      dup6\n      mload\n      tag_220\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1086:1093  _symbol */\n      0xcb\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":1086:1103  _symbol = _SYMBOL */\n      0x20\n      dup10\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_220:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1114:1123  _decimals */\n      0xcc\n        /* \"contracts/DeAnt3Token.sol\":1114:1135  _decimals = _DECIMALS */\n      dup1\n      sload\n      not(0xff)\n      and\n      0xff\n      dup8\n      and\n      or\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1159:1168  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/DeAnt3Token.sol\":1146:1156  _rewardAmt */\n      0xcd\n        /* \"contracts/DeAnt3Token.sol\":1146:1168  _rewardAmt = 0.1 ether */\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1179:1183  _cap */\n      0xce\n        /* \"contracts/DeAnt3Token.sol\":1179:1189  _cap = cap */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1200:1207  _taxFee */\n      0xcf\n        /* \"contracts/DeAnt3Token.sol\":1200:1216  _taxFee = taxFee */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1227:1263  _mint(address(this), initialBalance) */\n      tag_221\n        /* \"contracts/DeAnt3Token.sol\":1241:1245  this */\n      address\n        /* \"contracts/DeAnt3Token.sol\":1248:1262  initialBalance */\n      dup5\n        /* \"contracts/DeAnt3Token.sol\":1227:1232  _mint */\n      tag_222\n        /* \"contracts/DeAnt3Token.sol\":1227:1263  _mint(address(this), initialBalance) */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3483:3497  isTopLevelCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n      iszero\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3529:3534  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3513:3534  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":4235:4271   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":4223:4225   */\n      0x20\n        /* \"#utility.yul\":4208:4226   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3553:3567  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3479:3578  if (isTopLevelCall) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3101:3584  {... */\n      pop\n        /* \"contracts/DeAnt3Token.sol\":721:1271  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6210:6444  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6298:6302  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6405:6415  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6368:6375  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6386  allowance */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6402  allowance(owner, spender) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6377:6415  allowance(owner, spender) + addedValue */\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6360  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6352:6416  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1829:1923  function signers() external view returns (address[] memory) {... */\n    tag_100:\n        /* \"contracts/DeAnt3Token.sol\":1871:1887  address[] memory */\n      0x60\n        /* \"contracts/DeAnt3Token.sol\":1907:1915  _signers */\n      0xd1\n        /* \"contracts/DeAnt3Token.sol\":1900:1915  return _signers */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_236:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_236\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":1829:1923  function signers() external view returns (address[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_239\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_239:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2162:2163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2153  _transferOwnership */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2135:2165  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2071:2172  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2704:2806  function symbol() public view virtual override returns (string memory) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2760:2773  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2799  _symbol */\n      0x37\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2785:2799  return _symbol */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n        /* \"contracts/DeAnt3Token.sol\":1931:2170  function setSigners(address[] memory signers_) external virtual onlyOwner {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_252\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_252:\n        /* \"contracts/DeAnt3Token.sol\":2016:2056  _updateMap(_signers, false, _mapSigners) */\n      tag_254\n        /* \"contracts/DeAnt3Token.sol\":2027:2035  _signers */\n      0xd1\n        /* \"contracts/DeAnt3Token.sol\":2016:2056  _updateMap(_signers, false, _mapSigners) */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_256:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_256\n      jumpi\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2037:2042  false */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2044:2055  _mapSigners */\n      0xd2\n        /* \"contracts/DeAnt3Token.sol\":2016:2026  _updateMap */\n      tag_257\n        /* \"contracts/DeAnt3Token.sol\":2016:2056  _updateMap(_signers, false, _mapSigners) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/DeAnt3Token.sol\":2067:2082  delete _signers */\n      tag_258\n        /* \"contracts/DeAnt3Token.sol\":2074:2082  _signers */\n      0xd1\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2067:2082  delete _signers */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"contracts/DeAnt3Token.sol\":2093:2112  _signers = signers_ */\n      dup1\n      mload\n      tag_260\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":2093:2101  _signers */\n      0xd1\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":2093:2112  _signers = signers_ */\n      0x20\n      dup5\n      add\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2123:2162  _updateMap(signers_, true, _mapSigners) */\n      tag_262\n        /* \"contracts/DeAnt3Token.sol\":2134:2142  signers_ */\n      dup2\n        /* \"contracts/DeAnt3Token.sol\":2144:2148  true */\n      0x01\n        /* \"contracts/DeAnt3Token.sol\":2150:2161  _mapSigners */\n      0xd2\n        /* \"contracts/DeAnt3Token.sol\":2123:2133  _updateMap */\n      tag_257\n        /* \"contracts/DeAnt3Token.sol\":2123:2162  _updateMap(signers_, true, _mapSigners) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/DeAnt3Token.sol\":1931:2170  function setSigners(address[] memory signers_) external virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7024:7028  bool */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7122:7129  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7114  allowance */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7105:7130  allowance(owner, spender) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7078:7130  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7168:7183  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7164  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7148:7183  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12301:12303   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12283:12304   */\n      mstore\n        /* \"#utility.yul\":12340:12342   */\n      0x25\n        /* \"#utility.yul\":12320:12338   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12313:12343   */\n      mstore\n        /* \"#utility.yul\":12379:12413   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":12359:12377   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12352:12414   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":12430:12448   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12423:12458   */\n      mstore\n        /* \"#utility.yul\":12475:12494   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_204\n        /* \"#utility.yul\":12099:12500   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7140:7225  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7268:7273  owner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7275:7282  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7303:7318  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7300  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7284:7318  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7267  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7259:7319  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_269:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7347:7351  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6931:7358  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":2544:3009  function transfer(address recipient, uint256 amount)... */\n    tag_133:\n        /* \"contracts/DeAnt3Token.sol\":2649:2653  bool */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2689:2696  owner() */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":2689:2696  owner() */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2675:2696  msg.sender == owner() */\n      and\n        /* \"contracts/DeAnt3Token.sol\":2675:2685  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2675:2696  msg.sender == owner() */\n      and\n      eq\n        /* \"contracts/DeAnt3Token.sol\":2671:2980  if (msg.sender == owner()) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"contracts/DeAnt3Token.sol\":2713:2746  super.transfer(recipient, amount) */\n      tag_273\n        /* \"contracts/DeAnt3Token.sol\":2728:2737  recipient */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":2739:2745  amount */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":2713:2727  super.transfer */\n      tag_274\n        /* \"contracts/DeAnt3Token.sol\":2713:2746  super.transfer(recipient, amount) */\n      jump\t// in\n    tag_273:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2671:2980  if (msg.sender == owner()) {... */\n      jump(tag_275)\n    tag_272:\n        /* \"contracts/DeAnt3Token.sol\":2779:2794  uint256 burnAmt */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2797:2822  _calculateBurnAmt(amount) */\n      tag_276\n        /* \"contracts/DeAnt3Token.sol\":2815:2821  amount */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":2797:2814  _calculateBurnAmt */\n      tag_192\n        /* \"contracts/DeAnt3Token.sol\":2797:2822  _calculateBurnAmt(amount) */\n      jump\t// in\n    tag_276:\n        /* \"contracts/DeAnt3Token.sol\":2779:2822  uint256 burnAmt = _calculateBurnAmt(amount) */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2837:2872  _burnAndUpdate(msg.sender, burnAmt) */\n      tag_277\n        /* \"contracts/DeAnt3Token.sol\":2852:2862  msg.sender */\n      caller\n        /* \"contracts/DeAnt3Token.sol\":2864:2871  burnAmt */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2837:2851  _burnAndUpdate */\n      tag_194\n        /* \"contracts/DeAnt3Token.sol\":2837:2872  _burnAndUpdate(msg.sender, burnAmt) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/DeAnt3Token.sol\":2887:2901  uint256 newAmt */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2904:2920  amount - burnAmt */\n      tag_278\n        /* \"contracts/DeAnt3Token.sol\":2913:2920  burnAmt */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2904:2910  amount */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":2904:2920  amount - burnAmt */\n      tag_279\n      jump\t// in\n    tag_278:\n        /* \"contracts/DeAnt3Token.sol\":2887:2920  uint256 newAmt = amount - burnAmt */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2935:2968  super.transfer(recipient, newAmt) */\n      tag_280\n        /* \"contracts/DeAnt3Token.sol\":2950:2959  recipient */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":2961:2967  newAmt */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2935:2949  super.transfer */\n      tag_274\n        /* \"contracts/DeAnt3Token.sol\":2935:2968  super.transfer(recipient, newAmt) */\n      jump\t// in\n    tag_280:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2764:2980  {... */\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2671:2980  if (msg.sender == owner()) {... */\n    tag_275:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2997:3001  true */\n      0x01\n        /* \"contracts/DeAnt3Token.sol\":2544:3009  function transfer(address recipient, uint256 amount)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":1522:1624  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_283:\n        /* \"contracts/DeAnt3Token.sol\":1596:1606  _rewardAmt */\n      0xcd\n        /* \"contracts/DeAnt3Token.sol\":1596:1616  _rewardAmt = _newAmt */\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1522:1624  function setRewardAmtInWei(uint256 _newAmt) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":1724:1821  function setTaxFee(uint256 _newTaxFee) external onlyOwner {... */\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_286:\n        /* \"contracts/DeAnt3Token.sol\":1793:1800  _taxFee */\n      0xcf\n        /* \"contracts/DeAnt3Token.sol\":1793:1813  _taxFee = _newTaxFee */\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":1724:1821  function setTaxFee(uint256 _newTaxFee) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4402:4409  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4439  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4446  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4428:4455  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4313:4462  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":3729:5132  function permitMint(... */\n    tag_162:\n        /* \"contracts/DeAnt3Token.sol\":4002:4017  block.timestamp */\n      timestamp\n        /* \"contracts/DeAnt3Token.sol\":3990:3998  deadline */\n      dup5\n        /* \"contracts/DeAnt3Token.sol\":3990:4017  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"contracts/DeAnt3Token.sol\":3982:4038  require(deadline >= block.timestamp, \"Expired deadline\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12837:12839   */\n      0x20\n        /* \"contracts/DeAnt3Token.sol\":3982:4038  require(deadline >= block.timestamp, \"Expired deadline\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12819:12840   */\n      mstore\n        /* \"#utility.yul\":12876:12878   */\n      0x10\n        /* \"#utility.yul\":12856:12874   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12849:12879   */\n      mstore\n      shl(0x80, 0x4578706972656420646561646c696e65)\n        /* \"#utility.yul\":12895:12913   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12888:12934   */\n      mstore\n        /* \"#utility.yul\":12951:12969   */\n      0x64\n      add\n        /* \"contracts/DeAnt3Token.sol\":3982:4038  require(deadline >= block.timestamp, \"Expired deadline\") */\n      tag_204\n        /* \"#utility.yul\":12635:12975   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":3982:4038  require(deadline >= block.timestamp, \"Expired deadline\") */\n    tag_290:\n        /* \"contracts/DeAnt3Token.sol\":4058:4082  uniqueIdExists[uniqueId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4058:4072  uniqueIdExists */\n      0xd3\n        /* \"contracts/DeAnt3Token.sol\":4058:4082  uniqueIdExists[uniqueId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/DeAnt3Token.sol\":4057:4082  !uniqueIdExists[uniqueId] */\n      iszero\n        /* \"contracts/DeAnt3Token.sol\":4049:4103  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13182:13184   */\n      0x20\n        /* \"contracts/DeAnt3Token.sol\":4049:4103  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13164:13185   */\n      mstore\n        /* \"#utility.yul\":13221:13223   */\n      0x10\n        /* \"#utility.yul\":13201:13219   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13194:13224   */\n      mstore\n      shl(0x80, 0x556e6971756520696420657869737473)\n        /* \"#utility.yul\":13240:13258   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13233:13279   */\n      mstore\n        /* \"#utility.yul\":13296:13314   */\n      0x64\n      add\n        /* \"contracts/DeAnt3Token.sol\":4049:4103  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n      tag_204\n        /* \"#utility.yul\":12980:13320   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":4049:4103  require(!uniqueIdExists[uniqueId], \"Unique id exists\") */\n    tag_293:\n        /* \"contracts/DeAnt3Token.sol\":4134:4144  msg.sender */\n      caller\n        /* \"contracts/DeAnt3Token.sol\":4116:4131  address spender */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":4171:4184  super.owner() */\n      tag_296\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1441:1526  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":4171:4184  super.owner() */\n    tag_296:\n        /* \"contracts/DeAnt3Token.sol\":4244:4491  abi.encodePacked(... */\n      mload(0x40)\n      shl(0xf8, 0x19)\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":13694:13722   */\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4197:4217  bytes32 permitTxHash */\n      0x00\n        /* \"#utility.yul\":13738:13749   */\n      0x21\n      dup3\n      add\n        /* \"#utility.yul\":13731:13767   */\n      dup2\n      swap1\n      mstore\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":13854:13856   */\n      0x60\n        /* \"#utility.yul\":13850:13865   */\n      dup5\n      dup2\n      shl\n        /* \"#utility.yul\":13846:13870   */\n      dup3\n      and\n        /* \"#utility.yul\":13833:13844   */\n      0x22\n      dup6\n      add\n        /* \"#utility.yul\":13826:13871   */\n      mstore\n        /* \"#utility.yul\":13905:13920   */\n      dup7\n      dup2\n      shl\n        /* \"#utility.yul\":13901:13925   */\n      dup3\n      and\n        /* \"#utility.yul\":13887:13899   */\n      0x36\n      dup6\n      add\n        /* \"#utility.yul\":13880:13926   */\n      mstore\n        /* \"#utility.yul\":13960:13975   */\n      dup14\n      swap1\n      shl\n        /* \"#utility.yul\":13956:13980   */\n      and\n        /* \"#utility.yul\":13942:13954   */\n      0x4a\n      dup4\n      add\n        /* \"#utility.yul\":13935:13981   */\n      mstore\n        /* \"#utility.yul\":13997:14009   */\n      0x5e\n      dup3\n      add\n        /* \"#utility.yul\":13990:14018   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":14034:14046   */\n      0x7e\n      dup3\n      add\n        /* \"#utility.yul\":14027:14055   */\n      dup12\n      swap1\n      mstore\n        /* \"#utility.yul\":14071:14084   */\n      0x9e\n      dup3\n      add\n        /* \"#utility.yul\":14064:14093   */\n      dup10\n      swap1\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4155:4184  address owner = super.owner() */\n      swap2\n      swap3\n      pop\n        /* \"#utility.yul\":14109:14122   */\n      0xbe\n      add\n        /* \"contracts/DeAnt3Token.sol\":4244:4491  abi.encodePacked(... */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4220:4502  keccak256(... */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/DeAnt3Token.sol\":4197:4502  bytes32 permitTxHash = keccak256(... */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4515:4531  address lastAddr */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":4555:4576  uint8 verifiedSigners */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":4596:4604  uint64 i */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":4591:4853  for (uint64 i = 0; i < v.length; i++) {... */\n    tag_299:\n        /* \"contracts/DeAnt3Token.sol\":4614:4615  v */\n      dup9\n        /* \"contracts/DeAnt3Token.sol\":4614:4622  v.length */\n      mload\n        /* \"contracts/DeAnt3Token.sol\":4610:4611  i */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4610:4622  i < v.length */\n      and\n      lt\n        /* \"contracts/DeAnt3Token.sol\":4591:4853  for (uint64 i = 0; i < v.length; i++) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"contracts/DeAnt3Token.sol\":4644:4661  address recovered */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":4664:4705  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      0x01\n        /* \"contracts/DeAnt3Token.sol\":4674:4686  permitTxHash */\n      dup6\n        /* \"contracts/DeAnt3Token.sol\":4688:4689  v */\n      dup12\n        /* \"contracts/DeAnt3Token.sol\":4690:4691  i */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4688:4692  v[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_303\n      jumpi\n      tag_303\n      tag_304\n      jump\t// in\n    tag_303:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DeAnt3Token.sol\":4694:4695  r */\n      dup12\n        /* \"contracts/DeAnt3Token.sol\":4696:4697  i */\n      dup6\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4694:4698  r[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_304\n      jump\t// in\n    tag_306:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DeAnt3Token.sol\":4700:4701  s */\n      dup12\n        /* \"contracts/DeAnt3Token.sol\":4702:4703  i */\n      dup7\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4700:4704  s[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_308\n      jumpi\n      tag_308\n      tag_304\n      jump\t// in\n    tag_308:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DeAnt3Token.sol\":4664:4705  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x40\n      mstore\n      mload(0x40)\n      tag_309\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":14492:14517   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":14565:14569   */\n      0xff\n        /* \"#utility.yul\":14553:14570   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":14548:14550   */\n      0x20\n        /* \"#utility.yul\":14533:14551   */\n      dup5\n      add\n        /* \"#utility.yul\":14526:14571   */\n      mstore\n        /* \"#utility.yul\":14602:14604   */\n      0x40\n        /* \"#utility.yul\":14587:14605   */\n      dup4\n      add\n        /* \"#utility.yul\":14580:14614   */\n      mstore\n        /* \"#utility.yul\":14645:14647   */\n      0x60\n        /* \"#utility.yul\":14630:14648   */\n      dup3\n      add\n        /* \"#utility.yul\":14623:14657   */\n      mstore\n        /* \"#utility.yul\":14479:14482   */\n      0x80\n        /* \"#utility.yul\":14464:14483   */\n      add\n      swap1\n        /* \"#utility.yul\":14265:14663   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":4664:4705  ecrecover(permitTxHash, v[i], r[i], s[i]) */\n    tag_309:\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_312\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_312:\n      pop\n      pop\n      pop\n      mload(sub(mload(0x40), 0x20))\n        /* \"contracts/DeAnt3Token.sol\":4644:4705  address recovered = ecrecover(permitTxHash, v[i], r[i], s[i]) */\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4736:4744  lastAddr */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4724:4744  recovered > lastAddr */\n      and\n        /* \"contracts/DeAnt3Token.sol\":4724:4733  recovered */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4724:4744  recovered > lastAddr */\n      and\n      gt\n        /* \"contracts/DeAnt3Token.sol\":4724:4770  recovered > lastAddr && _mapSigners[recovered] */\n      dup1\n      iszero\n      tag_313\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4748:4770  _mapSigners[recovered] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4748:4759  _mapSigners */\n      0xd2\n        /* \"contracts/DeAnt3Token.sol\":4748:4770  _mapSigners[recovered] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/DeAnt3Token.sol\":4724:4770  recovered > lastAddr && _mapSigners[recovered] */\n    tag_313:\n        /* \"contracts/DeAnt3Token.sol\":4720:4806  if (recovered > lastAddr && _mapSigners[recovered])... */\n      iszero\n      tag_314\n      jumpi\n        /* \"contracts/DeAnt3Token.sol\":4789:4806  verifiedSigners++ */\n      dup3\n      tag_315\n      dup2\n      tag_316\n      jump\t// in\n    tag_315:\n      swap4\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4720:4806  if (recovered > lastAddr && _mapSigners[recovered])... */\n    tag_314:\n        /* \"contracts/DeAnt3Token.sol\":4832:4841  recovered */\n      swap3\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4624:4627  i++ */\n      dup1\n      tag_317\n      dup2\n      tag_318\n      jump\t// in\n    tag_317:\n      swap2\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4591:4853  for (uint64 i = 0; i < v.length; i++) {... */\n      jump(tag_299)\n    tag_300:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4892:4893  2 */\n      0x02\n        /* \"contracts/DeAnt3Token.sol\":4873:4888  verifiedSigners */\n      dup2\n        /* \"contracts/DeAnt3Token.sol\":4873:4893  verifiedSigners >= 2 */\n      0xff\n      and\n      lt\n      iszero\n        /* \"contracts/DeAnt3Token.sol\":4865:4913  require(verifiedSigners >= 2, \"Invalid signers\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15264:15266   */\n      0x20\n        /* \"contracts/DeAnt3Token.sol\":4865:4913  require(verifiedSigners >= 2, \"Invalid signers\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15246:15267   */\n      mstore\n        /* \"#utility.yul\":15303:15305   */\n      0x0f\n        /* \"#utility.yul\":15283:15301   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15276:15306   */\n      mstore\n      shl(0x88, 0x496e76616c6964207369676e657273)\n        /* \"#utility.yul\":15322:15340   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15315:15360   */\n      mstore\n        /* \"#utility.yul\":15377:15395   */\n      0x64\n      add\n        /* \"contracts/DeAnt3Token.sol\":4865:4913  require(verifiedSigners >= 2, \"Invalid signers\") */\n      tag_204\n        /* \"#utility.yul\":15062:15401   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":4865:4913  require(verifiedSigners >= 2, \"Invalid signers\") */\n    tag_319:\n        /* \"contracts/DeAnt3Token.sol\":4924:4948  uniqueIdExists[uniqueId] */\n      0x00\n      dup12\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":4924:4938  uniqueIdExists */\n      0xd3\n        /* \"contracts/DeAnt3Token.sol\":4924:4948  uniqueIdExists[uniqueId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/DeAnt3Token.sol\":4924:4955  uniqueIdExists[uniqueId] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/DeAnt3Token.sol\":4951:4955  true */\n      0x01\n        /* \"contracts/DeAnt3Token.sol\":4924:4955  uniqueIdExists[uniqueId] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":5009:5019  _rewardAmt */\n      sload(0xcd)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":4987:5001  recipient.call */\n      dup15\n      and\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":5009:5028  _rewardAmt * amount */\n      tag_322\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":5022:5028  amount */\n      dup14\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":5009:5028  _rewardAmt * amount */\n      tag_216\n      jump\t// in\n    tag_322:\n        /* \"contracts/DeAnt3Token.sol\":4987:5033  recipient.call{value: _rewardAmt * amount}(\"\") */\n      mload(0x40)\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_327\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_326)\n    tag_327:\n      0x60\n      swap2\n      pop\n    tag_326:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":4968:5033  (bool success, ) = recipient.call{value: _rewardAmt * amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/DeAnt3Token.sol\":5052:5059  success */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":5044:5083  require(success, \"Failed to send Mech\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15818:15820   */\n      0x20\n        /* \"contracts/DeAnt3Token.sol\":5044:5083  require(success, \"Failed to send Mech\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15800:15821   */\n      mstore\n        /* \"#utility.yul\":15857:15859   */\n      0x13\n        /* \"#utility.yul\":15837:15855   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15830:15860   */\n      mstore\n      shl(0x6b, 0x08cc2d2d8cac840e8de40e6cadcc8409acac6d)\n        /* \"#utility.yul\":15876:15894   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15869:15918   */\n      mstore\n        /* \"#utility.yul\":15935:15953   */\n      0x64\n      add\n        /* \"contracts/DeAnt3Token.sol\":5044:5083  require(success, \"Failed to send Mech\") */\n      tag_204\n        /* \"#utility.yul\":15616:15959   */\n      jump\n        /* \"contracts/DeAnt3Token.sol\":5044:5083  require(success, \"Failed to send Mech\") */\n    tag_328:\n        /* \"contracts/DeAnt3Token.sol\":5094:5124  super._mint(recipient, amount) */\n      tag_331\n        /* \"contracts/DeAnt3Token.sol\":5106:5115  recipient */\n      dup14\n        /* \"contracts/DeAnt3Token.sol\":5117:5123  amount */\n      dup13\n        /* \"contracts/DeAnt3Token.sol\":5094:5105  super._mint */\n      tag_222\n        /* \"contracts/DeAnt3Token.sol\":5094:5124  super._mint(recipient, amount) */\n      jump\t// in\n    tag_331:\n        /* \"contracts/DeAnt3Token.sol\":3971:5132  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":3729:5132  function permitMint(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2321:2519  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1345  _checkOwner */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1334:1347  _checkOwner() */\n      jump\t// in\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2409:2431  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16166:16168   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16148:16169   */\n      mstore\n        /* \"#utility.yul\":16205:16207   */\n      0x26\n        /* \"#utility.yul\":16185:16203   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16178:16208   */\n      mstore\n        /* \"#utility.yul\":16244:16278   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16224:16242   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16217:16279   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":16295:16313   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16288:16324   */\n      mstore\n        /* \"#utility.yul\":16341:16360   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_204\n        /* \"#utility.yul\":15964:16366   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2401:2474  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2503:2511  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2502  _transferOwnership */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2484:2512  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10447:10817  function _approve(... */\n    tag_188:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10578:10597  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_342\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16573:16575   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16555:16576   */\n      mstore\n        /* \"#utility.yul\":16612:16614   */\n      0x24\n        /* \"#utility.yul\":16592:16610   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":16585:16615   */\n      mstore\n        /* \"#utility.yul\":16651:16685   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":16631:16649   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16624:16686   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":16702:16720   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":16695:16729   */\n      mstore\n        /* \"#utility.yul\":16746:16765   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_204\n        /* \"#utility.yul\":16371:16771   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10570:10638  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_342:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10656:10677  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16978:16980   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16960:16981   */\n      mstore\n        /* \"#utility.yul\":17017:17019   */\n      0x22\n        /* \"#utility.yul\":16997:17015   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16990:17020   */\n      mstore\n        /* \"#utility.yul\":17056:17090   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":17036:17054   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17029:17091   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":17107:17125   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17100:17132   */\n      mstore\n        /* \"#utility.yul\":17149:17168   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_204\n        /* \"#utility.yul\":16776:17174   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10648:10716  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_345:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10745  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10738  _allowances */\n      0x34\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10745  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10754  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10727:10763  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1662:1687   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10778:10810  Approval(owner, spender, amount) */\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10447:10817  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":3331:3491  function _calculateBurnAmt(uint256 amount) private view returns (uint256) {... */\n    tag_192:\n        /* \"contracts/DeAnt3Token.sol\":3396:3403  uint256 */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":3416:3431  uint256 burnAmt */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":3455:3458  100 */\n      0x64\n        /* \"contracts/DeAnt3Token.sol\":3444:3451  _taxFee */\n      sload(0xcf)\n        /* \"contracts/DeAnt3Token.sol\":3435:3441  amount */\n      dup5\n        /* \"contracts/DeAnt3Token.sol\":3435:3451  amount * _taxFee */\n      tag_350\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_350:\n        /* \"contracts/DeAnt3Token.sol\":3434:3458  (amount * _taxFee) / 100 */\n      tag_351\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n        /* \"contracts/DeAnt3Token.sol\":3416:3458  uint256 burnAmt = (amount * _taxFee) / 100 */\n      swap4\n        /* \"contracts/DeAnt3Token.sol\":3331:3491  function _calculateBurnAmt(uint256 amount) private view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":3499:3721  function _burnAndUpdate(address account, uint256 amount) private {... */\n    tag_194:\n        /* \"contracts/DeAnt3Token.sol\":3575:3597  _burn(account, amount) */\n      tag_354\n        /* \"contracts/DeAnt3Token.sol\":3581:3588  account */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":3590:3596  amount */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":3575:3580  _burn */\n      tag_355\n        /* \"contracts/DeAnt3Token.sol\":3575:3597  _burn(account, amount) */\n      jump\t// in\n    tag_354:\n        /* \"contracts/DeAnt3Token.sol\":3636:3642  amount */\n      dup1\n        /* \"contracts/DeAnt3Token.sol\":3622:3633  totalBurned */\n      sload(0xd0)\n        /* \"contracts/DeAnt3Token.sol\":3622:3642  totalBurned + amount */\n      tag_356\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_356:\n        /* \"contracts/DeAnt3Token.sol\":3608:3619  totalBurned */\n      0xd0\n        /* \"contracts/DeAnt3Token.sol\":3608:3642  totalBurned = totalBurned + amount */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":3680:3704  userTotalBurned[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":3680:3695  userTotalBurned */\n      0xd4\n        /* \"contracts/DeAnt3Token.sol\":3680:3704  userTotalBurned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DeAnt3Token.sol\":3680:3713  userTotalBurned[account] + amount */\n      tag_357\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":3707:3713  amount */\n      dup3\n      swap1\n        /* \"contracts/DeAnt3Token.sol\":3680:3713  userTotalBurned[account] + amount */\n      tag_233\n      jump\t// in\n    tag_357:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":3653:3677  userTotalBurned[account] */\n      swap1\n      swap3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DeAnt3Token.sol\":3653:3668  userTotalBurned */\n      0xd4\n        /* \"contracts/DeAnt3Token.sol\":3653:3677  userTotalBurned[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/DeAnt3Token.sol\":3653:3713  userTotalBurned[account] = userTotalBurned[account] + amount */\n      swap2\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/DeAnt3Token.sol\":3499:3721  function _burnAndUpdate(address account, uint256 amount) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5529:5815  function transferFrom(... */\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5656:5660  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      tag_360\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5728:5732  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5743:5749  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5727  _spendAllowance */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5712:5750  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5770:5774  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5776:5778  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5780:5786  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5769  _transfer */\n      tag_363\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5760:5787  _transfer(from, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1003:1098  function __Ownable_init() internal onlyInitializing {... */\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1089  __Ownable_init_unchained */\n      tag_371\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1065:1091  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_373\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2218:2256  __ERC20_init_unchained(name_, symbol_) */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2241:2246  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2248:2255  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2218:2240  __ERC20_init_unchained */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2218:2256  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_376:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":567:686  function __ERC20Capped_init(uint256 cap_) internal onlyInitializing {... */\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_379:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":645:679  __ERC20Capped_init_unchained(cap_) */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":674:678  cap_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":645:673  __ERC20Capped_init_unchained */\n      tag_383\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":645:679  __ERC20Capped_init_unchained(cap_) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1063:1278  function _mint(address account, uint256 amount) internal virtual override {... */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":999:1003  _cap */\n      sload(0x65)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1188:1194  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1155:1185  ERC20Upgradeable.totalSupply() */\n      tag_386\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3668:3680  _totalSupply */\n      sload(0x35)\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3581:3687  function totalSupply() public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1155:1185  ERC20Upgradeable.totalSupply() */\n    tag_386:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1155:1194  ERC20Upgradeable.totalSupply() + amount */\n      tag_387\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_387:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1155:1203  ERC20Upgradeable.totalSupply() + amount <= cap() */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1147:1233  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18015:18017   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1147:1233  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17997:18018   */\n      mstore\n        /* \"#utility.yul\":18054:18056   */\n      0x19\n        /* \"#utility.yul\":18034:18052   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18027:18057   */\n      mstore\n        /* \"#utility.yul\":18093:18120   */\n      0x45524332304361707065643a2063617020657863656564656400000000000000\n        /* \"#utility.yul\":18073:18091   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18066:18121   */\n      mstore\n        /* \"#utility.yul\":18138:18156   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1147:1233  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n      tag_204\n        /* \"#utility.yul\":17813:18162   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1147:1233  require(ERC20Upgradeable.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\") */\n    tag_388:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1243:1271  super._mint(account, amount) */\n      tag_376\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1255:1262  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1264:1270  amount */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1243:1254  super._mint */\n      tag_392\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":1243:1271  super._mint(account, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1599:1729  function _checkOwner() internal view virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1513:1519  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x98))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1662:1685  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18369:18371   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18351:18372   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18388:18406   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18381:18411   */\n      mstore\n        /* \"#utility.yul\":18447:18481   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18427:18445   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18420:18482   */\n      mstore\n        /* \"#utility.yul\":18499:18517   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1654:1722  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_204\n        /* \"#utility.yul\":18167:18523   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_243:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      0x98\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2781:2798  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2765:2771  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2746:2762  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2813:2853  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2736:2860  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2673:2860  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/DeAnt3Token.sol\":2295:2536  function _updateMap(... */\n    tag_257:\n        /* \"contracts/DeAnt3Token.sol\":2447:2455  uint64 i */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2442:2529  for (uint64 i = 0; i < arr.length; i++) {... */\n    tag_401:\n        /* \"contracts/DeAnt3Token.sol\":2465:2468  arr */\n      dup4\n        /* \"contracts/DeAnt3Token.sol\":2465:2475  arr.length */\n      mload\n        /* \"contracts/DeAnt3Token.sol\":2461:2462  i */\n      dup2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2461:2475  i < arr.length */\n      and\n      lt\n        /* \"contracts/DeAnt3Token.sol\":2442:2529  for (uint64 i = 0; i < arr.length; i++) {... */\n      iszero\n      tag_402\n      jumpi\n        /* \"contracts/DeAnt3Token.sol\":2511:2517  status */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2497:2500  map */\n      dup3\n        /* \"contracts/DeAnt3Token.sol\":2497:2508  map[arr[i]] */\n      0x00\n        /* \"contracts/DeAnt3Token.sol\":2501:2504  arr */\n      dup7\n        /* \"contracts/DeAnt3Token.sol\":2505:2506  i */\n      dup5\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2501:2507  arr[i] */\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_405\n      tag_304\n      jump\t// in\n    tag_405:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DeAnt3Token.sol\":2497:2508  map[arr[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n        /* \"contracts/DeAnt3Token.sol\":2497:2517  map[arr[i]] = status */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/DeAnt3Token.sol\":2477:2480  i++ */\n      dup1\n      tag_406\n      dup2\n      tag_318\n      jump\t// in\n    tag_406:\n      swap2\n      pop\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2442:2529  for (uint64 i = 0; i < arr.length; i++) {... */\n      jump(tag_401)\n    tag_402:\n      pop\n        /* \"contracts/DeAnt3Token.sol\":2295:2536  function _updateMap(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4066:4255  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4145:4149  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4216:4218  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4220:4226  amount */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4208  _transfer */\n      tag_363\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4199:4227  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:10024  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_355:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9531:9552  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9523:9590  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_411\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18730:18732   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9523:9590  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18712:18733   */\n      mstore\n        /* \"#utility.yul\":18769:18771   */\n      0x21\n        /* \"#utility.yul\":18749:18767   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18742:18772   */\n      mstore\n        /* \"#utility.yul\":18808:18842   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":18788:18806   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18781:18843   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":18859:18877   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":18852:18883   */\n      mstore\n        /* \"#utility.yul\":18900:18919   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9523:9590  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_204\n        /* \"#utility.yul\":18528:18925   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9523:9590  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_411:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9704  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9661:9683  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9704  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9695  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9686:9704  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9722:9746  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9714:9785  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_416\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19132:19134   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9714:9785  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19114:19135   */\n      mstore\n        /* \"#utility.yul\":19171:19173   */\n      0x22\n        /* \"#utility.yul\":19151:19169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19144:19174   */\n      mstore\n        /* \"#utility.yul\":19210:19244   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":19190:19208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19183:19245   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":19261:19279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":19254:19286   */\n      mstore\n        /* \"#utility.yul\":19303:19322   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9714:9785  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_204\n        /* \"#utility.yul\":18930:19328   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9714:9785  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_416:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9837  _balances[account] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9828  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9837  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9840:9863  accountBalance - amount */\n      dup4\n      dup4\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9863  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9883:9895  _totalSupply */\n      0x35\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9857:9863  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9819:9837  _balances[account] */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9883:9905  _totalSupply -= amount */\n      tag_419\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9857:9863  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9883:9905  _totalSupply -= amount */\n      tag_279\n      jump\t// in\n    tag_419:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9921:9958  Transfer(account, address(0), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1662:1687   */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9947:9948  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9921:9958  Transfer(account, address(0), amount) */\n      dup6\n      and\n      swap1\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1650:1652   */\n      0x20\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9921:9958  Transfer(account, address(0), amount) */\n      tag_348\n        /* \"#utility.yul\":1516:1693   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9969:10017  _afterTokenTransfer(account, address(0), amount) */\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9513:10024  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:10024  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11098:11539  function _spendAllowance(... */\n    tag_361:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11252  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11280  allowance(owner, spender) */\n      tag_424\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11265:11270  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11272:11279  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11264  allowance */\n      tag_156\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11280  allowance(owner, spender) */\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11228:11280  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11294:11310  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11294:11331  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11290:11533  if (currentAllowance != type(uint256).max) {... */\n      tag_402\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11375:11381  amount */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11371  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11381  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_426\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19535:19537   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19517:19538   */\n      mstore\n        /* \"#utility.yul\":19574:19576   */\n      0x1d\n        /* \"#utility.yul\":19554:19572   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19547:19577   */\n      mstore\n        /* \"#utility.yul\":19613:19644   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":19593:19611   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19586:19645   */\n      mstore\n        /* \"#utility.yul\":19662:19680   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_204\n        /* \"#utility.yul\":19333:19686   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11347:11415  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_426:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11508  _approve(owner, spender, currentAllowance - amount) */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11466:11471  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11473:11480  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11501:11507  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11498  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11482:11507  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11465  _approve */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11457:11508  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7812:8463  function _transfer(... */\n    tag_363:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7938:7956  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_431\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19893:19895   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19875:19896   */\n      mstore\n        /* \"#utility.yul\":19932:19934   */\n      0x25\n        /* \"#utility.yul\":19912:19930   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19905:19935   */\n      mstore\n        /* \"#utility.yul\":19971:20005   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":19951:19969   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19944:20006   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":20022:20040   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20015:20050   */\n      mstore\n        /* \"#utility.yul\":20067:20086   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_204\n        /* \"#utility.yul\":19691:20092   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7930:7998  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_431:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8016:8032  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_434\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20299:20301   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20281:20302   */\n      mstore\n        /* \"#utility.yul\":20338:20340   */\n      0x23\n        /* \"#utility.yul\":20318:20336   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20311:20341   */\n      mstore\n        /* \"#utility.yul\":20377:20411   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":20357:20375   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20350:20412   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":20428:20446   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20421:20454   */\n      mstore\n        /* \"#utility.yul\":20471:20490   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_204\n        /* \"#utility.yul\":20097:20496   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8008:8072  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_434:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8132:8151  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8163  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8154:8169  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8187:8208  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_438\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20703:20705   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20685:20706   */\n      mstore\n        /* \"#utility.yul\":20742:20744   */\n      0x26\n        /* \"#utility.yul\":20722:20740   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20715:20745   */\n      mstore\n        /* \"#utility.yul\":20781:20815   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":20761:20779   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20754:20816   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":20832:20850   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20825:20861   */\n      mstore\n        /* \"#utility.yul\":20878:20897   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_204\n        /* \"#utility.yul\":20501:20903   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8179:8251  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_438:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8294  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8303:8323  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8323  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8356  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8317:8323  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8285:8300  _balances[from] */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      tag_441\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8317:8323  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8343:8366  _balances[to] += amount */\n      tag_233\n      jump\t// in\n    tag_441:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8397:8399  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8391:8395  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8401:8407  amount */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_442\n      swap2\n        /* \"#utility.yul\":1662:1687   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1650:1652   */\n      0x20\n        /* \"#utility.yul\":1635:1653   */\n      add\n      swap1\n        /* \"#utility.yul\":1516:1693   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8382:8408  Transfer(from, to, amount) */\n    tag_442:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8419:8456  _afterTokenTransfer(from, to, amount) */\n      tag_402\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:10024  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1104:1215  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_445\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_445:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":929:939  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1194  _transferOwnership */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1176:1208  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2269:2428  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_451\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_451:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2381:2394  _name = name_ */\n      dup2\n      mload\n      tag_454\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2381:2386  _name */\n      0x36\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2381:2394  _name = name_ */\n      0x20\n      dup6\n      add\n      swap1\n      tag_219\n      jump\t// in\n    tag_454:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2421  _symbol = symbol_ */\n      dup1\n      mload\n      tag_421\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2411  _symbol */\n      0x37\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2404:2421  _symbol = symbol_ */\n      0x20\n      dup5\n      add\n      swap1\n      tag_219\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":692:850  function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {... */\n    tag_383:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4910:4923  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4902:4971  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_457\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_368\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":795:796  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":788:792  cap_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":788:796  cap_ > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":780:822  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      tag_460\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21110:21112   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":780:822  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21092:21113   */\n      mstore\n        /* \"#utility.yul\":21149:21151   */\n      0x15\n        /* \"#utility.yul\":21129:21147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21122:21152   */\n      mstore\n      shl(0x5c, 0x045524332304361707065643a20636170206973203)\n        /* \"#utility.yul\":21168:21186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21161:21212   */\n      mstore\n        /* \"#utility.yul\":21229:21247   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":780:822  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n      tag_204\n        /* \"#utility.yul\":20908:21253   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":780:822  require(cap_ > 0, \"ERC20Capped: cap is 0\") */\n    tag_460:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":832:836  _cap */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":832:843  _cap = cap_ */\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":692:850  function __ERC20Capped_init_unchained(uint256 cap_) internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8739:9128  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8843  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8814:8879  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_464\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21460:21462   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8814:8879  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21442:21463   */\n      mstore\n        /* \"#utility.yul\":21499:21501   */\n      0x1f\n        /* \"#utility.yul\":21479:21497   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21472:21502   */\n      mstore\n        /* \"#utility.yul\":21538:21571   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":21518:21536   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21511:21572   */\n      mstore\n        /* \"#utility.yul\":21589:21607   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8814:8879  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_204\n        /* \"#utility.yul\":21258:21613   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8814:8879  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8966:8972  amount */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8950:8962  _totalSupply */\n      0x35\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8950:8972  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_468\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_468:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9000  _balances[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:8991  _balances */\n      0x33\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9000  _balances[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9010  _balances[account] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9004:9010  amount */\n      dup4\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9000  _balances[account] */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9010  _balances[account] += amount */\n      tag_469\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9004:9010  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8982:9010  _balances[account] += amount */\n      tag_233\n      jump\t// in\n    tag_469:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9025:9062  Transfer(address(0), account, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1662:1687   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9025:9062  Transfer(address(0), account, amount) */\n      dup4\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9042:9043  0 */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9025:9062  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n        /* \"#utility.yul\":1650:1652   */\n      0x20\n        /* \"#utility.yul\":1635:1653   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9025:9062  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2116:2263  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n    tag_219:\n      dup3\n      dup1\n      sload\n      tag_474\n      swap1\n      tag_178\n      jump\t// in\n    tag_474:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      dup2\n      add\n      swap3\n      dup3\n      tag_476\n      jumpi\n      0x00\n      dup6\n      sstore\n      jump(tag_479)\n    tag_476:\n      dup3\n      0x1f\n      lt\n      tag_477\n      jumpi\n      dup1\n      mload\n      not(0xff)\n      and\n      dup4\n      dup1\n      add\n      or\n      dup6\n      sstore\n      jump(tag_479)\n    tag_477:\n      dup3\n      dup1\n      add\n      0x01\n      add\n      dup6\n      sstore\n      dup3\n      iszero\n      tag_479\n      jumpi\n      swap2\n      dup3\n      add\n    tag_478:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_479\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_478)\n    tag_479:\n      pop\n      tag_480\n      swap3\n      swap2\n      pop\n      tag_481\n      jump\t// in\n    tag_480:\n      pop\n      swap1\n      jump\t// out\n    tag_259:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_262\n      swap2\n      swap1\n      tag_481\n      jump\t// in\n    tag_261:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_479\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_485:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_479\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_485)\n    tag_481:\n    tag_488:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_480\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_488)\n        /* \"#utility.yul\":14:611   */\n    tag_44:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_502:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_502)\n    tag_504:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_505:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:747   */\n    tag_490:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":691:722   */\n      dup2\n      and\n        /* \"#utility.yul\":681:723   */\n      dup2\n      eq\n        /* \"#utility.yul\":671:741   */\n      tag_262\n      jumpi\n        /* \"#utility.yul\":737:738   */\n      0x00\n        /* \"#utility.yul\":734:735   */\n      dup1\n        /* \"#utility.yul\":727:739   */\n      revert\n        /* \"#utility.yul\":752:999   */\n    tag_48:\n        /* \"#utility.yul\":811:817   */\n      0x00\n        /* \"#utility.yul\":864:866   */\n      0x20\n        /* \"#utility.yul\":852:861   */\n      dup3\n        /* \"#utility.yul\":843:850   */\n      dup5\n        /* \"#utility.yul\":839:862   */\n      sub\n        /* \"#utility.yul\":835:867   */\n      slt\n        /* \"#utility.yul\":832:884   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":877:878   */\n      dup1\n        /* \"#utility.yul\":870:882   */\n      revert\n        /* \"#utility.yul\":832:884   */\n    tag_509:\n        /* \"#utility.yul\":919:928   */\n      dup2\n        /* \"#utility.yul\":906:929   */\n      calldataload\n        /* \"#utility.yul\":938:969   */\n      tag_351\n        /* \"#utility.yul\":963:968   */\n      dup2\n        /* \"#utility.yul\":938:969   */\n      tag_490\n      jump\t// in\n        /* \"#utility.yul\":1196:1511   */\n    tag_55:\n        /* \"#utility.yul\":1264:1270   */\n      0x00\n        /* \"#utility.yul\":1272:1278   */\n      dup1\n        /* \"#utility.yul\":1325:1327   */\n      0x40\n        /* \"#utility.yul\":1313:1322   */\n      dup4\n        /* \"#utility.yul\":1304:1311   */\n      dup6\n        /* \"#utility.yul\":1300:1323   */\n      sub\n        /* \"#utility.yul\":1296:1328   */\n      slt\n        /* \"#utility.yul\":1293:1345   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":1341:1342   */\n      0x00\n        /* \"#utility.yul\":1338:1339   */\n      dup1\n        /* \"#utility.yul\":1331:1343   */\n      revert\n        /* \"#utility.yul\":1293:1345   */\n    tag_513:\n        /* \"#utility.yul\":1380:1389   */\n      dup3\n        /* \"#utility.yul\":1367:1390   */\n      calldataload\n        /* \"#utility.yul\":1399:1430   */\n      tag_514\n        /* \"#utility.yul\":1424:1429   */\n      dup2\n        /* \"#utility.yul\":1399:1430   */\n      tag_490\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1449:1454   */\n      swap5\n        /* \"#utility.yul\":1501:1503   */\n      0x20\n        /* \"#utility.yul\":1486:1504   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1473:1505   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1196:1511   */\n      jump\t// out\n        /* \"#utility.yul\":1698:2154   */\n    tag_71:\n        /* \"#utility.yul\":1775:1781   */\n      0x00\n        /* \"#utility.yul\":1783:1789   */\n      dup1\n        /* \"#utility.yul\":1791:1797   */\n      0x00\n        /* \"#utility.yul\":1844:1846   */\n      0x60\n        /* \"#utility.yul\":1832:1841   */\n      dup5\n        /* \"#utility.yul\":1823:1830   */\n      dup7\n        /* \"#utility.yul\":1819:1842   */\n      sub\n        /* \"#utility.yul\":1815:1847   */\n      slt\n        /* \"#utility.yul\":1812:1864   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":1860:1861   */\n      0x00\n        /* \"#utility.yul\":1857:1858   */\n      dup1\n        /* \"#utility.yul\":1850:1862   */\n      revert\n        /* \"#utility.yul\":1812:1864   */\n    tag_517:\n        /* \"#utility.yul\":1899:1908   */\n      dup4\n        /* \"#utility.yul\":1886:1909   */\n      calldataload\n        /* \"#utility.yul\":1918:1949   */\n      tag_518\n        /* \"#utility.yul\":1943:1948   */\n      dup2\n        /* \"#utility.yul\":1918:1949   */\n      tag_490\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1968:1973   */\n      swap3\n      pop\n        /* \"#utility.yul\":2025:2027   */\n      0x20\n        /* \"#utility.yul\":2010:2028   */\n      dup5\n      add\n        /* \"#utility.yul\":1997:2029   */\n      calldataload\n        /* \"#utility.yul\":2038:2071   */\n      tag_519\n        /* \"#utility.yul\":1997:2029   */\n      dup2\n        /* \"#utility.yul\":2038:2071   */\n      tag_490\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":1698:2154   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2090:2097   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2144:2146   */\n      0x40\n        /* \"#utility.yul\":2129:2147   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2116:2148   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1698:2154   */\n      jump\t// out\n        /* \"#utility.yul\":2159:2286   */\n    tag_491:\n        /* \"#utility.yul\":2220:2230   */\n      0x4e487b71\n        /* \"#utility.yul\":2215:2218   */\n      0xe0\n        /* \"#utility.yul\":2211:2231   */\n      shl\n        /* \"#utility.yul\":2208:2209   */\n      0x00\n        /* \"#utility.yul\":2201:2232   */\n      mstore\n        /* \"#utility.yul\":2251:2255   */\n      0x41\n        /* \"#utility.yul\":2248:2249   */\n      0x04\n        /* \"#utility.yul\":2241:2256   */\n      mstore\n        /* \"#utility.yul\":2275:2279   */\n      0x24\n        /* \"#utility.yul\":2272:2273   */\n      0x00\n        /* \"#utility.yul\":2265:2280   */\n      revert\n        /* \"#utility.yul\":2291:2566   */\n    tag_492:\n        /* \"#utility.yul\":2362:2364   */\n      0x40\n        /* \"#utility.yul\":2356:2365   */\n      mload\n        /* \"#utility.yul\":2427:2429   */\n      0x1f\n        /* \"#utility.yul\":2408:2421   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2404:2431   */\n      and\n        /* \"#utility.yul\":2392:2432   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2447:2481   */\n      dup2\n      gt\n        /* \"#utility.yul\":2483:2505   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2444:2506   */\n      or\n        /* \"#utility.yul\":2441:2529   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":2509:2527   */\n      tag_523\n      tag_491\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":2545:2547   */\n      0x40\n        /* \"#utility.yul\":2538:2560   */\n      mstore\n        /* \"#utility.yul\":2291:2566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:3102   */\n    tag_493:\n        /* \"#utility.yul\":2614:2619   */\n      0x00\n        /* \"#utility.yul\":2667:2670   */\n      dup3\n        /* \"#utility.yul\":2660:2664   */\n      0x1f\n        /* \"#utility.yul\":2652:2658   */\n      dup4\n        /* \"#utility.yul\":2648:2665   */\n      add\n        /* \"#utility.yul\":2644:2671   */\n      slt\n        /* \"#utility.yul\":2634:2689   */\n      tag_525\n      jumpi\n        /* \"#utility.yul\":2685:2686   */\n      0x00\n        /* \"#utility.yul\":2682:2683   */\n      dup1\n        /* \"#utility.yul\":2675:2687   */\n      revert\n        /* \"#utility.yul\":2634:2689   */\n    tag_525:\n        /* \"#utility.yul\":2721:2727   */\n      dup2\n        /* \"#utility.yul\":2708:2728   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2743:2745   */\n      dup2\n        /* \"#utility.yul\":2740:2766   */\n      gt\n        /* \"#utility.yul\":2737:2789   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":2769:2787   */\n      tag_527\n      tag_491\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":2813:2868   */\n      tag_528\n        /* \"#utility.yul\":2856:2858   */\n      0x1f\n        /* \"#utility.yul\":2837:2850   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2833:2860   */\n      and\n        /* \"#utility.yul\":2862:2866   */\n      0x20\n        /* \"#utility.yul\":2829:2867   */\n      add\n        /* \"#utility.yul\":2813:2868   */\n      tag_492\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2893:2895   */\n      dup2\n        /* \"#utility.yul\":2884:2891   */\n      dup2\n        /* \"#utility.yul\":2877:2896   */\n      mstore\n        /* \"#utility.yul\":2939:2942   */\n      dup5\n        /* \"#utility.yul\":2932:2936   */\n      0x20\n        /* \"#utility.yul\":2927:2929   */\n      dup4\n        /* \"#utility.yul\":2919:2925   */\n      dup7\n        /* \"#utility.yul\":2915:2930   */\n      add\n        /* \"#utility.yul\":2911:2937   */\n      add\n        /* \"#utility.yul\":2908:2943   */\n      gt\n        /* \"#utility.yul\":2905:2960   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":2956:2957   */\n      0x00\n        /* \"#utility.yul\":2953:2954   */\n      dup1\n        /* \"#utility.yul\":2946:2958   */\n      revert\n        /* \"#utility.yul\":2905:2960   */\n    tag_529:\n        /* \"#utility.yul\":3021:3023   */\n      dup2\n        /* \"#utility.yul\":3014:3018   */\n      0x20\n        /* \"#utility.yul\":3006:3012   */\n      dup6\n        /* \"#utility.yul\":3002:3019   */\n      add\n        /* \"#utility.yul\":2995:2999   */\n      0x20\n        /* \"#utility.yul\":2986:2993   */\n      dup4\n        /* \"#utility.yul\":2982:3000   */\n      add\n        /* \"#utility.yul\":2969:3024   */\n      calldatacopy\n        /* \"#utility.yul\":3069:3070   */\n      0x00\n        /* \"#utility.yul\":3044:3060   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3062:3066   */\n      0x20\n        /* \"#utility.yul\":3040:3067   */\n      add\n        /* \"#utility.yul\":3033:3071   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3048:3055   */\n      swap4\n        /* \"#utility.yul\":2571:3102   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3107:3263   */\n    tag_494:\n        /* \"#utility.yul\":3173:3193   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3233:3237   */\n      0xff\n        /* \"#utility.yul\":3222:3238   */\n      dup2\n      and\n        /* \"#utility.yul\":3212:3239   */\n      dup2\n      eq\n        /* \"#utility.yul\":3202:3257   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":3253:3254   */\n      0x00\n        /* \"#utility.yul\":3250:3251   */\n      dup1\n        /* \"#utility.yul\":3243:3255   */\n      revert\n        /* \"#utility.yul\":3202:3257   */\n    tag_531:\n        /* \"#utility.yul\":3107:3263   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3268:4088   */\n    tag_77:\n        /* \"#utility.yul\":3390:3396   */\n      0x00\n        /* \"#utility.yul\":3398:3404   */\n      dup1\n        /* \"#utility.yul\":3406:3412   */\n      0x00\n        /* \"#utility.yul\":3414:3420   */\n      dup1\n        /* \"#utility.yul\":3422:3428   */\n      0x00\n        /* \"#utility.yul\":3430:3436   */\n      dup1\n        /* \"#utility.yul\":3483:3486   */\n      0xc0\n        /* \"#utility.yul\":3471:3480   */\n      dup8\n        /* \"#utility.yul\":3462:3469   */\n      dup10\n        /* \"#utility.yul\":3458:3481   */\n      sub\n        /* \"#utility.yul\":3454:3487   */\n      slt\n        /* \"#utility.yul\":3451:3504   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":3500:3501   */\n      0x00\n        /* \"#utility.yul\":3497:3498   */\n      dup1\n        /* \"#utility.yul\":3490:3502   */\n      revert\n        /* \"#utility.yul\":3451:3504   */\n    tag_533:\n        /* \"#utility.yul\":3540:3549   */\n      dup7\n        /* \"#utility.yul\":3527:3550   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3610:3612   */\n      dup1\n        /* \"#utility.yul\":3602:3608   */\n      dup3\n        /* \"#utility.yul\":3599:3613   */\n      gt\n        /* \"#utility.yul\":3596:3630   */\n      iszero\n      tag_534\n      jumpi\n        /* \"#utility.yul\":3626:3627   */\n      0x00\n        /* \"#utility.yul\":3623:3624   */\n      dup1\n        /* \"#utility.yul\":3616:3628   */\n      revert\n        /* \"#utility.yul\":3596:3630   */\n    tag_534:\n        /* \"#utility.yul\":3649:3699   */\n      tag_535\n        /* \"#utility.yul\":3691:3698   */\n      dup11\n        /* \"#utility.yul\":3682:3688   */\n      dup4\n        /* \"#utility.yul\":3671:3680   */\n      dup12\n        /* \"#utility.yul\":3667:3689   */\n      add\n        /* \"#utility.yul\":3649:3699   */\n      tag_493\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":3639:3699   */\n      swap8\n      pop\n        /* \"#utility.yul\":3752:3754   */\n      0x20\n        /* \"#utility.yul\":3741:3750   */\n      dup10\n        /* \"#utility.yul\":3737:3755   */\n      add\n        /* \"#utility.yul\":3724:3756   */\n      calldataload\n        /* \"#utility.yul\":3708:3756   */\n      swap2\n      pop\n        /* \"#utility.yul\":3781:3783   */\n      dup1\n        /* \"#utility.yul\":3771:3779   */\n      dup3\n        /* \"#utility.yul\":3768:3784   */\n      gt\n        /* \"#utility.yul\":3765:3801   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":3797:3798   */\n      0x00\n        /* \"#utility.yul\":3794:3795   */\n      dup1\n        /* \"#utility.yul\":3787:3799   */\n      revert\n        /* \"#utility.yul\":3765:3801   */\n    tag_536:\n      pop\n        /* \"#utility.yul\":3820:3872   */\n      tag_537\n        /* \"#utility.yul\":3864:3871   */\n      dup10\n        /* \"#utility.yul\":3853:3861   */\n      dup3\n        /* \"#utility.yul\":3842:3851   */\n      dup11\n        /* \"#utility.yul\":3838:3862   */\n      add\n        /* \"#utility.yul\":3820:3872   */\n      tag_493\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3810:3872   */\n      swap6\n      pop\n      pop\n        /* \"#utility.yul\":3891:3927   */\n      tag_538\n        /* \"#utility.yul\":3923:3925   */\n      0x40\n        /* \"#utility.yul\":3912:3921   */\n      dup9\n        /* \"#utility.yul\":3908:3926   */\n      add\n        /* \"#utility.yul\":3891:3927   */\n      tag_494\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":3881:3927   */\n      swap4\n      pop\n        /* \"#utility.yul\":3974:3976   */\n      0x60\n        /* \"#utility.yul\":3963:3972   */\n      dup8\n        /* \"#utility.yul\":3959:3977   */\n      add\n        /* \"#utility.yul\":3946:3978   */\n      calldataload\n        /* \"#utility.yul\":3936:3978   */\n      swap3\n      pop\n        /* \"#utility.yul\":4025:4028   */\n      0x80\n        /* \"#utility.yul\":4014:4023   */\n      dup8\n        /* \"#utility.yul\":4010:4029   */\n      add\n        /* \"#utility.yul\":3997:4030   */\n      calldataload\n        /* \"#utility.yul\":3987:4030   */\n      swap2\n      pop\n        /* \"#utility.yul\":4077:4080   */\n      0xa0\n        /* \"#utility.yul\":4066:4075   */\n      dup8\n        /* \"#utility.yul\":4062:4081   */\n      add\n        /* \"#utility.yul\":4049:4082   */\n      calldataload\n        /* \"#utility.yul\":4039:4082   */\n      swap1\n      pop\n        /* \"#utility.yul\":3268:4088   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":4282:4940   */\n    tag_102:\n        /* \"#utility.yul\":4453:4455   */\n      0x20\n        /* \"#utility.yul\":4505:4526   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4575:4588   */\n      dup3\n      mload\n        /* \"#utility.yul\":4478:4496   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4597:4619   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4424:4428   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4453:4455   */\n      swap1\n        /* \"#utility.yul\":4676:4691   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":4650:4652   */\n      0x40\n        /* \"#utility.yul\":4635:4653   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4424:4428   */\n      dup5\n        /* \"#utility.yul\":4719:4914   */\n    tag_541:\n        /* \"#utility.yul\":4733:4739   */\n      dup2\n        /* \"#utility.yul\":4730:4731   */\n      dup2\n        /* \"#utility.yul\":4727:4740   */\n      lt\n        /* \"#utility.yul\":4719:4914   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":4798:4811   */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4794:4833   */\n      and\n        /* \"#utility.yul\":4782:4834   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4889:4904   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4854:4866   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":4830:4831   */\n      0x01\n        /* \"#utility.yul\":4748:4757   */\n      add\n        /* \"#utility.yul\":4719:4914   */\n      jump(tag_541)\n    tag_543:\n      pop\n        /* \"#utility.yul\":4931:4934   */\n      swap1\n      swap7\n        /* \"#utility.yul\":4282:4940   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5153:5336   */\n    tag_495:\n        /* \"#utility.yul\":5213:5217   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5238:5244   */\n      dup3\n        /* \"#utility.yul\":5235:5265   */\n      gt\n        /* \"#utility.yul\":5232:5288   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":5268:5286   */\n      tag_547\n      tag_491\n      jump\t// in\n    tag_547:\n      pop\n        /* \"#utility.yul\":5313:5314   */\n      0x05\n        /* \"#utility.yul\":5309:5323   */\n      shl\n        /* \"#utility.yul\":5325:5329   */\n      0x20\n        /* \"#utility.yul\":5305:5330   */\n      add\n      swap1\n        /* \"#utility.yul\":5153:5336   */\n      jump\t// out\n        /* \"#utility.yul\":5341:6307   */\n    tag_123:\n        /* \"#utility.yul\":5425:5431   */\n      0x00\n        /* \"#utility.yul\":5456:5458   */\n      0x20\n        /* \"#utility.yul\":5499:5501   */\n      dup1\n        /* \"#utility.yul\":5487:5496   */\n      dup4\n        /* \"#utility.yul\":5478:5485   */\n      dup6\n        /* \"#utility.yul\":5474:5497   */\n      sub\n        /* \"#utility.yul\":5470:5502   */\n      slt\n        /* \"#utility.yul\":5467:5519   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":5515:5516   */\n      0x00\n        /* \"#utility.yul\":5512:5513   */\n      dup1\n        /* \"#utility.yul\":5505:5517   */\n      revert\n        /* \"#utility.yul\":5467:5519   */\n    tag_549:\n        /* \"#utility.yul\":5555:5564   */\n      dup3\n        /* \"#utility.yul\":5542:5565   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":5580:5586   */\n      dup2\n        /* \"#utility.yul\":5577:5607   */\n      gt\n        /* \"#utility.yul\":5574:5624   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":5620:5621   */\n      0x00\n        /* \"#utility.yul\":5617:5618   */\n      dup1\n        /* \"#utility.yul\":5610:5622   */\n      revert\n        /* \"#utility.yul\":5574:5624   */\n    tag_550:\n        /* \"#utility.yul\":5643:5665   */\n      dup4\n      add\n        /* \"#utility.yul\":5696:5700   */\n      0x1f\n        /* \"#utility.yul\":5688:5701   */\n      dup2\n      add\n        /* \"#utility.yul\":5684:5711   */\n      dup6\n      sgt\n        /* \"#utility.yul\":5674:5729   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":5725:5726   */\n      0x00\n        /* \"#utility.yul\":5722:5723   */\n      dup1\n        /* \"#utility.yul\":5715:5727   */\n      revert\n        /* \"#utility.yul\":5674:5729   */\n    tag_551:\n        /* \"#utility.yul\":5761:5763   */\n      dup1\n        /* \"#utility.yul\":5748:5764   */\n      calldataload\n        /* \"#utility.yul\":5784:5844   */\n      tag_552\n        /* \"#utility.yul\":5800:5843   */\n      tag_553\n        /* \"#utility.yul\":5840:5842   */\n      dup3\n        /* \"#utility.yul\":5800:5843   */\n      tag_495\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5784:5844   */\n      tag_492\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":5878:5893   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5960:5961   */\n      0x05\n        /* \"#utility.yul\":5956:5966   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":5948:5967   */\n      dup3\n      add\n        /* \"#utility.yul\":5944:5972   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":5909:5921   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5984:6003   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":5981:6020   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":6016:6017   */\n      0x00\n        /* \"#utility.yul\":6013:6014   */\n      dup1\n        /* \"#utility.yul\":6006:6018   */\n      revert\n        /* \"#utility.yul\":5981:6020   */\n    tag_554:\n        /* \"#utility.yul\":6040:6051   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6060:6277   */\n    tag_555:\n        /* \"#utility.yul\":6076:6082   */\n      dup3\n        /* \"#utility.yul\":6071:6074   */\n      dup5\n        /* \"#utility.yul\":6068:6083   */\n      lt\n        /* \"#utility.yul\":6060:6277   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":6156:6159   */\n      dup4\n        /* \"#utility.yul\":6143:6160   */\n      calldataload\n        /* \"#utility.yul\":6173:6204   */\n      tag_558\n        /* \"#utility.yul\":6198:6203   */\n      dup2\n        /* \"#utility.yul\":6173:6204   */\n      tag_490\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":6217:6235   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6093:6105   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":6255:6267   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":6060:6277   */\n      jump(tag_555)\n    tag_557:\n        /* \"#utility.yul\":6296:6301   */\n      swap8\n        /* \"#utility.yul\":5341:6307   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6312:6492   */\n    tag_142:\n        /* \"#utility.yul\":6371:6377   */\n      0x00\n        /* \"#utility.yul\":6424:6426   */\n      0x20\n        /* \"#utility.yul\":6412:6421   */\n      dup3\n        /* \"#utility.yul\":6403:6410   */\n      dup5\n        /* \"#utility.yul\":6399:6422   */\n      sub\n        /* \"#utility.yul\":6395:6427   */\n      slt\n        /* \"#utility.yul\":6392:6444   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":6440:6441   */\n      0x00\n        /* \"#utility.yul\":6437:6438   */\n      dup1\n        /* \"#utility.yul\":6430:6442   */\n      revert\n        /* \"#utility.yul\":6392:6444   */\n    tag_560:\n      pop\n        /* \"#utility.yul\":6463:6486   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":6312:6492   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6497:6885   */\n    tag_155:\n        /* \"#utility.yul\":6565:6571   */\n      0x00\n        /* \"#utility.yul\":6573:6579   */\n      dup1\n        /* \"#utility.yul\":6626:6628   */\n      0x40\n        /* \"#utility.yul\":6614:6623   */\n      dup4\n        /* \"#utility.yul\":6605:6612   */\n      dup6\n        /* \"#utility.yul\":6601:6624   */\n      sub\n        /* \"#utility.yul\":6597:6629   */\n      slt\n        /* \"#utility.yul\":6594:6646   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":6642:6643   */\n      0x00\n        /* \"#utility.yul\":6639:6640   */\n      dup1\n        /* \"#utility.yul\":6632:6644   */\n      revert\n        /* \"#utility.yul\":6594:6646   */\n    tag_562:\n        /* \"#utility.yul\":6681:6690   */\n      dup3\n        /* \"#utility.yul\":6668:6691   */\n      calldataload\n        /* \"#utility.yul\":6700:6731   */\n      tag_563\n        /* \"#utility.yul\":6725:6730   */\n      dup2\n        /* \"#utility.yul\":6700:6731   */\n      tag_490\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":6750:6755   */\n      swap2\n      pop\n        /* \"#utility.yul\":6807:6809   */\n      0x20\n        /* \"#utility.yul\":6792:6810   */\n      dup4\n      add\n        /* \"#utility.yul\":6779:6811   */\n      calldataload\n        /* \"#utility.yul\":6820:6853   */\n      tag_564\n        /* \"#utility.yul\":6779:6811   */\n      dup2\n        /* \"#utility.yul\":6820:6853   */\n      tag_490\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":6872:6879   */\n      dup1\n        /* \"#utility.yul\":6862:6879   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6497:6885   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6890:7552   */\n    tag_496:\n        /* \"#utility.yul\":6944:6949   */\n      0x00\n        /* \"#utility.yul\":6997:7000   */\n      dup3\n        /* \"#utility.yul\":6990:6994   */\n      0x1f\n        /* \"#utility.yul\":6982:6988   */\n      dup4\n        /* \"#utility.yul\":6978:6995   */\n      add\n        /* \"#utility.yul\":6974:7001   */\n      slt\n        /* \"#utility.yul\":6964:7019   */\n      tag_566\n      jumpi\n        /* \"#utility.yul\":7015:7016   */\n      0x00\n        /* \"#utility.yul\":7012:7013   */\n      dup1\n        /* \"#utility.yul\":7005:7017   */\n      revert\n        /* \"#utility.yul\":6964:7019   */\n    tag_566:\n        /* \"#utility.yul\":7051:7057   */\n      dup2\n        /* \"#utility.yul\":7038:7058   */\n      calldataload\n        /* \"#utility.yul\":7077:7081   */\n      0x20\n        /* \"#utility.yul\":7101:7161   */\n      tag_567\n        /* \"#utility.yul\":7117:7160   */\n      tag_553\n        /* \"#utility.yul\":7157:7159   */\n      dup4\n        /* \"#utility.yul\":7117:7160   */\n      tag_495\n      jump\t// in\n        /* \"#utility.yul\":7101:7161   */\n    tag_567:\n        /* \"#utility.yul\":7195:7210   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":7281:7282   */\n      0x05\n        /* \"#utility.yul\":7277:7287   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":7265:7288   */\n      dup5\n      add\n        /* \"#utility.yul\":7261:7293   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":7226:7238   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":7305:7320   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":7302:7337   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":7333:7334   */\n      0x00\n        /* \"#utility.yul\":7330:7331   */\n      dup1\n        /* \"#utility.yul\":7323:7335   */\n      revert\n        /* \"#utility.yul\":7302:7337   */\n    tag_569:\n        /* \"#utility.yul\":7369:7371   */\n      dup3\n        /* \"#utility.yul\":7361:7367   */\n      dup7\n        /* \"#utility.yul\":7357:7372   */\n      add\n        /* \"#utility.yul\":7381:7523   */\n    tag_570:\n        /* \"#utility.yul\":7397:7403   */\n      dup5\n        /* \"#utility.yul\":7392:7395   */\n      dup2\n        /* \"#utility.yul\":7389:7404   */\n      lt\n        /* \"#utility.yul\":7381:7523   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":7463:7480   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":7451:7481   */\n      dup4\n      mstore\n        /* \"#utility.yul\":7501:7513   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":7414:7426   */\n      dup4\n      add\n        /* \"#utility.yul\":7381:7523   */\n      jump(tag_570)\n    tag_572:\n      pop\n        /* \"#utility.yul\":7541:7546   */\n      swap7\n        /* \"#utility.yul\":6890:7552   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7557:9274   */\n    tag_161:\n        /* \"#utility.yul\":7751:7757   */\n      0x00\n        /* \"#utility.yul\":7759:7765   */\n      dup1\n        /* \"#utility.yul\":7767:7773   */\n      0x00\n        /* \"#utility.yul\":7775:7781   */\n      dup1\n        /* \"#utility.yul\":7783:7789   */\n      0x00\n        /* \"#utility.yul\":7791:7797   */\n      dup1\n        /* \"#utility.yul\":7799:7805   */\n      0x00\n        /* \"#utility.yul\":7852:7855   */\n      0xe0\n        /* \"#utility.yul\":7840:7849   */\n      dup9\n        /* \"#utility.yul\":7831:7838   */\n      dup11\n        /* \"#utility.yul\":7827:7850   */\n      sub\n        /* \"#utility.yul\":7823:7856   */\n      slt\n        /* \"#utility.yul\":7820:7873   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":7869:7870   */\n      0x00\n        /* \"#utility.yul\":7866:7867   */\n      dup1\n        /* \"#utility.yul\":7859:7871   */\n      revert\n        /* \"#utility.yul\":7820:7873   */\n    tag_574:\n        /* \"#utility.yul\":7908:7917   */\n      dup8\n        /* \"#utility.yul\":7895:7918   */\n      calldataload\n        /* \"#utility.yul\":7927:7958   */\n      tag_575\n        /* \"#utility.yul\":7952:7957   */\n      dup2\n        /* \"#utility.yul\":7927:7958   */\n      tag_490\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":7977:7982   */\n      swap7\n      pop\n        /* \"#utility.yul\":8001:8003   */\n      0x20\n        /* \"#utility.yul\":8035:8053   */\n      dup9\n      dup2\n      add\n        /* \"#utility.yul\":8022:8054   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":8101:8103   */\n      0x40\n        /* \"#utility.yul\":8086:8104   */\n      dup10\n      add\n        /* \"#utility.yul\":8073:8105   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":8152:8154   */\n      0x60\n        /* \"#utility.yul\":8137:8155   */\n      dup10\n      add\n        /* \"#utility.yul\":8124:8156   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":8207:8210   */\n      0x80\n        /* \"#utility.yul\":8192:8211   */\n      dup10\n      add\n        /* \"#utility.yul\":8179:8212   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8261:8275   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8258:8292   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":8288:8289   */\n      0x00\n        /* \"#utility.yul\":8285:8286   */\n      dup1\n        /* \"#utility.yul\":8278:8290   */\n      revert\n        /* \"#utility.yul\":8258:8292   */\n    tag_576:\n        /* \"#utility.yul\":8326:8332   */\n      dup2\n        /* \"#utility.yul\":8315:8324   */\n      dup12\n        /* \"#utility.yul\":8311:8333   */\n      add\n        /* \"#utility.yul\":8301:8333   */\n      swap2\n      pop\n        /* \"#utility.yul\":8371:8378   */\n      dup12\n        /* \"#utility.yul\":8364:8368   */\n      0x1f\n        /* \"#utility.yul\":8360:8362   */\n      dup4\n        /* \"#utility.yul\":8356:8369   */\n      add\n        /* \"#utility.yul\":8352:8379   */\n      slt\n        /* \"#utility.yul\":8342:8397   */\n      tag_577\n      jumpi\n        /* \"#utility.yul\":8393:8394   */\n      0x00\n        /* \"#utility.yul\":8390:8391   */\n      dup1\n        /* \"#utility.yul\":8383:8395   */\n      revert\n        /* \"#utility.yul\":8342:8397   */\n    tag_577:\n        /* \"#utility.yul\":8429:8431   */\n      dup2\n        /* \"#utility.yul\":8416:8432   */\n      calldataload\n        /* \"#utility.yul\":8452:8512   */\n      tag_578\n        /* \"#utility.yul\":8468:8511   */\n      tag_553\n        /* \"#utility.yul\":8508:8510   */\n      dup3\n        /* \"#utility.yul\":8468:8511   */\n      tag_495\n      jump\t// in\n        /* \"#utility.yul\":8452:8512   */\n    tag_578:\n        /* \"#utility.yul\":8546:8561   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":8628:8629   */\n      0x05\n        /* \"#utility.yul\":8624:8634   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":8616:8635   */\n      dup4\n      add\n        /* \"#utility.yul\":8612:8640   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":8577:8589   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":8652:8671   */\n      dup15\n      dup4\n      gt\n        /* \"#utility.yul\":8649:8688   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":8684:8685   */\n      0x00\n        /* \"#utility.yul\":8681:8682   */\n      dup1\n        /* \"#utility.yul\":8674:8686   */\n      revert\n        /* \"#utility.yul\":8649:8688   */\n    tag_580:\n        /* \"#utility.yul\":8708:8719   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":8728:8874   */\n    tag_581:\n        /* \"#utility.yul\":8744:8750   */\n      dup3\n        /* \"#utility.yul\":8739:8742   */\n      dup6\n        /* \"#utility.yul\":8736:8751   */\n      lt\n        /* \"#utility.yul\":8728:8874   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":8810:8831   */\n      tag_584\n        /* \"#utility.yul\":8827:8830   */\n      dup6\n        /* \"#utility.yul\":8810:8831   */\n      tag_494\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":8798:8832   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8761:8773   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":8852:8864   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":8728:8874   */\n      jump(tag_581)\n    tag_583:\n        /* \"#utility.yul\":8893:8898   */\n      swap8\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8951:8954   */\n      0xa0\n        /* \"#utility.yul\":8936:8955   */\n      dup12\n      add\n        /* \"#utility.yul\":8923:8956   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":8968:8984   */\n      dup1\n      dup4\n      gt\n        /* \"#utility.yul\":8965:9001   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":8997:8998   */\n      0x00\n        /* \"#utility.yul\":8994:8995   */\n      dup1\n        /* \"#utility.yul\":8987:8999   */\n      revert\n        /* \"#utility.yul\":8965:9001   */\n    tag_585:\n        /* \"#utility.yul\":9020:9083   */\n      tag_586\n        /* \"#utility.yul\":9075:9082   */\n      dup13\n        /* \"#utility.yul\":9064:9072   */\n      dup5\n        /* \"#utility.yul\":9053:9062   */\n      dup14\n        /* \"#utility.yul\":9049:9073   */\n      add\n        /* \"#utility.yul\":9020:9083   */\n      tag_496\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":9010:9083   */\n      swap5\n      pop\n        /* \"#utility.yul\":9136:9139   */\n      0xc0\n        /* \"#utility.yul\":9125:9134   */\n      dup12\n        /* \"#utility.yul\":9121:9140   */\n      add\n        /* \"#utility.yul\":9108:9141   */\n      calldataload\n        /* \"#utility.yul\":9092:9141   */\n      swap3\n      pop\n        /* \"#utility.yul\":9166:9168   */\n      dup1\n        /* \"#utility.yul\":9156:9164   */\n      dup4\n        /* \"#utility.yul\":9153:9169   */\n      gt\n        /* \"#utility.yul\":9150:9186   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":9182:9183   */\n      0x00\n        /* \"#utility.yul\":9179:9180   */\n      dup1\n        /* \"#utility.yul\":9172:9184   */\n      revert\n        /* \"#utility.yul\":9150:9186   */\n    tag_587:\n      pop\n      pop\n        /* \"#utility.yul\":9205:9268   */\n      tag_588\n        /* \"#utility.yul\":9260:9267   */\n      dup11\n        /* \"#utility.yul\":9249:9257   */\n      dup3\n        /* \"#utility.yul\":9238:9247   */\n      dup12\n        /* \"#utility.yul\":9234:9258   */\n      add\n        /* \"#utility.yul\":9205:9268   */\n      tag_496\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":9195:9268   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7557:9274   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9279:9659   */\n    tag_178:\n        /* \"#utility.yul\":9358:9359   */\n      0x01\n        /* \"#utility.yul\":9354:9366   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9401:9413   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9422:9483   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":9476:9480   */\n      0x7f\n        /* \"#utility.yul\":9468:9474   */\n      dup3\n        /* \"#utility.yul\":9464:9481   */\n      and\n        /* \"#utility.yul\":9454:9481   */\n      swap2\n      pop\n        /* \"#utility.yul\":9422:9483   */\n    tag_590:\n        /* \"#utility.yul\":9529:9531   */\n      0x20\n        /* \"#utility.yul\":9521:9527   */\n      dup3\n        /* \"#utility.yul\":9518:9532   */\n      lt\n        /* \"#utility.yul\":9498:9516   */\n      dup2\n        /* \"#utility.yul\":9495:9533   */\n      eq\n        /* \"#utility.yul\":9492:9653   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":9575:9585   */\n      0x4e487b71\n        /* \"#utility.yul\":9570:9573   */\n      0xe0\n        /* \"#utility.yul\":9566:9586   */\n      shl\n        /* \"#utility.yul\":9563:9564   */\n      0x00\n        /* \"#utility.yul\":9556:9587   */\n      mstore\n        /* \"#utility.yul\":9610:9614   */\n      0x22\n        /* \"#utility.yul\":9607:9608   */\n      0x04\n        /* \"#utility.yul\":9600:9615   */\n      mstore\n        /* \"#utility.yul\":9638:9642   */\n      0x24\n        /* \"#utility.yul\":9635:9636   */\n      0x00\n        /* \"#utility.yul\":9628:9643   */\n      revert\n        /* \"#utility.yul\":9492:9653   */\n    tag_591:\n      pop\n        /* \"#utility.yul\":9279:9659   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10079:10206   */\n    tag_497:\n        /* \"#utility.yul\":10140:10150   */\n      0x4e487b71\n        /* \"#utility.yul\":10135:10138   */\n      0xe0\n        /* \"#utility.yul\":10131:10151   */\n      shl\n        /* \"#utility.yul\":10128:10129   */\n      0x00\n        /* \"#utility.yul\":10121:10152   */\n      mstore\n        /* \"#utility.yul\":10171:10175   */\n      0x11\n        /* \"#utility.yul\":10168:10169   */\n      0x04\n        /* \"#utility.yul\":10161:10176   */\n      mstore\n        /* \"#utility.yul\":10195:10199   */\n      0x24\n        /* \"#utility.yul\":10192:10193   */\n      0x00\n        /* \"#utility.yul\":10185:10200   */\n      revert\n        /* \"#utility.yul\":10211:10633   */\n    tag_498:\n        /* \"#utility.yul\":10300:10301   */\n      0x01\n        /* \"#utility.yul\":10343:10348   */\n      dup2\n        /* \"#utility.yul\":10300:10301   */\n      dup2\n        /* \"#utility.yul\":10357:10627   */\n    tag_595:\n        /* \"#utility.yul\":10378:10385   */\n      dup1\n        /* \"#utility.yul\":10368:10376   */\n      dup6\n        /* \"#utility.yul\":10365:10386   */\n      gt\n        /* \"#utility.yul\":10357:10627   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":10437:10441   */\n      dup2\n        /* \"#utility.yul\":10433:10434   */\n      0x00\n        /* \"#utility.yul\":10429:10435   */\n      not\n        /* \"#utility.yul\":10425:10442   */\n      div\n        /* \"#utility.yul\":10419:10423   */\n      dup3\n        /* \"#utility.yul\":10416:10443   */\n      gt\n        /* \"#utility.yul\":10413:10466   */\n      iszero\n      tag_599\n      jumpi\n        /* \"#utility.yul\":10446:10464   */\n      tag_599\n      tag_497\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":10496:10503   */\n      dup1\n        /* \"#utility.yul\":10486:10494   */\n      dup6\n        /* \"#utility.yul\":10482:10504   */\n      and\n        /* \"#utility.yul\":10479:10534   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":10516:10532   */\n      swap2\n      dup2\n      mul\n      swap2\n        /* \"#utility.yul\":10479:10534   */\n    tag_600:\n        /* \"#utility.yul\":10595:10617   */\n      swap4\n      dup5\n      shr\n      swap4\n        /* \"#utility.yul\":10555:10570   */\n      swap1\n      dup1\n      mul\n      swap1\n        /* \"#utility.yul\":10357:10627   */\n      jump(tag_595)\n    tag_597:\n        /* \"#utility.yul\":10361:10364   */\n      pop\n        /* \"#utility.yul\":10211:10633   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10638:11444   */\n    tag_499:\n        /* \"#utility.yul\":10687:10692   */\n      0x00\n        /* \"#utility.yul\":10717:10725   */\n      dup3\n        /* \"#utility.yul\":10707:10787   */\n      tag_602\n      jumpi\n      pop\n        /* \"#utility.yul\":10758:10759   */\n      0x01\n        /* \"#utility.yul\":10772:10777   */\n      jump(tag_184)\n        /* \"#utility.yul\":10707:10787   */\n    tag_602:\n        /* \"#utility.yul\":10806:10810   */\n      dup2\n        /* \"#utility.yul\":10796:10872   */\n      tag_603\n      jumpi\n      pop\n        /* \"#utility.yul\":10843:10844   */\n      0x00\n        /* \"#utility.yul\":10857:10862   */\n      jump(tag_184)\n        /* \"#utility.yul\":10796:10872   */\n    tag_603:\n        /* \"#utility.yul\":10888:10892   */\n      dup2\n        /* \"#utility.yul\":10906:10907   */\n      0x01\n        /* \"#utility.yul\":10901:10960   */\n      dup2\n      eq\n      tag_605\n      jumpi\n        /* \"#utility.yul\":10974:10975   */\n      0x02\n        /* \"#utility.yul\":10969:11099   */\n      dup2\n      eq\n      tag_606\n      jumpi\n        /* \"#utility.yul\":10881:11099   */\n      jump(tag_604)\n        /* \"#utility.yul\":10901:10960   */\n    tag_605:\n        /* \"#utility.yul\":10931:10932   */\n      0x01\n        /* \"#utility.yul\":10922:10932   */\n      swap2\n      pop\n        /* \"#utility.yul\":10945:10950   */\n      pop\n      jump(tag_184)\n        /* \"#utility.yul\":10969:11099   */\n    tag_606:\n        /* \"#utility.yul\":11006:11009   */\n      0xff\n        /* \"#utility.yul\":10996:11004   */\n      dup5\n        /* \"#utility.yul\":10993:11010   */\n      gt\n        /* \"#utility.yul\":10990:11033   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":11013:11031   */\n      tag_608\n      tag_497\n      jump\t// in\n    tag_608:\n      pop\n      pop\n        /* \"#utility.yul\":11069:11070   */\n      0x01\n        /* \"#utility.yul\":11055:11071   */\n      dup3\n      shl\n        /* \"#utility.yul\":11084:11089   */\n      jump(tag_184)\n        /* \"#utility.yul\":10881:11099   */\n    tag_604:\n      pop\n        /* \"#utility.yul\":11183:11185   */\n      0x20\n        /* \"#utility.yul\":11173:11181   */\n      dup4\n        /* \"#utility.yul\":11170:11186   */\n      lt\n        /* \"#utility.yul\":11164:11167   */\n      0x0133\n        /* \"#utility.yul\":11158:11162   */\n      dup4\n        /* \"#utility.yul\":11155:11168   */\n      lt\n        /* \"#utility.yul\":11151:11187   */\n      and\n        /* \"#utility.yul\":11145:11147   */\n      0x4e\n        /* \"#utility.yul\":11135:11143   */\n      dup5\n        /* \"#utility.yul\":11132:11148   */\n      lt\n        /* \"#utility.yul\":11127:11129   */\n      0x0b\n        /* \"#utility.yul\":11121:11125   */\n      dup5\n        /* \"#utility.yul\":11118:11130   */\n      lt\n        /* \"#utility.yul\":11114:11149   */\n      and\n        /* \"#utility.yul\":11111:11188   */\n      or\n        /* \"#utility.yul\":11108:11267   */\n      iszero\n      tag_609\n      jumpi\n      pop\n        /* \"#utility.yul\":11220:11239   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":11252:11257   */\n      jump(tag_184)\n        /* \"#utility.yul\":11108:11267   */\n    tag_609:\n        /* \"#utility.yul\":11299:11333   */\n      tag_610\n        /* \"#utility.yul\":11324:11332   */\n      dup4\n        /* \"#utility.yul\":11318:11322   */\n      dup4\n        /* \"#utility.yul\":11299:11333   */\n      tag_498\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":11369:11375   */\n      dup1\n        /* \"#utility.yul\":11365:11366   */\n      0x00\n        /* \"#utility.yul\":11361:11367   */\n      not\n        /* \"#utility.yul\":11357:11376   */\n      div\n        /* \"#utility.yul\":11348:11355   */\n      dup3\n        /* \"#utility.yul\":11345:11377   */\n      gt\n        /* \"#utility.yul\":11342:11400   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":11380:11398   */\n      tag_612\n      tag_497\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":11418:11438   */\n      mul\n      swap4\n        /* \"#utility.yul\":10638:11444   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11449:11589   */\n    tag_214:\n        /* \"#utility.yul\":11507:11512   */\n      0x00\n        /* \"#utility.yul\":11536:11583   */\n      tag_351\n        /* \"#utility.yul\":11577:11581   */\n      0xff\n        /* \"#utility.yul\":11567:11575   */\n      dup5\n        /* \"#utility.yul\":11563:11582   */\n      and\n        /* \"#utility.yul\":11557:11561   */\n      dup4\n        /* \"#utility.yul\":11536:11583   */\n      tag_499\n      jump\t// in\n        /* \"#utility.yul\":11594:11762   */\n    tag_216:\n        /* \"#utility.yul\":11634:11641   */\n      0x00\n        /* \"#utility.yul\":11700:11701   */\n      dup2\n        /* \"#utility.yul\":11696:11697   */\n      0x00\n        /* \"#utility.yul\":11692:11698   */\n      not\n        /* \"#utility.yul\":11688:11702   */\n      div\n        /* \"#utility.yul\":11685:11686   */\n      dup4\n        /* \"#utility.yul\":11682:11703   */\n      gt\n        /* \"#utility.yul\":11677:11678   */\n      dup3\n        /* \"#utility.yul\":11670:11679   */\n      iszero\n        /* \"#utility.yul\":11663:11680   */\n      iszero\n        /* \"#utility.yul\":11659:11704   */\n      and\n        /* \"#utility.yul\":11656:11727   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":11707:11725   */\n      tag_617\n      tag_497\n      jump\t// in\n    tag_617:\n      pop\n        /* \"#utility.yul\":11747:11756   */\n      mul\n      swap1\n        /* \"#utility.yul\":11594:11762   */\n      jump\t// out\n        /* \"#utility.yul\":11966:12094   */\n    tag_233:\n        /* \"#utility.yul\":12006:12009   */\n      0x00\n        /* \"#utility.yul\":12037:12038   */\n      dup3\n        /* \"#utility.yul\":12033:12039   */\n      not\n        /* \"#utility.yul\":12030:12031   */\n      dup3\n        /* \"#utility.yul\":12027:12040   */\n      gt\n        /* \"#utility.yul\":12024:12063   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":12043:12061   */\n      tag_621\n      tag_497\n      jump\t// in\n    tag_621:\n      pop\n        /* \"#utility.yul\":12079:12088   */\n      add\n      swap1\n        /* \"#utility.yul\":11966:12094   */\n      jump\t// out\n        /* \"#utility.yul\":12505:12630   */\n    tag_279:\n        /* \"#utility.yul\":12545:12549   */\n      0x00\n        /* \"#utility.yul\":12573:12574   */\n      dup3\n        /* \"#utility.yul\":12570:12571   */\n      dup3\n        /* \"#utility.yul\":12567:12575   */\n      lt\n        /* \"#utility.yul\":12564:12598   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":12578:12596   */\n      tag_625\n      tag_497\n      jump\t// in\n    tag_625:\n      pop\n        /* \"#utility.yul\":12615:12624   */\n      sub\n      swap1\n        /* \"#utility.yul\":12505:12630   */\n      jump\t// out\n        /* \"#utility.yul\":14133:14260   */\n    tag_304:\n        /* \"#utility.yul\":14194:14204   */\n      0x4e487b71\n        /* \"#utility.yul\":14189:14192   */\n      0xe0\n        /* \"#utility.yul\":14185:14205   */\n      shl\n        /* \"#utility.yul\":14182:14183   */\n      0x00\n        /* \"#utility.yul\":14175:14206   */\n      mstore\n        /* \"#utility.yul\":14225:14229   */\n      0x32\n        /* \"#utility.yul\":14222:14223   */\n      0x04\n        /* \"#utility.yul\":14215:14230   */\n      mstore\n        /* \"#utility.yul\":14249:14253   */\n      0x24\n        /* \"#utility.yul\":14246:14247   */\n      0x00\n        /* \"#utility.yul\":14239:14254   */\n      revert\n        /* \"#utility.yul\":14668:14843   */\n    tag_316:\n        /* \"#utility.yul\":14705:14708   */\n      0x00\n        /* \"#utility.yul\":14749:14753   */\n      0xff\n        /* \"#utility.yul\":14742:14747   */\n      dup3\n        /* \"#utility.yul\":14738:14754   */\n      and\n        /* \"#utility.yul\":14778:14782   */\n      0xff\n        /* \"#utility.yul\":14769:14776   */\n      dup2\n        /* \"#utility.yul\":14766:14783   */\n      eq\n        /* \"#utility.yul\":14763:14806   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":14786:14804   */\n      tag_633\n      tag_497\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":14835:14836   */\n      0x01\n        /* \"#utility.yul\":14822:14837   */\n      add\n      swap3\n        /* \"#utility.yul\":14668:14843   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14848:15057   */\n    tag_318:\n        /* \"#utility.yul\":14886:14889   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":14967:14969   */\n      dup1\n        /* \"#utility.yul\":14960:14965   */\n      dup4\n        /* \"#utility.yul\":14956:14970   */\n      and\n        /* \"#utility.yul\":14994:14996   */\n      dup2\n        /* \"#utility.yul\":14985:14992   */\n      dup2\n        /* \"#utility.yul\":14982:14997   */\n      eq\n        /* \"#utility.yul\":14979:15020   */\n      iszero\n      tag_636\n      jumpi\n        /* \"#utility.yul\":15000:15018   */\n      tag_636\n      tag_497\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":15049:15050   */\n      0x01\n        /* \"#utility.yul\":15036:15051   */\n      add\n      swap4\n        /* \"#utility.yul\":14848:15057   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17179:17396   */\n    tag_352:\n        /* \"#utility.yul\":17219:17220   */\n      0x00\n        /* \"#utility.yul\":17245:17246   */\n      dup3\n        /* \"#utility.yul\":17235:17367   */\n      tag_644\n      jumpi\n        /* \"#utility.yul\":17289:17299   */\n      0x4e487b71\n        /* \"#utility.yul\":17284:17287   */\n      0xe0\n        /* \"#utility.yul\":17280:17300   */\n      shl\n        /* \"#utility.yul\":17277:17278   */\n      0x00\n        /* \"#utility.yul\":17270:17301   */\n      mstore\n        /* \"#utility.yul\":17324:17328   */\n      0x12\n        /* \"#utility.yul\":17321:17322   */\n      0x04\n        /* \"#utility.yul\":17314:17329   */\n      mstore\n        /* \"#utility.yul\":17352:17356   */\n      0x24\n        /* \"#utility.yul\":17349:17350   */\n      0x00\n        /* \"#utility.yul\":17342:17357   */\n      revert\n        /* \"#utility.yul\":17235:17367   */\n    tag_644:\n      pop\n        /* \"#utility.yul\":17381:17390   */\n      div\n      swap1\n        /* \"#utility.yul\":17179:17396   */\n      jump\t// out\n        /* \"#utility.yul\":17401:17808   */\n    tag_368:\n        /* \"#utility.yul\":17603:17605   */\n      0x20\n        /* \"#utility.yul\":17585:17606   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":17642:17644   */\n      0x2b\n        /* \"#utility.yul\":17622:17640   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":17615:17645   */\n      mstore\n        /* \"#utility.yul\":17681:17715   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":17676:17678   */\n      0x40\n        /* \"#utility.yul\":17661:17679   */\n      dup3\n      add\n        /* \"#utility.yul\":17654:17716   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":17747:17749   */\n      0x60\n        /* \"#utility.yul\":17732:17750   */\n      dup3\n      add\n        /* \"#utility.yul\":17725:17766   */\n      mstore\n        /* \"#utility.yul\":17798:17801   */\n      0x80\n        /* \"#utility.yul\":17783:17802   */\n      add\n      swap1\n        /* \"#utility.yul\":17401:17808   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039ade7c0c035cf0d26c069aec2f44ee14fc90059a8d47bcca0569ff0b5f9944f64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506120a3806100206000396000f3fe6080604052600436106101bb5760003560e01c80638da5cb5b116100ec578063c4081a4c1161008a578063e4c97e6a11610064578063e4c97e6a14610505578063f2fde38b14610525578063f66608fe14610545578063f93422851461055a57600080fd5b8063c4081a4c146104af578063d89135cd146104cf578063dd62ed3e146104e557600080fd5b8063a457c2d7116100c6578063a457c2d71461043a578063a9059cbb1461045a578063ac7fa3c61461047a578063b24a08931461048f57600080fd5b80638da5cb5b146103dd57806395d89b4114610405578063a37726621461041a57600080fd5b8063313ce567116101595780633de47e32116101335780633de47e321461034057806346f0975a1461037057806370a0823114610392578063715018a6146103c857600080fd5b8063313ce567146102e9578063355274ea1461030b578063395093511461032057600080fd5b806318160ddd1161019557806318160ddd1461025b5780631e0d4ce91461027a57806323b872dd146102a75780632b9a1d3c146102c757600080fd5b806306fdde03146101c757806307c351dd146101f2578063095ea7b31461023b57600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101dc61058a565b6040516101e991906118e8565b60405180910390f35b3480156101fe57600080fd5b5061022b61020d366004611952565b6001600160a01b0316600090815260d2602052604090205460ff1690565b60405190151581526020016101e9565b34801561024757600080fd5b5061022b61025636600461196f565b61061c565b34801561026757600080fd5b506035545b6040519081526020016101e9565b34801561028657600080fd5b5061026c610295366004611952565b60d46020526000908152604090205481565b3480156102b357600080fd5b5061022b6102c236600461199b565b610636565b3480156102d357600080fd5b506102e76102e2366004611aa7565b610665565b005b3480156102f557600080fd5b5060cc5460405160ff90911681526020016101e9565b34801561031757600080fd5b5060655461026c565b34801561032c57600080fd5b5061022b61033b36600461196f565b6107ff565b34801561034c57600080fd5b5061022b61035b366004611952565b60d26020526000908152604090205460ff1681565b34801561037c57600080fd5b50610385610821565b6040516101e99190611b36565b34801561039e57600080fd5b5061026c6103ad366004611952565b6001600160a01b031660009081526033602052604090205490565b3480156103d457600080fd5b506102e7610882565b3480156103e957600080fd5b506098546040516001600160a01b0390911681526020016101e9565b34801561041157600080fd5b506101dc610896565b34801561042657600080fd5b506102e7610435366004611ba6565b6108a5565b34801561044657600080fd5b5061022b61045536600461196f565b610944565b34801561046657600080fd5b5061022b61047536600461196f565b6109ca565b34801561048657600080fd5b5060cd5461026c565b34801561049b57600080fd5b506102e76104aa366004611c44565b610a43565b3480156104bb57600080fd5b506102e76104ca366004611c44565b610a50565b3480156104db57600080fd5b5061026c60d05481565b3480156104f157600080fd5b5061026c610500366004611c5d565b610a5d565b34801561051157600080fd5b506102e7610520366004611cfc565b610a88565b34801561053157600080fd5b506102e7610540366004611952565b610e0c565b34801561055157600080fd5b5060cf5461026c565b34801561056657600080fd5b5061022b610575366004611c44565b60d36020526000908152604090205460ff1681565b60606036805461059990611e11565b80601f01602080910402602001604051908101604052809291908181526020018280546105c590611e11565b80156106125780601f106105e757610100808354040283529160200191610612565b820191906000526020600020905b8154815290600101906020018083116105f557829003601f168201915b5050505050905090565b60003361062a818585610e82565b60019150505b92915050565b60008061064283610fa7565b905061064e8582610fcb565b61065985858561102a565b50600195945050505050565b600054610100900460ff16158080156106855750600054600160ff909116105b8061069f5750303b15801561069f575060005460ff166001145b6107075760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff19166001179055801561072a576000805461ff0019166101001790555b610732611043565b61073c8787611072565b61075961074a86600a611f46565b6107549086611f55565b6110a7565b865161076c9060ca9060208a01906117dc565b5085516107809060cb9060208901906117dc565b5060cc805460ff191660ff871617905567016345785d8a000060cd5560ce84905560cf8290556107b030846110d7565b80156107f6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b60003361062a8185856108128383610a5d565b61081c9190611f74565b610e82565b606060d180548060200260200160405190810160405280929190818152602001828054801561061257602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161085b575050505050905090565b61088a611146565b61089460006111a0565b565b60606037805461059990611e11565b6108ad611146565b61091460d180548060200260200160405190810160405280929190818152602001828054801561090657602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116108e8575b5050505050600060d26111f2565b61092060d16000611860565b80516109339060d190602084019061187e565b5061094181600160d26111f2565b50565b600033816109528286610a5d565b9050838110156109b25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016106fe565b6109bf8286868403610e82565b506001949350505050565b60006109de6098546001600160a01b031690565b6001600160a01b0316336001600160a01b03161415610a0757610a018383611270565b50610a3a565b6000610a1283610fa7565b9050610a1e3382610fcb565b6000610a2a8285611f8c565b9050610a368582611270565b5050505b50600192915050565b610a4b611146565b60cd55565b610a58611146565b60cf55565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b42841015610acb5760405162461bcd60e51b815260206004820152601060248201526f4578706972656420646561646c696e6560801b60448201526064016106fe565b600086815260d3602052604090205460ff1615610b1d5760405162461bcd60e51b815260206004820152601060248201526f556e697175652069642065786973747360801b60448201526064016106fe565b336000610b326098546001600160a01b031690565b604051601960f81b60208201526000602182018190526bffffffffffffffffffffffff19606084811b8216602285015286811b821660368501528d901b16604a830152605e82018a9052607e82018b9052609e820189905291925060be0160405160208183030381529060405280519060200120905060008060005b8851816001600160401b03161015610cf25760006001858b846001600160401b031681518110610be057610be0611fa3565b60200260200101518b856001600160401b031681518110610c0357610c03611fa3565b60200260200101518b866001600160401b031681518110610c2657610c26611fa3565b602002602001015160405160008152602001604052604051610c64949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa158015610c86573d6000803e3d6000fd5b505050602060405103519050836001600160a01b0316816001600160a01b0316118015610ccb57506001600160a01b038116600090815260d2602052604090205460ff165b15610cde5782610cda81611fb9565b9350505b925080610cea81611fd9565b915050610bae565b5060028160ff161015610d395760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964207369676e65727360881b60448201526064016106fe565b60008b815260d360205260408120805460ff1916600117905560cd546001600160a01b038e1690610d6b908d90611f55565b604051600081818185875af1925050503d8060008114610da7576040519150601f19603f3d011682016040523d82523d6000602084013e610dac565b606091505b5050905080610df35760405162461bcd60e51b815260206004820152601360248201527208cc2d2d8cac840e8de40e6cadcc8409acac6d606b1b60448201526064016106fe565b610dfd8d8c6110d7565b50505050505050505050505050565b610e14611146565b6001600160a01b038116610e795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106fe565b610941816111a0565b6001600160a01b038316610ee45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106fe565b6001600160a01b038216610f455760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106fe565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600080606460cf5484610fba9190611f55565b610fc49190612000565b9392505050565b610fd5828261127e565b8060d054610fe39190611f74565b60d0556001600160a01b038216600090815260d4602052604090205461100a908290611f74565b6001600160a01b03909216600090815260d4602052604090209190915550565b6000336110388582856113c9565b6109bf85858561143d565b600054610100900460ff1661106a5760405162461bcd60e51b81526004016106fe90612022565b61089461160b565b600054610100900460ff166110995760405162461bcd60e51b81526004016106fe90612022565b6110a3828261163b565b5050565b600054610100900460ff166110ce5760405162461bcd60e51b81526004016106fe90612022565b61094181611689565b606554816110e460355490565b6110ee9190611f74565b111561113c5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a206361702065786365656465640000000000000060448201526064016106fe565b6110a382826116fd565b6098546001600160a01b031633146108945760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106fe565b609880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b8351816001600160401b0316101561126a578282600086846001600160401b03168151811061122657611226611fa3565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061126281611fd9565b9150506111f5565b50505050565b60003361062a81858561143d565b6001600160a01b0382166112de5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016106fe565b6001600160a01b038216600090815260336020526040902054818110156113525760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016106fe565b6001600160a01b0383166000908152603360205260408120838303905560358054849290611381908490611f8c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610f9a565b505050565b60006113d58484610a5d565b9050600019811461126a57818110156114305760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016106fe565b61126a8484848403610e82565b6001600160a01b0383166114a15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106fe565b6001600160a01b0382166115035760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106fe565b6001600160a01b0383166000908152603360205260409020548181101561157b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016106fe565b6001600160a01b038085166000908152603360205260408082208585039055918516815290812080548492906115b2908490611f74565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516115fe91815260200190565b60405180910390a361126a565b600054610100900460ff166116325760405162461bcd60e51b81526004016106fe90612022565b610894336111a0565b600054610100900460ff166116625760405162461bcd60e51b81526004016106fe90612022565b81516116759060369060208501906117dc565b5080516113c49060379060208401906117dc565b600054610100900460ff166116b05760405162461bcd60e51b81526004016106fe90612022565b600081116116f85760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b60448201526064016106fe565b606555565b6001600160a01b0382166117535760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016106fe565b80603560008282546117659190611f74565b90915550506001600160a01b03821660009081526033602052604081208054839290611792908490611f74565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b8280546117e890611e11565b90600052602060002090601f01602090048101928261180a5760008555611850565b82601f1061182357805160ff1916838001178555611850565b82800160010185558215611850579182015b82811115611850578251825591602001919060010190611835565b5061185c9291506118d3565b5090565b508054600082559060005260206000209081019061094191906118d3565b828054828255906000526020600020908101928215611850579160200282015b8281111561185057825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061189e565b5b8082111561185c57600081556001016118d4565b600060208083528351808285015260005b81811015611915578581018301518582016040015282016118f9565b81811115611927576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461094157600080fd5b60006020828403121561196457600080fd5b8135610fc48161193d565b6000806040838503121561198257600080fd5b823561198d8161193d565b946020939093013593505050565b6000806000606084860312156119b057600080fd5b83356119bb8161193d565b925060208401356119cb8161193d565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611a1a57611a1a6119dc565b604052919050565b600082601f830112611a3357600080fd5b81356001600160401b03811115611a4c57611a4c6119dc565b611a5f601f8201601f19166020016119f2565b818152846020838601011115611a7457600080fd5b816020850160208301376000918101602001919091529392505050565b803560ff81168114611aa257600080fd5b919050565b60008060008060008060c08789031215611ac057600080fd5b86356001600160401b0380821115611ad757600080fd5b611ae38a838b01611a22565b97506020890135915080821115611af957600080fd5b50611b0689828a01611a22565b955050611b1560408801611a91565b9350606087013592506080870135915060a087013590509295509295509295565b6020808252825182820181905260009190848201906040850190845b81811015611b775783516001600160a01b031683529284019291840191600101611b52565b50909695505050505050565b60006001600160401b03821115611b9c57611b9c6119dc565b5060051b60200190565b60006020808385031215611bb957600080fd5b82356001600160401b03811115611bcf57600080fd5b8301601f81018513611be057600080fd5b8035611bf3611bee82611b83565b6119f2565b81815260059190911b82018301908381019087831115611c1257600080fd5b928401925b82841015611c39578335611c2a8161193d565b82529284019290840190611c17565b979650505050505050565b600060208284031215611c5657600080fd5b5035919050565b60008060408385031215611c7057600080fd5b8235611c7b8161193d565b91506020830135611c8b8161193d565b809150509250929050565b600082601f830112611ca757600080fd5b81356020611cb7611bee83611b83565b82815260059290921b84018101918181019086841115611cd657600080fd5b8286015b84811015611cf15780358352918301918301611cda565b509695505050505050565b600080600080600080600060e0888a031215611d1757600080fd5b8735611d228161193d565b96506020888101359650604089013595506060890135945060808901356001600160401b0380821115611d5457600080fd5b818b0191508b601f830112611d6857600080fd5b8135611d76611bee82611b83565b81815260059190911b8301840190848101908e831115611d9557600080fd5b938501935b82851015611dba57611dab85611a91565b82529385019390850190611d9a565b9750505060a08b0135925080831115611dd257600080fd5b611dde8c848d01611c96565b945060c08b0135925080831115611df457600080fd5b5050611e028a828b01611c96565b91505092959891949750929550565b600181811c90821680611e2557607f821691505b60208210811415611e4657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115611e9d578160001904821115611e8357611e83611e4c565b80851615611e9057918102915b93841c9390800290611e67565b509250929050565b600082611eb457506001610630565b81611ec157506000610630565b8160018114611ed75760028114611ee157611efd565b6001915050610630565b60ff841115611ef257611ef2611e4c565b50506001821b610630565b5060208310610133831016604e8410600b8410161715611f20575081810a610630565b611f2a8383611e62565b8060001904821115611f3e57611f3e611e4c565b029392505050565b6000610fc460ff841683611ea5565b6000816000190483118215151615611f6f57611f6f611e4c565b500290565b60008219821115611f8757611f87611e4c565b500190565b600082821015611f9e57611f9e611e4c565b500390565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff811415611fd057611fd0611e4c565b60010192915050565b60006001600160401b0380831681811415611ff657611ff6611e4c565b6001019392505050565b60008261201d57634e487b7160e01b600052601260045260246000fd5b500490565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122039ade7c0c035cf0d26c069aec2f44ee14fc90059a8d47bcca0569ff0b5f9944f64736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20A3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xC4081A4C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE4C97E6A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE4C97E6A EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xF9342285 EQ PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4081A4C EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xAC7FA3C6 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xB24A0893 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xA3772662 EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x3DE47E32 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x3DE47E32 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x1E0D4CE9 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x2B9A1D3C EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x7C351DD EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1C2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA7 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x882 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x896 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C44 JUMP JUMPDEST PUSH2 0xA43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C44 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0xE0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C5 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x612 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x612 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x642 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x64E DUP6 DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x659 DUP6 DUP6 DUP6 PUSH2 0x102A JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x685 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x69F JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x732 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x73C DUP8 DUP8 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x759 PUSH2 0x74A DUP7 PUSH1 0xA PUSH2 0x1F46 JUMP JUMPDEST PUSH2 0x754 SWAP1 DUP7 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST DUP7 MLOAD PUSH2 0x76C SWAP1 PUSH1 0xCA SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x780 SWAP1 PUSH1 0xCB SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP PUSH1 0xCC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR SWAP1 SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xCD SSTORE PUSH1 0xCE DUP5 SWAP1 SSTORE PUSH1 0xCF DUP3 SWAP1 SSTORE PUSH2 0x7B0 ADDRESS DUP5 PUSH2 0x10D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0x812 DUP4 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x85B JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88A PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x894 PUSH1 0x0 PUSH2 0x11A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x8AD PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x914 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E8 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0xD2 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x920 PUSH1 0xD1 PUSH1 0x0 PUSH2 0x1860 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x933 SWAP1 PUSH1 0xD1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x187E JUMP JUMPDEST POP PUSH2 0x941 DUP2 PUSH1 0x1 PUSH1 0xD2 PUSH2 0x11F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x952 DUP3 DUP7 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x9BF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE82 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DE PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA07 JUMPI PUSH2 0xA01 DUP4 DUP4 PUSH2 0x1270 JUMP JUMPDEST POP PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA1E CALLER DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP3 DUP6 PUSH2 0x1F8C JUMP JUMPDEST SWAP1 POP PUSH2 0xA36 DUP6 DUP3 PUSH2 0x1270 JUMP JUMPDEST POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4B PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0xA58 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCF SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x556E6971756520696420657869737473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xB32 PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x21 DUP3 ADD DUP2 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x22 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x36 DUP6 ADD MSTORE DUP14 SWAP1 SHL AND PUSH1 0x4A DUP4 ADD MSTORE PUSH1 0x5E DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x7E DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x9E DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0xBE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 DUP12 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xBE0 JUMPI PUSH2 0xBE0 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH2 0xC03 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xC26 JUMPI PUSH2 0xC26 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xC64 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0xCCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xCDE JUMPI DUP3 PUSH2 0xCDA DUP2 PUSH2 0x1FB9 JUMP JUMPDEST SWAP4 POP POP JUMPDEST SWAP3 POP DUP1 PUSH2 0xCEA DUP2 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAE JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964207369676E657273 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP1 PUSH2 0xD6B SWAP1 DUP14 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0xDFD DUP14 DUP13 PUSH2 0x10D7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE14 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0xCF SLOAD DUP5 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFD5 DUP3 DUP3 PUSH2 0x127E JUMP JUMPDEST DUP1 PUSH1 0xD0 SLOAD PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0xD0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100A SWAP1 DUP3 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1038 DUP6 DUP3 DUP6 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x9BF DUP6 DUP6 DUP6 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x894 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x163B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x1689 JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 PUSH2 0x10E4 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST GT ISZERO PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x126A JUMPI DUP3 DUP3 PUSH1 0x0 DUP7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x1226 JUMPI PUSH2 0x1226 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1262 DUP2 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11F5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1381 SWAP1 DUP5 SWAP1 PUSH2 0x1F8C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xF9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP5 DUP5 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x126A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x126A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x15B2 SWAP1 DUP5 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x15FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x894 CALLER PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1675 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x13C4 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x16F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x45524332304361707065643A20636170206973203 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1765 SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1792 SWAP1 DUP5 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17E8 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x180A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1850 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1823 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1850 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1850 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1850 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1835 JUMP JUMPDEST POP PUSH2 0x185C SWAP3 SWAP2 POP PUSH2 0x18D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1850 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1850 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x189E JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1915 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x18F9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1927 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC4 DUP2 PUSH2 0x193D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x198D DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x19BB DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x19CB DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A1A PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4C PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x1A5F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x19F2 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1A74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1AA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1AC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE3 DUP11 DUP4 DUP12 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B06 DUP10 DUP3 DUP11 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1B15 PUSH1 0x40 DUP9 ADD PUSH2 0x1A91 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B77 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1B52 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1B9C JUMPI PUSH2 0x1B9C PUSH2 0x19DC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1BF3 PUSH2 0x1BEE DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x19F2 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1C39 JUMPI DUP4 CALLDATALOAD PUSH2 0x1C2A DUP2 PUSH2 0x193D JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1C17 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1C7B DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1C8B DUP2 PUSH2 0x193D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1CB7 PUSH2 0x1BEE DUP4 PUSH2 0x1B83 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1CD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1CF1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1CDA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1D17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1D22 DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1D54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D76 PUSH2 0x1BEE DUP3 PUSH2 0x1B83 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP15 DUP4 GT ISZERO PUSH2 0x1D95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1DBA JUMPI PUSH2 0x1DAB DUP6 PUSH2 0x1A91 JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1D9A JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1DD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DDE DUP13 DUP5 DUP14 ADD PUSH2 0x1C96 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1DF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1E02 DUP11 DUP3 DUP12 ADD PUSH2 0x1C96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1E25 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1E9D JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1E83 JUMPI PUSH2 0x1E83 PUSH2 0x1E4C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1E90 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1E67 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1EB4 JUMPI POP PUSH1 0x1 PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH2 0x1EC1 JUMPI POP PUSH1 0x0 PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1ED7 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EE1 JUMPI PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF2 PUSH2 0x1E4C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x630 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F20 JUMPI POP DUP2 DUP2 EXP PUSH2 0x630 JUMP JUMPDEST PUSH2 0x1F2A DUP4 DUP4 PUSH2 0x1E62 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3E PUSH2 0x1E4C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC4 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F6F JUMPI PUSH2 0x1F6F PUSH2 0x1E4C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1F87 JUMPI PUSH2 0x1F87 PUSH2 0x1E4C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F9E JUMPI PUSH2 0x1F9E PUSH2 0x1E4C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1FD0 JUMPI PUSH2 0x1FD0 PUSH2 0x1E4C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x1FF6 JUMPI PUSH2 0x1FF6 PUSH2 0x1E4C JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x201D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAD 0xE7 0xC0 0xC0 CALLDATALOAD 0xCF 0xD 0x26 0xC0 PUSH10 0xAEC2F44EE14FC90059A8 0xD4 PUSH28 0xCCA0569FF0B5F9944F64736F6C634300080B00330000000000000000 ",
							"sourceMap": "243:5370:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1475": {
									"entryPoint": null,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20Capped_init_995": {
									"entryPoint": 4263,
									"id": 995,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ERC20Capped_init_unchained_1014": {
									"entryPoint": 5769,
									"id": 1014,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__ERC20_init_329": {
									"entryPoint": 4210,
									"id": 329,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_347": {
									"entryPoint": 5691,
									"id": 347,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_26": {
									"entryPoint": 4163,
									"id": 26,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_37": {
									"entryPoint": 5643,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_822": {
									"entryPoint": 3714,
									"id": 822,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_876": {
									"entryPoint": null,
									"id": 876,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burnAndUpdate_1742": {
									"entryPoint": 4043,
									"id": 1742,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_burn_777": {
									"entryPoint": 4734,
									"id": 777,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_calculateBurnAmt_1713": {
									"entryPoint": 4007,
									"id": 1713,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_checkOwner_68": {
									"entryPoint": 4422,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mapSigners_1397": {
									"entryPoint": null,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1052": {
									"entryPoint": 4311,
									"id": 1052,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_705": {
									"entryPoint": 5885,
									"id": 705,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1353": {
									"entryPoint": null,
									"id": 1353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_865": {
									"entryPoint": 5065,
									"id": 865,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_125": {
									"entryPoint": 4512,
									"id": 125,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_649": {
									"entryPoint": 5181,
									"id": 649,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_updateMap_1607": {
									"entryPoint": 4594,
									"id": 1607,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_444": {
									"entryPoint": 2653,
									"id": 444,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_469": {
									"entryPoint": 1564,
									"id": 469,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_401": {
									"entryPoint": null,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@cap_1023": {
									"entryPoint": null,
									"id": 1023,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_1484": {
									"entryPoint": null,
									"id": 1484,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_572": {
									"entryPoint": 2372,
									"id": 572,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRewardAmt_1492": {
									"entryPoint": null,
									"id": 1492,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTaxFee_1512": {
									"entryPoint": null,
									"id": 1512,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increaseAllowance_531": {
									"entryPoint": 2047,
									"id": 531,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_1471": {
									"entryPoint": 1637,
									"id": 1471,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@isContract_1101": {
									"entryPoint": null,
									"id": 1101,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mapSigner_1573": {
									"entryPoint": null,
									"id": 1573,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_357": {
									"entryPoint": 1418,
									"id": 357,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_54": {
									"entryPoint": null,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@permitMint_1902": {
									"entryPoint": 2696,
									"id": 1902,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@renounceOwnership_82": {
									"entryPoint": 2178,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardAmtInWei_1504": {
									"entryPoint": 2627,
									"id": 1504,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setSigners_1561": {
									"entryPoint": 2213,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTaxFee_1524": {
									"entryPoint": 2640,
									"id": 1524,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@signers_1533": {
									"entryPoint": 2081,
									"id": 1533,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_367": {
									"entryPoint": 2198,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalBurned_1390": {
									"entryPoint": null,
									"id": 1390,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_387": {
									"entryPoint": null,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1694": {
									"entryPoint": 1590,
									"id": 1694,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_502": {
									"entryPoint": 4138,
									"id": 502,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_105": {
									"entryPoint": 3596,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1660": {
									"entryPoint": 2506,
									"id": 1660,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_426": {
									"entryPoint": 4720,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniqueIdExists_1401": {
									"entryPoint": null,
									"id": 1401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userTotalBurned_1405": {
									"entryPoint": null,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_bytes32_dyn": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 6690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 7420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256": {
									"entryPoint": 6823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint8": {
									"entryPoint": 6801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 7043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 7778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 8006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 7845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint64": {
									"entryPoint": 8153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8099,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21615:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:9",
																"statements": []
															},
															"src": "294:140:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:9"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:9"
															},
															"nodeType": "YulIf",
															"src": "443:91:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:597:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "661:86:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "725:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "734:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "737:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "727:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "727:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "727:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "695:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "710:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "715:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "706:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "706:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "719:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "702:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "702:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "691:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "691:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "681:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "681:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "674:50:9"
															},
															"nodeType": "YulIf",
															"src": "671:70:9"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "650:5:9",
														"type": ""
													}
												],
												"src": "616:131:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "822:177:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "868:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "877:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "880:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "870:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "870:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "870:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "843:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "852:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "864:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:32:9"
															},
															"nodeType": "YulIf",
															"src": "832:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "893:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "919:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "906:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "897:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "963:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "938:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "938:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "938:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "978:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "988:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "788:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "799:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "811:6:9",
														"type": ""
													}
												],
												"src": "752:247:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:9",
														"type": ""
													}
												],
												"src": "1004:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1283:228:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1329:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1338:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1341:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1331:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1331:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1331:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1304:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1313:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1300:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1300:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1296:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:32:9"
															},
															"nodeType": "YulIf",
															"src": "1293:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1354:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1380:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1367:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1367:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1358:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1424:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1399:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1399:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1399:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1439:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1449:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1439:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1463:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1490:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1501:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1486:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1473:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1241:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1252:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1264:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1272:6:9",
														"type": ""
													}
												],
												"src": "1196:315:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1617:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1627:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1639:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1650:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1635:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1627:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1669:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1680:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1662:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1662:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1586:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1597:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1608:4:9",
														"type": ""
													}
												],
												"src": "1516:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1802:352:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1850:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1850:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1823:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1832:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1819:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1819:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1844:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1815:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1815:32:9"
															},
															"nodeType": "YulIf",
															"src": "1812:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1873:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1899:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1886:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1886:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1877:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1943:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1918:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1918:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1958:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1968:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1982:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2025:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2010:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2010:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1997:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1986:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2063:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2038:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2038:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2038:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2080:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2090:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2080:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2106:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2144:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2129:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2116:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2106:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1752:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1763:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1775:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1783:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1791:6:9",
														"type": ""
													}
												],
												"src": "1698:456:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2191:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2215:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2220:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2211:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2211:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2201:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2201:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2248:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2251:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2241:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2241:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2272:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2275:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2265:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2265:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2265:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2159:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2336:230:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2346:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2362:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2356:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2374:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2396:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2412:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2418:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2408:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2408:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2427:2:9",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2423:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2423:7:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2404:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2392:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2378:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2507:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2509:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2509:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2509:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2450:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2462:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2447:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2447:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2486:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2498:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2483:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2483:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2444:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:62:9"
															},
															"nodeType": "YulIf",
															"src": "2441:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2545:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2549:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2538:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2538:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2538:22:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2316:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2325:6:9",
														"type": ""
													}
												],
												"src": "2291:275:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2624:478:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2673:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2682:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2685:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2675:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2675:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2675:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2652:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2660:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2648:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2648:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2667:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2637:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:35:9"
															},
															"nodeType": "YulIf",
															"src": "2634:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2698:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2721:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2708:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2708:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2702:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2767:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2769:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2769:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2769:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2743:2:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2740:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2740:26:9"
															},
															"nodeType": "YulIf",
															"src": "2737:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2798:70:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2841:2:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2845:4:9",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2837:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2837:13:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2856:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2852:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2852:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2833:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2833:27:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2862:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2829:38:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2813:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2813:55:9"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2802:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2884:7:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2893:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2877:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2877:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2877:19:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2944:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2953:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2956:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2946:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2946:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2946:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2919:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2927:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2915:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2915:15:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2932:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2911:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2911:26:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2939:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2908:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:35:9"
															},
															"nodeType": "YulIf",
															"src": "2905:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2986:7:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2995:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2982:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2982:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3006:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3014:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3002:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3002:17:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3021:2:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2969:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2969:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2969:55:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "3048:7:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3057:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3044:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3044:16:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3062:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3040:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3040:27:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3033:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3033:38:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3033:38:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3080:16:9",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "3089:7:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3080:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2598:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2606:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2614:5:9",
														"type": ""
													}
												],
												"src": "2571:531:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3154:109:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3164:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3186:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3173:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3164:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3241:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3250:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3253:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3243:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3243:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3243:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3215:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3226:5:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3233:4:9",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3222:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3222:16:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3212:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3205:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3205:35:9"
															},
															"nodeType": "YulIf",
															"src": "3202:55:9"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3133:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3144:5:9",
														"type": ""
													}
												],
												"src": "3107:156:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3441:647:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3488:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3497:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3500:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3490:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3490:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3490:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3462:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3471:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3458:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3458:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3483:3:9",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3454:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3454:33:9"
															},
															"nodeType": "YulIf",
															"src": "3451:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3513:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3540:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3527:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3527:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3517:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3559:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3569:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3563:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3614:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3623:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3626:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3616:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3616:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3616:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3610:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3599:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3599:14:9"
															},
															"nodeType": "YulIf",
															"src": "3596:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3639:60:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3682:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3667:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3691:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3649:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:50:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3639:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3708:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3741:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3752:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3737:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3737:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3724:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:32:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3712:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3785:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3797:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3787:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3787:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3787:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3771:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3781:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3768:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:16:9"
															},
															"nodeType": "YulIf",
															"src": "3765:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3810:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3842:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3853:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3838:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3838:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3864:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3820:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:52:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3810:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3881:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3912:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3923:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3908:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3908:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "3891:16:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3891:36:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3936:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3963:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3974:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3959:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3959:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3946:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3936:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3987:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4014:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4025:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4010:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4010:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3997:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:33:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3987:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4039:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4077:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4049:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4049:33:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4039:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3367:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3378:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3390:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3398:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3406:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3414:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3422:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3430:6:9",
														"type": ""
													}
												],
												"src": "3268:820:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4190:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4200:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4212:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4223:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4208:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4208:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4200:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4242:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4257:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4265:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4253:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4253:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4235:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4159:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4170:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4181:4:9",
														"type": ""
													}
												],
												"src": "4093:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4433:507:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4443:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4453:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4447:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4464:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4482:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4493:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4478:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4468:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4512:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4523:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4505:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4505:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4505:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4535:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "4546:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "4539:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4561:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4581:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4575:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4565:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4604:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4612:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4597:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4597:22:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4628:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4639:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4650:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4635:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4635:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4628:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4662:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4680:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4688:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4676:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4666:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4700:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4709:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4704:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4768:146:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4789:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4804:6:9"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4798:5:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4798:13:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4821:3:9",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4826:1:9",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4817:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4817:11:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4830:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4813:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4813:19:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4794:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4794:39:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4782:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4782:52:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4782:52:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4847:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4858:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4863:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4854:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4854:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4847:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4879:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4893:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4901:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4889:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4889:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4879:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4730:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4733:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4727:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4727:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4741:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4743:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4752:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4755:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4748:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4748:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4743:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4723:3:9",
																"statements": []
															},
															"src": "4719:195:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4923:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "4931:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4923:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4402:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4413:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4424:4:9",
														"type": ""
													}
												],
												"src": "4282:658:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5056:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5068:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5079:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5064:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5056:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5098:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5113:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5129:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5134:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5125:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5125:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5138:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5121:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5121:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5109:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5109:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5091:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5091:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5091:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5015:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5026:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5037:4:9",
														"type": ""
													}
												],
												"src": "4945:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5222:114:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5266:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5268:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5268:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5268:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5238:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5246:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5235:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:30:9"
															},
															"nodeType": "YulIf",
															"src": "5232:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5297:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5313:1:9",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "5316:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5309:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5309:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5325:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5305:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5305:25:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5297:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5202:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5213:4:9",
														"type": ""
													}
												],
												"src": "5153:183:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5436:871:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5446:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5456:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5450:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5503:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5512:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5515:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5505:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5505:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5505:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5478:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5487:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5474:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5474:23:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5499:2:9"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5470:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5470:32:9"
															},
															"nodeType": "YulIf",
															"src": "5467:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5528:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5555:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5542:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5542:23:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5532:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5608:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5617:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5620:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5610:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5610:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5610:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5580:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5588:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5577:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:30:9"
															},
															"nodeType": "YulIf",
															"src": "5574:50:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5633:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5647:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5658:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5643:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5643:22:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5637:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5713:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5722:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5725:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5715:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5715:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5715:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5692:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5696:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5688:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5688:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5703:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5684:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5684:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5677:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5677:35:9"
															},
															"nodeType": "YulIf",
															"src": "5674:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5738:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5761:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5748:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5748:16:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5742:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5773:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5840:2:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "5800:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5800:43:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5784:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5784:60:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5777:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5853:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "5866:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "5857:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5885:3:9"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5890:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5878:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5878:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5878:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5902:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5913:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5918:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5909:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5909:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5902:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5930:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5952:2:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5960:1:9",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5963:2:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5956:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5956:10:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5948:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5948:19:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5969:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5944:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5944:28:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5934:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6013:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6016:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6006:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5987:6:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5995:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5984:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5984:19:9"
															},
															"nodeType": "YulIf",
															"src": "5981:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6029:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6044:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6048:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6040:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6040:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6033:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6116:161:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6130:30:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6156:3:9"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "6143:12:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6143:17:9"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "6134:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "6198:5:9"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "6173:24:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6173:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6173:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6224:3:9"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "6229:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6217:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6217:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6217:18:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6248:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6259:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6264:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6255:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6255:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6248:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6071:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6068:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6068:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6084:23:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6086:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6097:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6102:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6093:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6093:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6086:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6064:3:9",
																"statements": []
															},
															"src": "6060:217:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6286:15:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "6296:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5402:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5413:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5425:6:9",
														"type": ""
													}
												],
												"src": "5341:966:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6382:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6428:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6437:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6440:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6430:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6430:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6430:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6403:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6412:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6399:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6399:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6424:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6395:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6395:32:9"
															},
															"nodeType": "YulIf",
															"src": "6392:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6453:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6476:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6463:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6463:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6453:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6348:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6359:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6371:6:9",
														"type": ""
													}
												],
												"src": "6312:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6584:301:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6630:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6639:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6642:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6632:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6632:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6632:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6605:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6614:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6601:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6601:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6626:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6597:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:32:9"
															},
															"nodeType": "YulIf",
															"src": "6594:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6655:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6668:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6659:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6725:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6700:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6700:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6700:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6740:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6750:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6740:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6764:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6796:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6807:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6792:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6792:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6779:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6779:32:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "6768:7:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "6845:7:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6820:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6820:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6862:17:9",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "6872:7:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6862:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6542:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6553:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6565:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6573:6:9",
														"type": ""
													}
												],
												"src": "6497:388:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6954:598:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7003:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7012:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7015:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7005:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7005:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7005:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6982:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6990:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6978:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6978:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6997:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6974:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6974:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6967:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6967:35:9"
															},
															"nodeType": "YulIf",
															"src": "6964:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7028:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7051:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7038:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7038:20:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7032:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7067:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7077:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "7071:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7090:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7157:2:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "7117:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7117:43:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7101:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7101:60:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7094:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7170:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "7183:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "7174:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7202:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7207:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7195:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7195:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7219:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7230:3:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7235:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7226:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7226:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "7219:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7247:46:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7269:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7281:1:9",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "7284:2:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7277:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7277:10:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7265:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7265:23:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7290:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7261:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7261:32:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "7251:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7321:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7330:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7333:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7323:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7323:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7323:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7308:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7316:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7305:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7305:15:9"
															},
															"nodeType": "YulIf",
															"src": "7302:35:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7346:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7361:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "7369:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7357:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7357:15:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "7350:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7437:86:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7458:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "7476:3:9"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "7463:12:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7463:17:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7451:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7451:30:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7451:30:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7494:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "7505:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "7510:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7501:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7501:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7494:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7392:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7397:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7389:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7405:23:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7407:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "7418:3:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "7423:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7414:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7414:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7407:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7385:3:9",
																"statements": []
															},
															"src": "7381:142:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7532:14:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "7541:5:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7532:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_bytes32_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6928:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6936:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6944:5:9",
														"type": ""
													}
												],
												"src": "6890:662:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7810:1464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7857:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7866:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7869:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7859:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7859:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7859:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7831:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7840:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7827:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7827:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7852:3:9",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7823:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7823:33:9"
															},
															"nodeType": "YulIf",
															"src": "7820:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7882:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7908:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7895:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "7886:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7952:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "7927:24:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7927:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7927:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7967:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7977:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7967:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7991:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8001:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7995:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8012:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8039:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8050:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8035:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8035:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8022:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8022:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8012:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8063:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8090:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8101:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8086:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8086:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8073:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8073:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8063:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8114:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8141:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8152:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8137:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8137:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8124:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8124:32:9"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8114:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8165:47:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8196:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8207:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8192:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8192:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8179:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8179:33:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8169:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8221:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8231:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "8225:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8276:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8285:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8288:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8278:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8278:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8278:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8264:6:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "8272:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8261:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:14:9"
															},
															"nodeType": "YulIf",
															"src": "8258:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8301:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8315:9:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8326:6:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:22:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "8305:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8381:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8390:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8393:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8383:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8383:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8383:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "8360:2:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8364:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8356:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8356:13:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8371:7:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8352:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8352:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:35:9"
															},
															"nodeType": "YulIf",
															"src": "8342:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8406:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "8429:2:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8416:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8416:16:9"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "8410:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8441:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "8508:2:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "8468:39:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8468:43:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8452:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8452:60:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8445:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8521:16:9",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "8534:3:9"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "8525:5:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8553:3:9"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "8558:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8546:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8546:15:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8570:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8581:3:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8586:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8577:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8577:12:9"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "8570:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8598:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "8620:2:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8628:1:9",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "8631:2:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "8624:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8624:10:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8616:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8616:19:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8637:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8612:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8612:28:9"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "8602:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8672:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8681:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8684:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8674:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8674:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8674:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8655:6:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8663:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8652:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8652:19:9"
															},
															"nodeType": "YulIf",
															"src": "8649:39:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8697:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "8712:2:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8716:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8708:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:11:9"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "8701:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8784:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8805:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "8827:3:9"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_uint8",
																						"nodeType": "YulIdentifier",
																						"src": "8810:16:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8810:21:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8798:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8798:34:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8798:34:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8845:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "8856:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8861:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8852:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8852:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8845:3:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8739:3:9"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8744:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8736:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8736:15:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8752:23:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8754:19:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "8765:3:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "8770:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8761:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8761:12:9"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8754:3:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8732:3:9",
																"statements": []
															},
															"src": "8728:146:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8883:15:9",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "8893:5:9"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8883:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8907:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8940:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8951:3:9",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8936:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8936:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8923:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8923:33:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "8911:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8985:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8994:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8997:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8987:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8987:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8987:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "8971:8:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "8981:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8968:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8968:16:9"
															},
															"nodeType": "YulIf",
															"src": "8965:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9010:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "9064:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9049:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9075:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9020:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:63:9"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "9010:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9092:49:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9125:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9136:3:9",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9121:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9121:19:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9108:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9108:33:9"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "9096:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9170:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9179:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9182:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9172:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9172:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9172:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "9156:8:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "9166:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9153:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:16:9"
															},
															"nodeType": "YulIf",
															"src": "9150:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9195:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9238:9:9"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "9249:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9234:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9234:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9260:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "9205:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9205:63:9"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "9195:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7728:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7739:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7751:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7759:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7767:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7775:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7783:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7791:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "7799:6:9",
														"type": ""
													}
												],
												"src": "7557:1717:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9334:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9344:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9358:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9361:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9354:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9344:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9375:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "9405:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9411:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9401:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9401:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "9379:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9452:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9454:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "9468:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9476:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "9464:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9464:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9454:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9432:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9425:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9425:26:9"
															},
															"nodeType": "YulIf",
															"src": "9422:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9542:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9563:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9570:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9575:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9566:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9566:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9556:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9556:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9556:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9607:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9610:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9600:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9600:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9600:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9635:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9638:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9628:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9628:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9628:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "9498:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9521:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9529:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9518:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9518:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9495:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9495:38:9"
															},
															"nodeType": "YulIf",
															"src": "9492:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "9314:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9323:6:9",
														"type": ""
													}
												],
												"src": "9279:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9838:236:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9855:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9866:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9848:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9848:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9848:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9889:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9900:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9885:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9885:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9905:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9878:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9878:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9928:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9939:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9924:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9924:18:9"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9944:34:9",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9917:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9917:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9917:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10010:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9995:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9995:18:9"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10015:16:9",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9988:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9988:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9988:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10041:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10053:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10064:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10049:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10041:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9815:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9829:4:9",
														"type": ""
													}
												],
												"src": "9664:410:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10111:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10128:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10135:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10140:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10131:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10131:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10121:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10121:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10121:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10168:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10171:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10161:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10161:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10161:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10192:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10195:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10185:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10185:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10185:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10079:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10275:358:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10285:16:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10300:1:9",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "10289:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10310:16:9",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "10319:7:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "10310:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10335:13:9",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "10343:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "10335:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10399:228:9",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10444:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "10446:16:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10446:18:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "10446:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10419:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "10433:1:9",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "10429:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10429:6:9"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "10437:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "10425:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10425:17:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "10416:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10416:27:9"
																		},
																		"nodeType": "YulIf",
																		"src": "10413:53:9"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "10505:29:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "10507:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "10520:5:9"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "10527:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "10516:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10516:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "10507:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "10486:8:9"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "10496:7:9"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10482:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10482:22:9"
																		},
																		"nodeType": "YulIf",
																		"src": "10479:55:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10547:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10559:4:9"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "10565:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "10555:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10555:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "10547:4:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10583:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "10599:7:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "10608:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "10595:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10595:22:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "10583:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10368:8:9"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "10378:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10365:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10365:21:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10387:3:9",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10361:3:9",
																"statements": []
															},
															"src": "10357:270:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "10239:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10246:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10259:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10266:4:9",
														"type": ""
													}
												],
												"src": "10211:422:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10697:747:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10735:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10749:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10758:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10749:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10772:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "10717:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10710:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10710:16:9"
															},
															"nodeType": "YulIf",
															"src": "10707:80:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10820:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10834:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10843:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "10834:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "10857:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "10806:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:12:9"
															},
															"nodeType": "YulIf",
															"src": "10796:76:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10908:52:9",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "10922:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10931:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "10922:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "10945:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10901:59:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10906:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10976:123:9",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "11011:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "11013:16:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "11013:18:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "11013:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "10996:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11006:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "10993:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10993:17:9"
																				},
																				"nodeType": "YulIf",
																				"src": "10990:43:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "11046:25:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "11059:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11069:1:9",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11055:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11055:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "11046:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "11084:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "10969:130:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10974:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "10888:4:9"
															},
															"nodeType": "YulSwitch",
															"src": "10881:218:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11197:70:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11211:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "11224:4:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "11230:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "11220:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11220:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "11211:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "11252:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "11121:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11127:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11118:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11118:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "11135:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11145:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11132:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11132:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11114:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11114:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "11158:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11164:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11155:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11155:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "11173:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11183:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "11170:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11170:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11151:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11151:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11111:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11111:77:9"
															},
															"nodeType": "YulIf",
															"src": "11108:159:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11276:57:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11318:4:9"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "11324:8:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "11299:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11299:34:9"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "11280:7:9",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "11289:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11378:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11380:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11380:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11380:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "11348:7:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11365:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "11361:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11361:6:9"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "11369:6:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "11357:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11357:19:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11345:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11345:32:9"
															},
															"nodeType": "YulIf",
															"src": "11342:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11409:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "11422:7:9"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "11431:6:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11418:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11418:20:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11409:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "10668:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "10674:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "10687:5:9",
														"type": ""
													}
												],
												"src": "10638:806:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11517:72:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11527:56:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "11557:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "11567:8:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11577:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11563:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11563:19:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "11536:20:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11536:47:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "11527:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "11488:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "11494:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "11507:5:9",
														"type": ""
													}
												],
												"src": "11449:140:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11646:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11705:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11707:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11707:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11707:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11677:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11670:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11670:9:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11663:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11663:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11685:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11696:1:9",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11692:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11692:6:9"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11700:1:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11688:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11688:14:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11682:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11682:21:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11659:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11659:45:9"
															},
															"nodeType": "YulIf",
															"src": "11656:71:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11736:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11751:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11754:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11747:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11747:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11736:7:9"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11625:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11628:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11634:7:9",
														"type": ""
													}
												],
												"src": "11594:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11874:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11884:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11896:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11907:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11892:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11892:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11884:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11926:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11941:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11949:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11937:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11937:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11919:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11919:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11919:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11843:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11854:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11865:4:9",
														"type": ""
													}
												],
												"src": "11767:194:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12014:80:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12041:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12043:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12043:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12043:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12030:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12037:1:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12033:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12033:6:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12027:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12027:13:9"
															},
															"nodeType": "YulIf",
															"src": "12024:39:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12072:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12083:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12086:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12079:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12079:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12072:3:9"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11997:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12000:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12006:3:9",
														"type": ""
													}
												],
												"src": "11966:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12273:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12290:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12301:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12283:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12283:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12283:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12324:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12335:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12320:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12320:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12340:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12313:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12313:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12313:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12363:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12374:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12359:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12359:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12379:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12352:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12352:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12352:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12434:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12445:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12430:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12430:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12450:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12423:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12423:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12467:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12479:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12490:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12475:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12475:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12467:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12250:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12264:4:9",
														"type": ""
													}
												],
												"src": "12099:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12554:76:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12576:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12578:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12578:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12578:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12570:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12573:1:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12567:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12567:8:9"
															},
															"nodeType": "YulIf",
															"src": "12564:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12607:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12619:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12622:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12615:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12615:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12607:4:9"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12536:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12539:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12545:4:9",
														"type": ""
													}
												],
												"src": "12505:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12809:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12826:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12837:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12819:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12819:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12819:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12871:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12856:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12876:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12849:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12849:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12899:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12910:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12895:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12895:18:9"
																	},
																	{
																		"hexValue": "4578706972656420646561646c696e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12915:18:9",
																		"type": "",
																		"value": "Expired deadline"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12888:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12888:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12888:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12943:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12955:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12966:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12951:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12951:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12943:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12786:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12800:4:9",
														"type": ""
													}
												],
												"src": "12635:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13154:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13171:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13182:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13164:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13164:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13164:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13205:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13216:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13201:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13201:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13221:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13194:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13194:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13194:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13244:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13255:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13240:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13240:18:9"
																	},
																	{
																		"hexValue": "556e6971756520696420657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13260:18:9",
																		"type": "",
																		"value": "Unique id exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13233:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13233:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13233:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13288:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13300:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13296:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13296:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13288:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13131:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13145:4:9",
														"type": ""
													}
												],
												"src": "12980:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13652:476:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13662:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13676:3:9",
																		"type": "",
																		"value": "248"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13681:3:9",
																		"type": "",
																		"value": "255"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "13672:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13672:13:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13666:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13701:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13710:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13718:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13706:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13706:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13694:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13694:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13694:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13742:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13747:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13738:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13738:11:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13755:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13763:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13751:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13751:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13731:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13731:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13731:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13776:41:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13790:26:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "13786:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13786:31:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "13780:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13837:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13842:1:9",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13833:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13833:11:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13854:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "13858:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "13850:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13850:15:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "13867:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13846:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13846:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13826:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13826:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13826:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13891:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13896:2:9",
																				"type": "",
																				"value": "22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13887:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13887:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13909:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "13913:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "13905:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13905:15:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "13922:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13901:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13901:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13880:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13880:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13880:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13946:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13951:2:9",
																				"type": "",
																				"value": "42"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13942:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13942:12:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13964:2:9",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "13968:6:9"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "13960:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13960:15:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "13977:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13956:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13956:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13935:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13935:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13935:46:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14001:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14006:2:9",
																				"type": "",
																				"value": "62"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13997:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13997:12:9"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "14011:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13990:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13990:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13990:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14038:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14043:2:9",
																				"type": "",
																				"value": "94"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14034:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14034:12:9"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "14048:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14027:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14027:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14027:28:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14075:3:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14080:3:9",
																				"type": "",
																				"value": "126"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14071:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14071:13:9"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "14086:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14064:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14064:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14064:29:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14102:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14113:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14118:3:9",
																		"type": "",
																		"value": "158"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14109:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14109:13:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14102:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13572:3:9",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "13577:6:9",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "13585:6:9",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "13593:6:9",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "13601:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13609:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13617:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13625:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13633:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13644:3:9",
														"type": ""
													}
												],
												"src": "13325:803:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14165:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14182:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14189:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14194:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14185:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14185:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14175:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14175:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14175:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14222:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14225:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14215:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14215:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14215:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14246:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14249:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14239:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14239:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14239:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "14133:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14446:217:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14456:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14468:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14479:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14464:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14464:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14456:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14499:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14510:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14492:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14492:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14492:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14537:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14548:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14533:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14533:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "14557:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14565:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14553:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14553:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14526:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14526:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14526:45:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14591:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14602:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14587:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14587:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14607:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14580:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14580:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14580:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14634:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14645:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14630:18:9"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14650:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14623:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14623:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14623:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14391:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14402:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14410:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14418:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14426:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14437:4:9",
														"type": ""
													}
												],
												"src": "14265:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14713:130:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14723:31:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14742:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14749:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14738:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14738:16:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "14727:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14784:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14786:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14786:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14786:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "14769:7:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14778:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14766:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14766:17:9"
															},
															"nodeType": "YulIf",
															"src": "14763:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14815:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "14826:7:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14835:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14822:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14822:15:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14815:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14695:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14705:3:9",
														"type": ""
													}
												],
												"src": "14668:175:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14894:163:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14904:28:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14914:18:9",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14908:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14941:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14960:5:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14967:2:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14956:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14956:14:9"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "14945:7:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14998:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15000:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15000:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15000:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "14985:7:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14994:2:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14982:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14982:15:9"
															},
															"nodeType": "YulIf",
															"src": "14979:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15029:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "15040:7:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15049:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15036:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15036:15:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15029:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint64",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14876:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14886:3:9",
														"type": ""
													}
												],
												"src": "14848:209:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15236:165:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15253:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15264:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15246:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15246:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15246:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15287:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15298:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15283:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15283:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15303:2:9",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15276:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15276:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15276:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15326:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15337:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15322:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15322:18:9"
																	},
																	{
																		"hexValue": "496e76616c6964207369676e657273",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15342:17:9",
																		"type": "",
																		"value": "Invalid signers"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15315:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15315:45:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15315:45:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15369:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15381:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15392:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15377:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15377:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15369:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15213:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15227:4:9",
														"type": ""
													}
												],
												"src": "15062:339:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15597:14:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15599:10:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "15606:3:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15599:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15581:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15589:3:9",
														"type": ""
													}
												],
												"src": "15406:205:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15790:169:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15807:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15818:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15800:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15800:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15800:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15841:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15852:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15837:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15837:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15857:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15830:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15830:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15830:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15880:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15891:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15876:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15876:18:9"
																	},
																	{
																		"hexValue": "4661696c656420746f2073656e64204d656368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15896:21:9",
																		"type": "",
																		"value": "Failed to send Mech"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15869:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15869:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15869:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15927:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15939:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15950:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15935:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15935:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15927:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15767:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15781:4:9",
														"type": ""
													}
												],
												"src": "15616:343:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16138:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16155:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16166:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16148:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16148:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16148:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16189:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16200:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16185:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16185:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16205:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16178:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16178:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16178:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16228:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16239:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16224:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16224:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16244:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16217:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16217:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16217:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16299:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16310:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16295:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16295:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16315:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16288:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16288:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16288:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16333:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16345:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16356:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16341:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16341:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16333:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16115:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16129:4:9",
														"type": ""
													}
												],
												"src": "15964:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16545:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16562:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16573:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16555:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16555:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16555:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16596:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16607:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16592:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16592:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16612:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16585:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16585:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16585:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16635:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16646:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16631:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16631:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16651:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16624:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16624:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16624:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16706:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16717:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16702:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16702:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16722:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16695:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16695:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16695:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16738:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16750:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16761:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16746:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16746:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16738:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16522:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16536:4:9",
														"type": ""
													}
												],
												"src": "16371:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16950:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16967:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16978:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16960:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16960:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16960:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17001:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17012:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16997:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16997:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17017:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16990:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16990:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16990:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17040:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17051:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17036:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17036:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17056:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17029:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17029:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17029:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17111:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17122:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17107:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17107:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17127:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17100:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17100:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17100:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17141:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17153:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17164:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17149:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17149:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17141:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16927:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16941:4:9",
														"type": ""
													}
												],
												"src": "16776:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17225:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17256:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17277:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17284:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "17289:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "17280:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17280:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17270:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17270:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17270:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17321:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17324:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17314:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17314:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17314:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17349:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17352:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17342:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17342:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17342:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17245:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17238:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17238:9:9"
															},
															"nodeType": "YulIf",
															"src": "17235:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17376:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "17385:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "17388:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "17381:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17381:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "17376:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "17210:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "17213:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "17219:1:9",
														"type": ""
													}
												],
												"src": "17179:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17575:233:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17592:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17603:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17585:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17585:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17585:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17626:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17637:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17622:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17622:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17642:2:9",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17615:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17615:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17615:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17665:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17676:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17661:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17661:18:9"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17681:34:9",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17654:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17654:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17654:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17736:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17747:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17732:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17732:18:9"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17752:13:9",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17725:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17725:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17725:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17775:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17787:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17798:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17783:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17783:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17775:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17552:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17566:4:9",
														"type": ""
													}
												],
												"src": "17401:407:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17987:175:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18004:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18015:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17997:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17997:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17997:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18038:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18049:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18034:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18034:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18054:2:9",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18027:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18027:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18027:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18077:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18088:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18073:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18073:18:9"
																	},
																	{
																		"hexValue": "45524332304361707065643a20636170206578636565646564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18093:27:9",
																		"type": "",
																		"value": "ERC20Capped: cap exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18066:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18066:55:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18066:55:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18130:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18142:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18153:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18138:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18138:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18130:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17964:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17978:4:9",
														"type": ""
													}
												],
												"src": "17813:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18341:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18358:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18369:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18351:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18351:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18351:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18392:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18403:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18388:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18388:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18408:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18381:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18381:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18381:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18431:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18442:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18427:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18427:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18447:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18420:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18420:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18420:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18491:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18503:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18514:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18499:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18499:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18491:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18318:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18332:4:9",
														"type": ""
													}
												],
												"src": "18167:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18702:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18719:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18730:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18712:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18712:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18712:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18753:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18764:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18749:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18749:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18769:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18742:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18742:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18742:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18792:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18803:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18788:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18788:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18808:34:9",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18781:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18781:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18781:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18863:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18874:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18859:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18859:18:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18879:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18852:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18852:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18852:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18892:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18904:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18915:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18900:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18900:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18892:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18679:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18693:4:9",
														"type": ""
													}
												],
												"src": "18528:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19104:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19114:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19114:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19114:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19155:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19166:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19151:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19151:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19171:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19144:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19144:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19144:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19194:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19205:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19190:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19190:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19210:34:9",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19183:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19183:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19183:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19265:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19276:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19261:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19261:18:9"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19281:4:9",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19254:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19254:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19254:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19295:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19307:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19318:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19303:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19303:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19295:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19081:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19095:4:9",
														"type": ""
													}
												],
												"src": "18930:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19507:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19524:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19535:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19517:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19517:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19517:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19558:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19569:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19554:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19554:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19574:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19547:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19547:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19547:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19597:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19608:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19593:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19593:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19613:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19586:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19586:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19586:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19654:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19666:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19677:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19662:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19662:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19654:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19484:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19498:4:9",
														"type": ""
													}
												],
												"src": "19333:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19865:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19882:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19893:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19875:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19875:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19875:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19916:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19927:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19912:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19912:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19932:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19905:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19905:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19905:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19955:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19966:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19951:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19951:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19971:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19944:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19944:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19944:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20026:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20037:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20022:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20022:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20042:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20015:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20015:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20015:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20059:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20071:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20082:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20067:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20067:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20059:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19842:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19856:4:9",
														"type": ""
													}
												],
												"src": "19691:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20271:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20288:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20299:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20281:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20281:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20281:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20322:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20333:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20318:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20318:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20338:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20311:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20311:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20311:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20361:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20372:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20357:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20357:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20377:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20350:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20350:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20350:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20432:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20443:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20428:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20428:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20448:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20421:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20421:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20421:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20463:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20475:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20486:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20471:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20471:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20463:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20248:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20262:4:9",
														"type": ""
													}
												],
												"src": "20097:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20675:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20692:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20703:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20685:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20685:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20685:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20726:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20737:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20722:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20722:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20742:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20715:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20715:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20715:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20765:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20776:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20761:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20761:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20781:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20754:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20754:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20836:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20847:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20832:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20832:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20852:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20825:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20825:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20825:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20870:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20882:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20893:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20878:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20878:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20870:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20652:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20666:4:9",
														"type": ""
													}
												],
												"src": "20501:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21082:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21099:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21110:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21092:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21092:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21092:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21133:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21144:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21129:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21129:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21149:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21122:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21122:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21122:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21172:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21183:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21168:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21168:18:9"
																	},
																	{
																		"hexValue": "45524332304361707065643a206361702069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21188:23:9",
																		"type": "",
																		"value": "ERC20Capped: cap is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21161:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21161:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21161:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21221:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21233:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21244:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21229:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21229:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21221:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21059:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21073:4:9",
														"type": ""
													}
												],
												"src": "20908:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21432:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21449:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21460:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21442:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21442:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21442:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21483:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21494:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21479:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21479:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21499:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21472:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21472:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21472:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21522:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21533:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21518:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21518:18:9"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21538:33:9",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21511:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21511:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21511:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21581:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21593:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21604:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21589:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21589:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21581:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21409:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21423:4:9",
														"type": ""
													}
												],
												"src": "21258:355:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint8t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_uint8(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_array_bytes32_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_address_payablet_uint256t_uint256t_uint256t_array$_t_uint8_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptrt_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let _1 := 32\n        value1 := calldataload(add(headStart, _1))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, abi_decode_uint8(src))\n            dst := add(dst, _1)\n        }\n        value4 := dst_1\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value5 := abi_decode_array_bytes32_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 192))\n        if gt(offset_2, _2) { revert(0, 0) }\n        value6 := abi_decode_array_bytes32_dyn(add(headStart, offset_2), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Unique id exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_bytes1_t_bytes1_t_address_t_address_t_address_payable_t_uint256_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value7, value6, value5, value4, value3, value2, value1, value0) -> end\n    {\n        let _1 := shl(248, 255)\n        mstore(pos, and(value0, _1))\n        mstore(add(pos, 1), and(value1, _1))\n        let _2 := not(0xffffffffffffffffffffffff)\n        mstore(add(pos, 2), and(shl(96, value2), _2))\n        mstore(add(pos, 22), and(shl(96, value3), _2))\n        mstore(add(pos, 42), and(shl(96, value4), _2))\n        mstore(add(pos, 62), value5)\n        mstore(add(pos, 94), value6)\n        mstore(add(pos, 126), value7)\n        end := add(pos, 158)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function increment_t_uint64(value) -> ret\n    {\n        let _1 := 0xffffffffffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid signers\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Failed to send Mech\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20Capped: cap is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xC4081A4C GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE4C97E6A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE4C97E6A EQ PUSH2 0x505 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xF66608FE EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xF9342285 EQ PUSH2 0x55A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC4081A4C EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xD89135CD EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA457C2D7 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0xAC7FA3C6 EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xB24A0893 EQ PUSH2 0x48F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xA3772662 EQ PUSH2 0x41A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x3DE47E32 GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x3DE47E32 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x46F0975A EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x1E0D4CE9 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x2B9A1D3C EQ PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x7C351DD EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1C2 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x58A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x18E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x20D CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x199B JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AA7 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCC SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x385 PUSH2 0x821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x1B36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x882 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x98 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x896 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x435 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA6 JUMP JUMPDEST PUSH2 0x8A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x446 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x455 CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x466 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x196F JUMP JUMPDEST PUSH2 0x9CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCD SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x4AA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C44 JUMP JUMPDEST PUSH2 0xA43 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1C44 JUMP JUMPDEST PUSH2 0xA50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0xD0 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH2 0x500 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C5D JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x520 CALLDATASIZE PUSH1 0x4 PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0xA88 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH2 0x540 CALLDATASIZE PUSH1 0x4 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0xE0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xCF SLOAD PUSH2 0x26C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22B PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C44 JUMP JUMPDEST PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5C5 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x612 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5E7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x612 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5F5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x642 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH2 0x64E DUP6 DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x659 DUP6 DUP6 DUP6 PUSH2 0x102A JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x685 JUMPI POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x69F JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x69F JUMPI POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x707 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x72A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x732 PUSH2 0x1043 JUMP JUMPDEST PUSH2 0x73C DUP8 DUP8 PUSH2 0x1072 JUMP JUMPDEST PUSH2 0x759 PUSH2 0x74A DUP7 PUSH1 0xA PUSH2 0x1F46 JUMP JUMPDEST PUSH2 0x754 SWAP1 DUP7 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0x10A7 JUMP JUMPDEST DUP7 MLOAD PUSH2 0x76C SWAP1 PUSH1 0xCA SWAP1 PUSH1 0x20 DUP11 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP DUP6 MLOAD PUSH2 0x780 SWAP1 PUSH1 0xCB SWAP1 PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP PUSH1 0xCC DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF DUP8 AND OR SWAP1 SSTORE PUSH8 0x16345785D8A0000 PUSH1 0xCD SSTORE PUSH1 0xCE DUP5 SWAP1 SSTORE PUSH1 0xCF DUP3 SWAP1 SSTORE PUSH2 0x7B0 ADDRESS DUP5 PUSH2 0x10D7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F6 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0x812 DUP4 DUP4 PUSH2 0xA5D JUMP JUMPDEST PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x612 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x85B JUMPI POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x88A PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x894 PUSH1 0x0 PUSH2 0x11A0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST PUSH2 0x8AD PUSH2 0x1146 JUMP JUMPDEST PUSH2 0x914 PUSH1 0xD1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x906 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8E8 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x0 PUSH1 0xD2 PUSH2 0x11F2 JUMP JUMPDEST PUSH2 0x920 PUSH1 0xD1 PUSH1 0x0 PUSH2 0x1860 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x933 SWAP1 PUSH1 0xD1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x187E JUMP JUMPDEST POP PUSH2 0x941 DUP2 PUSH1 0x1 PUSH1 0xD2 PUSH2 0x11F2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x952 DUP3 DUP7 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x9BF DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0xE82 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9DE PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xA07 JUMPI PUSH2 0xA01 DUP4 DUP4 PUSH2 0x1270 JUMP JUMPDEST POP PUSH2 0xA3A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA12 DUP4 PUSH2 0xFA7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA1E CALLER DUP3 PUSH2 0xFCB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA2A DUP3 DUP6 PUSH2 0x1F8C JUMP JUMPDEST SWAP1 POP PUSH2 0xA36 DUP6 DUP3 PUSH2 0x1270 JUMP JUMPDEST POP POP POP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA4B PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCD SSTORE JUMP JUMPDEST PUSH2 0xA58 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0xCF SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST TIMESTAMP DUP5 LT ISZERO PUSH2 0xACB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x4578706972656420646561646C696E65 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x556E6971756520696420657869737473 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xB32 PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x19 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x21 DUP3 ADD DUP2 SWAP1 MSTORE PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP5 DUP2 SHL DUP3 AND PUSH1 0x22 DUP6 ADD MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0x36 DUP6 ADD MSTORE DUP14 SWAP1 SHL AND PUSH1 0x4A DUP4 ADD MSTORE PUSH1 0x5E DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x7E DUP3 ADD DUP12 SWAP1 MSTORE PUSH1 0x9E DUP3 ADD DUP10 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0xBE ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x0 PUSH1 0x1 DUP6 DUP12 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xBE0 JUMPI PUSH2 0xBE0 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xC03 JUMPI PUSH2 0xC03 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP12 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0xC26 JUMPI PUSH2 0xC26 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xC64 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 DUP5 MSTORE PUSH1 0xFF SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT DUP1 ISZERO PUSH2 0xCCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xCDE JUMPI DUP3 PUSH2 0xCDA DUP2 PUSH2 0x1FB9 JUMP JUMPDEST SWAP4 POP POP JUMPDEST SWAP3 POP DUP1 PUSH2 0xCEA DUP2 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBAE JUMP JUMPDEST POP PUSH1 0x2 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xD39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C6964207369676E657273 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xD3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xCD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND SWAP1 PUSH2 0xD6B SWAP1 DUP14 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xDAC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D PUSH1 0x6B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0xDFD DUP14 DUP13 PUSH2 0x10D7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE14 PUSH2 0x1146 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x64 PUSH1 0xCF SLOAD DUP5 PUSH2 0xFBA SWAP2 SWAP1 PUSH2 0x1F55 JUMP JUMPDEST PUSH2 0xFC4 SWAP2 SWAP1 PUSH2 0x2000 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFD5 DUP3 DUP3 PUSH2 0x127E JUMP JUMPDEST DUP1 PUSH1 0xD0 SLOAD PUSH2 0xFE3 SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0xD0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x100A SWAP1 DUP3 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1038 DUP6 DUP3 DUP6 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0x9BF DUP6 DUP6 DUP6 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x106A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x894 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1099 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x163B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x1689 JUMP JUMPDEST PUSH1 0x65 SLOAD DUP2 PUSH2 0x10E4 PUSH1 0x35 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x10EE SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST GT ISZERO PUSH2 0x113C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x10A3 DUP3 DUP3 PUSH2 0x16FD JUMP JUMPDEST PUSH1 0x98 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x98 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT ISZERO PUSH2 0x126A JUMPI DUP3 DUP3 PUSH1 0x0 DUP7 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND DUP2 MLOAD DUP2 LT PUSH2 0x1226 JUMPI PUSH2 0x1226 PUSH2 0x1FA3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH2 0x1262 DUP2 PUSH2 0x1FD9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11F5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x62A DUP2 DUP6 DUP6 PUSH2 0x143D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1381 SWAP1 DUP5 SWAP1 PUSH2 0x1F8C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0xF9A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D5 DUP5 DUP5 PUSH2 0xA5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x126A JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1430 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH2 0x126A DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x14A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x15B2 SWAP1 DUP5 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x15FE SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x126A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1632 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH2 0x894 CALLER PUSH2 0x11A0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x1675 SWAP1 PUSH1 0x36 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST POP DUP1 MLOAD PUSH2 0x13C4 SWAP1 PUSH1 0x37 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FE SWAP1 PUSH2 0x2022 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x16F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x45524332304361707065643A20636170206973203 PUSH1 0x5C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x65 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1753 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6FE JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1765 SWAP2 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1792 SWAP1 DUP5 SWAP1 PUSH2 0x1F74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x17E8 SWAP1 PUSH2 0x1E11 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x180A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1850 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1823 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1850 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1850 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1850 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1835 JUMP JUMPDEST POP PUSH2 0x185C SWAP3 SWAP2 POP PUSH2 0x18D3 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x941 SWAP2 SWAP1 PUSH2 0x18D3 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1850 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1850 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x189E JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1915 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x18F9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1927 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x941 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xFC4 DUP2 PUSH2 0x193D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x198D DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x19B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x19BB DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x19CB DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A1A JUMPI PUSH2 0x1A1A PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A4C JUMPI PUSH2 0x1A4C PUSH2 0x19DC JUMP JUMPDEST PUSH2 0x1A5F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x19F2 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1A74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1AA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1AC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1AD7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AE3 DUP11 DUP4 DUP12 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1AF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B06 DUP10 DUP3 DUP11 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP6 POP POP PUSH2 0x1B15 PUSH1 0x40 DUP9 ADD PUSH2 0x1A91 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B77 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1B52 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1B9C JUMPI PUSH2 0x1B9C PUSH2 0x19DC JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1BCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1BE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1BF3 PUSH2 0x1BEE DUP3 PUSH2 0x1B83 JUMP JUMPDEST PUSH2 0x19F2 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x1C12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1C39 JUMPI DUP4 CALLDATALOAD PUSH2 0x1C2A DUP2 PUSH2 0x193D JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x1C17 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1C7B DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1C8B DUP2 PUSH2 0x193D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1CA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1CB7 PUSH2 0x1BEE DUP4 PUSH2 0x1B83 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x1CD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x1CF1 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1CDA JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x1D17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x1D22 DUP2 PUSH2 0x193D JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 DUP2 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x1D54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP12 ADD SWAP2 POP DUP12 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1D76 PUSH2 0x1BEE DUP3 PUSH2 0x1B83 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP4 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP15 DUP4 GT ISZERO PUSH2 0x1D95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x1DBA JUMPI PUSH2 0x1DAB DUP6 PUSH2 0x1A91 JUMP JUMPDEST DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x1D9A JUMP JUMPDEST SWAP8 POP POP POP PUSH1 0xA0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1DD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DDE DUP13 DUP5 DUP14 ADD PUSH2 0x1C96 JUMP JUMPDEST SWAP5 POP PUSH1 0xC0 DUP12 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0x1DF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH2 0x1E02 DUP11 DUP3 DUP12 ADD PUSH2 0x1C96 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1E25 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1E46 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1E9D JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1E83 JUMPI PUSH2 0x1E83 PUSH2 0x1E4C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1E90 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x1E67 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1EB4 JUMPI POP PUSH1 0x1 PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH2 0x1EC1 JUMPI POP PUSH1 0x0 PUSH2 0x630 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1ED7 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1EE1 JUMPI PUSH2 0x1EFD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x630 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH2 0x1EF2 PUSH2 0x1E4C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x630 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1F20 JUMPI POP DUP2 DUP2 EXP PUSH2 0x630 JUMP JUMPDEST PUSH2 0x1F2A DUP4 DUP4 PUSH2 0x1E62 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x1F3E JUMPI PUSH2 0x1F3E PUSH2 0x1E4C JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFC4 PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1EA5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1F6F JUMPI PUSH2 0x1F6F PUSH2 0x1E4C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1F87 JUMPI PUSH2 0x1F87 PUSH2 0x1E4C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F9E JUMPI PUSH2 0x1F9E PUSH2 0x1E4C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 EQ ISZERO PUSH2 0x1FD0 JUMPI PUSH2 0x1FD0 PUSH2 0x1E4C JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0x1FF6 JUMPI PUSH2 0x1FF6 PUSH2 0x1E4C JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x201D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xAD 0xE7 0xC0 0xC0 CALLDATALOAD 0xCF 0xD 0x26 0xC0 PUSH10 0xAEC2F44EE14FC90059A8 0xD4 PUSH28 0xCCA0569FF0B5F9944F64736F6C634300080B00330000000000000000 ",
							"sourceMap": "243:5370:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2178:109:8;;;;;;;;;;-1:-1:-1;2178:109:8;;;;;:::i;:::-;-1:-1:-1;;;;;2260:19:8;2236:4;2260:19;;;:11;:19;;;;;;;;;2178:109;;;;1169:14:9;;1162:22;1144:41;;1132:2;1117:18;2178:109:8;1004:187:9;4770:197:2;;;;;;;;;;-1:-1:-1;4770:197:2;;;;;:::i;:::-;;:::i;3581:106::-;;;;;;;;;;-1:-1:-1;3668:12:2;;3581:106;;;1662:25:9;;;1650:2;1635:18;3581:106:2;1516:177:9;662:50:8;;;;;;;;;;-1:-1:-1;662:50:8;;;;;:::i;:::-;;;;;;;;;;;;;;3017:306;;;;;;;;;;-1:-1:-1;3017:306:8;;;;;:::i;:::-;;:::i;721:550::-;;;;;;;;;;-1:-1:-1;721:550:8;;;;;:::i;:::-;;:::i;:::-;;1316:100;;;;;;;;;;-1:-1:-1;1399:9:8;;1316:100;;1399:9;;;;4235:36:9;;4223:2;4208:18;1316:100:8;4093:184:9;929:81:4;;;;;;;;;;-1:-1:-1;999:4:4;;929:81;;6210:234:2;;;;;;;;;;-1:-1:-1;6210:234:2;;;;;:::i;:::-;;:::i;559:43:8:-;;;;;;;;;;-1:-1:-1;559:43:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;1829:94;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3745:125:2:-;;;;;;;;;;-1:-1:-1;3745:125:2;;;;;:::i;:::-;-1:-1:-1;;;;;3845:18:2;3819:7;3845:18;;;:9;:18;;;;;;;3745:125;2071:101:0;;;;;;;;;;;;;:::i;1441:85::-;;;;;;;;;;-1:-1:-1;1513:6:0;;1441:85;;-1:-1:-1;;;;;1513:6:0;;;5091:51:9;;5079:2;5064:18;1441:85:0;4945:203:9;2704:102:2;;;;;;;;;;;;;:::i;1931:239:8:-;;;;;;;;;;-1:-1:-1;1931:239:8;;;;;:::i;:::-;;:::i;6931:427:2:-;;;;;;;;;;-1:-1:-1;6931:427:2;;;;;:::i;:::-;;:::i;2544:465:8:-;;;;;;;;;;-1:-1:-1;2544:465:8;;;;;:::i;:::-;;:::i;1424:90::-;;;;;;;;;;-1:-1:-1;1496:10:8;;1424:90;;1522:102;;;;;;;;;;-1:-1:-1;1522:102:8;;;;;:::i;:::-;;:::i;1724:97::-;;;;;;;;;;-1:-1:-1;1724:97:8;;;;;:::i;:::-;;:::i;493:26::-;;;;;;;;;;;;;;;;4313:149:2;;;;;;;;;;-1:-1:-1;4313:149:2;;;;;:::i;:::-;;:::i;3729:1403:8:-;;;;;;;;;;-1:-1:-1;3729:1403:8;;;;;:::i;:::-;;:::i;2321:198:0:-;;;;;;;;;;-1:-1:-1;2321:198:0;;;;;:::i;:::-;;:::i;1632:84:8:-;;;;;;;;;;-1:-1:-1;1701:7:8;;1632:84;;609:46;;;;;;;;;;-1:-1:-1;609:46:8;;;;;:::i;:::-;;;;;;;;;;;;;;;;2493:98:2;2547:13;2579:5;2572:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2493:98;:::o;4770:197::-;4853:4;929:10:7;4907:32:2;929:10:7;4923:7:2;4932:6;4907:8;:32::i;:::-;4956:4;4949:11;;;4770:197;;;;;:::o;3017:306:8:-;3148:4;3165:14;3182:25;3200:6;3182:17;:25::i;:::-;3165:42;;3218:28;3233:4;3239:6;3218:14;:28::i;:::-;3257:36;3276:4;3282:2;3286:6;3257:18;:36::i;:::-;-1:-1:-1;3311:4:8;;3017:306;-1:-1:-1;;;;;3017:306:8:o;721:550::-;3111:19:1;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:1;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:1;1476:19:6;:23;;;3219:66:1;;-1:-1:-1;3268:12:1;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:1;;9866:2:9;3157:201:1;;;9848:21:9;9905:2;9885:18;;;9878:30;9944:34;9924:18;;;9917:62;-1:-1:-1;;;9995:18:9;;;9988:44;10049:19;;3157:201:1;;;;;;;;;3368:12;:16;;-1:-1:-1;;3368:16:1;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:1;;;;;3394:65;946:16:8::1;:14;:16::i;:::-;973:28;986:5;993:7;973:12;:28::i;:::-;1012:39;1037:13;1041:9:::0;1037:2:::1;:13;:::i;:::-;1031:19;::::0;:3;:19:::1;:::i;:::-;1012:18;:39::i;:::-;1062:13:::0;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1086:17:8;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;1114:9:8::1;:21:::0;;-1:-1:-1;;1114:21:8::1;;::::0;::::1;;::::0;;1159:9:::1;1146:10;:22:::0;1179:4:::1;:10:::0;;;1200:7:::1;:16:::0;;;1227:36:::1;1241:4;1248:14:::0;1227:5:::1;:36::i;:::-;3483:14:1::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:1;;;3553:14;;-1:-1:-1;4235:36:9;;3553:14:1;;4223:2:9;4208:18;3553:14:1;;;;;;;3479:99;3101:483;721:550:8;;;;;;:::o;6210:234:2:-;6298:4;929:10:7;6352:64:2;929:10:7;6368:7:2;6405:10;6377:25;929:10:7;6368:7:2;6377:9;:25::i;:::-;:38;;;;:::i;:::-;6352:8;:64::i;1829:94:8:-;1871:16;1907:8;1900:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1900:15:8;;;;;;;;;;;;;;;;;;;;;;1829:94;:::o;2071:101:0:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;2704:102:2:-;2760:13;2792:7;2785:14;;;;;:::i;1931:239:8:-;1334:13:0;:11;:13::i;:::-;2016:40:8::1;2027:8;2016:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;-1:-1:-1;;;;;2016:40:8::1;::::0;;;;;::::1;::::0;::::1;;::::0;;::::1;;;;;;;;;2037:5;2044:11;2016:10;:40::i;:::-;2067:15;2074:8;;2067:15;:::i;:::-;2093:19:::0;;::::1;::::0;:8:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;;2123:39;2134:8;2144:4;2150:11;2123:10;:39::i;:::-;1931:239:::0;:::o;6931:427:2:-;7024:4;929:10:7;7024:4:2;7105:25;929:10:7;7122:7:2;7105:9;:25::i;:::-;7078:52;;7168:15;7148:16;:35;;7140:85;;;;-1:-1:-1;;;7140:85:2;;12301:2:9;7140:85:2;;;12283:21:9;12340:2;12320:18;;;12313:30;12379:34;12359:18;;;12352:62;-1:-1:-1;;;12430:18:9;;;12423:35;12475:19;;7140:85:2;12099:401:9;7140:85:2;7259:60;7268:5;7275:7;7303:15;7284:16;:34;7259:8;:60::i;:::-;-1:-1:-1;7347:4:2;;6931:427;-1:-1:-1;;;;6931:427:2:o;2544:465:8:-;2649:4;2689:7;1513:6:0;;-1:-1:-1;;;;;1513:6:0;;1441:85;2689:7:8;-1:-1:-1;;;;;2675:21:8;:10;-1:-1:-1;;;;;2675:21:8;;2671:309;;;2713:33;2728:9;2739:6;2713:14;:33::i;:::-;;2671:309;;;2779:15;2797:25;2815:6;2797:17;:25::i;:::-;2779:43;;2837:35;2852:10;2864:7;2837:14;:35::i;:::-;2887:14;2904:16;2913:7;2904:6;:16;:::i;:::-;2887:33;;2935;2950:9;2961:6;2935:14;:33::i;:::-;;2764:216;;2671:309;-1:-1:-1;2997:4:8;2544:465;;;;:::o;1522:102::-;1334:13:0;:11;:13::i;:::-;1596:10:8::1;:20:::0;1522:102::o;1724:97::-;1334:13:0;:11;:13::i;:::-;1793:7:8::1;:20:::0;1724:97::o;4313:149:2:-;-1:-1:-1;;;;;4428:18:2;;;4402:7;4428:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4313:149::o;3729:1403:8:-;4002:15;3990:8;:27;;3982:56;;;;-1:-1:-1;;;3982:56:8;;12837:2:9;3982:56:8;;;12819:21:9;12876:2;12856:18;;;12849:30;-1:-1:-1;;;12895:18:9;;;12888:46;12951:18;;3982:56:8;12635:340:9;3982:56:8;4058:24;;;;:14;:24;;;;;;;;4057:25;4049:54;;;;-1:-1:-1;;;4049:54:8;;13182:2:9;4049:54:8;;;13164:21:9;13221:2;13201:18;;;13194:30;-1:-1:-1;;;13240:18:9;;;13233:46;13296:18;;4049:54:8;12980:340:9;4049:54:8;4134:10;4116:15;4171:13;1513:6:0;;-1:-1:-1;;;;;1513:6:0;;1441:85;4171:13:8;4244:247;;-1:-1:-1;;;4244:247:8;;;13694:28:9;4197:20:8;13738:11:9;;;13731:36;;;-1:-1:-1;;13854:2:9;13850:15;;;13846:24;;13833:11;;;13826:45;13905:15;;;13901:24;;13887:12;;;13880:46;13960:15;;;13956:24;13942:12;;;13935:46;13997:12;;;13990:28;;;14034:12;;;14027:28;;;14071:13;;;14064:29;;;4155::8;;-1:-1:-1;14109:13:9;;4244:247:8;;;;;;;;;;;;4220:282;;;;;;4197:305;;4515:16;4555:21;4596:8;4591:262;4614:1;:8;4610:1;-1:-1:-1;;;;;4610:12:8;;4591:262;;;4644:17;4664:41;4674:12;4688:1;4690;-1:-1:-1;;;;;4688:4:8;;;;;;;;;:::i;:::-;;;;;;;4694:1;4696;-1:-1:-1;;;;;4694:4:8;;;;;;;;;:::i;:::-;;;;;;;4700:1;4702;-1:-1:-1;;;;;4700:4:8;;;;;;;;;:::i;:::-;;;;;;;4664:41;;;;;;;;;;;;;;;;;14492:25:9;;;14565:4;14553:17;;;;14548:2;14533:18;;14526:45;14602:2;14587:18;;14580:34;14645:2;14630:18;;14623:34;14479:3;14464:19;;14265:398;4664:41:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4644:61;;4736:8;-1:-1:-1;;;;;4724:20:8;:9;-1:-1:-1;;;;;4724:20:8;;:46;;;;-1:-1:-1;;;;;;4748:22:8;;;;;;:11;:22;;;;;;;;4724:46;4720:86;;;4789:17;;;;:::i;:::-;;;;4720:86;4832:9;-1:-1:-1;4624:3:8;;;;:::i;:::-;;;;4591:262;;;;4892:1;4873:15;:20;;;;4865:48;;;;-1:-1:-1;;;4865:48:8;;15264:2:9;4865:48:8;;;15246:21:9;15303:2;15283:18;;;15276:30;-1:-1:-1;;;15322:18:9;;;15315:45;15377:18;;4865:48:8;15062:339:9;4865:48:8;4924:24;;;;:14;:24;;;;;:31;;-1:-1:-1;;4924:31:8;4951:4;4924:31;;;5009:10;;-1:-1:-1;;;;;4987:14:8;;;5009:19;;5022:6;;5009:19;:::i;:::-;4987:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4968:65;;;5052:7;5044:39;;;;-1:-1:-1;;;5044:39:8;;15818:2:9;5044:39:8;;;15800:21:9;15857:2;15837:18;;;15830:30;-1:-1:-1;;;15876:18:9;;;15869:49;15935:18;;5044:39:8;15616:343:9;5044:39:8;5094:30;5106:9;5117:6;5094:11;:30::i;:::-;3971:1161;;;;;;3729:1403;;;;;;;:::o;2321:198:0:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:0;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:0;;16166:2:9;2401:73:0::1;::::0;::::1;16148:21:9::0;16205:2;16185:18;;;16178:30;16244:34;16224:18;;;16217:62;-1:-1:-1;;;16295:18:9;;;16288:36;16341:19;;2401:73:0::1;15964:402:9::0;2401:73:0::1;2484:28;2503:8;2484:18;:28::i;10447:370:2:-:0;-1:-1:-1;;;;;10578:19:2;;10570:68;;;;-1:-1:-1;;;10570:68:2;;16573:2:9;10570:68:2;;;16555:21:9;16612:2;16592:18;;;16585:30;16651:34;16631:18;;;16624:62;-1:-1:-1;;;16702:18:9;;;16695:34;16746:19;;10570:68:2;16371:400:9;10570:68:2;-1:-1:-1;;;;;10656:21:2;;10648:68;;;;-1:-1:-1;;;10648:68:2;;16978:2:9;10648:68:2;;;16960:21:9;17017:2;16997:18;;;16990:30;17056:34;17036:18;;;17029:62;-1:-1:-1;;;17107:18:9;;;17100:32;17149:19;;10648:68:2;16776:398:9;10648:68:2;-1:-1:-1;;;;;10727:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10778:32;;1662:25:9;;;10778:32:2;;1635:18:9;10778:32:2;;;;;;;;10447:370;;;:::o;3331:160:8:-;3396:7;3416:15;3455:3;3444:7;;3435:6;:16;;;;:::i;:::-;3434:24;;;;:::i;:::-;3416:42;3331:160;-1:-1:-1;;;3331:160:8:o;3499:222::-;3575:22;3581:7;3590:6;3575:5;:22::i;:::-;3636:6;3622:11;;:20;;;;:::i;:::-;3608:11;:34;-1:-1:-1;;;;;3680:24:8;;;;;;:15;:24;;;;;;:33;;3707:6;;3680:33;:::i;:::-;-1:-1:-1;;;;;3653:24:8;;;;;;;:15;:24;;;;;:60;;;;-1:-1:-1;3499:222:8:o;5529:286:2:-;5656:4;929:10:7;5712:38:2;5728:4;929:10:7;5743:6:2;5712:15;:38::i;:::-;5760:27;5770:4;5776:2;5780:6;5760:9;:27::i;1003:95:0:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1065:26:0::1;:24;:26::i;2116:147:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;2218:38:2::1;2241:5;2248:7;2218:22;:38::i;:::-;2116:147:::0;;:::o;567:119:4:-;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;645:34:4::1;674:4;645:28;:34::i;1063:215::-:0;999:4;;1188:6;1155:30;3668:12:2;;;3581:106;1155:30:4;:39;;;;:::i;:::-;:48;;1147:86;;;;-1:-1:-1;;;1147:86:4;;18015:2:9;1147:86:4;;;17997:21:9;18054:2;18034:18;;;18027:30;18093:27;18073:18;;;18066:55;18138:18;;1147:86:4;17813:349:9;1147:86:4;1243:28;1255:7;1264:6;1243:11;:28::i;1599:130:0:-;1513:6;;-1:-1:-1;;;;;1513:6:0;929:10:7;1662:23:0;1654:68;;;;-1:-1:-1;;;1654:68:0;;18369:2:9;1654:68:0;;;18351:21:9;;;18388:18;;;18381:30;18447:34;18427:18;;;18420:62;18499:18;;1654:68:0;18167:356:9;2673:187:0;2765:6;;;-1:-1:-1;;;;;2781:17:0;;;-1:-1:-1;;;;;;2781:17:0;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;2295:241:8:-;2447:8;2442:87;2465:3;:10;2461:1;-1:-1:-1;;;;;2461:14:8;;2442:87;;;2511:6;2497:3;:11;2501:3;2505:1;-1:-1:-1;;;;;2501:6:8;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2497:11:8;;;;;;;;;;;-1:-1:-1;2497:11:8;:20;;-1:-1:-1;;2497:20:8;;;;;;;;;;2477:3;;;;:::i;:::-;;;;2442:87;;;;2295:241;;;:::o;4066:189:2:-;4145:4;929:10:7;4199:28:2;929:10:7;4216:2:2;4220:6;4199:9;:28::i;9448:576::-;-1:-1:-1;;;;;9531:21:2;;9523:67;;;;-1:-1:-1;;;9523:67:2;;18730:2:9;9523:67:2;;;18712:21:9;18769:2;18749:18;;;18742:30;18808:34;18788:18;;;18781:62;-1:-1:-1;;;18859:18:9;;;18852:31;18900:19;;9523:67:2;18528:397:9;9523:67:2;-1:-1:-1;;;;;9686:18:2;;9661:22;9686:18;;;:9;:18;;;;;;9722:24;;;;9714:71;;;;-1:-1:-1;;;9714:71:2;;19132:2:9;9714:71:2;;;19114:21:9;19171:2;19151:18;;;19144:30;19210:34;19190:18;;;19183:62;-1:-1:-1;;;19261:18:9;;;19254:32;19303:19;;9714:71:2;18930:398:9;9714:71:2;-1:-1:-1;;;;;9819:18:2;;;;;;:9;:18;;;;;9840:23;;;9819:44;;9883:12;:22;;9857:6;;9819:18;9883:22;;9857:6;;9883:22;:::i;:::-;;;;-1:-1:-1;;9921:37:2;;1662:25:9;;;9947:1:2;;-1:-1:-1;;;;;9921:37:2;;;;;1650:2:9;1635:18;9921:37:2;1516:177:9;9969:48:2;9513:511;9448:576;;:::o;11098:441::-;11228:24;11255:25;11265:5;11272:7;11255:9;:25::i;:::-;11228:52;;-1:-1:-1;;11294:16:2;:37;11290:243;;11375:6;11355:16;:26;;11347:68;;;;-1:-1:-1;;;11347:68:2;;19535:2:9;11347:68:2;;;19517:21:9;19574:2;19554:18;;;19547:30;19613:31;19593:18;;;19586:59;19662:18;;11347:68:2;19333:353:9;11347:68:2;11457:51;11466:5;11473:7;11501:6;11482:16;:25;11457:8;:51::i;7812:651::-;-1:-1:-1;;;;;7938:18:2;;7930:68;;;;-1:-1:-1;;;7930:68:2;;19893:2:9;7930:68:2;;;19875:21:9;19932:2;19912:18;;;19905:30;19971:34;19951:18;;;19944:62;-1:-1:-1;;;20022:18:9;;;20015:35;20067:19;;7930:68:2;19691:401:9;7930:68:2;-1:-1:-1;;;;;8016:16:2;;8008:64;;;;-1:-1:-1;;;8008:64:2;;20299:2:9;8008:64:2;;;20281:21:9;20338:2;20318:18;;;20311:30;20377:34;20357:18;;;20350:62;-1:-1:-1;;;20428:18:9;;;20421:33;20471:19;;8008:64:2;20097:399:9;8008:64:2;-1:-1:-1;;;;;8154:15:2;;8132:19;8154:15;;;:9;:15;;;;;;8187:21;;;;8179:72;;;;-1:-1:-1;;;8179:72:2;;20703:2:9;8179:72:2;;;20685:21:9;20742:2;20722:18;;;20715:30;20781:34;20761:18;;;20754:62;-1:-1:-1;;;20832:18:9;;;20825:36;20878:19;;8179:72:2;20501:402:9;8179:72:2;-1:-1:-1;;;;;8285:15:2;;;;;;;:9;:15;;;;;;8303:20;;;8285:38;;8343:13;;;;;;;;:23;;8317:6;;8285:15;8343:23;;8317:6;;8343:23;:::i;:::-;;;;;;;;8397:2;-1:-1:-1;;;;;8382:26:2;8391:4;-1:-1:-1;;;;;8382:26:2;;8401:6;8382:26;;;;1662:25:9;;1650:2;1635:18;;1516:177;8382:26:2;;;;;;;;8419:37;9448:576;1104:111:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;1176:32:0::1;929:10:7::0;1176:18:0::1;:32::i;2269:159:2:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;2381:13:2;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2404:17:2;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;692:158:4:-:0;4910:13:1;;;;;;;4902:69;;;;-1:-1:-1;;;4902:69:1;;;;;;;:::i;:::-;795:1:4::1;788:4;:8;780:42;;;::::0;-1:-1:-1;;;780:42:4;;21110:2:9;780:42:4::1;::::0;::::1;21092:21:9::0;21149:2;21129:18;;;21122:30;-1:-1:-1;;;21168:18:9;;;21161:51;21229:18;;780:42:4::1;20908:345:9::0;780:42:4::1;832:4;:11:::0;692:158::o;8739:389:2:-;-1:-1:-1;;;;;8822:21:2;;8814:65;;;;-1:-1:-1;;;8814:65:2;;21460:2:9;8814:65:2;;;21442:21:9;21499:2;21479:18;;;21472:30;21538:33;21518:18;;;21511:61;21589:18;;8814:65:2;21258:355:9;8814:65:2;8966:6;8950:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8982:18:2;;;;;;:9;:18;;;;;:28;;9004:6;;8982:18;:28;;9004:6;;8982:28;:::i;:::-;;;;-1:-1:-1;;9025:37:2;;1662:25:9;;;-1:-1:-1;;;;;9025:37:2;;;9042:1;;9025:37;;1650:2:9;1635:18;9025:37:2;;;;;;;2116:147;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:597:9;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:9;574:15;-1:-1:-1;;570:29:9;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:9:o;616:131::-;-1:-1:-1;;;;;691:31:9;;681:42;;671:70;;737:1;734;727:12;752:247;811:6;864:2;852:9;843:7;839:23;835:32;832:52;;;880:1;877;870:12;832:52;919:9;906:23;938:31;963:5;938:31;:::i;1196:315::-;1264:6;1272;1325:2;1313:9;1304:7;1300:23;1296:32;1293:52;;;1341:1;1338;1331:12;1293:52;1380:9;1367:23;1399:31;1424:5;1399:31;:::i;:::-;1449:5;1501:2;1486:18;;;;1473:32;;-1:-1:-1;;;1196:315:9:o;1698:456::-;1775:6;1783;1791;1844:2;1832:9;1823:7;1819:23;1815:32;1812:52;;;1860:1;1857;1850:12;1812:52;1899:9;1886:23;1918:31;1943:5;1918:31;:::i;:::-;1968:5;-1:-1:-1;2025:2:9;2010:18;;1997:32;2038:33;1997:32;2038:33;:::i;:::-;1698:456;;2090:7;;-1:-1:-1;;;2144:2:9;2129:18;;;;2116:32;;1698:456::o;2159:127::-;2220:10;2215:3;2211:20;2208:1;2201:31;2251:4;2248:1;2241:15;2275:4;2272:1;2265:15;2291:275;2362:2;2356:9;2427:2;2408:13;;-1:-1:-1;;2404:27:9;2392:40;;-1:-1:-1;;;;;2447:34:9;;2483:22;;;2444:62;2441:88;;;2509:18;;:::i;:::-;2545:2;2538:22;2291:275;;-1:-1:-1;2291:275:9:o;2571:531::-;2614:5;2667:3;2660:4;2652:6;2648:17;2644:27;2634:55;;2685:1;2682;2675:12;2634:55;2721:6;2708:20;-1:-1:-1;;;;;2743:2:9;2740:26;2737:52;;;2769:18;;:::i;:::-;2813:55;2856:2;2837:13;;-1:-1:-1;;2833:27:9;2862:4;2829:38;2813:55;:::i;:::-;2893:2;2884:7;2877:19;2939:3;2932:4;2927:2;2919:6;2915:15;2911:26;2908:35;2905:55;;;2956:1;2953;2946:12;2905:55;3021:2;3014:4;3006:6;3002:17;2995:4;2986:7;2982:18;2969:55;3069:1;3044:16;;;3062:4;3040:27;3033:38;;;;3048:7;2571:531;-1:-1:-1;;;2571:531:9:o;3107:156::-;3173:20;;3233:4;3222:16;;3212:27;;3202:55;;3253:1;3250;3243:12;3202:55;3107:156;;;:::o;3268:820::-;3390:6;3398;3406;3414;3422;3430;3483:3;3471:9;3462:7;3458:23;3454:33;3451:53;;;3500:1;3497;3490:12;3451:53;3540:9;3527:23;-1:-1:-1;;;;;3610:2:9;3602:6;3599:14;3596:34;;;3626:1;3623;3616:12;3596:34;3649:50;3691:7;3682:6;3671:9;3667:22;3649:50;:::i;:::-;3639:60;;3752:2;3741:9;3737:18;3724:32;3708:48;;3781:2;3771:8;3768:16;3765:36;;;3797:1;3794;3787:12;3765:36;;3820:52;3864:7;3853:8;3842:9;3838:24;3820:52;:::i;:::-;3810:62;;;3891:36;3923:2;3912:9;3908:18;3891:36;:::i;:::-;3881:46;;3974:2;3963:9;3959:18;3946:32;3936:42;;4025:3;4014:9;4010:19;3997:33;3987:43;;4077:3;4066:9;4062:19;4049:33;4039:43;;3268:820;;;;;;;;:::o;4282:658::-;4453:2;4505:21;;;4575:13;;4478:18;;;4597:22;;;4424:4;;4453:2;4676:15;;;;4650:2;4635:18;;;4424:4;4719:195;4733:6;4730:1;4727:13;4719:195;;;4798:13;;-1:-1:-1;;;;;4794:39:9;4782:52;;4889:15;;;;4854:12;;;;4830:1;4748:9;4719:195;;;-1:-1:-1;4931:3:9;;4282:658;-1:-1:-1;;;;;;4282:658:9:o;5153:183::-;5213:4;-1:-1:-1;;;;;5238:6:9;5235:30;5232:56;;;5268:18;;:::i;:::-;-1:-1:-1;5313:1:9;5309:14;5325:4;5305:25;;5153:183::o;5341:966::-;5425:6;5456:2;5499;5487:9;5478:7;5474:23;5470:32;5467:52;;;5515:1;5512;5505:12;5467:52;5555:9;5542:23;-1:-1:-1;;;;;5580:6:9;5577:30;5574:50;;;5620:1;5617;5610:12;5574:50;5643:22;;5696:4;5688:13;;5684:27;-1:-1:-1;5674:55:9;;5725:1;5722;5715:12;5674:55;5761:2;5748:16;5784:60;5800:43;5840:2;5800:43;:::i;:::-;5784:60;:::i;:::-;5878:15;;;5960:1;5956:10;;;;5948:19;;5944:28;;;5909:12;;;;5984:19;;;5981:39;;;6016:1;6013;6006:12;5981:39;6040:11;;;;6060:217;6076:6;6071:3;6068:15;6060:217;;;6156:3;6143:17;6173:31;6198:5;6173:31;:::i;:::-;6217:18;;6093:12;;;;6255;;;;6060:217;;;6296:5;5341:966;-1:-1:-1;;;;;;;5341:966:9:o;6312:180::-;6371:6;6424:2;6412:9;6403:7;6399:23;6395:32;6392:52;;;6440:1;6437;6430:12;6392:52;-1:-1:-1;6463:23:9;;6312:180;-1:-1:-1;6312:180:9:o;6497:388::-;6565:6;6573;6626:2;6614:9;6605:7;6601:23;6597:32;6594:52;;;6642:1;6639;6632:12;6594:52;6681:9;6668:23;6700:31;6725:5;6700:31;:::i;:::-;6750:5;-1:-1:-1;6807:2:9;6792:18;;6779:32;6820:33;6779:32;6820:33;:::i;:::-;6872:7;6862:17;;;6497:388;;;;;:::o;6890:662::-;6944:5;6997:3;6990:4;6982:6;6978:17;6974:27;6964:55;;7015:1;7012;7005:12;6964:55;7051:6;7038:20;7077:4;7101:60;7117:43;7157:2;7117:43;:::i;7101:60::-;7195:15;;;7281:1;7277:10;;;;7265:23;;7261:32;;;7226:12;;;;7305:15;;;7302:35;;;7333:1;7330;7323:12;7302:35;7369:2;7361:6;7357:15;7381:142;7397:6;7392:3;7389:15;7381:142;;;7463:17;;7451:30;;7501:12;;;;7414;;7381:142;;;-1:-1:-1;7541:5:9;6890:662;-1:-1:-1;;;;;;6890:662:9:o;7557:1717::-;7751:6;7759;7767;7775;7783;7791;7799;7852:3;7840:9;7831:7;7827:23;7823:33;7820:53;;;7869:1;7866;7859:12;7820:53;7908:9;7895:23;7927:31;7952:5;7927:31;:::i;:::-;7977:5;-1:-1:-1;8001:2:9;8035:18;;;8022:32;;-1:-1:-1;8101:2:9;8086:18;;8073:32;;-1:-1:-1;8152:2:9;8137:18;;8124:32;;-1:-1:-1;8207:3:9;8192:19;;8179:33;-1:-1:-1;;;;;8261:14:9;;;8258:34;;;8288:1;8285;8278:12;8258:34;8326:6;8315:9;8311:22;8301:32;;8371:7;8364:4;8360:2;8356:13;8352:27;8342:55;;8393:1;8390;8383:12;8342:55;8429:2;8416:16;8452:60;8468:43;8508:2;8468:43;:::i;8452:60::-;8546:15;;;8628:1;8624:10;;;;8616:19;;8612:28;;;8577:12;;;;8652:19;;;8649:39;;;8684:1;8681;8674:12;8649:39;8708:11;;;;8728:146;8744:6;8739:3;8736:15;8728:146;;;8810:21;8827:3;8810:21;:::i;:::-;8798:34;;8761:12;;;;8852;;;;8728:146;;;8893:5;-1:-1:-1;;;8951:3:9;8936:19;;8923:33;;-1:-1:-1;8968:16:9;;;8965:36;;;8997:1;8994;8987:12;8965:36;9020:63;9075:7;9064:8;9053:9;9049:24;9020:63;:::i;:::-;9010:73;;9136:3;9125:9;9121:19;9108:33;9092:49;;9166:2;9156:8;9153:16;9150:36;;;9182:1;9179;9172:12;9150:36;;;9205:63;9260:7;9249:8;9238:9;9234:24;9205:63;:::i;:::-;9195:73;;;7557:1717;;;;;;;;;;:::o;9279:380::-;9358:1;9354:12;;;;9401;;;9422:61;;9476:4;9468:6;9464:17;9454:27;;9422:61;9529:2;9521:6;9518:14;9498:18;9495:38;9492:161;;;9575:10;9570:3;9566:20;9563:1;9556:31;9610:4;9607:1;9600:15;9638:4;9635:1;9628:15;9492:161;;9279:380;;;:::o;10079:127::-;10140:10;10135:3;10131:20;10128:1;10121:31;10171:4;10168:1;10161:15;10195:4;10192:1;10185:15;10211:422;10300:1;10343:5;10300:1;10357:270;10378:7;10368:8;10365:21;10357:270;;;10437:4;10433:1;10429:6;10425:17;10419:4;10416:27;10413:53;;;10446:18;;:::i;:::-;10496:7;10486:8;10482:22;10479:55;;;10516:16;;;;10479:55;10595:22;;;;10555:15;;;;10357:270;;;10361:3;10211:422;;;;;:::o;10638:806::-;10687:5;10717:8;10707:80;;-1:-1:-1;10758:1:9;10772:5;;10707:80;10806:4;10796:76;;-1:-1:-1;10843:1:9;10857:5;;10796:76;10888:4;10906:1;10901:59;;;;10974:1;10969:130;;;;10881:218;;10901:59;10931:1;10922:10;;10945:5;;;10969:130;11006:3;10996:8;10993:17;10990:43;;;11013:18;;:::i;:::-;-1:-1:-1;;11069:1:9;11055:16;;11084:5;;10881:218;;11183:2;11173:8;11170:16;11164:3;11158:4;11155:13;11151:36;11145:2;11135:8;11132:16;11127:2;11121:4;11118:12;11114:35;11111:77;11108:159;;;-1:-1:-1;11220:19:9;;;11252:5;;11108:159;11299:34;11324:8;11318:4;11299:34;:::i;:::-;11369:6;11365:1;11361:6;11357:19;11348:7;11345:32;11342:58;;;11380:18;;:::i;:::-;11418:20;;10638:806;-1:-1:-1;;;10638:806:9:o;11449:140::-;11507:5;11536:47;11577:4;11567:8;11563:19;11557:4;11536:47;:::i;11594:168::-;11634:7;11700:1;11696;11692:6;11688:14;11685:1;11682:21;11677:1;11670:9;11663:17;11659:45;11656:71;;;11707:18;;:::i;:::-;-1:-1:-1;11747:9:9;;11594:168::o;11966:128::-;12006:3;12037:1;12033:6;12030:1;12027:13;12024:39;;;12043:18;;:::i;:::-;-1:-1:-1;12079:9:9;;11966:128::o;12505:125::-;12545:4;12573:1;12570;12567:8;12564:34;;;12578:18;;:::i;:::-;-1:-1:-1;12615:9:9;;12505:125::o;14133:127::-;14194:10;14189:3;14185:20;14182:1;14175:31;14225:4;14222:1;14215:15;14249:4;14246:1;14239:15;14668:175;14705:3;14749:4;14742:5;14738:16;14778:4;14769:7;14766:17;14763:43;;;14786:18;;:::i;:::-;14835:1;14822:15;;14668:175;-1:-1:-1;;14668:175:9:o;14848:209::-;14886:3;-1:-1:-1;;;;;14967:2:9;14960:5;14956:14;14994:2;14985:7;14982:15;14979:41;;;15000:18;;:::i;:::-;15049:1;15036:15;;14848:209;-1:-1:-1;;;14848:209:9:o;17179:217::-;17219:1;17245;17235:132;;17289:10;17284:3;17280:20;17277:1;17270:31;17324:4;17321:1;17314:15;17352:4;17349:1;17342:15;17235:132;-1:-1:-1;17381:9:9;;17179:217::o;17401:407::-;17603:2;17585:21;;;17642:2;17622:18;;;17615:30;17681:34;17676:2;17661:18;;17654:62;-1:-1:-1;;;17747:2:9;17732:18;;17725:41;17798:3;17783:19;;17401:407::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1671000",
								"executionCost": "1757",
								"totalCost": "1672757"
							},
							"external": {
								"_mapSigners(address)": "2570",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24691",
								"balanceOf(address)": "2620",
								"cap()": "2360",
								"decimals()": "2335",
								"decreaseAllowance(address,uint256)": "26990",
								"getRewardAmt()": "2381",
								"getTaxFee()": "2380",
								"increaseAllowance(address,uint256)": "27067",
								"initialize(string,string,uint8,uint256,uint256,uint256)": "infinite",
								"mapSigner(address)": "2612",
								"name()": "infinite",
								"owner()": "2347",
								"permitMint(address,uint256,uint256,uint256,uint8[],bytes32[],bytes32[])": "infinite",
								"renounceOwnership()": "infinite",
								"setRewardAmtInWei(uint256)": "24599",
								"setSigners(address[])": "infinite",
								"setTaxFee(uint256)": "24533",
								"signers()": "infinite",
								"symbol()": "infinite",
								"totalBurned()": "2362",
								"totalSupply()": "2327",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniqueIdExists(uint256)": "2560",
								"userTotalBurned(address)": "2581"
							},
							"internal": {
								"_burnAndUpdate(address,uint256)": "infinite",
								"_calculateBurnAmt(uint256)": "2288",
								"_updateMap(address[] memory,bool,mapping(address => bool))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 5613,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039ade7c0c035cf0d26c069aec2f44ee14fc90059a8d47bcca0569ff0b5f9944f64736f6c634300080b0033",
									".code": [
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "C4081A4C"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "E4C97E6A"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "E4C97E6A"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "F66608FE"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "F9342285"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "C4081A4C"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "D89135CD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "AC7FA3C6"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "B24A0893"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "A3772662"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "3DE47E32"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "3DE47E32"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "46F0975A"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "355274EA"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "39509351"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "1E0D4CE9"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "2B9A1D3C"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "7C351DD"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 243,
											"end": 5613,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2236,
											"end": 2240,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2271,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2260,
											"end": 2279,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2178,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1516,
											"end": 1693,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 662,
											"end": 712,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "D4"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 712,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 662,
											"end": 712,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "PUSH",
											"source": 8,
											"value": "CC"
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1316,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 4093,
											"end": 4277,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 929,
											"end": 1010,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 559,
											"end": 602,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 559,
											"end": 602,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3826,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3745,
											"end": 3870,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5091,
											"end": 5142,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5091,
											"end": 5142,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5079,
											"end": 5081,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5064,
											"end": 5082,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4945,
											"end": 5148,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1496,
											"end": 1506,
											"name": "PUSH",
											"source": 8,
											"value": "CD"
										},
										{
											"begin": 1496,
											"end": 1506,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1424,
											"end": 1514,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "PUSH",
											"source": 8,
											"value": "D0"
										},
										{
											"begin": 493,
											"end": 519,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 493,
											"end": 519,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "PUSH",
											"source": 8,
											"value": "CF"
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 1632,
											"end": 1716,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "D3"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 609,
											"end": 655,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 609,
											"end": 655,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2572,
											"end": 2584,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2493,
											"end": 2591,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4853,
											"end": 4857,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4930,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4938,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4907,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 4907,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4960,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4770,
											"end": 4967,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3148,
											"end": 3152,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3165,
											"end": 3179,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3200,
											"end": 3206,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3182,
											"end": 3207,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3182,
											"end": 3207,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 3182,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3165,
											"end": 3207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3218,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 3218,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3282,
											"end": 3284,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3292,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3257,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 3257,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3315,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3311,
											"end": 3315,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3017,
											"end": 3323,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "tag",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3111,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3212,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3209,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3197,
											"end": 3213,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 3179,
											"end": 3213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3178,
											"end": 3286,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3280,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3268,
											"end": 3285,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 3219,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9866,
											"end": 9868,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 9869,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9905,
											"end": 9907,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9885,
											"end": 9903,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9878,
											"end": 9908,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9944,
											"end": 9978,
											"name": "PUSH",
											"source": 9,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9917,
											"end": 9979,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9995,
											"end": 10013,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9988,
											"end": 10032,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10049,
											"end": 10068,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10049,
											"end": 10068,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 3157,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3380,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3384,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3448,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 3394,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 946,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 946,
											"end": 962,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 946,
											"end": 962,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 946,
											"end": 962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 973,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 993,
											"end": 1000,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 973,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 973,
											"end": 1001,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1001,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 973,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1041,
											"end": 1050,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1037,
											"end": 1039,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 1037,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1034,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 1031,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1012,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "PUSH",
											"source": 8,
											"value": "CA"
										},
										{
											"begin": 1062,
											"end": 1067,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "tag",
											"source": 8,
											"value": "218"
										},
										{
											"begin": 1062,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "PUSH",
											"source": 8,
											"value": "CB"
										},
										{
											"begin": 1086,
											"end": 1093,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1086,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1123,
											"name": "PUSH",
											"source": 8,
											"value": "CC"
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1114,
											"end": 1135,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "PUSH",
											"source": 8,
											"value": "16345785D8A0000"
										},
										{
											"begin": 1146,
											"end": 1156,
											"name": "PUSH",
											"source": 8,
											"value": "CD"
										},
										{
											"begin": 1146,
											"end": 1168,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1183,
											"name": "PUSH",
											"source": 8,
											"value": "CE"
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1179,
											"end": 1189,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1207,
											"name": "PUSH",
											"source": 8,
											"value": "CF"
										},
										{
											"begin": 1200,
											"end": 1216,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1216,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1200,
											"end": 1216,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1241,
											"end": 1245,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 1248,
											"end": 1262,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1227,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 1227,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3483,
											"end": 3497,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3529,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3534,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4235,
											"end": 4271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4225,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4208,
											"end": 4226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3567,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3479,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3101,
											"end": 3584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 721,
											"end": 1271,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6210,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6405,
											"end": 6415,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6368,
											"end": 6375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 6377,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 6377,
											"end": 6415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 6352,
											"end": 6416,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1871,
											"end": 1887,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1907,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "D1"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "tag",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "236"
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1900,
											"end": 1915,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1923,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2135,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2071,
											"end": 2172,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2704,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2792,
											"end": 2799,
											"name": "PUSH",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2785,
											"end": 2799,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2027,
											"end": 2035,
											"name": "PUSH",
											"source": 8,
											"value": "D1"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2037,
											"end": 2042,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2055,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 2016,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "D1"
										},
										{
											"begin": 2074,
											"end": 2082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2067,
											"end": 2082,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "PUSH",
											"source": 8,
											"value": "D1"
										},
										{
											"begin": 2093,
											"end": 2101,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2093,
											"end": 2112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2134,
											"end": 2142,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2144,
											"end": 2148,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2161,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 2123,
											"end": 2133,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2123,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2170,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7122,
											"end": 7129,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7105,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "tag",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 7105,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7078,
											"end": 7130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7168,
											"end": 7183,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7164,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7148,
											"end": 7183,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12301,
											"end": 12303,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12283,
											"end": 12304,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12340,
											"end": 12342,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 12320,
											"end": 12338,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12320,
											"end": 12338,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12338,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12313,
											"end": 12343,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12379,
											"end": 12413,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12352,
											"end": 12414,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12430,
											"end": 12448,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12423,
											"end": 12458,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12475,
											"end": 12494,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 12475,
											"end": 12494,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 12099,
											"end": 12500,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 7140,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7268,
											"end": 7273,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7275,
											"end": 7282,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7303,
											"end": 7318,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7300,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7318,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7259,
											"end": 7267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 7259,
											"end": 7319,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6931,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 2689,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2685,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2728,
											"end": 2737,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2739,
											"end": 2745,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2713,
											"end": 2746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2815,
											"end": 2821,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2797,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 2797,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2822,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2779,
											"end": 2822,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 2872,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2852,
											"end": 2862,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2864,
											"end": 2871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2837,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 2837,
											"end": 2872,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2837,
											"end": 2872,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 2837,
											"end": 2872,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2901,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2913,
											"end": 2920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2910,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 2904,
											"end": 2920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2887,
											"end": 2920,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2950,
											"end": 2959,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2961,
											"end": 2967,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2935,
											"end": 2968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2764,
											"end": 2980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 2671,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2997,
											"end": 3001,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2544,
											"end": 3009,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1596,
											"end": 1606,
											"name": "PUSH",
											"source": 8,
											"value": "CD"
										},
										{
											"begin": 1596,
											"end": 1616,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1522,
											"end": 1624,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1793,
											"end": 1800,
											"name": "PUSH",
											"source": 8,
											"value": "CF"
										},
										{
											"begin": 1793,
											"end": 1813,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1724,
											"end": 1821,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4402,
											"end": 4409,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4439,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4446,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4428,
											"end": 4455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4313,
											"end": 4462,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4017,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 3998,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 4017,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3990,
											"end": 4017,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12837,
											"end": 12839,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12819,
											"end": 12840,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12876,
											"end": 12878,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12856,
											"end": 12874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12849,
											"end": 12879,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4578706972656420646561646C696E65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12895,
											"end": 12913,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 12895,
											"end": 12913,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12895,
											"end": 12913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12888,
											"end": 12934,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12951,
											"end": 12969,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 12951,
											"end": 12969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 12635,
											"end": 12975,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 3982,
											"end": 4038,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4072,
											"name": "PUSH",
											"source": 8,
											"value": "D3"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4058,
											"end": 4082,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4082,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13182,
											"end": 13184,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13164,
											"end": 13185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13221,
											"end": 13223,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 13201,
											"end": 13219,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 13201,
											"end": 13219,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13201,
											"end": 13219,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13194,
											"end": 13224,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "556E6971756520696420657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13240,
											"end": 13258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13233,
											"end": 13279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 12980,
											"end": 13320,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 4049,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4134,
											"end": 4144,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 4116,
											"end": 4131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4171,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1526,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4171,
											"end": 4184,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 4171,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13694,
											"end": 13722,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4197,
											"end": 4217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13738,
											"end": 13749,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 13738,
											"end": 13749,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13738,
											"end": 13749,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13731,
											"end": 13767,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13854,
											"end": 13856,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 13850,
											"end": 13865,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 13850,
											"end": 13865,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13850,
											"end": 13865,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 13846,
											"end": 13870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13846,
											"end": 13870,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13833,
											"end": 13844,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 13833,
											"end": 13844,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13833,
											"end": 13844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13826,
											"end": 13871,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13920,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13920,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13905,
											"end": 13920,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 13901,
											"end": 13925,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13901,
											"end": 13925,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13887,
											"end": 13899,
											"name": "PUSH",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 13887,
											"end": 13899,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 13887,
											"end": 13899,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13880,
											"end": 13926,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13960,
											"end": 13975,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 13960,
											"end": 13975,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13960,
											"end": 13975,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 13956,
											"end": 13980,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 13942,
											"end": 13954,
											"name": "PUSH",
											"source": 9,
											"value": "4A"
										},
										{
											"begin": 13942,
											"end": 13954,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13942,
											"end": 13954,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13935,
											"end": 13981,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13997,
											"end": 14009,
											"name": "PUSH",
											"source": 9,
											"value": "5E"
										},
										{
											"begin": 13997,
											"end": 14009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13997,
											"end": 14009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14018,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13990,
											"end": 14018,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14034,
											"end": 14046,
											"name": "PUSH",
											"source": 9,
											"value": "7E"
										},
										{
											"begin": 14034,
											"end": 14046,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14034,
											"end": 14046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14027,
											"end": 14055,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 14027,
											"end": 14055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14027,
											"end": 14055,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14084,
											"name": "PUSH",
											"source": 9,
											"value": "9E"
										},
										{
											"begin": 14071,
											"end": 14084,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14071,
											"end": 14084,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14064,
											"end": 14093,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 14064,
											"end": 14093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14064,
											"end": 14093,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4184,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4155,
											"end": 4184,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14109,
											"end": 14122,
											"name": "PUSH",
											"source": 9,
											"value": "BE"
										},
										{
											"begin": 14109,
											"end": 14122,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4491,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4220,
											"end": 4502,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4197,
											"end": 4502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4515,
											"end": 4531,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4576,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4596,
											"end": 4604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "tag",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4614,
											"end": 4615,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 4614,
											"end": 4622,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4611,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4610,
											"end": 4622,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4661,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4674,
											"end": 4686,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4689,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4690,
											"end": 4691,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "tag",
											"source": 8,
											"value": "303"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4688,
											"end": 4692,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4695,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4696,
											"end": 4697,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4702,
											"end": 4703,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4700,
											"end": 4704,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14492,
											"end": 14517,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14492,
											"end": 14517,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14492,
											"end": 14517,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14565,
											"end": 14569,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14553,
											"end": 14570,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14553,
											"end": 14570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14553,
											"end": 14570,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14553,
											"end": 14570,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14548,
											"end": 14550,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14533,
											"end": 14551,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 14533,
											"end": 14551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14526,
											"end": 14571,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14602,
											"end": 14604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 14587,
											"end": 14605,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14587,
											"end": 14605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14580,
											"end": 14614,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14645,
											"end": 14647,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 14630,
											"end": 14648,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14630,
											"end": 14648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14623,
											"end": 14657,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14479,
											"end": 14482,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 14464,
											"end": 14483,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14464,
											"end": 14483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14265,
											"end": 14663,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "tag",
											"source": 8,
											"value": "312"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4664,
											"end": 4705,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4705,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4705,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4736,
											"end": 4744,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4733,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4744,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4759,
											"name": "PUSH",
											"source": 8,
											"value": "D2"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4748,
											"end": 4770,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 4724,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4789,
											"end": 4806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 4720,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4832,
											"end": 4841,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "299"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4591,
											"end": 4853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4873,
											"end": 4888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4893,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4873,
											"end": 4893,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4893,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4893,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15264,
											"end": 15266,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15246,
											"end": 15267,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15303,
											"end": 15305,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 15283,
											"end": 15301,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15283,
											"end": 15301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15283,
											"end": 15301,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15276,
											"end": 15306,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207369676E657273"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15322,
											"end": 15340,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15322,
											"end": 15340,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15322,
											"end": 15340,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15315,
											"end": 15360,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15377,
											"end": 15395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 15062,
											"end": 15401,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "tag",
											"source": 8,
											"value": "319"
										},
										{
											"begin": 4865,
											"end": 4913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4938,
											"name": "PUSH",
											"source": 8,
											"value": "D3"
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4948,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4951,
											"end": 4955,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4955,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5019,
											"name": "PUSH",
											"source": 8,
											"value": "CD"
										},
										{
											"begin": 5009,
											"end": 5019,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5001,
											"name": "DUP15",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5001,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5001,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5028,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "tag",
											"source": 8,
											"value": "322"
										},
										{
											"begin": 5009,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "tag",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4987,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5033,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4968,
											"end": 5033,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15818,
											"end": 15820,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15800,
											"end": 15821,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15857,
											"end": 15859,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 15837,
											"end": 15855,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15837,
											"end": 15855,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15837,
											"end": 15855,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15830,
											"end": 15860,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8CC2D2D8CAC840E8DE40E6CADCC8409ACAC6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15876,
											"end": 15894,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 15876,
											"end": 15894,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15876,
											"end": 15894,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15869,
											"end": 15918,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15935,
											"end": 15953,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 15935,
											"end": 15953,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 15616,
											"end": 15959,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 5044,
											"end": 5083,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 5106,
											"end": 5115,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 5117,
											"end": 5123,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 5094,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "222"
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 5094,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3971,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3729,
											"end": 5132,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2321,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1334,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1334,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16166,
											"end": 16168,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16148,
											"end": 16169,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16205,
											"end": 16207,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 16185,
											"end": 16203,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16185,
											"end": 16203,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16185,
											"end": 16203,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16178,
											"end": 16208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16244,
											"end": 16278,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16217,
											"end": 16279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16295,
											"end": 16313,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 16295,
											"end": 16313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16295,
											"end": 16313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16288,
											"end": 16324,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16341,
											"end": 16360,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 16341,
											"end": 16360,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 15964,
											"end": 16366,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2401,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 2503,
											"end": 2511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2484,
											"end": 2512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10578,
											"end": 10597,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10578,
											"end": 10597,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16573,
											"end": 16575,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16555,
											"end": 16576,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16612,
											"end": 16614,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16592,
											"end": 16610,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 16592,
											"end": 16610,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16592,
											"end": 16610,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16585,
											"end": 16615,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16651,
											"end": 16685,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16631,
											"end": 16649,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16624,
											"end": 16686,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16702,
											"end": 16720,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 16702,
											"end": 16720,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16702,
											"end": 16720,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16695,
											"end": 16729,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16746,
											"end": 16765,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 16746,
											"end": 16765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 16371,
											"end": 16771,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10570,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10656,
											"end": 10677,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16978,
											"end": 16980,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16960,
											"end": 16981,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17017,
											"end": 17019,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16990,
											"end": 17020,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17056,
											"end": 17090,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 17036,
											"end": 17054,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 17036,
											"end": 17054,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17036,
											"end": 17054,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17029,
											"end": 17091,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17107,
											"end": 17125,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 17107,
											"end": 17125,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17107,
											"end": 17125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17100,
											"end": 17132,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 17149,
											"end": 17168,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 16776,
											"end": 17174,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 10648,
											"end": 10716,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10738,
											"name": "PUSH",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10745,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10754,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10727,
											"end": 10763,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10778,
											"end": 10810,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10447,
											"end": 10817,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3331,
											"end": 3491,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 3331,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3396,
											"end": 3403,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3431,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3455,
											"end": 3458,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "PUSH",
											"source": 8,
											"value": "CF"
										},
										{
											"begin": 3444,
											"end": 3451,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3441,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3435,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 3434,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3458,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3331,
											"end": 3491,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3331,
											"end": 3491,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3499,
											"end": 3721,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 3499,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3597,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3581,
											"end": 3588,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3590,
											"end": 3596,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3575,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 3575,
											"end": 3597,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3575,
											"end": 3597,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 3575,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3636,
											"end": 3642,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3633,
											"name": "PUSH",
											"source": 8,
											"value": "D0"
										},
										{
											"begin": 3622,
											"end": 3633,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 3622,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3608,
											"end": 3619,
											"name": "PUSH",
											"source": 8,
											"value": "D0"
										},
										{
											"begin": 3608,
											"end": 3642,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3695,
											"name": "PUSH",
											"source": 8,
											"value": "D4"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3704,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3707,
											"end": 3713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 3680,
											"end": 3713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3668,
											"name": "PUSH",
											"source": 8,
											"value": "D4"
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3677,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3713,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3653,
											"end": 3713,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3499,
											"end": 3721,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 5529,
											"end": 5815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5728,
											"end": 5732,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5712,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "tag",
											"source": 2,
											"value": "360"
										},
										{
											"begin": 5712,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5770,
											"end": 5774,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5776,
											"end": 5778,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5786,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5760,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 5760,
											"end": 5787,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1003,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1065,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 1065,
											"end": 1091,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 2241,
											"end": 2246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "376"
										},
										{
											"begin": 2218,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 567,
											"end": 686,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 567,
											"end": 686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 645,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 674,
											"end": 678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 645,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 645,
											"end": 679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1063,
											"end": 1278,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 1063,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 999,
											"end": 1003,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3668,
											"end": 3680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3687,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1155,
											"end": 1185,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 1155,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 1155,
											"end": 1194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1203,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18015,
											"end": 18017,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17997,
											"end": 18018,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18054,
											"end": 18056,
											"name": "PUSH",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 18034,
											"end": 18052,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 18034,
											"end": 18052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18034,
											"end": 18052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18027,
											"end": 18057,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18093,
											"end": 18120,
											"name": "PUSH",
											"source": 9,
											"value": "45524332304361707065643A2063617020657863656564656400000000000000"
										},
										{
											"begin": 18073,
											"end": 18091,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 18073,
											"end": 18091,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18073,
											"end": 18091,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18066,
											"end": 18121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18138,
											"end": 18156,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 18138,
											"end": 18156,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 17813,
											"end": 18162,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 1147,
											"end": 1233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 1255,
											"end": 1262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1264,
											"end": 1270,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1243,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 1243,
											"end": 1271,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1599,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1513,
											"end": 1519,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1685,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18369,
											"end": 18371,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18351,
											"end": 18372,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18351,
											"end": 18372,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18351,
											"end": 18372,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18388,
											"end": 18406,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 18388,
											"end": 18406,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18388,
											"end": 18406,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18381,
											"end": 18411,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18447,
											"end": 18481,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18427,
											"end": 18445,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 18427,
											"end": 18445,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18427,
											"end": 18445,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18420,
											"end": 18482,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18499,
											"end": 18517,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 18499,
											"end": 18517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1654,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 18167,
											"end": 18523,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "PUSH",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2798,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2765,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2813,
											"end": 2853,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2736,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2860,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2468,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2465,
											"end": 2475,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2461,
											"end": 2475,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2461,
											"end": 2475,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2500,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2505,
											"end": 2506,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2497,
											"end": 2517,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2477,
											"end": 2480,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2295,
											"end": 2536,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4066,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4145,
											"end": 4149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 4199,
											"end": 4227,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9531,
											"end": 9552,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9531,
											"end": 9552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18730,
											"end": 18732,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18712,
											"end": 18733,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18769,
											"end": 18771,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 18749,
											"end": 18767,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 18749,
											"end": 18767,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18749,
											"end": 18767,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18742,
											"end": 18772,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18808,
											"end": 18842,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 18788,
											"end": 18806,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 18788,
											"end": 18806,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18788,
											"end": 18806,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18781,
											"end": 18843,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18859,
											"end": 18877,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 18859,
											"end": 18877,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18859,
											"end": 18877,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18852,
											"end": 18883,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18900,
											"end": 18919,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 18900,
											"end": 18919,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 18528,
											"end": 18925,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "tag",
											"source": 2,
											"value": "411"
										},
										{
											"begin": 9523,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9661,
											"end": 9683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9695,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9746,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9722,
											"end": 9746,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19114,
											"end": 19135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19171,
											"end": 19173,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 19151,
											"end": 19169,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19151,
											"end": 19169,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19151,
											"end": 19169,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19144,
											"end": 19174,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19210,
											"end": 19244,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 19190,
											"end": 19208,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 19190,
											"end": 19208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19190,
											"end": 19208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19183,
											"end": 19245,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19261,
											"end": 19279,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 19261,
											"end": 19279,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19261,
											"end": 19279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19254,
											"end": 19286,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19303,
											"end": 19322,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 19303,
											"end": 19322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 18930,
											"end": 19328,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "tag",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 9714,
											"end": 9785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9828,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9840,
											"end": 9863,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9863,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9819,
											"end": 9837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9857,
											"end": 9863,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "tag",
											"source": 2,
											"value": "419"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9947,
											"end": 9948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9921,
											"end": 9958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 1516,
											"end": 1693,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9969,
											"end": 10017,
											"name": "tag",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 9969,
											"end": 10017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9513,
											"end": 10024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "tag",
											"source": 2,
											"value": "361"
										},
										{
											"begin": 11098,
											"end": 11539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11272,
											"end": 11279,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11255,
											"end": 11264,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "tag",
											"source": 2,
											"value": "424"
										},
										{
											"begin": 11255,
											"end": 11280,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11280,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11280,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11294,
											"end": 11310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11294,
											"end": 11331,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11290,
											"end": 11533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 11290,
											"end": 11533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11375,
											"end": 11381,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11371,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11381,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11355,
											"end": 11381,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19535,
											"end": 19537,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19517,
											"end": 19538,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19574,
											"end": 19576,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 19554,
											"end": 19572,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19554,
											"end": 19572,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19554,
											"end": 19572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19547,
											"end": 19577,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19613,
											"end": 19644,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 19593,
											"end": 19611,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 19593,
											"end": 19611,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19593,
											"end": 19611,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19586,
											"end": 19645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19662,
											"end": 19680,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 19662,
											"end": 19680,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 19333,
											"end": 19686,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "tag",
											"source": 2,
											"value": "426"
										},
										{
											"begin": 11347,
											"end": 11415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 11466,
											"end": 11471,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11473,
											"end": 11480,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11501,
											"end": 11507,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11482,
											"end": 11498,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11482,
											"end": 11507,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11457,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 11457,
											"end": 11508,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7812,
											"end": 8463,
											"name": "tag",
											"source": 2,
											"value": "363"
										},
										{
											"begin": 7812,
											"end": 8463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7938,
											"end": 7956,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19893,
											"end": 19895,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19875,
											"end": 19896,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19932,
											"end": 19934,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 19912,
											"end": 19930,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 19912,
											"end": 19930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19912,
											"end": 19930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19905,
											"end": 19935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19971,
											"end": 20005,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 19951,
											"end": 19969,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 19951,
											"end": 19969,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19951,
											"end": 19969,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19944,
											"end": 20006,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20022,
											"end": 20040,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 20022,
											"end": 20040,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20022,
											"end": 20040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20015,
											"end": 20050,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20067,
											"end": 20086,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 20067,
											"end": 20086,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 19691,
											"end": 20092,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "tag",
											"source": 2,
											"value": "431"
										},
										{
											"begin": 7930,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8016,
											"end": 8032,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8016,
											"end": 8032,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20299,
											"end": 20301,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20281,
											"end": 20302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20338,
											"end": 20340,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20318,
											"end": 20336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20311,
											"end": 20341,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20377,
											"end": 20411,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20350,
											"end": 20412,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20428,
											"end": 20446,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 20428,
											"end": 20446,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20428,
											"end": 20446,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20421,
											"end": 20454,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20471,
											"end": 20490,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 20471,
											"end": 20490,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 20097,
											"end": 20496,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "tag",
											"source": 2,
											"value": "434"
										},
										{
											"begin": 8008,
											"end": 8072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8132,
											"end": 8151,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8187,
											"end": 8208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20703,
											"end": 20705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20685,
											"end": 20706,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20742,
											"end": 20744,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 20722,
											"end": 20740,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 20722,
											"end": 20740,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20722,
											"end": 20740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20715,
											"end": 20745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20781,
											"end": 20815,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 20761,
											"end": 20779,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 20761,
											"end": 20779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20761,
											"end": 20779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20754,
											"end": 20816,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20832,
											"end": 20850,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 20832,
											"end": 20850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20832,
											"end": 20850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20825,
											"end": 20861,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20878,
											"end": 20897,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 20878,
											"end": 20897,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 20501,
											"end": 20903,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "tag",
											"source": 2,
											"value": "438"
										},
										{
											"begin": 8179,
											"end": 8251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8303,
											"end": 8323,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8323,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8356,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8285,
											"end": 8300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8323,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8343,
											"end": 8366,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8397,
											"end": 8399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8391,
											"end": 8395,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8401,
											"end": 8407,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1516,
											"end": 1693,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8382,
											"end": 8408,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8419,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 9448,
											"end": 10024,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 1104,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 929,
											"end": 939,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1176,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2269,
											"end": 2428,
											"name": "tag",
											"source": 2,
											"value": "377"
										},
										{
											"begin": 2269,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "PUSH",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2381,
											"end": 2386,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "421"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2411,
											"name": "PUSH",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2404,
											"end": 2411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 850,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 692,
											"end": 850,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4910,
											"end": 4923,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 4902,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 795,
											"end": 796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 788,
											"end": 792,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 788,
											"end": 796,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 780,
											"end": 822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 780,
											"end": 822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 21110,
											"end": 21112,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 780,
											"end": 822,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 21092,
											"end": 21113,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21149,
											"end": 21151,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 21129,
											"end": 21147,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 21129,
											"end": 21147,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21129,
											"end": 21147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21122,
											"end": 21152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "45524332304361707065643A20636170206973203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21168,
											"end": 21186,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 21168,
											"end": 21186,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21168,
											"end": 21186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21161,
											"end": 21212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21229,
											"end": 21247,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 21229,
											"end": 21247,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 780,
											"end": 822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 20908,
											"end": 21253,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 780,
											"end": 822,
											"name": "tag",
											"source": 4,
											"value": "460"
										},
										{
											"begin": 780,
											"end": 822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 832,
											"end": 836,
											"name": "PUSH",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 832,
											"end": 843,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 692,
											"end": 850,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8739,
											"end": 9128,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 8739,
											"end": 9128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8822,
											"end": 8843,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8843,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 21460,
											"end": 21462,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21442,
											"end": 21463,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21499,
											"end": 21501,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 21479,
											"end": 21497,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 21479,
											"end": 21497,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21479,
											"end": 21497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21472,
											"end": 21502,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21538,
											"end": 21571,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 21518,
											"end": 21536,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 21518,
											"end": 21536,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21518,
											"end": 21536,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21511,
											"end": 21572,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21589,
											"end": 21607,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 21589,
											"end": 21607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 21258,
											"end": 21613,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "tag",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 8814,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8966,
											"end": 8972,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8962,
											"name": "PUSH",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 8950,
											"end": 8962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "tag",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8950,
											"end": 8972,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 8991,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9004,
											"end": 9010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "tag",
											"source": 2,
											"value": "469"
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8982,
											"end": 9010,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1662,
											"end": 1687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9042,
											"end": 9043,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9042,
											"end": 9043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1650,
											"end": 1652,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9062,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2116,
											"end": 2263,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "219"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "474"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "178"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "474"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "476"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "476"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "477"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "477"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "478"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "478"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "480"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "480"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "259"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "262"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "261"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "485"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "485"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "481"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "488"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "480"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "488"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "502"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "504"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 9,
											"value": "505"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 747,
											"name": "tag",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 616,
											"end": 747,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 691,
											"end": 722,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 691,
											"end": 722,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 681,
											"end": 723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 681,
											"end": 723,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 671,
											"end": 741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 671,
											"end": 741,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 737,
											"end": 738,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 735,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 727,
											"end": 739,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 752,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 752,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 811,
											"end": 817,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 864,
											"end": 866,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 843,
											"end": 850,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 839,
											"end": 862,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 835,
											"end": 867,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 832,
											"end": 884,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 832,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 832,
											"end": 884,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 878,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 870,
											"end": 882,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 832,
											"end": 884,
											"name": "tag",
											"source": 9,
											"value": "509"
										},
										{
											"begin": 832,
											"end": 884,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 919,
											"end": 928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 906,
											"end": 929,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 938,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 963,
											"end": 968,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 938,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 938,
											"end": 969,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1511,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1196,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1264,
											"end": 1270,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1325,
											"end": 1327,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1313,
											"end": 1322,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1304,
											"end": 1311,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1300,
											"end": 1323,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1296,
											"end": 1328,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1339,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1331,
											"end": 1343,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "tag",
											"source": 9,
											"value": "513"
										},
										{
											"begin": 1293,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1380,
											"end": 1389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1367,
											"end": 1390,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 1424,
											"end": 1429,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "tag",
											"source": 9,
											"value": "514"
										},
										{
											"begin": 1399,
											"end": 1430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1486,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1505,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1473,
											"end": 1505,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1196,
											"end": 1511,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1775,
											"end": 1781,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1846,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1832,
											"end": 1841,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1823,
											"end": 1830,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1819,
											"end": 1842,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1815,
											"end": 1847,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 1861,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1850,
											"end": 1862,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "tag",
											"source": 9,
											"value": "517"
										},
										{
											"begin": 1812,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1908,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1886,
											"end": 1909,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 1943,
											"end": 1948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "tag",
											"source": 9,
											"value": "518"
										},
										{
											"begin": 1918,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1968,
											"end": 1973,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2010,
											"end": 2028,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "tag",
											"source": 9,
											"value": "519"
										},
										{
											"begin": 2038,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2090,
											"end": 2097,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2144,
											"end": 2146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2116,
											"end": 2148,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2116,
											"end": 2148,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 2154,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2159,
											"end": 2286,
											"name": "tag",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 2159,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2230,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2215,
											"end": 2218,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2211,
											"end": 2231,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2208,
											"end": 2209,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2251,
											"end": 2255,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2248,
											"end": 2249,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2241,
											"end": 2256,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2279,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2280,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "tag",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2362,
											"end": 2364,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2427,
											"end": 2429,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2408,
											"end": 2421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2431,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2432,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2447,
											"end": 2481,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2447,
											"end": 2481,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2506,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2529,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2441,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 2441,
											"end": 2529,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "tag",
											"source": 9,
											"value": "523"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2545,
											"end": 2547,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2291,
											"end": 2566,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 2571,
											"end": 3102,
											"name": "tag",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 2571,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2614,
											"end": 2619,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2670,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2648,
											"end": 2665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2644,
											"end": 2671,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 2634,
											"end": 2689,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2685,
											"end": 2686,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2683,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2675,
											"end": 2687,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2689,
											"name": "tag",
											"source": 9,
											"value": "525"
										},
										{
											"begin": 2634,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2721,
											"end": 2727,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2708,
											"end": 2728,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2743,
											"end": 2745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2740,
											"end": 2766,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2789,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2737,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 2737,
											"end": 2789,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "tag",
											"source": 9,
											"value": "527"
										},
										{
											"begin": 2769,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2837,
											"end": 2850,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 2850,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2833,
											"end": 2860,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2866,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2829,
											"end": 2867,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "tag",
											"source": 9,
											"value": "528"
										},
										{
											"begin": 2813,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2893,
											"end": 2895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2884,
											"end": 2891,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2942,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2932,
											"end": 2936,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 2925,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2911,
											"end": 2937,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2908,
											"end": 2943,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2956,
											"end": 2957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2958,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "tag",
											"source": 9,
											"value": "529"
										},
										{
											"begin": 2905,
											"end": 2960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3023,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3014,
											"end": 3018,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3006,
											"end": 3012,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2995,
											"end": 2999,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2986,
											"end": 2993,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2969,
											"end": 3024,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 3069,
											"end": 3070,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3060,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3060,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3044,
											"end": 3060,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3062,
											"end": 3066,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3040,
											"end": 3067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3071,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3071,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3048,
											"end": 3055,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2571,
											"end": 3102,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2571,
											"end": 3102,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "tag",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3193,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3173,
											"end": 3193,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3233,
											"end": 3237,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3222,
											"end": 3238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3238,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3239,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 3202,
											"end": 3257,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3253,
											"end": 3254,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3251,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3255,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3257,
											"name": "tag",
											"source": 9,
											"value": "531"
										},
										{
											"begin": 3202,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3107,
											"end": 3263,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3422,
											"end": 3428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3483,
											"end": 3486,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3471,
											"end": 3480,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3462,
											"end": 3469,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3481,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3454,
											"end": 3487,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3501,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3497,
											"end": 3498,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 3502,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "tag",
											"source": 9,
											"value": "533"
										},
										{
											"begin": 3451,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3549,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3527,
											"end": 3550,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3610,
											"end": 3612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3599,
											"end": 3613,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3624,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3616,
											"end": 3628,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "tag",
											"source": 9,
											"value": "534"
										},
										{
											"begin": 3596,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 3691,
											"end": 3698,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3680,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3667,
											"end": 3689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "tag",
											"source": 9,
											"value": "535"
										},
										{
											"begin": 3649,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3699,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3639,
											"end": 3699,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3752,
											"end": 3754,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3741,
											"end": 3750,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3755,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 3756,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3756,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3756,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3781,
											"end": 3783,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3768,
											"end": 3784,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3797,
											"end": 3798,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3794,
											"end": 3795,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3787,
											"end": 3799,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "tag",
											"source": 9,
											"value": "536"
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 3864,
											"end": 3871,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 3853,
											"end": 3861,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3851,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 3862,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "493"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "tag",
											"source": 9,
											"value": "537"
										},
										{
											"begin": 3820,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3872,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3810,
											"end": 3872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 3923,
											"end": 3925,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 3908,
											"end": 3926,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "tag",
											"source": 9,
											"value": "538"
										},
										{
											"begin": 3891,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3927,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3881,
											"end": 3927,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 3976,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3946,
											"end": 3978,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3936,
											"end": 3978,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3936,
											"end": 3978,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4025,
											"end": 4028,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4014,
											"end": 4023,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4010,
											"end": 4029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3997,
											"end": 4030,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4030,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3987,
											"end": 4030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4077,
											"end": 4080,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4066,
											"end": 4075,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4081,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4049,
											"end": 4082,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 4088,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 4282,
											"end": 4940,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 4282,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4505,
											"end": 4526,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4526,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4526,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4588,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4575,
											"end": 4588,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4619,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4619,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4597,
											"end": 4619,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4453,
											"end": 4455,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4691,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4691,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4691,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4691,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4652,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4424,
											"end": 4428,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "tag",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4733,
											"end": 4739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4727,
											"end": 4740,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4798,
											"end": 4811,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4798,
											"end": 4811,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4794,
											"end": 4833,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4782,
											"end": 4834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4889,
											"end": 4904,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4889,
											"end": 4904,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4889,
											"end": 4904,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4889,
											"end": 4904,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4830,
											"end": 4831,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4748,
											"end": 4757,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "541"
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "tag",
											"source": 9,
											"value": "543"
										},
										{
											"begin": 4719,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4931,
											"end": 4934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 4934,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 4282,
											"end": 4940,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4940,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5153,
											"end": 5336,
											"name": "tag",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 5153,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5213,
											"end": 5217,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5238,
											"end": 5244,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5265,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5288,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5232,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 5232,
											"end": 5288,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "491"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "tag",
											"source": 9,
											"value": "547"
										},
										{
											"begin": 5268,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5313,
											"end": 5314,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5309,
											"end": 5323,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5305,
											"end": 5330,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5153,
											"end": 5336,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 5341,
											"end": 6307,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 5341,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5425,
											"end": 5431,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5456,
											"end": 5458,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5501,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5487,
											"end": 5496,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5485,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5497,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5470,
											"end": 5502,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5515,
											"end": 5516,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5512,
											"end": 5513,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5505,
											"end": 5517,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "tag",
											"source": 9,
											"value": "549"
										},
										{
											"begin": 5467,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5542,
											"end": 5565,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5580,
											"end": 5586,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5577,
											"end": 5607,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5617,
											"end": 5618,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5622,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "tag",
											"source": 9,
											"value": "550"
										},
										{
											"begin": 5574,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5643,
											"end": 5665,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5643,
											"end": 5665,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5696,
											"end": 5700,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5688,
											"end": 5701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5688,
											"end": 5701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5684,
											"end": 5711,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 5674,
											"end": 5729,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5725,
											"end": 5726,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5715,
											"end": 5727,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5729,
											"name": "tag",
											"source": 9,
											"value": "551"
										},
										{
											"begin": 5674,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5761,
											"end": 5763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5748,
											"end": 5764,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 5840,
											"end": 5842,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "tag",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 5800,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "492"
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "tag",
											"source": 9,
											"value": "552"
										},
										{
											"begin": 5784,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5878,
											"end": 5893,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 5961,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5956,
											"end": 5966,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 5948,
											"end": 5967,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5948,
											"end": 5967,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 5972,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 5972,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5944,
											"end": 5972,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5909,
											"end": 5921,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5984,
											"end": 6003,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6016,
											"end": 6017,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6014,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6018,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "tag",
											"source": 9,
											"value": "554"
										},
										{
											"begin": 5981,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6040,
											"end": 6051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "tag",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6071,
											"end": 6074,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6083,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6156,
											"end": 6159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6143,
											"end": 6160,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "tag",
											"source": 9,
											"value": "558"
										},
										{
											"begin": 6173,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6217,
											"end": 6235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6093,
											"end": 6105,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6255,
											"end": 6267,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "555"
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "tag",
											"source": 9,
											"value": "557"
										},
										{
											"begin": 6060,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6296,
											"end": 6301,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 5341,
											"end": 6307,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5341,
											"end": 6307,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6312,
											"end": 6492,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 6312,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6412,
											"end": 6421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6403,
											"end": 6410,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6422,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6395,
											"end": 6427,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6437,
											"end": 6438,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6442,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "tag",
											"source": 9,
											"value": "560"
										},
										{
											"begin": 6392,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6463,
											"end": 6486,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6312,
											"end": 6492,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6492,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6573,
											"end": 6579,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6626,
											"end": 6628,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6614,
											"end": 6623,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6605,
											"end": 6612,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6624,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6597,
											"end": 6629,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6642,
											"end": 6643,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6639,
											"end": 6640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6632,
											"end": 6644,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "tag",
											"source": 9,
											"value": "562"
										},
										{
											"begin": 6594,
											"end": 6646,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6668,
											"end": 6691,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 6725,
											"end": 6730,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "tag",
											"source": 9,
											"value": "563"
										},
										{
											"begin": 6700,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6750,
											"end": 6755,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6807,
											"end": 6809,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6792,
											"end": 6810,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6792,
											"end": 6810,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6779,
											"end": 6811,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 6779,
											"end": 6811,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "tag",
											"source": 9,
											"value": "564"
										},
										{
											"begin": 6820,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6872,
											"end": 6879,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6879,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6862,
											"end": 6879,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6497,
											"end": 6885,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 6890,
											"end": 7552,
											"name": "tag",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 6890,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6944,
											"end": 6949,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6997,
											"end": 7000,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 6994,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6982,
											"end": 6988,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6978,
											"end": 6995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6974,
											"end": 7001,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 6964,
											"end": 7019,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7013,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7005,
											"end": 7017,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6964,
											"end": 7019,
											"name": "tag",
											"source": 9,
											"value": "566"
										},
										{
											"begin": 6964,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7051,
											"end": 7057,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7038,
											"end": 7058,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7077,
											"end": 7081,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7101,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 7117,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 7157,
											"end": 7159,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7117,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 7117,
											"end": 7160,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7101,
											"end": 7161,
											"name": "tag",
											"source": 9,
											"value": "567"
										},
										{
											"begin": 7101,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7195,
											"end": 7210,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7281,
											"end": 7282,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7277,
											"end": 7287,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7288,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7265,
											"end": 7288,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7293,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7261,
											"end": 7293,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7238,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7226,
											"end": 7238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7305,
											"end": 7320,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7333,
											"end": 7334,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7331,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "tag",
											"source": 9,
											"value": "569"
										},
										{
											"begin": 7302,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7369,
											"end": 7371,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7372,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "tag",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7397,
											"end": 7403,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7389,
											"end": 7404,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7480,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7480,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7451,
											"end": 7481,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7451,
											"end": 7481,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7501,
											"end": 7513,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7501,
											"end": 7513,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7501,
											"end": 7513,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7501,
											"end": 7513,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7414,
											"end": 7426,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7414,
											"end": 7426,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "570"
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "tag",
											"source": 9,
											"value": "572"
										},
										{
											"begin": 7381,
											"end": 7523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7541,
											"end": 7546,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 7552,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6890,
											"end": 7552,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7751,
											"end": 7757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7765,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7773,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7781,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7783,
											"end": 7789,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7799,
											"end": 7805,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7855,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 7840,
											"end": 7849,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 7831,
											"end": 7838,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7850,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7823,
											"end": 7856,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7869,
											"end": 7870,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7866,
											"end": 7867,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7859,
											"end": 7871,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "tag",
											"source": 9,
											"value": "574"
										},
										{
											"begin": 7820,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7917,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7895,
											"end": 7918,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 7952,
											"end": 7957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "490"
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "tag",
											"source": 9,
											"value": "575"
										},
										{
											"begin": 7927,
											"end": 7958,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7977,
											"end": 7982,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8001,
											"end": 8003,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8022,
											"end": 8054,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8022,
											"end": 8054,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8086,
											"end": 8104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8105,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8073,
											"end": 8105,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8152,
											"end": 8154,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8137,
											"end": 8155,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8137,
											"end": 8155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8156,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8124,
											"end": 8156,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8210,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 8192,
											"end": 8211,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8179,
											"end": 8212,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8261,
											"end": 8275,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8261,
											"end": 8275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8261,
											"end": 8275,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8289,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8278,
											"end": 8290,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "tag",
											"source": 9,
											"value": "576"
										},
										{
											"begin": 8258,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8326,
											"end": 8332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8315,
											"end": 8324,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8301,
											"end": 8333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8378,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 8364,
											"end": 8368,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 8360,
											"end": 8362,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8356,
											"end": 8369,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8352,
											"end": 8379,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8342,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 8342,
											"end": 8397,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8393,
											"end": 8394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8391,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8383,
											"end": 8395,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8342,
											"end": 8397,
											"name": "tag",
											"source": 9,
											"value": "577"
										},
										{
											"begin": 8342,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8416,
											"end": 8432,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8452,
											"end": 8512,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 8468,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "553"
										},
										{
											"begin": 8508,
											"end": 8510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8468,
											"end": 8511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "495"
										},
										{
											"begin": 8468,
											"end": 8511,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8452,
											"end": 8512,
											"name": "tag",
											"source": 9,
											"value": "578"
										},
										{
											"begin": 8452,
											"end": 8512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 8561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 8561,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8546,
											"end": 8561,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8628,
											"end": 8629,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8635,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8635,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8612,
											"end": 8640,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8612,
											"end": 8640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8612,
											"end": 8640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8577,
											"end": 8589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "DUP15",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8684,
											"end": 8685,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8674,
											"end": 8686,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "tag",
											"source": 9,
											"value": "580"
										},
										{
											"begin": 8649,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8708,
											"end": 8719,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8708,
											"end": 8719,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8708,
											"end": 8719,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8708,
											"end": 8719,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "tag",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8744,
											"end": 8750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8739,
											"end": 8742,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8736,
											"end": 8751,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 8827,
											"end": 8830,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "494"
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "tag",
											"source": 9,
											"value": "584"
										},
										{
											"begin": 8810,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8832,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8832,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8761,
											"end": 8773,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8852,
											"end": 8864,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "581"
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "tag",
											"source": 9,
											"value": "583"
										},
										{
											"begin": 8728,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8893,
											"end": 8898,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8951,
											"end": 8954,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 8936,
											"end": 8955,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 8936,
											"end": 8955,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8923,
											"end": 8956,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8923,
											"end": 8956,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8968,
											"end": 8984,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8984,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8968,
											"end": 8984,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8997,
											"end": 8998,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8994,
											"end": 8995,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8987,
											"end": 8999,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "tag",
											"source": 9,
											"value": "585"
										},
										{
											"begin": 8965,
											"end": 9001,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 9075,
											"end": 9082,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 9064,
											"end": 9072,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9062,
											"name": "DUP14",
											"source": 9
										},
										{
											"begin": 9049,
											"end": 9073,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "tag",
											"source": 9,
											"value": "586"
										},
										{
											"begin": 9020,
											"end": 9083,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9083,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9083,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9136,
											"end": 9139,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 9125,
											"end": 9134,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 9121,
											"end": 9140,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9108,
											"end": 9141,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 9092,
											"end": 9141,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9092,
											"end": 9141,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9166,
											"end": 9168,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9156,
											"end": 9164,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9153,
											"end": 9169,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9182,
											"end": 9183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9180,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9172,
											"end": 9184,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "tag",
											"source": 9,
											"value": "587"
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9150,
											"end": 9186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 9260,
											"end": 9267,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 9249,
											"end": 9257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9238,
											"end": 9247,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9258,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "496"
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "tag",
											"source": 9,
											"value": "588"
										},
										{
											"begin": 9205,
											"end": 9268,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9268,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9195,
											"end": 9268,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7557,
											"end": 9274,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9358,
											"end": 9359,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9401,
											"end": 9413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9401,
											"end": 9413,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9401,
											"end": 9413,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9422,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 9422,
											"end": 9483,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9476,
											"end": 9480,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 9468,
											"end": 9474,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9464,
											"end": 9481,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9481,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9454,
											"end": 9481,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9422,
											"end": 9483,
											"name": "tag",
											"source": 9,
											"value": "590"
										},
										{
											"begin": 9422,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9529,
											"end": 9531,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9521,
											"end": 9527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9518,
											"end": 9532,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9498,
											"end": 9516,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9495,
											"end": 9533,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9575,
											"end": 9585,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 9570,
											"end": 9573,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9566,
											"end": 9586,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 9563,
											"end": 9564,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9556,
											"end": 9587,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9610,
											"end": 9614,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 9607,
											"end": 9608,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9600,
											"end": 9615,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9638,
											"end": 9642,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9635,
											"end": 9636,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9628,
											"end": 9643,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "tag",
											"source": 9,
											"value": "591"
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9492,
											"end": 9653,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9659,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10079,
											"end": 10206,
											"name": "tag",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 10079,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10140,
											"end": 10150,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10135,
											"end": 10138,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10131,
											"end": 10151,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10128,
											"end": 10129,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10121,
											"end": 10152,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10171,
											"end": 10175,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10168,
											"end": 10169,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10161,
											"end": 10176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10199,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10185,
											"end": 10200,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10633,
											"name": "tag",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 10211,
											"end": 10633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10300,
											"end": 10301,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10343,
											"end": 10348,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10300,
											"end": 10301,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "tag",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10378,
											"end": 10385,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10368,
											"end": 10376,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10365,
											"end": 10386,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10437,
											"end": 10441,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10433,
											"end": 10434,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10429,
											"end": 10435,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 10425,
											"end": 10442,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10419,
											"end": 10423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10416,
											"end": 10443,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10413,
											"end": 10466,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10413,
											"end": 10466,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 10413,
											"end": 10466,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "tag",
											"source": 9,
											"value": "599"
										},
										{
											"begin": 10446,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10496,
											"end": 10503,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10486,
											"end": 10494,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 10482,
											"end": 10504,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10534,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 10479,
											"end": 10534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10532,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10532,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10532,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10516,
											"end": 10532,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10479,
											"end": 10534,
											"name": "tag",
											"source": 9,
											"value": "600"
										},
										{
											"begin": 10479,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10617,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10617,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10617,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 10595,
											"end": 10617,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 10570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 10570,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 10570,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 10555,
											"end": 10570,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "595"
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "tag",
											"source": 9,
											"value": "597"
										},
										{
											"begin": 10357,
											"end": 10627,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10361,
											"end": 10364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10633,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10633,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10633,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10633,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10633,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 10638,
											"end": 11444,
											"name": "tag",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 10638,
											"end": 11444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10687,
											"end": 10692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10717,
											"end": 10725,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10707,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 10707,
											"end": 10787,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10758,
											"end": 10759,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10772,
											"end": 10777,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 10772,
											"end": 10777,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10707,
											"end": 10787,
											"name": "tag",
											"source": 9,
											"value": "602"
										},
										{
											"begin": 10707,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10806,
											"end": 10810,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10796,
											"end": 10872,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 10796,
											"end": 10872,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10843,
											"end": 10844,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 10857,
											"end": 10862,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10796,
											"end": 10872,
											"name": "tag",
											"source": 9,
											"value": "603"
										},
										{
											"begin": 10796,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10888,
											"end": 10892,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10901,
											"end": 10960,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 10960,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 10901,
											"end": 10960,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10974,
											"end": 10975,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10969,
											"end": 11099,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10969,
											"end": 11099,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 10969,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 10969,
											"end": 11099,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 11099,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 10881,
											"end": 11099,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10901,
											"end": 10960,
											"name": "tag",
											"source": 9,
											"value": "605"
										},
										{
											"begin": 10901,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10931,
											"end": 10932,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10922,
											"end": 10932,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10922,
											"end": 10932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 10950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10945,
											"end": 10950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 10945,
											"end": 10950,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10969,
											"end": 11099,
											"name": "tag",
											"source": 9,
											"value": "606"
										},
										{
											"begin": 10969,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11006,
											"end": 11009,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 10996,
											"end": 11004,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10993,
											"end": 11010,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11033,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 10990,
											"end": 11033,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "tag",
											"source": 9,
											"value": "608"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11069,
											"end": 11070,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 11055,
											"end": 11071,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11055,
											"end": 11071,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 11084,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 11084,
											"end": 11089,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 11099,
											"name": "tag",
											"source": 9,
											"value": "604"
										},
										{
											"begin": 10881,
											"end": 11099,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10881,
											"end": 11099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11183,
											"end": 11185,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11173,
											"end": 11181,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11170,
											"end": 11186,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11164,
											"end": 11167,
											"name": "PUSH",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 11158,
											"end": 11162,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11155,
											"end": 11168,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11151,
											"end": 11187,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11145,
											"end": 11147,
											"name": "PUSH",
											"source": 9,
											"value": "4E"
										},
										{
											"begin": 11135,
											"end": 11143,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11132,
											"end": 11148,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11127,
											"end": 11129,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 11121,
											"end": 11125,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11118,
											"end": 11130,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 11114,
											"end": 11149,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11111,
											"end": 11188,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 11108,
											"end": 11267,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11108,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 11108,
											"end": 11267,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11220,
											"end": 11239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11239,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11220,
											"end": 11239,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "184"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11108,
											"end": 11267,
											"name": "tag",
											"source": 9,
											"value": "609"
										},
										{
											"begin": 11108,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11299,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 11324,
											"end": 11332,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11318,
											"end": 11322,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11299,
											"end": 11333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "498"
										},
										{
											"begin": 11299,
											"end": 11333,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11299,
											"end": 11333,
											"name": "tag",
											"source": 9,
											"value": "610"
										},
										{
											"begin": 11299,
											"end": 11333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11369,
											"end": 11375,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11365,
											"end": 11366,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11361,
											"end": 11367,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11357,
											"end": 11376,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11348,
											"end": 11355,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11345,
											"end": 11377,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11400,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11342,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 11342,
											"end": 11400,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "tag",
											"source": 9,
											"value": "612"
										},
										{
											"begin": 11380,
											"end": 11398,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11418,
											"end": 11438,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11418,
											"end": 11438,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 10638,
											"end": 11444,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10638,
											"end": 11444,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11449,
											"end": 11589,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 11449,
											"end": 11589,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11507,
											"end": 11512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11536,
											"end": 11583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 11577,
											"end": 11581,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 11567,
											"end": 11575,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11563,
											"end": 11582,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11557,
											"end": 11561,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11536,
											"end": 11583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "499"
										},
										{
											"begin": 11536,
											"end": 11583,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11594,
											"end": 11762,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 11594,
											"end": 11762,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11634,
											"end": 11641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11700,
											"end": 11701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11696,
											"end": 11697,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11692,
											"end": 11698,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 11688,
											"end": 11702,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 11685,
											"end": 11686,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11682,
											"end": 11703,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11677,
											"end": 11678,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11670,
											"end": 11679,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11663,
											"end": 11680,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11659,
											"end": 11704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 11656,
											"end": 11727,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11656,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 11656,
											"end": 11727,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "tag",
											"source": 9,
											"value": "617"
										},
										{
											"begin": 11707,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11594,
											"end": 11762,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 11966,
											"end": 12094,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 11966,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12006,
											"end": 12009,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12033,
											"end": 12039,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 12030,
											"end": 12031,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12027,
											"end": 12040,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12063,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12024,
											"end": 12063,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 12024,
											"end": 12063,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12043,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 12043,
											"end": 12061,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 12043,
											"end": 12061,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12043,
											"end": 12061,
											"name": "tag",
											"source": 9,
											"value": "621"
										},
										{
											"begin": 12043,
											"end": 12061,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12079,
											"end": 12088,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12079,
											"end": 12088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11966,
											"end": 12094,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 12505,
											"end": 12630,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 12505,
											"end": 12630,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12545,
											"end": 12549,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12573,
											"end": 12574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12570,
											"end": 12571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12567,
											"end": 12575,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 12564,
											"end": 12598,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 12564,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 12564,
											"end": 12598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 12578,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 12578,
											"end": 12596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 12578,
											"end": 12596,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 12578,
											"end": 12596,
											"name": "tag",
											"source": 9,
											"value": "625"
										},
										{
											"begin": 12578,
											"end": 12596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12615,
											"end": 12624,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12615,
											"end": 12624,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12505,
											"end": 12630,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14133,
											"end": 14260,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 14133,
											"end": 14260,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14194,
											"end": 14204,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 14189,
											"end": 14192,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 14185,
											"end": 14205,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 14182,
											"end": 14183,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14175,
											"end": 14206,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14225,
											"end": 14229,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 14222,
											"end": 14223,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 14215,
											"end": 14230,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14249,
											"end": 14253,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 14246,
											"end": 14247,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14239,
											"end": 14254,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14843,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 14668,
											"end": 14843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14705,
											"end": 14708,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14749,
											"end": 14753,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14742,
											"end": 14747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14738,
											"end": 14754,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14778,
											"end": 14782,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 14769,
											"end": 14776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14766,
											"end": 14783,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14763,
											"end": 14806,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14763,
											"end": 14806,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 14763,
											"end": 14806,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 14786,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 14786,
											"end": 14804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 14786,
											"end": 14804,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 14786,
											"end": 14804,
											"name": "tag",
											"source": 9,
											"value": "633"
										},
										{
											"begin": 14786,
											"end": 14804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14835,
											"end": 14836,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 14822,
											"end": 14837,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14822,
											"end": 14837,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14668,
											"end": 14843,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14668,
											"end": 14843,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 14848,
											"end": 15057,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 14848,
											"end": 15057,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14886,
											"end": 14889,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14967,
											"end": 14969,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 14960,
											"end": 14965,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14956,
											"end": 14970,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 14994,
											"end": 14996,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14985,
											"end": 14992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14982,
											"end": 14997,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 14979,
											"end": 15020,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 14979,
											"end": 15020,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 14979,
											"end": 15020,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 15000,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 15000,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "497"
										},
										{
											"begin": 15000,
											"end": 15018,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 15000,
											"end": 15018,
											"name": "tag",
											"source": 9,
											"value": "636"
										},
										{
											"begin": 15000,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15049,
											"end": 15050,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 15036,
											"end": 15051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15036,
											"end": 15051,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 14848,
											"end": 15057,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14848,
											"end": 15057,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17179,
											"end": 17396,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 17179,
											"end": 17396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17219,
											"end": 17220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17245,
											"end": 17246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17235,
											"end": 17367,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 17235,
											"end": 17367,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 17289,
											"end": 17299,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 17284,
											"end": 17287,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 17280,
											"end": 17300,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 17277,
											"end": 17278,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17270,
											"end": 17301,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17324,
											"end": 17328,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 17321,
											"end": 17322,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 17314,
											"end": 17329,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17352,
											"end": 17356,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 17349,
											"end": 17350,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17342,
											"end": 17357,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 17235,
											"end": 17367,
											"name": "tag",
											"source": 9,
											"value": "644"
										},
										{
											"begin": 17235,
											"end": 17367,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17381,
											"end": 17390,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 17381,
											"end": 17390,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17179,
											"end": 17396,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 17401,
											"end": 17808,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 17401,
											"end": 17808,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17585,
											"end": 17606,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 17585,
											"end": 17606,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17585,
											"end": 17606,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17642,
											"end": 17644,
											"name": "PUSH",
											"source": 9,
											"value": "2B"
										},
										{
											"begin": 17622,
											"end": 17640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17622,
											"end": 17640,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17622,
											"end": 17640,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17615,
											"end": 17645,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17681,
											"end": 17715,
											"name": "PUSH",
											"source": 9,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 17676,
											"end": 17678,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17661,
											"end": 17679,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17661,
											"end": 17679,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17654,
											"end": 17716,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17747,
											"end": 17749,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17732,
											"end": 17750,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17725,
											"end": 17766,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17798,
											"end": 17801,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 17783,
											"end": 17802,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17783,
											"end": 17802,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17401,
											"end": 17808,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"_mapSigners(address)": "3de47e32",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"cap()": "355274ea",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"getRewardAmt()": "ac7fa3c6",
							"getTaxFee()": "f66608fe",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize(string,string,uint8,uint256,uint256,uint256)": "2b9a1d3c",
							"mapSigner(address)": "07c351dd",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"permitMint(address,uint256,uint256,uint256,uint8[],bytes32[],bytes32[])": "e4c97e6a",
							"renounceOwnership()": "715018a6",
							"setRewardAmtInWei(uint256)": "b24a0893",
							"setSigners(address[])": "a3772662",
							"setTaxFee(uint256)": "c4081a4c",
							"signers()": "46f0975a",
							"symbol()": "95d89b41",
							"totalBurned()": "d89135cd",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniqueIdExists(uint256)": "f9342285",
							"userTotalBurned(address)": "1e0d4ce9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_mapSigners\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardAmt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_NAME\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_SYMBOL\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_DECIMALS\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"taxFee\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"mapSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"uniqueId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8[]\",\"name\":\"v\",\"type\":\"uint8[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"r\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"s\",\"type\":\"bytes32[]\"}],\"name\":\"permitMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newAmt\",\"type\":\"uint256\"}],\"name\":\"setRewardAmtInWei\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"signers_\",\"type\":\"address[]\"}],\"name\":\"setSigners\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newTaxFee\",\"type\":\"uint256\"}],\"name\":\"setTaxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uniqueIdExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userTotalBurned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DeAnt3Token.sol\":\"DeAnt3Token\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x7c7ac0bc6c340a7f320524b9a4b4b079ee9da3c51258080d4bab237f329a427c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7000057dd28a5fd92e5687c2ee6044181531bab0fcb0e5003cbe33ae024d06d\",\"dweb:/ipfs/QmZYhnjEQxVqVcLMJMS7VbhuMSCNM4YCgom1wg5borSp18\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0xc707bc7f15de49a0c4da261822a3075d8c171b3c08543fc8f0d0021b8d227b92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3c294a8ff16f223772b520a7b823dff54458ba98e6da4ffe9a3a427a16a47c6\",\"dweb:/ipfs/QmRbZ5hdJzUMVAai2Zpc8YdSuPWxeNPV1aiosRySrEuQpu\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"contracts/DeAnt3Token.sol\":{\"keccak256\":\"0x50920807cc65763947bdd512f9cf8d03d194caed8c4a92f9e7664f8cca9deafc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27728a1236a0b9b689ca1df2ce266c6ab4c6dce99af23a538bdd491edf16d39\",\"dweb:/ipfs/Qme3QWhr9FDj5rM9dunMCkrDsrnkmh58VgLDwxVaHFoWQk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 141,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1367,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 301,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 307,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 309,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 311,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 313,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 892,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 982,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_cap",
								"offset": 0,
								"slot": "101",
								"type": "t_uint256"
							},
							{
								"astId": 1057,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 10,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_owner",
								"offset": 0,
								"slot": "152",
								"type": "t_address"
							},
							{
								"astId": 130,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "__gap",
								"offset": 0,
								"slot": "153",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1378,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_name",
								"offset": 0,
								"slot": "202",
								"type": "t_string_storage"
							},
							{
								"astId": 1380,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "203",
								"type": "t_string_storage"
							},
							{
								"astId": 1382,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "204",
								"type": "t_uint8"
							},
							{
								"astId": 1384,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_rewardAmt",
								"offset": 0,
								"slot": "205",
								"type": "t_uint256"
							},
							{
								"astId": 1386,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_cap",
								"offset": 0,
								"slot": "206",
								"type": "t_uint256"
							},
							{
								"astId": 1388,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_taxFee",
								"offset": 0,
								"slot": "207",
								"type": "t_uint256"
							},
							{
								"astId": 1390,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "totalBurned",
								"offset": 0,
								"slot": "208",
								"type": "t_uint256"
							},
							{
								"astId": 1393,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_signers",
								"offset": 0,
								"slot": "209",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1397,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "_mapSigners",
								"offset": 0,
								"slot": "210",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1401,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "uniqueIdExists",
								"offset": 0,
								"slot": "211",
								"type": "t_mapping(t_uint256,t_bool)"
							},
							{
								"astId": 1405,
								"contract": "contracts/DeAnt3Token.sol:DeAnt3Token",
								"label": "userTotalBurned",
								"offset": 0,
								"slot": "212",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 132,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 1369,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 132,
							"sourceUnit": 283,
							"src": "169:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "748:13:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "748:13:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1368,
										"src": "763:18:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "763:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "213:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131,
								1368,
								282
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "726:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "804:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "788:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 16,
									"name": "OwnershipTransferred",
									"nameLocation": "823:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "860:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "844:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "891:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "875:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:57:0"
									},
									"src": "817:84:0"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1055:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 22,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1065:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1065:26:0"
											}
										]
									},
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "907:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 20,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 19,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1038:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1012:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1026:2:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1055:0:0"
									},
									"scope": 131,
									"src": "1003:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "1166:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 32,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1353,
																"src": "1195:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1195:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 31,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "1176:32:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 29,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 28,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "1149:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1149:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1113:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1166:0:0"
									},
									"scope": 131,
									"src": "1104:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "1324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 40,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "1334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "1334:13:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "1357:1:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 45,
									"name": "onlyOwner",
									"nameLocation": "1312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1321:2:0"
									},
									"src": "1303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1496:30:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "1513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "1506:13:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1455:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1486:9:0"
									},
									"scope": 131,
									"src": "1441:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1644:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 59,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1662:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1662:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 61,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "1673:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1673:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1662:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 58,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1654:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1654:68:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1532:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1608:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1619:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1644:0:0"
									},
									"scope": 131,
									"src": "1599:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "2125:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2154:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 75,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2154:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2154:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 74,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2135:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 79,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 80,
												"nodeType": "ExpressionStatement",
												"src": "2135:30:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1735:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2115:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2115:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2080:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2097:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2125:0:0"
									},
									"scope": 131,
									"src": "2071:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2391:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 91,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 85,
																"src": "2409:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2429:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2421:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 92,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2421:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2421:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2409:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2433:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2401:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2401:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "2401:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 101,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2503:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 100,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2484:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2484:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "2484:28:0"
											}
										]
									},
									"documentation": {
										"id": 83,
										"nodeType": "StructuredDocumentation",
										"src": "2178:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "2381:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2381:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2356:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2348:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2348:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2347:18:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2391:0:0"
									},
									"scope": 131,
									"src": "2321:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "2736:124:0",
										"statements": [
											{
												"assignments": [
													112
												],
												"declarations": [
													{
														"constant": false,
														"id": 112,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2754:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 124,
														"src": "2746:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 111,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2746:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"initialValue": {
													"id": 113,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 10,
													"src": "2765:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2746:25:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2781:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "2790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2781:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 120,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 112,
															"src": "2834:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 121,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "2844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 119,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "2813:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2813:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 123,
												"nodeType": "EmitStatement",
												"src": "2808:45:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2525:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2682:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "2701:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:18:0"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 131,
									"src": "2673:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "2866:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 130,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3145:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 131,
									"src": "3125:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 127,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3125:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 129,
										"length": {
											"hexValue": "3439",
											"id": 128,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3133:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3125:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 132,
							"src": "708:2445:0",
							"usedErrors": []
						}
					],
					"src": "102:3052:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"Initializable": [
							282
						]
					},
					"id": 283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 283,
							"sourceUnit": 1327,
							"src": "138:44:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "184:2198:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 282,
							"linearizedBaseContracts": [
								282
							],
							"name": "Initializable",
							"nameLocation": "2401:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2421:109:1",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 138,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2549:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2535:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 137,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2535:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "2568:91:1",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 141,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2677:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 282,
									"src": "2664:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 140,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2664:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "2697:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"id": 146,
									"name": "Initialized",
									"nameLocation": "2798:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2810:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 143,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2810:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2809:15:1"
									},
									"src": "2792:33:1"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "3101:483:1",
										"statements": [
											{
												"assignments": [
													150
												],
												"declarations": [
													{
														"constant": false,
														"id": 150,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3116:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 201,
														"src": "3111:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 149,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 153,
												"initialValue": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3133:14:1",
													"subExpression": {
														"id": 151,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "3134:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3111:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 155,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 150,
																			"src": "3179:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 156,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3197:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3212:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3197:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3179:34:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3178:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3219:45:1",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 165,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3258:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$282",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 164,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3250:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 163,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3250:7:1",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 166,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3250:13:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 161,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1326,
																						"src": "3220:18:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1326_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 162,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1101,
																					"src": "3220:29:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 167,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3220:44:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 169,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 138,
																				"src": "3268:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3284:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3268:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3219:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3218:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3178:108:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3300:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 154,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3157:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3157:201:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3157:201:1"
											},
											{
												"expression": {
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 178,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "3368:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3383:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3368:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 181,
												"nodeType": "ExpressionStatement",
												"src": "3368:16:1"
											},
											{
												"condition": {
													"id": 182,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3398:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "IfStatement",
												"src": "3394:65:1",
												"trueBody": {
													"id": 187,
													"nodeType": "Block",
													"src": "3414:45:1",
													"statements": [
														{
															"expression": {
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 183,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3428:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3444:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3428:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 186,
															"nodeType": "ExpressionStatement",
															"src": "3428:20:1"
														}
													]
												}
											},
											{
												"id": 189,
												"nodeType": "PlaceholderStatement",
												"src": "3468:1:1"
											},
											{
												"condition": {
													"id": 190,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 150,
													"src": "3483:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "IfStatement",
												"src": "3479:99:1",
												"trueBody": {
													"id": 199,
													"nodeType": "Block",
													"src": "3499:79:1",
													"statements": [
														{
															"expression": {
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 191,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "3513:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3529:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3513:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 194,
															"nodeType": "ExpressionStatement",
															"src": "3513:21:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3565:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 195,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "3553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3553:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 198,
															"nodeType": "EmitStatement",
															"src": "3548:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "2831:242:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts. Equivalent to `reinitializer(1)`."
									},
									"id": 202,
									"name": "initializer",
									"nameLocation": "3087:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3098:2:1"
									},
									"src": "3078:506:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "4399:255:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4417:14:1",
																"subExpression": {
																	"id": 208,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "4418:13:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 210,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "4435:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 211,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4450:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4435:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4417:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4459:48:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 207,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4409:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4409:99:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "ExpressionStatement",
												"src": "4409:99:1"
											},
											{
												"expression": {
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 217,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "4518:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 218,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4533:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4518:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 220,
												"nodeType": "ExpressionStatement",
												"src": "4518:22:1"
											},
											{
												"expression": {
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 221,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4550:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4566:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4550:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "4550:20:1"
											},
											{
												"id": 225,
												"nodeType": "PlaceholderStatement",
												"src": "4580:1:1"
											},
											{
												"expression": {
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 226,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "4591:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4591:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "ExpressionStatement",
												"src": "4591:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 231,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "4639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 230,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "4627:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4627:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "EmitStatement",
												"src": "4622:25:1"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "3590:766:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n `initializer` is equivalent to `reinitializer(1)`, so a reinitializer may be used after the original\n initialization step. This is essential to configure modules that are added through upgrades and that require\n initialization.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator."
									},
									"id": 235,
									"name": "reinitializer",
									"nameLocation": "4370:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4390:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 204,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4384:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4383:15:1"
									},
									"src": "4361:293:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "4892:97:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 239,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "4910:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4925:45:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 238,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4902:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4902:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "4902:69:1"
											},
											{
												"id": 243,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "4660:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 245,
									"name": "onlyInitializing",
									"nameLocation": "4873:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4889:2:1"
									},
									"src": "4864:125:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "5437:230:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5455:14:1",
															"subExpression": {
																"id": 250,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 141,
																"src": "5456:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5471:41:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 249,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5447:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5447:66:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "5447:66:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 255,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5527:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5547:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 257,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "5547:5:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 256,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5542:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 259,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5542:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "5527:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 279,
												"nodeType": "IfStatement",
												"src": "5523:138:1",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "5559:102:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 262,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "5573:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5593:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 264,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "5593:5:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 263,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "5588:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5588:11:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "5588:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "5573:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "5573:30:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5639:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 272,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "5639:5:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 271,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "5634:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5634:11:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "5634:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 270,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "5622:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5622:28:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 277,
															"nodeType": "EmitStatement",
															"src": "5617:33:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4995:388:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5397:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5417:2:1"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:0:1"
									},
									"scope": 282,
									"src": "5388:279:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 283,
							"src": "2383:3286:1",
							"usedErrors": []
						}
					],
					"src": "113:5557:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"ERC20Upgradeable": [
							893
						],
						"IERC20MetadataUpgradeable": [
							1083
						],
						"IERC20Upgradeable": [
							971
						],
						"Initializable": [
							282
						]
					},
					"id": 894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "./IERC20Upgradeable.sol",
							"id": 285,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 972,
							"src": "130:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
							"file": "./extensions/IERC20MetadataUpgradeable.sol",
							"id": 286,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 1084,
							"src": "164:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 1369,
							"src": "217:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 894,
							"sourceUnit": 283,
							"src": "262:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 290,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "1511:13:2"
									},
									"id": 291,
									"nodeType": "InheritanceSpecifier",
									"src": "1511:13:2"
								},
								{
									"baseName": {
										"id": 292,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1368,
										"src": "1526:18:2"
									},
									"id": 293,
									"nodeType": "InheritanceSpecifier",
									"src": "1526:18:2"
								},
								{
									"baseName": {
										"id": 294,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 971,
										"src": "1546:17:2"
									},
									"id": 295,
									"nodeType": "InheritanceSpecifier",
									"src": "1546:17:2"
								},
								{
									"baseName": {
										"id": 296,
										"name": "IERC20MetadataUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1083,
										"src": "1565:25:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1565:25:2"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 289,
								"nodeType": "StructuredDocumentation",
								"src": "309:1172:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 893,
							"linearizedBaseContracts": [
								893,
								1083,
								971,
								1368,
								282
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1491:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 301,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1633:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1597:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 300,
										"keyType": {
											"id": 298,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1605:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1597:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 299,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1616:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1705:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1649:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 306,
										"keyType": {
											"id": 302,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1657:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1649:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 305,
											"keyType": {
												"id": 303,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1676:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1668:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 304,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1687:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1739:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1723:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 308,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 311,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1773:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1758:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 310,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1758:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1799:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "1784:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 312,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1784:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "2208:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 324,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "2241:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 325,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "2248:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 323,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2218:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2218:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2218:38:2"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1813:298:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 320,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2191:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2191:16:2"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2125:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2152:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2138:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2138:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2173:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "2159:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 317,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2159:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:44:2"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2208:0:2"
									},
									"scope": 893,
									"src": "2116:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "2371:57:2",
										"statements": [
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 338,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "2381:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 339,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2389:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2381:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "2381:13:2"
											},
											{
												"expression": {
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 342,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2404:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 343,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "2414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2404:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 345,
												"nodeType": "ExpressionStatement",
												"src": "2404:17:2"
											}
										]
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 336,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 335,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "2354:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2354:16:2"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2278:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2315:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2301:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 330,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2301:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2336:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "2322:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 332,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2322:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:44:2"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:0:2"
									},
									"scope": 893,
									"src": "2269:159:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1070
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "2562:29:2",
										"statements": [
											{
												"expression": {
													"id": 354,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 311,
													"src": "2579:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 353,
												"id": 355,
												"nodeType": "Return",
												"src": "2572:12:2"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "2434:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2502:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 350,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2529:8:2"
									},
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2506:2:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "2547:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 351,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2547:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:15:2"
									},
									"scope": 893,
									"src": "2493:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1076
									],
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "2775:31:2",
										"statements": [
											{
												"expression": {
													"id": 364,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 313,
													"src": "2792:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 363,
												"id": 365,
												"nodeType": "Return",
												"src": "2785:14:2"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "2597:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2713:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 360,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2742:8:2"
									},
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2719:2:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2760:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 361,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2760:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:15:2"
									},
									"scope": 893,
									"src": "2704:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1082
									],
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "3495:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3512:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 373,
												"id": 375,
												"nodeType": "Return",
												"src": "3505:9:2"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2812:613:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3439:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 370,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3470:8:2"
									},
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3447:2:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3488:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 371,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3488:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:7:2"
									},
									"scope": 893,
									"src": "3430:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										920
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3651:36:2",
										"statements": [
											{
												"expression": {
													"id": 384,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 309,
													"src": "3668:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 383,
												"id": 385,
												"nodeType": "Return",
												"src": "3661:19:2"
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "3527:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3590:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 380,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3624:8:2"
									},
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3601:2:2"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3642:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3641:9:2"
									},
									"scope": 893,
									"src": "3581:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										928
									],
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "3828:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 396,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "3845:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 398,
													"indexExpression": {
														"id": 397,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "3855:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3845:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 395,
												"id": 399,
												"nodeType": "Return",
												"src": "3838:25:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3693:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3754:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 392,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3772:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3764:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:17:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3819:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:9:2"
									},
									"scope": 893,
									"src": "3745:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										938
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "4151:104:2",
										"statements": [
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4169:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 425,
														"src": "4161:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 412,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4161:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "4177:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4177:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4161:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "4209:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 419,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "4216:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4220:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "4199:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4199:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "4199:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4244:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 411,
												"id": 424,
												"nodeType": "Return",
												"src": "4237:11:2"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "3876:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4075:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 408,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4127:8:2"
									},
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4092:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4084:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4104:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4096:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4096:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4083:28:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "4145:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 409,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4145:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4144:6:2"
									},
									"scope": 893,
									"src": "4066:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										948
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "4411:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 437,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4428:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 439,
														"indexExpression": {
															"id": 438,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4428:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 441,
													"indexExpression": {
														"id": 440,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "4447:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4428:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 436,
												"id": 442,
												"nodeType": "Return",
												"src": "4421:34:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "4261:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4322:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 433,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4384:8:2"
									},
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4340:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4332:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4332:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4355:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4347:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4347:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4331:32:2"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "4402:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4402:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4401:9:2"
									},
									"scope": 893,
									"src": "4313:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										958
									],
									"body": {
										"id": 468,
										"nodeType": "Block",
										"src": "4859:108:2",
										"statements": [
											{
												"assignments": [
													456
												],
												"declarations": [
													{
														"constant": false,
														"id": 456,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4877:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 468,
														"src": "4869:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4869:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 457,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "4885:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4885:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4869:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 461,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "4916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 462,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "4923:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "4932:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "4907:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4907:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "4907:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4956:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 454,
												"id": 467,
												"nodeType": "Return",
												"src": "4949:11:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "4468:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4779:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 451,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4835:8:2"
									},
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4795:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4787:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4787:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4812:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4804:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4804:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:33:2"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "4853:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 452,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4853:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4852:6:2"
									},
									"scope": 893,
									"src": "4770:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										970
									],
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "5662:153:2",
										"statements": [
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5680:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 501,
														"src": "5672:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 482,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5672:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 486,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 484,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "5690:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5690:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5672:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 488,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5728:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 489,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5734:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 490,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5743:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 865,
														"src": "5712:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5712:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 492,
												"nodeType": "ExpressionStatement",
												"src": "5712:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "5770:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 495,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "5776:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "5780:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 493,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "5760:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5760:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "5760:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5804:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 481,
												"id": 500,
												"nodeType": "Return",
												"src": "5797:11:2"
											}
										]
									},
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4973:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5538:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 478,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5638:8:2"
									},
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5568:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5560:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5560:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5590:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5582:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5610:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5602:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5602:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5550:72:2"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5656:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5656:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5655:6:2"
									},
									"scope": 893,
									"src": "5529:286:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "6304:140:2",
										"statements": [
											{
												"assignments": [
													513
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6322:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 530,
														"src": "6314:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6314:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 516,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 514,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "6330:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6330:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6314:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 518,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "6361:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 521,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 513,
																		"src": "6387:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 522,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 505,
																		"src": "6394:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 520,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "6377:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6377:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 524,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 507,
																"src": "6405:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6377:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 517,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "6352:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6352:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "6352:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6433:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 511,
												"id": 529,
												"nodeType": "Return",
												"src": "6426:11:2"
											}
										]
									},
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5821:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 531,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6219:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6245:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "6237:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6262:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "6254:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6254:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:37:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "6298:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6298:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6297:6:2"
									},
									"scope": 893,
									"src": "6210:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "7030:328:2",
										"statements": [
											{
												"assignments": [
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7048:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "7040:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 541,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7040:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 543,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "7056:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7056:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7040:28:2"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "7086:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "7078:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7078:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"arguments": [
														{
															"id": 549,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "7115:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7122:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 548,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "7105:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7105:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7078:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 554,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "7148:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 555,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "7168:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7148:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7185:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 553,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7140:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7140:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "7140:85:2"
											},
											{
												"id": 568,
												"nodeType": "UncheckedBlock",
												"src": "7235:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 561,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "7268:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 562,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 534,
																	"src": "7275:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 563,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "7284:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 564,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "7303:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7284:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 560,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "7259:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7259:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 567,
														"nodeType": "ExpressionStatement",
														"src": "7259:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7347:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 540,
												"id": 570,
												"nodeType": "Return",
												"src": "7340:11:2"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "6450:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6940:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6966:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6958:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6958:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6983:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "6975:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6975:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6957:42:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "7024:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7024:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7023:6:2"
									},
									"scope": 893,
									"src": "6931:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "7920:543:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "7938:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7954:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7946:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 584,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7946:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7946:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7938:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7958:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7930:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7930:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "7930:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "8016:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8030:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8022:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 594,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8022:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8022:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8016:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8034:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8008:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8008:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "8008:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 603,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "8104:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 604,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8110:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 605,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "8114:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "8083:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8083:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "8083:38:2"
											},
											{
												"assignments": [
													609
												],
												"declarations": [
													{
														"constant": false,
														"id": 609,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8140:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "8132:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8132:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"baseExpression": {
														"id": 610,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "8154:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 612,
													"indexExpression": {
														"id": 611,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "8164:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8154:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8132:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "8187:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 616,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "8202:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8187:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8210:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8179:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8179:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "8179:72:2"
											},
											{
												"id": 629,
												"nodeType": "UncheckedBlock",
												"src": "8261:73:2",
												"statements": [
													{
														"expression": {
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 621,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "8285:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"id": 622,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 575,
																	"src": "8295:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8285:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 624,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "8303:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 625,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "8317:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8303:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8285:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 628,
														"nodeType": "ExpressionStatement",
														"src": "8285:38:2"
													}
												]
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 630,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8343:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 632,
														"indexExpression": {
															"id": 631,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8353:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8343:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 633,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "8360:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8343:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "8343:23:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 637,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "8391:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8397:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "8401:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 636,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "8382:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8382:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "EmitStatement",
												"src": "8377:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "8439:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "8445:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "8449:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "8419:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8419:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "8419:37:2"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "7364:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7821:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7848:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "7840:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7840:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7870:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "7862:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7862:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7890:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "7882:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7882:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7830:72:2"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7920:0:2"
									},
									"scope": 893,
									"src": "7812:651:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "8804:324:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 658,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "8822:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8833:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 659,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8833:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8833:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8822:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8845:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8814:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8814:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "8814:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8919:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8911:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 668,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8911:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8911:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 672,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "8923:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "8932:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "8890:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8890:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "8890:49:2"
											},
											{
												"expression": {
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 676,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "8950:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 677,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "8966:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8950:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "8950:22:2"
											},
											{
												"expression": {
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 680,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 301,
															"src": "8982:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 682,
														"indexExpression": {
															"id": 681,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "8992:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8982:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 683,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "9004:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8982:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 685,
												"nodeType": "ExpressionStatement",
												"src": "8982:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9042:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9034:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 687,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9034:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9034:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "9046:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "9055:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "9025:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9025:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "9020:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9101:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9093:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9093:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9093:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "9105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "9114:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "9073:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "9073:48:2"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "8469:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8748:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8762:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "8754:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8754:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8779:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "8771:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8771:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8753:33:2"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8804:0:2"
									},
									"scope": 893,
									"src": "8739:389:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 776,
										"nodeType": "Block",
										"src": "9513:511:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 714,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 708,
																"src": "9531:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9550:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9542:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 715,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9542:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9542:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9531:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9554:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9523:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9523:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "9523:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "9622:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9639:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9631:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 725,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9631:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9631:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "9643:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "9601:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9601:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "ExpressionStatement",
												"src": "9601:49:2"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9669:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 776,
														"src": "9661:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9661:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"baseExpression": {
														"id": 734,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "9686:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 736,
													"indexExpression": {
														"id": 735,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "9696:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9686:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9661:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 733,
																"src": "9722:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 740,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "9740:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9722:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9748:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9714:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9714:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "9714:71:2"
											},
											{
												"id": 753,
												"nodeType": "UncheckedBlock",
												"src": "9795:79:2",
												"statements": [
													{
														"expression": {
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 745,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "9819:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 747,
																"indexExpression": {
																	"id": 746,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "9829:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9819:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 748,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "9840:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 749,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "9857:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9840:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9819:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 752,
														"nodeType": "ExpressionStatement",
														"src": "9819:44:2"
													}
												]
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 754,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "9883:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 755,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "9899:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9883:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "9883:22:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 759,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "9930:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9947:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 761,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9939:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 760,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9939:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9939:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "9951:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 758,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "9921:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9921:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "EmitStatement",
												"src": "9916:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "9989:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10006:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9998:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 769,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9998:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9998:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "10010:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "9969:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9969:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "9969:48:2"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "9134:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 777,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9457:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9471:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "9463:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9463:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9488:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 777,
												"src": "9480:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9480:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9462:33:2"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9513:0:2"
									},
									"scope": 893,
									"src": "9448:576:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "10560:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 788,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "10578:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10595:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10587:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 789,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10587:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 792,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10587:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10578:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10599:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 787,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10570:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10570:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "10570:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "10656:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10675:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10667:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 799,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10667:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10667:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10656:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10679:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10648:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10648:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "10648:68:2"
											},
											{
												"expression": {
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 807,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "10727:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 810,
															"indexExpression": {
																"id": 808,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 780,
																"src": "10739:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10727:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 811,
														"indexExpression": {
															"id": 809,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "10746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10727:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 812,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "10757:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10727:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "10727:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 816,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 780,
															"src": "10787:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "10794:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "10803:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 815,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "10778:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10778:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 820,
												"nodeType": "EmitStatement",
												"src": "10773:37:2"
											}
										]
									},
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "10030:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10456:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10482:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "10474:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10474:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10505:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "10497:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10497:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10530:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "10522:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10464:78:2"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10560:0:2"
									},
									"scope": 893,
									"src": "10447:370:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "11218:321:2",
										"statements": [
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11236:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 864,
														"src": "11228:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11228:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"arguments": [
														{
															"id": 835,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "11265:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 836,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "11272:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 834,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "11255:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11255:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11228:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 839,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "11294:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11319:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 841,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11319:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 840,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11314:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11314:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11314:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11294:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "11290:243:2",
												"trueBody": {
													"id": 862,
													"nodeType": "Block",
													"src": "11333:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 847,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 833,
																			"src": "11355:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 848,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "11375:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11355:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11383:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 846,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11347:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11347:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 852,
															"nodeType": "ExpressionStatement",
															"src": "11347:68:2"
														},
														{
															"id": 861,
															"nodeType": "UncheckedBlock",
															"src": "11429:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 854,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "11466:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 855,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "11473:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 858,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 856,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 833,
																					"src": "11482:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 857,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "11501:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11482:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 853,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 822,
																			"src": "11457:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11457:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 860,
																	"nodeType": "ExpressionStatement",
																	"src": "11457:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "10823:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11107:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11140:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11132:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11132:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11163:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11155:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11155:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11188:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "11180:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11122:78:2"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11218:0:2"
									},
									"scope": 893,
									"src": "11098:441:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "12242:2:2",
										"statements": []
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "11545:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12132:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12170:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "12162:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12162:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12192:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "12184:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12212:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "12204:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12204:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12152:72:2"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12242:0:2"
									},
									"scope": 893,
									"src": "12123:121:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "12950:2:2",
										"statements": []
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "12250:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12841:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12878:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "12870:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12870:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12900:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "12892:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12920:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "12912:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12912:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12860:72:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12950:0:2"
									},
									"scope": 893,
									"src": "12832:120:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "12958:254:2",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 892,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "13237:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 893,
									"src": "13217:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 889,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "13217:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 891,
										"length": {
											"hexValue": "3435",
											"id": 890,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "13225:2:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "13217:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 894,
							"src": "1482:11763:2",
							"usedErrors": []
						}
					],
					"src": "105:13141:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							971
						]
					},
					"id": 972,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 895,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 896,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 971,
							"linearizedBaseContracts": [
								971
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 905,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 914,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 920,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 971,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 928,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 971,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 938,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 971,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 948,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 971,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 971,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 970,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2696:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2688:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2718:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2710:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2738:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2730:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2730:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:72:3"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2769:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 967,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2769:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2768:6:3"
									},
									"scope": 971,
									"src": "2657:118:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 972,
							"src": "202:2575:3",
							"usedErrors": []
						}
					],
					"src": "106:2672:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"ERC20CappedUpgradeable": [
							1058
						],
						"ERC20Upgradeable": [
							893
						],
						"IERC20MetadataUpgradeable": [
							1083
						],
						"IERC20Upgradeable": [
							971
						],
						"Initializable": [
							282
						]
					},
					"id": 1059,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 973,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "../ERC20Upgradeable.sol",
							"id": 974,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 894,
							"src": "132:33:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../../proxy/utils/Initializable.sol",
							"id": 975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1059,
							"sourceUnit": 283,
							"src": "166:48:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 977,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "368:13:4"
									},
									"id": 978,
									"nodeType": "InheritanceSpecifier",
									"src": "368:13:4"
								},
								{
									"baseName": {
										"id": 979,
										"name": "ERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 893,
										"src": "383:16:4"
									},
									"id": 980,
									"nodeType": "InheritanceSpecifier",
									"src": "383:16:4"
								}
							],
							"canonicalName": "ERC20CappedUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 976,
								"nodeType": "StructuredDocumentation",
								"src": "216:107:4",
								"text": " @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n @custom:storage-size 51"
							},
							"fullyImplemented": true,
							"id": 1058,
							"linearizedBaseContracts": [
								1058,
								893,
								1083,
								971,
								1368,
								282
							],
							"name": "ERC20CappedUpgradeable",
							"nameLocation": "342:22:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 982,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "422:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "406:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 981,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "406:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "635:51:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 991,
															"name": "cap_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "674:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 990,
														"name": "__ERC20Capped_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "645:28:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "645:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "645:34:4"
											}
										]
									},
									"documentation": {
										"id": 983,
										"nodeType": "StructuredDocumentation",
										"src": "433:129:4",
										"text": " @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 987,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "618:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "618:16:4"
										}
									],
									"name": "__ERC20Capped_init",
									"nameLocation": "576:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "603:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "595:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "595:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "594:14:4"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:0:4"
									},
									"scope": 1058,
									"src": "567:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "770:80:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "cap_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "788:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "795:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "788:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a206361702069732030",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "798:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															},
															"value": "ERC20Capped: cap is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828",
																"typeString": "literal_string \"ERC20Capped: cap is 0\""
															}
														],
														"id": 1002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "780:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "780:42:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "780:42:4"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "832:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "cap_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "839:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "832:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "832:11:4"
											}
										]
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 999,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "753:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "753:16:4"
										}
									],
									"name": "__ERC20Capped_init_unchained",
									"nameLocation": "701:28:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "cap_",
												"nameLocation": "738:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "730:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "729:14:4"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:0:4"
									},
									"scope": 1058,
									"src": "692:158:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "982:28:4",
										"statements": [
											{
												"expression": {
													"id": 1020,
													"name": "_cap",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 982,
													"src": "999:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1019,
												"id": 1021,
												"nodeType": "Return",
												"src": "992:11:4"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "856:68:4",
										"text": " @dev Returns the cap on the token's total supply."
									},
									"functionSelector": "355274ea",
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "cap",
									"nameLocation": "938:3:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "941:2:4"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "973:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:9:4"
									},
									"scope": 1058,
									"src": "929:81:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										705
									],
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "1137:141:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1033,
																			"name": "ERC20Upgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "1155:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20Upgradeable_$893_$",
																				"typeString": "type(contract ERC20Upgradeable)"
																			}
																		},
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "totalSupply",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 387,
																		"src": "1155:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1155:30:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1036,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "1188:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1155:39:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1038,
																	"name": "cap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "1198:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1198:5:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1155:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332304361707065643a20636170206578636565646564",
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1205:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															},
															"value": "ERC20Capped: cap exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f",
																"typeString": "literal_string \"ERC20Capped: cap exceeded\""
															}
														],
														"id": 1032,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1147:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "1147:86:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1047,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1255:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1048,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "1264:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1044,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1243:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC20CappedUpgradeable_$1058_$",
																"typeString": "type(contract super ERC20CappedUpgradeable)"
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 705,
														"src": "1243:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1243:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1050,
												"nodeType": "ExpressionStatement",
												"src": "1243:28:4"
											}
										]
									},
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "1016:42:4",
										"text": " @dev See {ERC20-_mint}."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "1072:5:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1030,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1128:8:4"
									},
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1086:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1078:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1103:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "1095:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:33:4"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:4"
									},
									"scope": 1058,
									"src": "1063:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1053,
										"nodeType": "StructuredDocumentation",
										"src": "1284:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1057,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1563:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1058,
									"src": "1543:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1054,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1543:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1056,
										"length": {
											"hexValue": "3530",
											"id": 1055,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1551:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1543:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1059,
							"src": "324:1247:4",
							"usedErrors": []
						}
					],
					"src": "107:1465:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC20MetadataUpgradeable": [
							1083
						],
						"IERC20Upgradeable": [
							971
						]
					},
					"id": 1084,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1060,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "../IERC20Upgradeable.sol",
							"id": 1061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1084,
							"sourceUnit": 972,
							"src": "135:34:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1063,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 971,
										"src": "327:17:5"
									},
									"id": 1064,
									"nodeType": "InheritanceSpecifier",
									"src": "327:17:5"
								}
							],
							"canonicalName": "IERC20MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1062,
								"nodeType": "StructuredDocumentation",
								"src": "171:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 1083,
							"linearizedBaseContracts": [
								1083,
								971
							],
							"name": "IERC20MetadataUpgradeable",
							"nameLocation": "298:25:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "351:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "419:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:5"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "449:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1067,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "449:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:15:5"
									},
									"scope": 1083,
									"src": "410:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "470:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "540:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "546:2:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "572:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1073,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "572:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:15:5"
									},
									"scope": 1083,
									"src": "531:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "593:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "672:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "680:2:5"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "706:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1079,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "706:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "705:7:5"
									},
									"scope": 1083,
									"src": "663:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1084,
							"src": "288:427:5",
							"usedErrors": []
						}
					],
					"src": "110:606:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						]
					},
					"id": 1327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1085,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1086,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1326,
							"linearizedBaseContracts": [
								1326
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "1252:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1094,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "1476:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1476:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1476:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1498:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1476:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1099,
												"nodeType": "Return",
												"src": "1469:30:6"
											}
										]
									},
									"documentation": {
										"id": 1087,
										"nodeType": "StructuredDocumentation",
										"src": "227:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1195:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1214:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1206:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1205:17:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1246:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1246:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1245:6:6"
									},
									"scope": 1326,
									"src": "1186:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "2494:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1112,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2520:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1326",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1326",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2512:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1110,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2512:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2512:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2512:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1115,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "2537:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2512:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2545:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2504:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2504:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "2504:73:6"
											},
											{
												"assignments": [
													1121,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2594:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "2589:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1120,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2589:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1128,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2637:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1122,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "2607:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2607:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1124,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "2629:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2607:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2588:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1130,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "2658:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2667:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "2650:78:6"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "1512:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2432:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2458:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "2442:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2442:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2477:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "2469:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2441:43:6"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2494:0:6"
									},
									"scope": 1326,
									"src": "2423:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "3566:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "3596:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3604:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1145,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1152,
															1172
														],
														"referencedDeclaration": 1172,
														"src": "3583:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1144,
												"id": 1150,
												"nodeType": "Return",
												"src": "3576:67:6"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "2741:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3486:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3507:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3499:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3499:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3528:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3515:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3515:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3498:35:6"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "3552:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1142,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3552:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3551:14:6"
									},
									"scope": 1326,
									"src": "3477:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1171,
										"nodeType": "Block",
										"src": "4019:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1165,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "4058:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "4066:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4072:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1168,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "4075:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1164,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1192,
															1242
														],
														"referencedDeclaration": 1242,
														"src": "4036:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4036:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1163,
												"id": 1170,
												"nodeType": "Return",
												"src": "4029:59:6"
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "3656:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3881:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3911:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3903:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3903:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3940:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3927:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3927:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3968:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "3954:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1158,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3954:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:93:6"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1172,
												"src": "4005:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4005:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:14:6"
									},
									"scope": 1326,
									"src": "3872:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "4600:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1185,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "4639:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "4647:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1187,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "4653:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4660:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1184,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1192,
															1242
														],
														"referencedDeclaration": 1242,
														"src": "4617:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4617:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1183,
												"id": 1190,
												"nodeType": "Return",
												"src": "4610:94:6"
											}
										]
									},
									"documentation": {
										"id": 1173,
										"nodeType": "StructuredDocumentation",
										"src": "4101:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4466:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4505:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4497:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4534:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4521:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4521:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4556:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4548:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:80:6"
									},
									"returnParameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "4586:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4586:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4585:14:6"
									},
									"scope": 1326,
									"src": "4457:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "5138:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1209,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5164:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1326",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1326",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5156:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1207,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5156:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5156:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5156:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1212,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "5181:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5156:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1214,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5188:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5148:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5148:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "5148:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1219,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "5258:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1218,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "5247:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5247:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5267:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5239:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5239:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "5239:60:6"
											},
											{
												"assignments": [
													1225,
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5316:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1241,
														"src": "5311:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1224,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5338:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1241,
														"src": "5325:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1226,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5325:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1234,
												"initialValue": {
													"arguments": [
														{
															"id": 1232,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "5378:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1228,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1195,
																"src": "5352:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5352:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1230,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "5371:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5352:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5310:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1236,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "5417:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1237,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "5426:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1238,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "5438:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1235,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "5400:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5400:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1240,
												"nodeType": "Return",
												"src": "5393:58:6"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "4717:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4968:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5007:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "4999:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5036:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5023:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1196,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5023:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5058:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5050:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5050:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5087:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5073:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5073:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:116:6"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "5124:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1203,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5124:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5123:14:6"
									},
									"scope": 1326,
									"src": "4959:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "5735:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1253,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "5771:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "5779:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5785:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1252,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1259,
															1294
														],
														"referencedDeclaration": 1294,
														"src": "5752:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5752:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1251,
												"id": 1257,
												"nodeType": "Return",
												"src": "5745:80:6"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "5464:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5644:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5671:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5663:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5692:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5679:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5679:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5662:35:6"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "5721:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1249,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5721:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:14:6"
									},
									"scope": 1326,
									"src": "5635:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "6174:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1273,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1262,
																	"src": "6203:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1272,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "6192:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6192:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6212:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1271,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6184:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6184:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "6184:67:6"
											},
											{
												"assignments": [
													1279,
													1281
												],
												"declarations": [
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6268:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "6263:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1278,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6263:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1281,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6290:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "6277:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1280,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6277:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1286,
												"initialValue": {
													"arguments": [
														{
															"id": 1284,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "6322:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1282,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "6304:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6304:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6304:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6262:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1288,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "6361:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1289,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "6370:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1290,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "6382:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1287,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "6344:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6344:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1292,
												"nodeType": "Return",
												"src": "6337:58:6"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "5838:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6025:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6061:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "6053:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6053:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6090:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "6077:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6077:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6118:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "6104:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6104:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6043:93:6"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "6160:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6160:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6159:14:6"
									},
									"scope": 1326,
									"src": "6016:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1324,
										"nodeType": "Block",
										"src": "6782:582:6",
										"statements": [
											{
												"condition": {
													"id": 1306,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1297,
													"src": "6796:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1322,
													"nodeType": "Block",
													"src": "6853:505:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1310,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1299,
																		"src": "6937:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6937:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6957:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6937:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1320,
																"nodeType": "Block",
																"src": "7295:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1317,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1301,
																					"src": "7320:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1316,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7313:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7313:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1319,
																		"nodeType": "ExpressionStatement",
																		"src": "7313:20:6"
																	}
																]
															},
															"id": 1321,
															"nodeType": "IfStatement",
															"src": "6933:415:6",
															"trueBody": {
																"id": 1315,
																"nodeType": "Block",
																"src": "6960:329:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7130:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7152:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7181:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7175:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7175:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7156:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7224:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7228:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7220:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7220:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7241:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7213:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7213:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7213:44:6"
																				}
																			]
																		},
																		"documentation": "@solidity memory-safe-assembly",
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1299,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7181:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1299,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7228:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1314,
																		"nodeType": "InlineAssembly",
																		"src": "7121:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1323,
												"nodeType": "IfStatement",
												"src": "6792:566:6",
												"trueBody": {
													"id": 1309,
													"nodeType": "Block",
													"src": "6805:42:6",
													"statements": [
														{
															"expression": {
																"id": 1307,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1299,
																"src": "6826:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1305,
															"id": 1308,
															"nodeType": "Return",
															"src": "6819:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "6408:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "6631:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "6662:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6657:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6657:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "6692:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6679:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6679:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6726:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6712:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1300,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6712:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6647:97:6"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1325,
												"src": "6768:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:6"
									},
									"scope": 1326,
									"src": "6622:742:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1327,
							"src": "194:7172:6",
							"usedErrors": []
						}
					],
					"src": "101:7266:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"Initializable": [
							282
						]
					},
					"id": 1369,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1329,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1369,
							"sourceUnit": 283,
							"src": "110:42:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1331,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 282,
										"src": "691:13:7"
									},
									"id": 1332,
									"nodeType": "InheritanceSpecifier",
									"src": "691:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1330,
								"nodeType": "StructuredDocumentation",
								"src": "154:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1368,
							"linearizedBaseContracts": [
								1368,
								282
							],
							"name": "ContextUpgradeable",
							"nameLocation": "669:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "763:7:7",
										"statements": []
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1335,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1334,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "746:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "746:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "720:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "734:2:7"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "763:0:7"
									},
									"scope": 1368,
									"src": "711:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "838:7:7",
										"statements": []
									},
									"id": 1344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "onlyInitializing",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 245,
												"src": "821:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "821:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "785:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "809:2:7"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "838:0:7"
									},
									"scope": 1368,
									"src": "776:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "912:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1349,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "929:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "929:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1348,
												"id": 1351,
												"nodeType": "Return",
												"src": "922:17:7"
											}
										]
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "859:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "869:2:7"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "903:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "902:9:7"
									},
									"scope": 1368,
									"src": "850:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1361,
										"nodeType": "Block",
										"src": "1019:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1358,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1036:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1036:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1360,
												"nodeType": "Return",
												"src": "1029:15:7"
											}
										]
									},
									"id": 1362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "961:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:2:7"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "1003:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1003:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1002:16:7"
									},
									"scope": 1368,
									"src": "952:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "1057:254:7",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1367,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1336:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1368,
									"src": "1316:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1364,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1316:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1366,
										"length": {
											"hexValue": "3530",
											"id": 1365,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1324:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1316:11:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1369,
							"src": "651:693:7",
							"usedErrors": []
						}
					],
					"src": "86:1259:7"
				},
				"id": 7
			},
			"contracts/DeAnt3Token.sol": {
				"ast": {
					"absolutePath": "contracts/DeAnt3Token.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1326
						],
						"ContextUpgradeable": [
							1368
						],
						"DeAnt3Token": [
							1903
						],
						"ERC20CappedUpgradeable": [
							1058
						],
						"ERC20Upgradeable": [
							893
						],
						"IERC20MetadataUpgradeable": [
							1083
						],
						"IERC20Upgradeable": [
							971
						],
						"Initializable": [
							282
						],
						"OwnableUpgradeable": [
							131
						]
					},
					"id": 1904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1370,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol",
							"id": 1371,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 1059,
							"src": "67:95:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1904,
							"sourceUnit": 132,
							"src": "164:75:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1373,
										"name": "ERC20CappedUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1058,
										"src": "267:22:8"
									},
									"id": 1374,
									"nodeType": "InheritanceSpecifier",
									"src": "267:22:8"
								},
								{
									"baseName": {
										"id": 1375,
										"name": "OwnableUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "291:18:8"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "291:18:8"
								}
							],
							"canonicalName": "DeAnt3Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1903,
							"linearizedBaseContracts": [
								1903,
								131,
								1058,
								893,
								1083,
								971,
								1368,
								282
							],
							"name": "DeAnt3Token",
							"nameLocation": "252:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1378,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "332:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "317:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1377,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "317:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1380,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "359:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "344:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1379,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "344:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1382,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "387:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "373:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1381,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "373:5:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1384,
									"mutability": "mutable",
									"name": "_rewardAmt",
									"nameLocation": "419:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "403:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1383,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "403:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1386,
									"mutability": "mutable",
									"name": "_cap",
									"nameLocation": "452:4:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "436:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "436:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1388,
									"mutability": "mutable",
									"name": "_taxFee",
									"nameLocation": "479:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "463:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1387,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "463:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d89135cd",
									"id": 1390,
									"mutability": "mutable",
									"name": "totalBurned",
									"nameLocation": "508:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "493:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1389,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1393,
									"mutability": "mutable",
									"name": "_signers",
									"nameLocation": "544:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "526:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1391,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "526:7:8",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1392,
										"nodeType": "ArrayTypeName",
										"src": "526:9:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "3de47e32",
									"id": 1397,
									"mutability": "mutable",
									"name": "_mapSigners",
									"nameLocation": "591:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "559:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1396,
										"keyType": {
											"id": 1394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "567:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "559:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 1395,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "578:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f9342285",
									"id": 1401,
									"mutability": "mutable",
									"name": "uniqueIdExists",
									"nameLocation": "641:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "609:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
										"typeString": "mapping(uint256 => bool)"
									},
									"typeName": {
										"id": 1400,
										"keyType": {
											"id": 1398,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "617:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "609:24:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
											"typeString": "mapping(uint256 => bool)"
										},
										"valueType": {
											"id": 1399,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "628:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1e0d4ce9",
									"id": 1405,
									"mutability": "mutable",
									"name": "userTotalBurned",
									"nameLocation": "697:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1903,
									"src": "662:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1404,
										"keyType": {
											"id": 1402,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "670:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "662:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 1403,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "681:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "935:336:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1422,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "946:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "946:16:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "946:16:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1426,
															"name": "_NAME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "986:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1427,
															"name": "_SYMBOL",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "993:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1425,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "973:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "973:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "973:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "cap",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "1031:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1037:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"id": 1433,
																	"name": "_DECIMALS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1411,
																	"src": "1041:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "1037:13:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1031:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1430,
														"name": "__ERC20Capped_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "1012:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1012:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "1012:39:8"
											},
											{
												"expression": {
													"id": 1440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1438,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "1062:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1439,
														"name": "_NAME",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "1070:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1062:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1441,
												"nodeType": "ExpressionStatement",
												"src": "1062:13:8"
											},
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1442,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "1086:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1443,
														"name": "_SYMBOL",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "1096:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1086:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "1086:17:8"
											},
											{
												"expression": {
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1446,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1382,
														"src": "1114:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1447,
														"name": "_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "1126:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1114:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1449,
												"nodeType": "ExpressionStatement",
												"src": "1114:21:8"
											},
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1450,
														"name": "_rewardAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "1146:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "302e31",
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1159:9:8",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100000000000000000_by_1",
															"typeString": "int_const 100000000000000000"
														},
														"value": "0.1"
													},
													"src": "1146:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "1146:22:8"
											},
											{
												"expression": {
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1454,
														"name": "_cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "1179:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1455,
														"name": "cap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "1186:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1179:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "1179:10:8"
											},
											{
												"expression": {
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1458,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "1200:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1459,
														"name": "taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "1210:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1200:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "1200:16:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1465,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1241:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DeAnt3Token_$1903",
																		"typeString": "contract DeAnt3Token"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DeAnt3Token_$1903",
																		"typeString": "contract DeAnt3Token"
																	}
																],
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1233:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1463,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1233:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1233:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "initialBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "1248:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1462,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1052
														],
														"referencedDeclaration": 1052,
														"src": "1227:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1227:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1469,
												"nodeType": "ExpressionStatement",
												"src": "1227:36:8"
											}
										]
									},
									"functionSelector": "2b9a1d3c",
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1419,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 202,
												"src": "923:11:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "923:11:8"
										}
									],
									"name": "initialize",
									"nameLocation": "730:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "_NAME",
												"nameLocation": "765:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "751:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1406,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_SYMBOL",
												"nameLocation": "795:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "781:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1408,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "781:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "_DECIMALS",
												"nameLocation": "819:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "813:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1410,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "813:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "cap",
												"nameLocation": "847:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "839:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "initialBalance",
												"nameLocation": "869:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "861:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "taxFee",
												"nameLocation": "902:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "894:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "740:175:8"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "935:0:8"
									},
									"scope": 1903,
									"src": "721:550:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "1306:2:8",
										"statements": []
									},
									"id": 1475,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:2:8"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1306:0:8"
									},
									"scope": 1903,
									"src": "1279:29:8",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "1381:35:8",
										"statements": [
											{
												"expression": {
													"id": 1481,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1382,
													"src": "1399:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1480,
												"id": 1482,
												"nodeType": "Return",
												"src": "1392:16:8"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1325:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1477,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1356:8:8"
									},
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1333:2:8"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "1374:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1478,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1374:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:7:8"
									},
									"scope": 1903,
									"src": "1316:100:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "1478:36:8",
										"statements": [
											{
												"expression": {
													"id": 1489,
													"name": "_rewardAmt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1384,
													"src": "1496:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1488,
												"id": 1490,
												"nodeType": "Return",
												"src": "1489:17:8"
											}
										]
									},
									"functionSelector": "ac7fa3c6",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardAmt",
									"nameLocation": "1433:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1445:2:8"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "1469:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:9:8"
									},
									"scope": 1903,
									"src": "1424:90:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "1585:39:8",
										"statements": [
											{
												"expression": {
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1499,
														"name": "_rewardAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1384,
														"src": "1596:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1500,
														"name": "_newAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "1609:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1596:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "1596:20:8"
											}
										]
									},
									"functionSelector": "b24a0893",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1497,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1496,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1575:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1575:9:8"
										}
									],
									"name": "setRewardAmtInWei",
									"nameLocation": "1531:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "_newAmt",
												"nameLocation": "1557:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "1549:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1549:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:17:8"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:0:8"
									},
									"scope": 1903,
									"src": "1522:102:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1511,
										"nodeType": "Block",
										"src": "1683:33:8",
										"statements": [
											{
												"expression": {
													"id": 1509,
													"name": "_taxFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1388,
													"src": "1701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1508,
												"id": 1510,
												"nodeType": "Return",
												"src": "1694:14:8"
											}
										]
									},
									"functionSelector": "f66608fe",
									"id": 1512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTaxFee",
									"nameLocation": "1641:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1650:2:8"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "1674:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1674:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1673:9:8"
									},
									"scope": 1903,
									"src": "1632:84:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1523,
										"nodeType": "Block",
										"src": "1782:39:8",
										"statements": [
											{
												"expression": {
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1519,
														"name": "_taxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1388,
														"src": "1793:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1520,
														"name": "_newTaxFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "1803:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1793:20:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "1793:20:8"
											}
										]
									},
									"functionSelector": "c4081a4c",
									"id": 1524,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1516,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1772:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1772:9:8"
										}
									],
									"name": "setTaxFee",
									"nameLocation": "1733:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "_newTaxFee",
												"nameLocation": "1751:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "1743:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:20:8"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1782:0:8"
									},
									"scope": 1903,
									"src": "1724:97:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "1889:34:8",
										"statements": [
											{
												"expression": {
													"id": 1530,
													"name": "_signers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1393,
													"src": "1907:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1531,
												"nodeType": "Return",
												"src": "1900:15:8"
											}
										]
									},
									"functionSelector": "46f0975a",
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "signers",
									"nameLocation": "1838:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1845:2:8"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1871:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1526,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1871:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1527,
													"nodeType": "ArrayTypeName",
													"src": "1871:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:18:8"
									},
									"scope": 1903,
									"src": "1829:94:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "2005:165:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1542,
															"name": "_signers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1393,
															"src": "2027:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2037:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"id": 1544,
															"name": "_mapSigners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2044:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														],
														"id": 1541,
														"name": "_updateMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "2016:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$_t_mapping$_t_address_$_t_bool_$_$returns$__$",
															"typeString": "function (address[] memory,bool,mapping(address => bool))"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2016:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1546,
												"nodeType": "ExpressionStatement",
												"src": "2016:40:8"
											},
											{
												"expression": {
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2067:15:8",
													"subExpression": {
														"id": 1547,
														"name": "_signers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2074:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1549,
												"nodeType": "ExpressionStatement",
												"src": "2067:15:8"
											},
											{
												"expression": {
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1550,
														"name": "_signers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "2093:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1551,
														"name": "signers_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "2104:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "2093:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"id": 1553,
												"nodeType": "ExpressionStatement",
												"src": "2093:19:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1555,
															"name": "signers_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "2134:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2144:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 1557,
															"name": "_mapSigners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2150:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														],
														"id": 1554,
														"name": "_updateMap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1607,
														"src": "2123:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_bool_$_t_mapping$_t_address_$_t_bool_$_$returns$__$",
															"typeString": "function (address[] memory,bool,mapping(address => bool))"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1559,
												"nodeType": "ExpressionStatement",
												"src": "2123:39:8"
											}
										]
									},
									"functionSelector": "a3772662",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1539,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1538,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 45,
												"src": "1995:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "1995:9:8"
										}
									],
									"name": "setSigners",
									"nameLocation": "1940:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "signers_",
												"nameLocation": "1968:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "1951:25:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1534,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1951:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1535,
													"nodeType": "ArrayTypeName",
													"src": "1951:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1950:27:8"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2005:0:8"
									},
									"scope": 1903,
									"src": "1931:239:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "2242:45:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1568,
														"name": "_mapSigners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1397,
														"src": "2260:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1570,
													"indexExpression": {
														"id": 1569,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "2272:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2260:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1567,
												"id": 1571,
												"nodeType": "Return",
												"src": "2253:26:8"
											}
										]
									},
									"functionSelector": "07c351dd",
									"id": 1573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mapSigner",
									"nameLocation": "2187:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "signer",
												"nameLocation": "2205:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2197:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:16:8"
									},
									"returnParameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "2236:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2236:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:6:8"
									},
									"scope": 1903,
									"src": "2178:109:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "2431:105:8",
										"statements": [
											{
												"body": {
													"id": 1604,
													"nodeType": "Block",
													"src": "2482:47:8",
													"statements": [
														{
															"expression": {
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1596,
																		"name": "map",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1582,
																		"src": "2497:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1600,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 1597,
																			"name": "arr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1576,
																			"src": "2501:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1599,
																		"indexExpression": {
																			"id": 1598,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1586,
																			"src": "2505:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2501:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2497:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1601,
																	"name": "status",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1578,
																	"src": "2511:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2497:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1603,
															"nodeType": "ExpressionStatement",
															"src": "2497:20:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1589,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2461:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1590,
															"name": "arr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1576,
															"src": "2465:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2465:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2461:14:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"initializationExpression": {
													"assignments": [
														1586
													],
													"declarations": [
														{
															"constant": false,
															"id": 1586,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2454:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1605,
															"src": "2447:8:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1585,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "2447:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1588,
													"initialValue": {
														"hexValue": "30",
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2458:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2447:12:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2477:3:8",
														"subExpression": {
															"id": 1593,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "2477:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1595,
													"nodeType": "ExpressionStatement",
													"src": "2477:3:8"
												},
												"nodeType": "ForStatement",
												"src": "2442:87:8"
											}
										]
									},
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateMap",
									"nameLocation": "2304:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2342:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2325:20:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1574,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2325:7:8",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1575,
													"nodeType": "ArrayTypeName",
													"src": "2325:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2361:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2356:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1577,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2356:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "map",
												"nameLocation": "2411:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "2378:36:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"typeName": {
													"id": 1581,
													"keyType": {
														"id": 1579,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2386:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "2378:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
														"typeString": "mapping(address => bool)"
													},
													"valueType": {
														"id": 1580,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "2397:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2314:107:8"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:8"
									},
									"scope": 1903,
									"src": "2295:241:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										426
									],
									"body": {
										"id": 1659,
										"nodeType": "Block",
										"src": "2660:349:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1617,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2675:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2675:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1619,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "2689:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2689:7:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2675:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1655,
													"nodeType": "Block",
													"src": "2764:216:8",
													"statements": [
														{
															"assignments": [
																1631
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1631,
																	"mutability": "mutable",
																	"name": "burnAmt",
																	"nameLocation": "2787:7:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1655,
																	"src": "2779:15:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1630,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2779:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1635,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1633,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "2815:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1632,
																	"name": "_calculateBurnAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1713,
																	"src": "2797:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2797:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2779:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1637,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2852:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2852:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1639,
																		"name": "burnAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "2864:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1636,
																	"name": "_burnAndUpdate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "2837:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2837:35:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1641,
															"nodeType": "ExpressionStatement",
															"src": "2837:35:8"
														},
														{
															"assignments": [
																1643
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1643,
																	"mutability": "mutable",
																	"name": "newAmt",
																	"nameLocation": "2895:6:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1655,
																	"src": "2887:14:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1642,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2887:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1647,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1646,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1644,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1611,
																	"src": "2904:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1645,
																	"name": "burnAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "2913:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2904:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2887:33:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1651,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "2950:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1652,
																		"name": "newAmt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "2961:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1648,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2935:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																			"typeString": "type(contract super DeAnt3Token)"
																		}
																	},
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "2935:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2935:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1654,
															"nodeType": "ExpressionStatement",
															"src": "2935:33:8"
														}
													]
												},
												"id": 1656,
												"nodeType": "IfStatement",
												"src": "2671:309:8",
												"trueBody": {
													"id": 1629,
													"nodeType": "Block",
													"src": "2698:60:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1625,
																		"name": "recipient",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1609,
																		"src": "2728:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1626,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "2739:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1622,
																		"name": "super",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967271,
																		"src": "2713:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																			"typeString": "type(contract super DeAnt3Token)"
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 426,
																	"src": "2713:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) returns (bool)"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2713:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1628,
															"nodeType": "ExpressionStatement",
															"src": "2713:33:8"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2997:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1616,
												"id": 1658,
												"nodeType": "Return",
												"src": "2990:11:8"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1660,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2553:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1613,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2622:8:8"
									},
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2570:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2562:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2562:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2589:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2581:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2561:35:8"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "2649:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2649:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2648:6:8"
									},
									"scope": 1903,
									"src": "2544:465:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										502
									],
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "3154:169:8",
										"statements": [
											{
												"assignments": [
													1673
												],
												"declarations": [
													{
														"constant": false,
														"id": 1673,
														"mutability": "mutable",
														"name": "newAmt",
														"nameLocation": "3173:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1693,
														"src": "3165:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3165:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1677,
												"initialValue": {
													"arguments": [
														{
															"id": 1675,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "3200:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1674,
														"name": "_calculateBurnAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "3182:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3182:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3165:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1679,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "3233:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1680,
															"name": "newAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "3239:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1678,
														"name": "_burnAndUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "3218:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3218:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3218:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1686,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1662,
															"src": "3276:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1687,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1664,
															"src": "3282:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1688,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "3286:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1683,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3257:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "3257:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3257:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "3257:36:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3311:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1671,
												"id": 1692,
												"nodeType": "Return",
												"src": "3304:11:8"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3026:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1668,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3130:8:8"
									},
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3057:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3049:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3049:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3080:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3072:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3101:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3093:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3038:76:8"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "3148:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3148:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3147:6:8"
									},
									"scope": 1903,
									"src": "3017:306:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "3405:86:8",
										"statements": [
											{
												"assignments": [
													1702
												],
												"declarations": [
													{
														"constant": false,
														"id": 1702,
														"mutability": "mutable",
														"name": "burnAmt",
														"nameLocation": "3424:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1712,
														"src": "3416:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3416:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1703,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1696,
																	"src": "3435:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1704,
																	"name": "_taxFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "3444:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3435:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1706,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3434:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3455:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3434:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3416:42:8"
											},
											{
												"expression": {
													"id": 1710,
													"name": "burnAmt",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1702,
													"src": "3476:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1711,
												"nodeType": "Return",
												"src": "3469:14:8"
											}
										]
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateBurnAmt",
									"nameLocation": "3340:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3366:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "3358:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3358:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3357:16:8"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "3396:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3396:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3395:9:8"
									},
									"scope": 1903,
									"src": "3331:160:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1741,
										"nodeType": "Block",
										"src": "3564:157:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1721,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "3581:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1722,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3590:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1720,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "3575:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3575:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "3575:22:8"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1725,
														"name": "totalBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "3608:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1726,
															"name": "totalBurned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "3622:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1727,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3636:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3622:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3608:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "3608:34:8"
											},
											{
												"expression": {
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1731,
															"name": "userTotalBurned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "3653:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1733,
														"indexExpression": {
															"id": 1732,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1715,
															"src": "3669:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3653:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 1734,
																"name": "userTotalBurned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1405,
																"src": "3680:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1736,
															"indexExpression": {
																"id": 1735,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1715,
																"src": "3696:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3680:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1737,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3707:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3680:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3653:60:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "3653:60:8"
											}
										]
									},
									"id": 1742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnAndUpdate",
									"nameLocation": "3508:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3531:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3523:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1717,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3548:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "3540:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1716,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3540:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:33:8"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3564:0:8"
									},
									"scope": 1903,
									"src": "3499:222:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1901,
										"nodeType": "Block",
										"src": "3971:1161:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1763,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "3990:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1764,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4002:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4002:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3990:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4578706972656420646561646c696e65",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4019:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d",
																"typeString": "literal_string \"Expired deadline\""
															},
															"value": "Expired deadline"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad1653c49d8ca73795171bedf23d3c8ee223dacf9c109f67010673a409fac35d",
																"typeString": "literal_string \"Expired deadline\""
															}
														],
														"id": 1762,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3982:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3982:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "3982:56:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4057:25:8",
															"subExpression": {
																"baseExpression": {
																	"id": 1771,
																	"name": "uniqueIdExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1401,
																	"src": "4058:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																		"typeString": "mapping(uint256 => bool)"
																	}
																},
																"id": 1773,
																"indexExpression": {
																	"id": 1772,
																	"name": "uniqueId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "4073:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4058:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e6971756520696420657869737473",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4084:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b",
																"typeString": "literal_string \"Unique id exists\""
															},
															"value": "Unique id exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_188268226e967b97bf30adf89a0df618e65d0f4d1c829a35f07843e0a6c57f7b",
																"typeString": "literal_string \"Unique id exists\""
															}
														],
														"id": 1770,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4049:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:54:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "4049:54:8"
											},
											{
												"assignments": [
													1779
												],
												"declarations": [
													{
														"constant": false,
														"id": 1779,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4124:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4116:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1778,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4116:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"expression": {
														"id": 1780,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4134:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4134:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4116:28:8"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4163:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4155:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1783,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4155:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1788,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1785,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4171:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 54,
														"src": "4171:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4171:13:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4155:29:8"
											},
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "permitTxHash",
														"nameLocation": "4205:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4197:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1789,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4197:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30783139",
																			"id": 1796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4286:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "0x19"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			}
																		],
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4279:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1794,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "4279:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4279:12:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4317:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4310:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes1_$",
																			"typeString": "type(bytes1)"
																		},
																		"typeName": {
																			"id": 1798,
																			"name": "bytes1",
																			"nodeType": "ElementaryTypeName",
																			"src": "4310:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4310:9:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																{
																	"id": 1802,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "4338:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1803,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "4362:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1804,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "4388:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 1805,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "4416:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1806,
																	"name": "uniqueId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "4441:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1807,
																	"name": "deadline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1750,
																	"src": "4468:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1792,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4244:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "4244:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4244:247:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1791,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "4220:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4220:282:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4197:305:8"
											},
											{
												"assignments": [
													1812
												],
												"declarations": [
													{
														"constant": false,
														"id": 1812,
														"mutability": "mutable",
														"name": "lastAddr",
														"nameLocation": "4523:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4515:16:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1811,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4515:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1817,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4542:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1814,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4534:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4534:7:8",
															"typeDescriptions": {}
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4534:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4515:29:8"
											},
											{
												"assignments": [
													1819
												],
												"declarations": [
													{
														"constant": false,
														"id": 1819,
														"mutability": "mutable",
														"name": "verifiedSigners",
														"nameLocation": "4561:15:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4555:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1818,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "4555:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1821,
												"initialValue": {
													"hexValue": "30",
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4579:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4555:25:8"
											},
											{
												"body": {
													"id": 1863,
													"nodeType": "Block",
													"src": "4629:224:8",
													"statements": [
														{
															"assignments": [
																1834
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1834,
																	"mutability": "mutable",
																	"name": "recovered",
																	"nameLocation": "4652:9:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 1863,
																	"src": "4644:17:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1833,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4644:7:8",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1847,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1836,
																		"name": "permitTxHash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1790,
																		"src": "4674:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1837,
																			"name": "v",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1753,
																			"src": "4688:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																				"typeString": "uint8[] memory"
																			}
																		},
																		"id": 1839,
																		"indexExpression": {
																			"id": 1838,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "4690:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4688:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1840,
																			"name": "r",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1756,
																			"src": "4694:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1842,
																		"indexExpression": {
																			"id": 1841,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "4696:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4694:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1843,
																			"name": "s",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1759,
																			"src": "4700:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1845,
																		"indexExpression": {
																			"id": 1844,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "4702:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4700:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1835,
																	"name": "ecrecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967290,
																	"src": "4664:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4664:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4644:61:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1848,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "4724:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1849,
																		"name": "lastAddr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "4736:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "4724:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1851,
																		"name": "_mapSigners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1397,
																		"src": "4748:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1853,
																	"indexExpression": {
																		"id": 1852,
																		"name": "recovered",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "4760:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4748:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4724:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1858,
															"nodeType": "IfStatement",
															"src": "4720:86:8",
															"trueBody": {
																"expression": {
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4789:17:8",
																	"subExpression": {
																		"id": 1855,
																		"name": "verifiedSigners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "4789:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 1857,
																"nodeType": "ExpressionStatement",
																"src": "4789:17:8"
															}
														},
														{
															"expression": {
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1859,
																	"name": "lastAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1812,
																	"src": "4821:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1860,
																	"name": "recovered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1834,
																	"src": "4832:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4821:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1862,
															"nodeType": "ExpressionStatement",
															"src": "4821:20:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1826,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1823,
														"src": "4610:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1827,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "4614:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
																"typeString": "uint8[] memory"
															}
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4614:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4610:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1864,
												"initializationExpression": {
													"assignments": [
														1823
													],
													"declarations": [
														{
															"constant": false,
															"id": 1823,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4603:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1864,
															"src": "4596:8:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"typeName": {
																"id": 1822,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "4596:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1825,
													"initialValue": {
														"hexValue": "30",
														"id": 1824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4607:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4596:12:8"
												},
												"loopExpression": {
													"expression": {
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4624:3:8",
														"subExpression": {
															"id": 1830,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "4624:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1832,
													"nodeType": "ExpressionStatement",
													"src": "4624:3:8"
												},
												"nodeType": "ForStatement",
												"src": "4591:262:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1866,
																"name": "verifiedSigners",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1819,
																"src": "4873:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "32",
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4892:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4873:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e657273",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4895:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67",
																"typeString": "literal_string \"Invalid signers\""
															},
															"value": "Invalid signers"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ca6c907b60f9896b5c8eed87c6fa970f59a57b21d52e99d54b1d8c67c975a67",
																"typeString": "literal_string \"Invalid signers\""
															}
														],
														"id": 1865,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4865:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4865:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "4865:48:8"
											},
											{
												"expression": {
													"id": 1876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1872,
															"name": "uniqueIdExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "4924:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 1874,
														"indexExpression": {
															"id": 1873,
															"name": "uniqueId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "4939:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4924:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4951:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4924:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1877,
												"nodeType": "ExpressionStatement",
												"src": "4924:31:8"
											},
											{
												"assignments": [
													1879,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4974:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1901,
														"src": "4969:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1878,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4969:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1888,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5030:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1880,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1744,
																"src": "4987:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4987:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1882,
																	"name": "_rewardAmt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1384,
																	"src": "5009:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1883,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1748,
																	"src": "5022:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5009:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4987:42:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4987:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4968:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1890,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "5052:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4661696c656420746f2073656e64204d656368",
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5061:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf",
																"typeString": "literal_string \"Failed to send Mech\""
															},
															"value": "Failed to send Mech"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48022234ea1eea4af017422e0cb63f73bdc410e5044a92fc186622954d231adf",
																"typeString": "literal_string \"Failed to send Mech\""
															}
														],
														"id": 1889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5044:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5044:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1893,
												"nodeType": "ExpressionStatement",
												"src": "5044:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1897,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1744,
															"src": "5106:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1898,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "5117:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1894,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5094:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DeAnt3Token_$1903_$",
																"typeString": "type(contract super DeAnt3Token)"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "5094:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5094:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "5094:30:8"
											}
										]
									},
									"functionSelector": "e4c97e6a",
									"id": 1902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitMint",
									"nameLocation": "3738:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3775:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3759:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3759:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "uniqueId",
												"nameLocation": "3803:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3795:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3795:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3830:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3822:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3855:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3847:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3847:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3889:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3874:16:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
													"typeString": "uint8[]"
												},
												"typeName": {
													"baseType": {
														"id": 1751,
														"name": "uint8",
														"nodeType": "ElementaryTypeName",
														"src": "3874:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1752,
													"nodeType": "ArrayTypeName",
													"src": "3874:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
														"typeString": "uint8[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3918:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3901:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1754,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3901:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1755,
													"nodeType": "ArrayTypeName",
													"src": "3901:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3947:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1902,
												"src": "3930:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1757,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "3930:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1758,
													"nodeType": "ArrayTypeName",
													"src": "3930:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:207:8"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3971:0:8"
									},
									"scope": 1903,
									"src": "3729:1403:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1904,
							"src": "243:5370:8",
							"usedErrors": []
						}
					],
					"src": "33:5582:8"
				},
				"id": 8
			}
		}
	}
}