{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xFd6654F660e0fF6d17998C64f4727139924Ec1C2",
    "txHash": "0x820ebfd3d67a369631231946c09d129ea586ef0f269038f445bdca3b662a9840"
  },
  "proxies": [
    {
      "address": "0x7d9dae4eaAD2C5FFd857C06039279Ae3bbC55672",
      "txHash": "0x25e2d9facab5b992e6f0b4a4b0ca38a6dd112f10793095edbda2aa89aafacefe",
      "kind": "transparent"
    },
    {
      "address": "0x4F35b5A896f500A2D877961Ef913CEae9C2df8AD",
      "txHash": "0x3f3b717324a2ee04bb964e2a6b31eab35c83a6af7991fc721571e109acc243bd",
      "kind": "transparent"
    },
    {
      "address": "0x69ED8372A1E15F79aFC6e1d7E4A7493626CB2A02",
      "txHash": "0x3f363ef7d26c87f8471f7b7d16620bd19e8eb394d49ae69e03621723782545af",
      "kind": "transparent"
    },
    {
      "address": "0xBF4D937bC62AbDDC33704FE35E25d88aF09fbae5",
      "txHash": "0xa78bb9c390f29648e1a1509713b310df233cecadedfb68ec68151a6cdfb07174",
      "kind": "transparent"
    },
    {
      "address": "0xdDe2DD86E634d67aEb6730A19D810C73E4A5ef58",
      "txHash": "0xa29c740fc2b04971167e42a8b1ae87c3660e29000890eac56873141b8c6fa944",
      "kind": "transparent"
    },
    {
      "address": "0xfc2d5eA2d7307073EcB2C1CAB68b376555b3Ed56",
      "txHash": "0x148abe9b5649c993e85842a69d9fb19bdc59eea0d83e2a81db62cee0c0722ee0",
      "kind": "transparent"
    },
    {
      "address": "0xED4066ffea8939C5BCF66373064D7e84656AAF22",
      "txHash": "0x4a709a865f6c8c68bfdd48235c143c068f9d486d6c32eaca9d45f54a808d543f",
      "kind": "transparent"
    },
    {
      "address": "0xf61CddA51a0b8B4b77377901B9DffbA85a52B40a",
      "txHash": "0x603c6876b6bc3cc537e24ba632d4900fbb224963419f22a89a5d1bd48d5ebb84",
      "kind": "transparent"
    },
    {
      "address": "0x320508e7aBBbc1f09dC7a887bB9dDe00E96d37Db",
      "txHash": "0x9b6e6c08c7b4a95699fe4ef2866235b8b68a8f341dfc7d8fc2b91377ee5feaa4",
      "kind": "transparent"
    },
    {
      "address": "0x938aa6d1Ba9badFbd389836c821D00C05e0c4159",
      "txHash": "0x7b43ea55bb96e4b9a6d487f9217067ddff25c4b50f458c52672274ba5ace5d88",
      "kind": "transparent"
    },
    {
      "address": "0x4e2851eaf5a041140f591E1468A8Af930Ea47D6C",
      "txHash": "0xbcc822b1cdcf05007a822542c58c4daaa218d7254bae750c1238ef2bd5bb8e3c",
      "kind": "transparent"
    },
    {
      "address": "0x93Be9Aa54A85FeeC8872d22f05708aCAa5F2890b",
      "txHash": "0xe8f536d64a1349a6babf13e5267cf345dcb7e7c3581e4ac5151d6b753bd7c623",
      "kind": "transparent"
    },
    {
      "address": "0x79125b377811465D887a2f86745272347233B9a3",
      "txHash": "0xcec4255862f02e55298d181087c024e7f8898496302d36fd2512809457ed40be",
      "kind": "transparent"
    },
    {
      "address": "0xb6a33E689Ab60a6689db00c41AEbbC10e0dCb62C",
      "txHash": "0x47c7eb596cce77eb2f2cf8f8a5105f20cfe2a3b97467a94ce31e268adc683c1e",
      "kind": "transparent"
    },
    {
      "address": "0xd3D693302E6427eAb5c9Bdab50dBfbe08dA2b2c6",
      "txHash": "0xc110d90504c3e2fac0f980ee527d0f715b135473a25676e91155401960ab8997",
      "kind": "transparent"
    },
    {
      "address": "0xe009E3F6C28B3212e599e588425EF1c24B51bdda",
      "txHash": "0xf8e63d627e56f652157c0f1533e7dadc31eeb502e34eb57af53afee163727a00",
      "kind": "transparent"
    },
    {
      "address": "0x7A45D7e29088bF64Da25C552c2340d57fC1Dd7e5",
      "txHash": "0x3ac6167560d0af0e315768db3f50b0aac6bb2ff3051f19e8aa1c4378815a8a22",
      "kind": "transparent"
    },
    {
      "address": "0x47052262e65e6E6b161b433c240F7A58a8Db8115",
      "txHash": "0xf7ab1e29ff0f368ba16345faf15381576635a4ae22d2433698f1943cddf29e59",
      "kind": "transparent"
    },
    {
      "address": "0x3E9B92616fA6Be8400D27ba60e6Bbef0387eFAC1",
      "txHash": "0xa6d355fdb7bde73cd90af8567846ca5323e8fe322115b30c18ae6d7da352a1a1",
      "kind": "transparent"
    },
    {
      "address": "0xE5CEf18730f3e80B4c7F933Cb71d8223da290ffd",
      "txHash": "0x2d60664d4a0496ae85f6e78723dd69af7261837abdaabc6ea3549debcd58ff1d",
      "kind": "transparent"
    },
    {
      "address": "0x881263cE65c53071326654be7CacFB5E954f33B2",
      "txHash": "0xee0dee98b0552ed05e866976607697a131359f5269bbb9c8d65a3b7b5b02d2d5",
      "kind": "transparent"
    },
    {
      "address": "0xE938Fa4C9Ef9206b07410B4C7C6475F8C448B002",
      "txHash": "0x5145812571595d7ac07e4da772b17532222346e968e236cde5874fcd00f425da",
      "kind": "transparent"
    },
    {
      "address": "0x90F3177278a2B9c420c6cB55e82FA55766Dad69B",
      "txHash": "0x082ff2e1ee8564784e122d5734a25ba29628676c51a0473b97abc4773109f3a6",
      "kind": "transparent"
    },
    {
      "address": "0x1635F01FD65B3fdEAb9B5115bcE84f3d963d3486",
      "txHash": "0x6146b4418af5e38ff85ffe45ff8f27ddfe3d77137451f2839feb5441fd253117",
      "kind": "transparent"
    },
    {
      "address": "0x8BeC62E7114D16f19795F2C73F1875B03a2B7687",
      "txHash": "0xdaf0753f360b2bd6fbc3716859dd29fbf5f1679375e4a136548b536885897587",
      "kind": "transparent"
    },
    {
      "address": "0xf45C35f1460bdc8ABE6194C4075ab1214a9E3f4a",
      "txHash": "0xde31a0e209da86c9cdc29ec87f438b6aae71279822852f70c717d1f91221616c",
      "kind": "transparent"
    },
    {
      "address": "0x34af490D68F8d28158B253d3e404c15ed3C267c5",
      "txHash": "0x7e39b7729cb8e2762de00b5bcb1d69ac7d011510d3da4b3a498c17f0fefeefad",
      "kind": "transparent"
    },
    {
      "address": "0xd93204169f6A682329584ABfEdED9B9B2618671B",
      "txHash": "0x4511363d8198228ead191bd9f3ac67664cda0bb010b2cd20355733d0489c595b",
      "kind": "transparent"
    },
    {
      "address": "0x4766dd67E503bAEA09d3A919EfF556C9A5046Fa3",
      "txHash": "0x7327146575ddb50cdf180b042fd6efa24625b1ef159ae8a241d94e05014e57f3",
      "kind": "transparent"
    },
    {
      "address": "0x4Da7d6bE667Fe8F49b28f2f6cB552bfc9c198273",
      "txHash": "0xd020a71ab5c6d657c5a7b02752ef6e2b1528e8f1dd05909a07f535ba64f0ef33",
      "kind": "transparent"
    },
    {
      "address": "0x34C3B551C0484F3712B41518Ed230532222bC00B",
      "txHash": "0x25bb5713fc4e2e5948a179f18fee7e560222b4e69ee923004f2f61db3c2f6a1e",
      "kind": "transparent"
    },
    {
      "address": "0x701E1f46EA5F6458aDF43923f892cdDf72CaAdea",
      "txHash": "0xeddb65353a2221cd4a15d0f3294b08f001de7a5263992053635d63a492df27dd",
      "kind": "transparent"
    },
    {
      "address": "0xb70a87AD64fC4EA0e42Aff786eA9FC831C4Dc237",
      "txHash": "0xcf41122051fb85860cad77ae9e9e291c1f746744e13132fb9478e69ec34ed4a6",
      "kind": "transparent"
    },
    {
      "address": "0x2acd01093739bf109c9B8c7E6A6D61Ae263B5272",
      "txHash": "0x30558cebecd7f08ac578cfcbe816e349dfc67abe8d7dafe026a9846bd967f884",
      "kind": "transparent"
    },
    {
      "address": "0x02D82612cDCfBd4F22aFb526EE56662bF9f12f2F",
      "txHash": "0x3eeaa7955de385e2e7c42e563cb2c34a32ff86af99f2467c8eb4045fb97c2e2f",
      "kind": "transparent"
    },
    {
      "address": "0xe8620Ae7bfa1C91F6983372f9864EC83993ef045",
      "txHash": "0xcda62d312b7c47db9d9053992b5c799c2533a5e1e4830a03b578b3412fc7c2d1",
      "kind": "transparent"
    },
    {
      "address": "0xbE6001726d8A5991D21a6EeF8a550d08eF2bD63a",
      "txHash": "0x275bf6c9a21ab6ab3e97e9b56052fb00c8b316fbc5adc4cd2add7d9b5dfac75a",
      "kind": "transparent"
    },
    {
      "address": "0xe19b1d932E6D964503DE8aF102b92fC60C2D18d5",
      "txHash": "0xac55ce59b27bbe0055bab1f30d0460118270b0b91f22e98f48d3e190f5f678ae",
      "kind": "transparent"
    },
    {
      "address": "0x4B4C5391d354AEDE209205957507092d9ef044bD",
      "txHash": "0x73cc58ef73d56beb4416be671dd7d4661ee9fe9a9cae7aff86bc0caca206bafd",
      "kind": "transparent"
    },
    {
      "address": "0xA7F636Af82E3e1a8441F25Ed6F646717464F97C2",
      "txHash": "0x538f6199e4f73758bbeee9b561f540a07ad89008e766485d4b055d4a052017fa",
      "kind": "transparent"
    },
    {
      "address": "0xb55f7a9bc7C84730BeeD9826964857134DF02388",
      "txHash": "0x407bedeabde02314589cf3095ae1e2760d108b6947b2086d84df14544e907b43",
      "kind": "transparent"
    },
    {
      "address": "0x390A573419A41dc9F77e204B9B4A6162c7210D9c",
      "txHash": "0x9bdbaf14f1dbccbdd0a8b4809b6cf830d24fb34a4039cfa226d8156c4fd88d7c",
      "kind": "transparent"
    },
    {
      "address": "0xEBEE2Ba1DfAA9E1772A8FAD48Da86eaA0E89A568",
      "txHash": "0xcc18503cb45bee3fce6d82c414d1852d6c18eef48029a13def826bbdde84c5f7",
      "kind": "transparent"
    },
    {
      "address": "0xAE9B8Bc95BC34b7EEd119350C86A1F5ea805B718",
      "txHash": "0x1bd2703a5b9b9b516fbd5f057d38e3db2ba51197972a2456342045ea825a90e9",
      "kind": "transparent"
    },
    {
      "address": "0x732a882a695E5399C4236FcCADb7ed6c431a9794",
      "txHash": "0x906e5f3b40603103de284928cce90ab536efedab72ad4ec5596e82c2d2b07509",
      "kind": "transparent"
    },
    {
      "address": "0xEDe7DbCa508c678e4286ee4d11B2259D129D4891",
      "txHash": "0xbfa94163e391df9e033cffcc06f277e89f5b5489ffd65f4ee7f52ee7deabca0e",
      "kind": "transparent"
    },
    {
      "address": "0x732A369D9659c3a0A36d46b6a8DBd09F998a612A",
      "txHash": "0xb0ae878ce8f02c249b22ac0ef0d39382cdd1c779da3da5a288c3ab47e6eec5a6",
      "kind": "transparent"
    },
    {
      "address": "0x577677d8bDD8DD843dE592900E51D325013FBE76",
      "txHash": "0xd470f3445d8c2a42d622e7eaa1324486be7a7a1265510eb848f16fa34b9558c7",
      "kind": "transparent"
    },
    {
      "address": "0x250F49e8f0A44aCeAd3e3b371197f6A565CA1e5A",
      "txHash": "0x483c5643c648373cc72a0156bb042b56464ebf17845b77c7c66d70d9700cfa71",
      "kind": "transparent"
    },
    {
      "address": "0xc354aEa7A25dd01130CBb3f85Fdef6d3ad3443a9",
      "txHash": "0x6e2442825f53d80ac7638e96eda0ed909e15191cda4550926aa0bab6c74cbc56",
      "kind": "transparent"
    },
    {
      "address": "0x74ad223967Dc09E470eCEa67556cE7aE2c19Ebd9",
      "txHash": "0xbdb4029d16be58128a0fdeb04864b1bd984739e5f5737f5a41e337443f64745e",
      "kind": "transparent"
    },
    {
      "address": "0xf861825B68D7A74D08cC6e11316D8D7668D8E3c7",
      "txHash": "0xa67570a5ac63543c65c9c6aac2793cfd2559ab7f60a8a84ff7618c5fdcc54766",
      "kind": "transparent"
    },
    {
      "address": "0xBA440361f345Cf13d7030b46613E1eA7261d9cc8",
      "txHash": "0x8f2b7e60218d4c867ffb03b24c48134195ae08fb600fafa7f68aecbca12a3d70",
      "kind": "transparent"
    },
    {
      "address": "0xFaf69Ae1291d6443C3D2F09DB04EfE2d279e34E7",
      "txHash": "0x260bfe990712680839b92ee79054f207f501d648b65f870a05a05d18a6f96d2c",
      "kind": "transparent"
    },
    {
      "address": "0xe6e282A5c50fbB000B43CBa85853404eF835b644",
      "txHash": "0x049f6584de83aa5a2d45244c13aa3f453dd290cf9a71e7f7c4145d67d31e697e",
      "kind": "transparent"
    },
    {
      "address": "0x3e91eAC0bd6252f5066E24b5c73AF1816C2599cE",
      "txHash": "0xafe48d5d99dab05c21d2e3d52c96c5b135a30199907f0138c6f04a0dbe9f50c2",
      "kind": "transparent"
    },
    {
      "address": "0x08F790926812EC1735EfcBD9fd3ff93389560485",
      "txHash": "0x111acb6d602750cf104c059a5890591d76e95d4c6d92adb7222560fd16e693d3",
      "kind": "transparent"
    },
    {
      "address": "0x8eD3a16619Ef42290B03bB6aCb5A99E2912AEE20",
      "txHash": "0xd3cf6eac7b71243baf7816f0dd5e5976f9dfcfc68d9f134861fd4e08b7823352",
      "kind": "transparent"
    },
    {
      "address": "0x2d8bAE3E43CAF46Eb374B34373CFe5dBAe9eC886",
      "txHash": "0xc29b6317cb714dd1305328ad0a6659c7d9a91c04e8c14a91073d048a9a782aab",
      "kind": "transparent"
    },
    {
      "address": "0xBcFAc8eF3689AF350957449f3D53c8f6F92caB0F",
      "txHash": "0x57006ca0efe43b506bd05cb4f2904028003f15a3328b36818cb014f44b270dba",
      "kind": "transparent"
    },
    {
      "address": "0x80A55012c19aa13FcC3D360096873a012Ff3df76",
      "txHash": "0xec055069c395ffaa89155389cdab215e2209e15de09be173970bdbc504d6401b",
      "kind": "transparent"
    },
    {
      "address": "0xE6bB25A0a8D525CE45CD7048Caa241041E147Bac",
      "txHash": "0xeee3973ee43463c17e848e6cb216304192ac22774874282a4d1a67ac16ec664d",
      "kind": "transparent"
    },
    {
      "address": "0x023d6a5394C18A7279F38150C2676aC33AE4fed4",
      "txHash": "0x6738ab8c31feb5a446c1dffa0a7800524e90516dd772cbddb606d8da2eb8a5b5",
      "kind": "transparent"
    },
    {
      "address": "0x1eF7248E440110Eea2FF161dE7D8A1669550fa98",
      "txHash": "0xcb76ad397de7143ed6418b2a0406476e75a38f63cd1990edd3959d7edfa42b7e",
      "kind": "transparent"
    },
    {
      "address": "0xD2e9C944219df5674500c1291bcDca6033DD7545",
      "txHash": "0x30296f23562f6e32225046df32685c5296b90d9ef89dc236c72292b63207fb19",
      "kind": "transparent"
    },
    {
      "address": "0xE1C2cE323695A2206368dc3a721F1E49A0784514",
      "txHash": "0xfb1a9beaf5665e598f7c34e61eedf508df1ab36c2f2b132bee5b25deee3f1532",
      "kind": "transparent"
    },
    {
      "address": "0x7bD486CA100B12628eFd371F44CA4Cb2E1aC7Aa5",
      "txHash": "0x29bdad3412fafdebdf9d0c5f0b2bed80dd4e31f9c56314525ff40d109a0a92bd",
      "kind": "transparent"
    },
    {
      "address": "0x65C6357464CC826bE393D015725dd26502d3f022",
      "txHash": "0x17bdda88a706ed4cfb9db2f8924e054901ea6466ce2e1c074739589a5ca2784a",
      "kind": "transparent"
    },
    {
      "address": "0x8664824Aa32f8bAE27f55dE554F188e6E35072e3",
      "txHash": "0x8688d64ed1ab19f9e418f05170ecf059e0cb213a65d43334ea988128504aeab1",
      "kind": "transparent"
    },
    {
      "address": "0xa4A105637Eae041f24214e99D8f9a58687f1daEC",
      "txHash": "0x9447dcde9cdcc65ad47bab7b2cbaac3e1190732b646422aa67248f3bb462f13c",
      "kind": "transparent"
    },
    {
      "address": "0x00332dC5ffa9a064B173D0F5cCE02313d2096938",
      "txHash": "0x7c3e2df96c2c896a41e4b896ec70ab349b9cf86907549cffe4e303b4837f67e3",
      "kind": "transparent"
    },
    {
      "address": "0x790A474b02b6a6b414418F3a79bA7dBe831bbaf9",
      "txHash": "0x3c8d4fa1a6d33b0148ca1c8c0d73a58f078ea08da7f4cdc319146c61672870df",
      "kind": "transparent"
    },
    {
      "address": "0x3e4BDD66de8Aa1f8199F2a3309114F0af2d812de",
      "txHash": "0x75909ced2fda6f2e9c31a4db9ffe1cb77e7099daefaea2122604b65820966848",
      "kind": "transparent"
    },
    {
      "address": "0xFDAcB128CF2eB8EACD40e7A22b3380756568f728",
      "txHash": "0x3680e49b2ff9a5c7e02a5252ab037270f6bbea30b9830722bafa588e6e805447",
      "kind": "transparent"
    },
    {
      "address": "0x61DD8862254F03cF8eCa8B299b290942F916e69A",
      "txHash": "0x24713daddaea965063f9ce2df666be805c4657adb34acad95634ab8f9935980c",
      "kind": "transparent"
    },
    {
      "address": "0xe90839544a6C60d52EFF6A4e8b38152BADe5A91C",
      "txHash": "0x3e962d0060283aa0abe9f834173ed66e82b1df8e19dbe91d58868a3ef04665ff",
      "kind": "transparent"
    },
    {
      "address": "0x724B726695f5C921Fb4A94Cc2590f86A752ED5e5",
      "txHash": "0x58b68dcab0ae2afa1c86cf161c2d727f239db00f4d6c69d6dc792324f0152af3",
      "kind": "transparent"
    },
    {
      "address": "0x22ee468de05d3c73b87bb39f1b75aC194B11E605",
      "txHash": "0x3087d34e97ab758fc9f370977b85c6cf7ebb242dbdb23340a609a36c089a4ae7",
      "kind": "transparent"
    },
    {
      "address": "0xa85E2Ef7cc887c639d6EbB4A00fB9bdC29253D6c",
      "txHash": "0xfcc51958faebb496936d5c4f43f89439f2dfcd54bd66090abc47d21e4e5057f0",
      "kind": "transparent"
    },
    {
      "address": "0xe57B53149B4C7e4608a94AFc5a649aA4A04ffcF5",
      "txHash": "0xe04809ee7ea7aaff9a21b022178316d021d052befb4db3ccd6664d54c08b28cf",
      "kind": "transparent"
    },
    {
      "address": "0xD80f38Fb85e73D4b9d7e99A1e89C19863eF9C844",
      "txHash": "0x151650eec2984a81113c7e74d6f11f512ae65dc0eed28c56e27c87e6f5d217f8",
      "kind": "transparent"
    },
    {
      "address": "0x62060CA2305A804CF535a460875085D933c4cc2d",
      "txHash": "0xa4e287e7a53a7f360c004295b363b4f87d4e1086f22813e5ae6a49d18e0fbb9e",
      "kind": "transparent"
    },
    {
      "address": "0xce7d7838d2E4e7eE0467120cD7FB730B8d90b183",
      "txHash": "0xd36566881cfd705f67550d372b8af4ff1c243548034aa091b4867c7a8ebb4731",
      "kind": "transparent"
    },
    {
      "address": "0x67C36216607609d0c65761a0b5Fc54286e284a96",
      "txHash": "0x98d5036447a6d710e68bcb6df1ee82f756dfcef334d76fc01aee95ca97db946b",
      "kind": "transparent"
    },
    {
      "address": "0xcBe839007E13C8956B026C5967Eaead9970e89DC",
      "txHash": "0x7d5bb91b23adce77666017b4ac72b7e00bddbf5ed5c19cb54bfcef676e6fcba8",
      "kind": "transparent"
    },
    {
      "address": "0x27A4675957A87B0cd86C75857b8093b6Cb07Ce79",
      "txHash": "0xad042ec9f8620da54ebb96266a18c2d1abb5b2665fc807559c4969e549e4a168",
      "kind": "transparent"
    },
    {
      "address": "0xD3c35Ea7072A8d53652401FA0981F2f1b20ee8e9",
      "txHash": "0xa0b8163e2f5c85fc176888c8e771f171c31dc909b327536a3d2fd5e40d4f781b",
      "kind": "transparent"
    },
    {
      "address": "0x5e6d33384C6de78691A382A9747795674E788E21",
      "txHash": "0xd38e29979bf68e694380ded2e73b46cd8ba061654b1cb6051d2e8752cb3e9bb9",
      "kind": "transparent"
    },
    {
      "address": "0xc110838607bE8C4F8ea3A1da91a047a19e9Da231",
      "txHash": "0x4fb1c4f0cc95196a1897c78ef630536a326d5e9ba38f050dfb0d8019eb123bf1",
      "kind": "transparent"
    },
    {
      "address": "0xeAe9910Ea8F9aC724d3Ad318F2cDF484Ff61bb78",
      "txHash": "0xde7ac7306acf46227bfb9177986484748e5773703eac1603f6fbcf7fbbfa7553",
      "kind": "transparent"
    },
    {
      "address": "0xD756aE5980C20b7c39a52ebBcbA6560b5fC14Ec9",
      "txHash": "0xd3fac62eca238ab66823fa6d39b8f46e9882b55748f7c53576e886b20fd77861",
      "kind": "transparent"
    },
    {
      "address": "0xb18a9b124F3EA06dFBfC5a24648aDeAa962Ce819",
      "txHash": "0x4d97af8d04b79208ae8ed5739b59840c0089defeaf19242aa5bb17fcac5657b7",
      "kind": "transparent"
    },
    {
      "address": "0xE2424918CF6AC6345BF9F63205F169c58FE8259A",
      "txHash": "0x59c2c56fda9de59a215f4117fd26a9ee84df413fbccb2ffbe923bf97cb82a5e3",
      "kind": "transparent"
    },
    {
      "address": "0x6341B93e4F0607d781663c596944BBf8dF5F3152",
      "txHash": "0x943c8ccbeef028f092b97818870faf68841e62f69ae0cc7219e7ac3a949f3ed8",
      "kind": "transparent"
    },
    {
      "address": "0x21f548279093F059761cdB52BAdD8cf4409E0676",
      "txHash": "0xa71ab589ed72cd6de4d24dd5ca71f5242c40238ddf2e06ef2eeed990c6964ac5",
      "kind": "transparent"
    },
    {
      "address": "0xa87Fec583AF869182d536Cc5C7d878C81a173589",
      "txHash": "0x5d0f88ce4b2e58978dec6bb6f356d1904037180113ef98168b231f169e1c6c88",
      "kind": "transparent"
    },
    {
      "address": "0x073d93D8D1A6704d20e0CDef461061aE595CB6C7",
      "txHash": "0xc86ec7bd4f0f342d8293f0de6f6a0a7c12d1c62d256c13560e6519c9b1268fce",
      "kind": "transparent"
    },
    {
      "address": "0x177773D1e18AA4D0A911375F57adCeF436Ba295C",
      "txHash": "0x2542b7835698c03dffc6d0dc90742f56c704751d046c37eafbe780b27ebc4d4b",
      "kind": "transparent"
    },
    {
      "address": "0x5f6f3c01607eA754d0093f7E593288CFa713Ce25",
      "txHash": "0x2fa7a7bedb3388670f48b871dbee919ec759f764cc44f13023bb91a33d5a4557",
      "kind": "transparent"
    },
    {
      "address": "0x7da9a52A14c41fD94fA59226C5Cde8a15FbF16a4",
      "txHash": "0x70ec6a6b07e47a34c1bfc06eb339c87a63d7dac339bd2c287194dcde28f266aa",
      "kind": "transparent"
    },
    {
      "address": "0x9Ce6e150b495845Ab09b0fa2C7510d440eac6215",
      "txHash": "0xa2a40aea3ded9296fe478715b6315836e3117cce3376ed180f494be25c3206a6",
      "kind": "transparent"
    },
    {
      "address": "0x1833de9799Aa34ddf6A465ABB125da4b858dffB4",
      "txHash": "0x551743e258af62b66f71f70bc3cbbf4edd40713ec54e704cf9b0615f96b0c69a",
      "kind": "transparent"
    },
    {
      "address": "0x259872Fe5138bb2ed04e857a0b9d0E5b1852290c",
      "txHash": "0xc65cf4cdc50b156c9ac40e8a9c61bb9393bbcd8fc029af718ceda2698d0ada7b",
      "kind": "transparent"
    },
    {
      "address": "0x09C5b547b0cDba06B75Fde46c17D33b65Dd7f5F9",
      "txHash": "0xffba5cc4f9ecc502eb868fe7449cf09d5a270702cdbc2e978a37ef5f8ebd6e61",
      "kind": "transparent"
    },
    {
      "address": "0x30db0d786f2828c0BeFb887fAe6b87a788E73C19",
      "txHash": "0xf40d3ba78aba0eae0a5113cbd7ca770f15cccac47dce8ca394ef4cb68df02982",
      "kind": "transparent"
    },
    {
      "address": "0x29B07aFE5749B05f327BBdb4E137F993686185Df",
      "txHash": "0xedd0ec5fbe7a8ce9099f8233775bac3b49d43de3876430cfaefb733ef1a03736",
      "kind": "transparent"
    },
    {
      "address": "0xdaccD50a6AFda46A3743882bD5CbA537c7edFCFc",
      "txHash": "0x90c91b0635ab45cb1a38707ec29cbaeb70cdf0f805d3f1e97c30413038fe261c",
      "kind": "transparent"
    },
    {
      "address": "0xc600F12b3859BC48c6a283D845Fa0996416f98FB",
      "txHash": "0x0029831a49b6b4791c5c7523d705f8a75ecf3de88b799c6dc6e0fc3863dad2de",
      "kind": "transparent"
    },
    {
      "address": "0x14BbF8B87f8584BE83e012eB546Bc7d6F4f151C0",
      "txHash": "0x947bd8bd26bb84603a8c0ea5f8216b21580605d173db8cdcbcd146cbd9ffc460",
      "kind": "transparent"
    },
    {
      "address": "0xA7eA7432594E636A6a7e0e5c65D1b12e640cb892",
      "txHash": "0xbdf47bb5a3ef141284865fe6f8cbd371490f37712130e10c8a131a385cbf911e",
      "kind": "transparent"
    },
    {
      "address": "0x9A947313b1573401510730321D0835beA4e7d882",
      "txHash": "0xefe1494296c99498aae9032aaedfb1789ce43ede54042de7c870a33cbf4a1ba2",
      "kind": "transparent"
    },
    {
      "address": "0x5c37C93f5d704e0015367d4aF63BE69A85d8D82B",
      "txHash": "0x667756f7e9d0f2449939eab1a5bff16a0c128ed0781078329e8d35be1d4697fe",
      "kind": "transparent"
    },
    {
      "address": "0xf0b23804500fFB9f808763067b37c08Ea9Fc329c",
      "txHash": "0x3e7f58da3bfb56d2351018e969668224582cee445e806ecd77c994914118d40f",
      "kind": "transparent"
    },
    {
      "address": "0x42905eAF40a47be810eE4BC83A51760cF1466385",
      "txHash": "0x5c91c07a7fe36ed5cc6536aff41a4867a67a08661dba71da47a4c71bcbc1661e",
      "kind": "transparent"
    },
    {
      "address": "0xff9ef0Ac184d1D1E7b3f440D2C08b29C97621a21",
      "txHash": "0x7269e49dd705fcfe998591a0ad77b44d47810a370205d04f8668f03536e99920",
      "kind": "transparent"
    },
    {
      "address": "0xFB52A641B3E16585455E18C50E37eB07F9858f14",
      "txHash": "0x1b9350178fc7144e676948311cee35f7ac94748d14e8dc498e8a3109cebea4d8",
      "kind": "transparent"
    },
    {
      "address": "0xe4a2F15FFFE351F1fa4D970b8a818e2D1E04b3c1",
      "txHash": "0x6226c500a44a39c5fcbe925d4c8cb81a6bbf11b7891c486d124000c3d00291f9",
      "kind": "transparent"
    },
    {
      "address": "0x1a2B8cE39FA348Fc38523772ED71CAd9FFE2C806",
      "txHash": "0x2d54c186b78989c1008e15870446d6eb5c65e698593028429f8e0a3266cb8e5f",
      "kind": "transparent"
    },
    {
      "address": "0x1F8682ba701DBc029B45eAD5ff459Bd56CFc9841",
      "txHash": "0xb13f7b4fb7a641a32407987dd43f33c6bd9e13923e3b03757386da8e1252147b",
      "kind": "transparent"
    },
    {
      "address": "0x0fC9d7D9e054bD82eB63dBdcc877cF1CEFeF96B6",
      "txHash": "0xb0f69fc0391af9ac682bcb36f0be2a06400c4e4d9948a4bce9965713d2541298",
      "kind": "transparent"
    },
    {
      "address": "0x488aE596bf6f652041506E59611982c7099DCA03",
      "txHash": "0xa6d2421be54211dfc26af09a25a5942f2709f7db8f793d9a53806eb0d0333250",
      "kind": "transparent"
    },
    {
      "address": "0xAe43835003F4213a3B97Fd4f9A7aA6D82A0145bB",
      "txHash": "0x79b0945966a1e254575e950bf74e6aaa5105c23538ea52fafb890fbb613fe7d7",
      "kind": "transparent"
    },
    {
      "address": "0x584E007aB5Fad89D9f57360b4B0F11255dBAe90a",
      "txHash": "0xefba66ca622957f31a9e809e00e3dec53ac0216c71848dcd29515fcc2d0c38fc",
      "kind": "transparent"
    },
    {
      "address": "0xE8dC6EFBCC8b23c81A445f66cBb0766E2d27893a",
      "txHash": "0x02ccee015df050ce1ae13d596a7254be27e7339df12294f1e884363c08be90c7",
      "kind": "transparent"
    },
    {
      "address": "0x506a76d356C331937164EA81783A490A86a19280",
      "txHash": "0xc6e4ffb9da3117a3c2e190dd1c9b6f318486396ab6da3a82b9de0e1f7e6c3c55",
      "kind": "transparent"
    },
    {
      "address": "0x0020BCdC58a27C5B1478759a6049459FCf12F325",
      "txHash": "0x9b3ff03bbf89f993d2e7e89e13703270036da0d92dde5e74a7bb8ce4eb00ebc3",
      "kind": "transparent"
    },
    {
      "address": "0xD12eCf66Ed8AC1E6D0d28B1AF602b28D273F5a91",
      "txHash": "0x9cd6712920d90405d1df7ee57b66dbc3d9f915677571538973cd0818e9ea8327",
      "kind": "transparent"
    },
    {
      "address": "0xe9552BBE9bc39A7C1b362F04dD7796Dc28863051",
      "txHash": "0x1c54fe1a04b5f75623e4665c9af189cdfab46820ef42eb13fd035e9bc5785657",
      "kind": "transparent"
    },
    {
      "address": "0xaeA8aEeb5596EC9000BB080b790740cd1abcbea9",
      "txHash": "0x30a1ed465978fbba60f5c263d908f3a670c11ce2738f6c944f864d6cb2fc79de",
      "kind": "transparent"
    },
    {
      "address": "0x4fEc2928cEDC6c64E7FAe30CB5f5D127777793cA",
      "txHash": "0x7650fd6030ada118d4d3228b5a1d12b89c8ec4327457d96750a951d4ad2c7097",
      "kind": "transparent"
    },
    {
      "address": "0xdBEa16602fea843E45F4B04417e0D00d48724C62",
      "txHash": "0x7c6dea84c7ee3ae87cbd60d731856d829bd0f5106391b67385a369e37745b422",
      "kind": "transparent"
    },
    {
      "address": "0xA046Ba56738dE69a89C3B8ec5658F884cC5819F8",
      "txHash": "0x6f8c25dc826d07f485fa944f2367504e0a38cc60a9f1ca82dbba8c941cb49b44",
      "kind": "transparent"
    },
    {
      "address": "0xA0e302839D2694D81956Bd2b27179C6Dd3eD78F3",
      "txHash": "0xa46524966551bde11d86298c1b45000e4fdf212078ec595c7d46725e67065862",
      "kind": "transparent"
    },
    {
      "address": "0x19AEB6028e62B357ee6e01c65221Aa0b9A2E5B5e",
      "txHash": "0xa25dd67e6c89721316074bd195d877923e1f182f7a0c9bf493d731690880b691",
      "kind": "transparent"
    },
    {
      "address": "0x09a62b7C99C4538Fcb30322D78F27dE6002147b9",
      "txHash": "0x6418dcf0c2b79f217fd5279c18190755a675bcfd5d44d9fbad3f25b5fc989ba9",
      "kind": "transparent"
    },
    {
      "address": "0x57A8273c0E05C2DF8F2c7D4B5787B3E5119f280c",
      "txHash": "0x28adcaf996fab03b0461ad2bc30399388bc93b93afe497364c5da3bebaa765c6",
      "kind": "transparent"
    },
    {
      "address": "0x3F8066CCF08947DeF1c6115B1917535d37011c3d",
      "txHash": "0xa257915148a3792e9af86e238581476f9bdf9a4f9d5062b6d476e3ced399b927",
      "kind": "transparent"
    },
    {
      "address": "0xa2941f9Ed7A99E2D703fa3727537b3F48Ac42Ef5",
      "txHash": "0x8bed9821e247e32a53f04bd604cf6bde6b483da9be65e586ac6c8ffa51c648cb",
      "kind": "transparent"
    },
    {
      "address": "0x33Bf8e0f8130A7b4e2e8c90bB9951cFa6e105d05",
      "txHash": "0x0800c2075cae75d715a77395d64a09f4890fcb7e7f984b5fce9605f39e00a55c",
      "kind": "transparent"
    },
    {
      "address": "0x6E8b5c4fC3D66308e525336260259F827Fe3161b",
      "txHash": "0x7bdd3669954a7b1c8ad0f32ac36d838d73ee3583da210204976f2d6c78fcfabf",
      "kind": "transparent"
    },
    {
      "address": "0x9DE0731de754FEb87BFCCEa41Bee674E336f1505",
      "txHash": "0x8ea5c2c42b67423bcb373b231e9ca8a8f5aea73c797815c34d8816aaf281b1cf",
      "kind": "transparent"
    },
    {
      "address": "0x8340C597c309c0648B79969203d2c8A5231F27FB",
      "txHash": "0xf69432d27603d7f1f35562f43893fa579574d82751b83aa5fb21f7deabeaa434",
      "kind": "transparent"
    },
    {
      "address": "0x00944687d58165FAcEFffA277915bE81C2eBe669",
      "txHash": "0x4c1c705011ded644f718322a9f555b6690753ff482f8a95506e065e03aa6d896",
      "kind": "transparent"
    },
    {
      "address": "0xa5BcF23d164437061f7eb85583846e1e3Bd961f1",
      "txHash": "0x06db10ebd6d704644570215fafa03b9a6fac75e6d0d1c6f07956325f1f9064f7",
      "kind": "transparent"
    },
    {
      "address": "0x9F66c8B1FE8a2f825111F50a0be5698b253ad9C2",
      "txHash": "0x691dd5b136e35a303b859e44dcb6e3f7b9e3e38c13e911caee952d522029b351",
      "kind": "transparent"
    },
    {
      "address": "0xF4DE21Da8BA8DBB726A7A23128127E3db02C8C8B",
      "txHash": "0x34959c0b6b1c09fcd15f9087c18de5730c7a23dd8d381e8ff5e283384044da64",
      "kind": "transparent"
    },
    {
      "address": "0x129b32bEb115F62AFCcd7d5c2C6C5e8217F9981E",
      "txHash": "0x3fe74d224eabb69ddf5d1c513f0a2bc1f7d17ef377878f2da54fcf6cfbd3c082",
      "kind": "transparent"
    },
    {
      "address": "0xA5fa83A9687F6F9CD4a42aFcff11CFA514d9985F",
      "txHash": "0x4d030a029160756e0b856d9b9d2fab57d5bcdaa5ee186aaf49b2b5aeb07280b7",
      "kind": "transparent"
    },
    {
      "address": "0x04F9fe5b9D6A0567479B1dD012e5623543B19FAD",
      "txHash": "0xa4b13b18b04675b01664423689e55650fab111bd4623fadcd095788fee3366b8",
      "kind": "transparent"
    },
    {
      "address": "0xae844c21d2Ccc3DE990a0A5E9d0170ccc9f39c01",
      "txHash": "0xed244958a9b887c9166e45c103db017dd7d6b8e77c3c0895d74c24a052adb3d0",
      "kind": "transparent"
    },
    {
      "address": "0xF8028f0bD7fbd7B9519EE5f19dDA306732903B4A",
      "txHash": "0x0daf7ccfdf9da250d5cd456ab3219013d6b148cf038a9d445078afcacf56925d",
      "kind": "transparent"
    },
    {
      "address": "0xB612B62152feD364DA94af7a709813D925eB156C",
      "txHash": "0x3a7a198432623adc27f3587576daa2dd391ce789cbbccd0c4244ab789c62e132",
      "kind": "transparent"
    },
    {
      "address": "0xa8D959C9ae96e7D0A949c4158326F2750D8aDc68",
      "txHash": "0x5a08a9df2ec820269db6bc1d54d8f8e7bd9406cda77a047e04efd13461b16a7d",
      "kind": "transparent"
    },
    {
      "address": "0xa8df5B8779f24c380D51D704b118907D14A9e3Ed",
      "txHash": "0x26aa9192d10e6146da3c5e1bab3298246f483cd0af9eda76dc522102e6623487",
      "kind": "transparent"
    },
    {
      "address": "0x4C250360ff61E4577770955B55b9901abD53Ac98",
      "txHash": "0xc9dae642c50ffac1e869a4a676aaef1bc2d8c699e6f052d6c6fa82779fc4a35c",
      "kind": "transparent"
    },
    {
      "address": "0xfE54fa71C0c2B3EA9759EA7B531c493064c67CdD",
      "txHash": "0xffd07178110f05a2e612f1a0f7958e5ee5eb008bc66fc029c5f105c241d3e543",
      "kind": "transparent"
    },
    {
      "address": "0xBDA625DeF316a08F39e5c7903FdE0C23770527e3",
      "txHash": "0xa72aa4cf7b7e5b53bd1875d0f1c9e185f5740b1a5492bed26b03bbe01076eb37",
      "kind": "transparent"
    },
    {
      "address": "0x71dDC964a6D5C6C078F2f50d0B894e731b1c9A30",
      "txHash": "0xaadd031df3bb90fad135b68e313a6cf4416239c7632f808f4d0d4e8533e7178d",
      "kind": "transparent"
    },
    {
      "address": "0xf3C8EEf45cFb8ca1c1D5c1ad0E1E4d4ffa223247",
      "txHash": "0x5761eb6d972cd4dcc3ccbabc77e9780281c51ba79fc25c172632ac13846f1097",
      "kind": "transparent"
    },
    {
      "address": "0x50FdABfae8e3B5e99C3b63F05647126c69aBC8F7",
      "txHash": "0xd0bc457aab69385756dc033ab602e1229ea48fc23319432e435eede99bcda840",
      "kind": "transparent"
    },
    {
      "address": "0x8A3eBDb77A1BA1a9f0110A1B8ec5b989fd3fb1B1",
      "txHash": "0xc2eb569efb3d994407dd3d80ddebcb5aedf13336d9c5ed2eca715d7fda9668ce",
      "kind": "transparent"
    },
    {
      "address": "0x76BD062d9170c426C45aa48c6DF9b778978B1902",
      "txHash": "0xab7652a6fa405d1b32a035aa85b52e6b96fb6d5aab887129a4833d2d1439fa2a",
      "kind": "transparent"
    },
    {
      "address": "0xB37A175b778a14887049aBebdBf8B50CAa25C01d",
      "txHash": "0xc02b0f35df102eb7620250590d20a2c41e42e8145abf59ccc49d47c8c6cee5ec",
      "kind": "transparent"
    },
    {
      "address": "0x57B86be4ea4812c16486df6ee705F48F6Aa39810",
      "txHash": "0xccd684a8b5fc8eefc1eb384b77260898b30c4711bb5c198ef2ecd4d9008bb033",
      "kind": "transparent"
    },
    {
      "address": "0xfdb281c8D77E758d4A5fa6aDd1D4F6D9AcB5768A",
      "txHash": "0x66b5153dd78e1c39fc9a6e85a678fdddbb63298f75cb7e51068c6ca441c9c28d",
      "kind": "transparent"
    },
    {
      "address": "0x4A707e34bEAEA1657cE572d26bB6B2aCD0025764",
      "txHash": "0x232cc98778283033ac4ae0caedb93c321cb7b208e6e22aa1330350c1e10b94d5",
      "kind": "transparent"
    },
    {
      "address": "0x09ED0543945470E3F6bBe6f0BC97De89C6d3A384",
      "txHash": "0x724015b07674d3dc6584201f1ae527eb7a5891ac031998172af5afaa642ec68b",
      "kind": "transparent"
    },
    {
      "address": "0x7e4C32BE693E4149E63930C0DFFA78f35d678ba1",
      "txHash": "0x1d264bcd32e9bad4bc8ae023aa9ffc5d5610da815b0a5db6244d2592e6f81818",
      "kind": "transparent"
    },
    {
      "address": "0x1aAaBe52E4F218dEC09DC358CDEf29bB7F3A4aAc",
      "txHash": "0x568c7a4add6af11d9aeef393bb4353f4517394ac3743d2c1debe0a6bf9dab98d",
      "kind": "transparent"
    },
    {
      "address": "0xE3b3e3792de11E3257b01d6681b22012d35D29Cd",
      "txHash": "0xe0261b026de5fc486fee2ad0cd858dbd483805e0494661ab3add7a85164cf108",
      "kind": "transparent"
    },
    {
      "address": "0x432b07804938d2ca78e504Ed3fEA6294812a70df",
      "txHash": "0x9317686da1be4daa6ca5bf43cab2738e63ea057c04dcae9feede2b11f1482065",
      "kind": "transparent"
    },
    {
      "address": "0xD5AcCa40ebF770e2DB562360Fe2AEd0EA8078d1B",
      "txHash": "0x9afae5280af753eb7366c60d9695ac8b4d567c750d9c6f985d58507a1c14e016",
      "kind": "transparent"
    },
    {
      "address": "0x23e05d3B45e92cA8eD0d02A5F330A4A9CCf6C856",
      "txHash": "0xcb075e7b890b8d5fe10fc48eaddc55ce7a0fac17529a894ed4c2776a74264f27",
      "kind": "transparent"
    },
    {
      "address": "0xEE4e504Ea4e10aEa02E71C8E5E8cE4606E45e48e",
      "txHash": "0xffe2b57aca538f2fa35bca2b4408ca944234d8a8e40a858f9ea29412c03fb86a",
      "kind": "transparent"
    },
    {
      "address": "0x37d199f60FC33C759889c7A2D8356c00B868202F",
      "txHash": "0xcf5fa9defd69b0336f52bdff7fd48477247dfbeceb64309503ac94812fe35911",
      "kind": "transparent"
    },
    {
      "address": "0xc7333b5d572eD6F9482C3124Fbe9C7cD67B18137",
      "txHash": "0x3e688b3b4850dfd33fe9501645c0fb00dee7985ad74552db8c403543d978a9d1",
      "kind": "transparent"
    },
    {
      "address": "0xDA7429AddF9F219D350495F08cAe6E880AE92a70",
      "txHash": "0x6a8da3f484f364629053cc4cf9baaeb1a92af16c8ae940f5540b5bfae91d914c",
      "kind": "transparent"
    },
    {
      "address": "0x0af3B4de44dE7FCB4E64f5309D719C074EE24E7B",
      "txHash": "0x29a3d5817a154c162fd6000493c75195d97ce82c23636fcb65d9592113512308",
      "kind": "transparent"
    },
    {
      "address": "0x1dd5A1d693edcC338c0Cbea279b0BE9bF179b1Cc",
      "txHash": "0x0dd6d0fc2165e1d70ff730d051ac3d9fd8e87a9b907a419ce02712c8878aedd7",
      "kind": "transparent"
    },
    {
      "address": "0xc24577EDa7A5E1f64f73B876945C5bB6e743b8ba",
      "txHash": "0x3bb34d320c2db13a625869e35a7a1af94a515db6b8a207af481e0f6cf160d266",
      "kind": "transparent"
    },
    {
      "address": "0x69C1015F3123eA8e287e5B3Bd87Faa15cCB088a5",
      "txHash": "0x7c872c9e717a5e97a4eb7ffb6697162959b5d5e88a87669d9e6e25aa71610a76",
      "kind": "transparent"
    },
    {
      "address": "0xf84f39Bb958b502cD8A91Fc8d8E69aD904e83b7E",
      "txHash": "0xfb8503ab879287aa63c6cb8afd73a26e3f47934d349f8f99f7a185a9efb85a1f",
      "kind": "transparent"
    },
    {
      "address": "0x46F5ad3b2005beed083F4F3F8af8875797572F62",
      "txHash": "0x1aa599102003e8968fee877498c52c4c686daff81a4160cd1e7cbc53bc871cb1",
      "kind": "transparent"
    },
    {
      "address": "0x070c1eDEDB9056bb1246a3bC45f35Fb1F0D21019",
      "txHash": "0x0fe704e8a853113831ece807e07b71004782a6319ef65c458b388200109f47d6",
      "kind": "transparent"
    },
    {
      "address": "0x105B56A1b9F4d4E28aAb3e1172d99fc558EAbFDd",
      "txHash": "0xfd39fdc36344d4737d432dde210c78284bbd9fa0b89bd180c4ebf6b0ea9e38ac",
      "kind": "transparent"
    },
    {
      "address": "0x366BdCE4705c0c0bB29BFf9502533Ac8dD1254F8",
      "txHash": "0x1134e1d394d87e53fab0224d80635ba0757b4fe23b6b47ebf93243512cd2f007",
      "kind": "transparent"
    },
    {
      "address": "0x199Ca16Fb4f42ED0E9100ee58B21aA002f86a4D8",
      "txHash": "0x78907f4f53ecaf43150e7c4fc05245b4caa0dbc0d25c5c8fb437ecf089948cfd",
      "kind": "transparent"
    },
    {
      "address": "0x1690810B54a6B41bc931A7CA77608F502C18D85d",
      "txHash": "0x48e21f0d8c53696f821c9e25782c046a68187dc2a166cdafa6157e4c112508c5",
      "kind": "transparent"
    },
    {
      "address": "0x1C6F41565f5fd716eC3ce66ef76e6572d0610fE9",
      "txHash": "0xe778dcd30cc7ae81302b8ee1e34618acfb8572ee5136113f69224b453618ca57",
      "kind": "transparent"
    },
    {
      "address": "0xcbA462Dbb76CD3163347BDFa6Ce7545C156Cc616",
      "txHash": "0x0ab012383ff886f5dce93cada9f46839708fc808a840f5248c2337465f855074",
      "kind": "transparent"
    },
    {
      "address": "0xF00a59110Ed238534636f05d2F7249C580Dc88E1",
      "txHash": "0x3bea0e970057e253d46a083534987fdbd589998335bb3e35272cbc0a88fa6a4a",
      "kind": "transparent"
    },
    {
      "address": "0xbBe02C43ED1359b637cc8c379984c8DD9fc79218",
      "txHash": "0x600aa3d818053c8263a23b6e60198a5b36604d0672b14410e16f11b72b4d4bb2",
      "kind": "transparent"
    },
    {
      "address": "0x390969c429b013cC957d5dA539696894D9797DB0",
      "txHash": "0x0bd4b0c6c1929fda3abc272cd3c7f6d4d847d901f7036c4884a5e3323213fdbc",
      "kind": "transparent"
    },
    {
      "address": "0xACF17Dd871dD377b7C43F6E6779e084E4Ed3fC95",
      "txHash": "0x7a4a964c67e51bcb369c7f59cf0923beb4b6eeabad68a774215b8b04404d03ca",
      "kind": "transparent"
    },
    {
      "address": "0x879824c8f64F8150C434Ce5Cf860C45D61F25491",
      "txHash": "0xe38bb0866be374c21812c0cb66893003a7e6882b16198637ba28c184cda52a25",
      "kind": "transparent"
    },
    {
      "address": "0xeA4Ef14B1530845Fd864D5A4C20B1B60d1E03B41",
      "txHash": "0x36f253f996f675a6b8023c006eee8c68b551a8e130f3bd7a55a0f0593677fe9a",
      "kind": "transparent"
    },
    {
      "address": "0xa731C70b992f3cedD4d53B838BB6eE6c4F606934",
      "txHash": "0xec85ead604b48a44302e7b184f347d96e59a5aa5e063010db46fdd7748a27394",
      "kind": "transparent"
    },
    {
      "address": "0xEAc97c5D955643FdEC9B515AED857472E6cfb5fE",
      "txHash": "0x9736d06f165f7cf9b32dcf8d4a5cc8ed8a4c22c6bcfd846d8040e81ef112cc77",
      "kind": "transparent"
    },
    {
      "address": "0x988aa1831C09Efffed550F7846423E0736151129",
      "txHash": "0x0aeeea6eb9076544655e4a2753904ccfc7f34eef76b17c498556da0b7806dda7",
      "kind": "transparent"
    },
    {
      "address": "0x24190DEc5C56E844c253214CFd3c14Df7fC26bED",
      "txHash": "0xfcb84511a995879e90ed2c5665960334986d3fd434080e7c808fc61a6ab4cc58",
      "kind": "transparent"
    },
    {
      "address": "0x4CdF64a2EA499f7cC6cf7A0dB884e7BF23236f93",
      "txHash": "0x3efadcf02a25ebb3f730a7909e75b2f68e8a53f4a360b089dd63b55ddb3d5fb3",
      "kind": "transparent"
    },
    {
      "address": "0x0058cB81d885D3E3Be4514B1AE737b8fe2b01698",
      "txHash": "0x35e426e193504dee777dd5ffc19bc9d45cf85eed91ab56bd27f54985b0b574f4",
      "kind": "transparent"
    },
    {
      "address": "0xE43ec17d18d439B960Ee7264d5FFC6b1f6e25401",
      "txHash": "0xa13e92fc52f2700bce41a4dacd9348b0ed4dc42ba13f53ad69d1b1834c215ca8",
      "kind": "transparent"
    },
    {
      "address": "0x1441F64E383f4c306C6e0728d9ee296D0fb587C8",
      "txHash": "0x2f6a8305971548bcbb9f9972cbc10e91b64136ab2f4d7d06a543c6d8258b887a",
      "kind": "transparent"
    },
    {
      "address": "0xEcE35A2B539Ebd03d76E1A74044aD0853b92D4EC",
      "txHash": "0xa472434b3a64823291eac8c0e8278be5f6a2bc57c5daa9b92bd97e686ef3e85f",
      "kind": "transparent"
    },
    {
      "address": "0x425f36970B26150d8e496aF48dBEA92662188609",
      "txHash": "0xbc08dfaeda207ddfbf090f9cda79eef86d84198632049d5d28a3e5bac544ffb8",
      "kind": "transparent"
    },
    {
      "address": "0xFa5eA941F760026F31eCD31f1005AD2E860fed85",
      "txHash": "0xd9c645e1b3c644c4851a8934a732caab31dabd62179f4cf7ac3add4aad1e53f2",
      "kind": "transparent"
    },
    {
      "address": "0x41A48B92953B67eD2B7e54b8220cf7A56a753c0F",
      "txHash": "0xb5799177fa1756170a727f815649c005d35d82cd0f4f635d068278f00286f0ca",
      "kind": "transparent"
    },
    {
      "address": "0xa08d9170F4400AfD9099330d936169A872da52A6",
      "txHash": "0xa5140a887fcdb90a40dbf21ee9faadd40118353fd07326d5c9048b452348551b",
      "kind": "transparent"
    },
    {
      "address": "0x6991Ce51D1681CDA8388808954b0015A76BBD3A1",
      "txHash": "0x193e20ad83b13030ccafeec9684ba2ef26fb54729ca75a48ebe6cd14c721c52e",
      "kind": "transparent"
    },
    {
      "address": "0x1bEc0884E5DAA76B572b599F8249244741FEE603",
      "txHash": "0x3595304ae78209fdca252ea9fdb3b9a4f2d2cd98205a24958f36b7e6bad0a66f",
      "kind": "transparent"
    },
    {
      "address": "0x14cE7e662559af63c5c1B0982139032B880493aE",
      "txHash": "0xbf510a397b1f633359c298de538201e89ba2b94e519e7e51ac6d09f80cfb00d0",
      "kind": "transparent"
    },
    {
      "address": "0xe1B8C8A98D4060d3A172b4daCe373C0c0FbBf1FD",
      "txHash": "0x983b1c1842962ca5ff46cc233cfa954b97eae1633351a4c8acba9ea71ee44fc9",
      "kind": "transparent"
    },
    {
      "address": "0x848547291066684aB0DB3f0FDFfc01F57166aD5E",
      "txHash": "0x36f0af30293cc5f43ede84f71b5b481879289f33a52ae213f99ebcb8836eb735",
      "kind": "transparent"
    },
    {
      "address": "0x14CaFeC306Dc9621207f98d820FdcC0fB431B267",
      "txHash": "0x2b44dfdde1491a7381a5db7a6c38d4932ae50d87857b38e45e3ca5a596e140be",
      "kind": "transparent"
    },
    {
      "address": "0x8C21252CFcdfeEe420D40a2bB6B54e3174fCD825",
      "txHash": "0x6fccc1669c60e304ea4eabe67d8b7b04b86e484118315279b553c0a28a5d3d19",
      "kind": "transparent"
    },
    {
      "address": "0x488d534d2b8c3da2180919A2E168a0d573a2DFdB",
      "txHash": "0xf006a12f1bcfb7f78d787d6a4618932ae8c568cf5d5f0ae57fa54f71a5a382fd",
      "kind": "transparent"
    },
    {
      "address": "0xBE2B98610264b0D2b95d3217eae65Bba4bCB0F05",
      "txHash": "0xc0fbc87970f9fbe95eee64a00cfd08393adc4ff63dc73495154f39b6869c363d",
      "kind": "transparent"
    },
    {
      "address": "0xEF09176F011cD4Db6F6bDbafA478741716c4229C",
      "txHash": "0xce5356ecd486031c31155197684a742fd13782ced77492d277556a976990cabd",
      "kind": "transparent"
    },
    {
      "address": "0xb5f5D93EA557687bbA6272733C480B5c508dCc0A",
      "txHash": "0xe7404ccd1c53b7e1ced52001dcc22c69a105754b1506a37564a8449b0ccda538",
      "kind": "transparent"
    },
    {
      "address": "0xc7b8312AF570B39431A21354a863FA745F98b217",
      "txHash": "0xb37bb39ff1249e00e3ef7762f93d85a20700f17743328242c92f539b66e9b677",
      "kind": "transparent"
    },
    {
      "address": "0xfBa16652Bc981e98e428D27066E822D716b3C5b9",
      "txHash": "0x6077d8893806da8015b02a63447bc580d274617d068008db8383d1e30a355b57",
      "kind": "transparent"
    },
    {
      "address": "0xeDcD0094aB1Baa685F5d6796893f315E5bCA6E6D",
      "txHash": "0xd92e7947832a3a34e0c44640bbb17d0a46d9aedac7af22dc1f814d75cfef7cfc",
      "kind": "transparent"
    },
    {
      "address": "0xA76bEe7098aB3f73b07bC0C4bc2b5CA811d64D40",
      "txHash": "0x52c34e4d34ecd50ba1bf39198948c9444993c70e8cbd5a4203db4d12c6c9fe85",
      "kind": "transparent"
    },
    {
      "address": "0xaD65639f17F5B14cF50372E2D022b3DaCeB19a40",
      "txHash": "0x54d3b4a2007d27cde51c4588d4d70bc0674372788ddf7101d6b65b37bed8870f",
      "kind": "transparent"
    },
    {
      "address": "0xA6AA150c76f5A58b7E41fD296F88367d6dabd6aF",
      "txHash": "0xb1d825bc5a9ffbd5dd709fd6875facd32749ad12eeddbaccd4db159f537efc46",
      "kind": "transparent"
    },
    {
      "address": "0xac7a4e0577ed5c5e9c40b9aA24ba3E56A3bD46D8",
      "txHash": "0xff49b7a6b4e225f1fed5b083eab6e3a21a0ef73e18507674bcd7436c0e359900",
      "kind": "transparent"
    },
    {
      "address": "0x322d46D2784e1C7d9e36f7D63f601C551C5b2b2D",
      "txHash": "0x4fac8ee469dae44e09735e3c5f4fb5a39ee8b3d21ef00394d599b63c3d7585e5",
      "kind": "transparent"
    },
    {
      "address": "0xbf1CC1F1E81A0272a43F8bD3619DBEda143367B6",
      "txHash": "0x748380c49a69b41b686dafcae845574afa35238faeea326d85887c284cb6197b",
      "kind": "transparent"
    },
    {
      "address": "0xAE8921882e162246F6454C408ad3a3f886805f3B",
      "txHash": "0xe35a3f30645bd620d62180b3943af426f5892cb42385873366b8f1ea1a39d71f",
      "kind": "transparent"
    },
    {
      "address": "0xbfB6a12a7df804Af098B3617b87B51899d79d2DC",
      "txHash": "0x8314c8d2102a7b9fd7e832b86f48314a6540325eb0fa161ca2eb2d942f7b470f",
      "kind": "transparent"
    },
    {
      "address": "0x93127FB5aE5f5D25916ed4006dE7ADE298d7Ef6b",
      "txHash": "0x9706a38339c075e575411f6fb36523a0634edbcf2aa15aec3aebf18852ea1e4c",
      "kind": "transparent"
    },
    {
      "address": "0xEc8AB4dd2C999D43eD826fD959799D1592BB6D3b",
      "txHash": "0x70607ba22761ec336e17857aa9553ef3e13e6539c798df9b3de01d912dd651bf",
      "kind": "transparent"
    },
    {
      "address": "0x2E728ea37f2301a33577CC3082bf468f12E5737B",
      "txHash": "0x9f425e84ede775827af62538332f55f7248b8f034b78a16179643790b37d817a",
      "kind": "transparent"
    },
    {
      "address": "0x7B000cfe6383D188499633d857772A724fc53ce3",
      "txHash": "0x834bed1bcb9522d689676d7f4f509b68aa03b794ee411d24ae841c2cba556408",
      "kind": "transparent"
    },
    {
      "address": "0xDFcD42b9ae89690df0C97fbe968897e024800855",
      "txHash": "0xf22e942e145ce32da7fd1bddc0a0e5ca5c76a3039d47cd18e6102d49aeb4aec9",
      "kind": "transparent"
    },
    {
      "address": "0x190dD983DC76b3962aAa082c35D8D26df2DF72b4",
      "txHash": "0x8f9394d08861f0a1485acd577777209d5e63177c3da02b3efe9d3c7a2e838c88",
      "kind": "transparent"
    },
    {
      "address": "0x3f044966C52f7164f67275d62962582fF7Fa7e4B",
      "txHash": "0x2bf30f50af1099d26f46c2de58c0cca15fefae64704a5b59be8d10d76dfe64bf",
      "kind": "transparent"
    },
    {
      "address": "0xA8572adCb770dE17e4A6e7565FF22f525489429b",
      "txHash": "0x0df7cb1a83cb37dd99406741c8b9394f0a210ce86b8d35485e20b4139a9a821a",
      "kind": "transparent"
    },
    {
      "address": "0xDf4BB8dFC07C4625b6Ad6fc9A59fa796Cd8AF61C",
      "txHash": "0xe56241443d9b230f6642dc5a8a6f2842e66638b5ceee975601102f24fb4a0910",
      "kind": "transparent"
    },
    {
      "address": "0x44aA4e58eB6f0F96a845C837Cb7340FE56762028",
      "txHash": "0xb841fd36b38098c36995fdbed6451215c2a0d813f651001d1d0b5033867f548d",
      "kind": "transparent"
    },
    {
      "address": "0x619FC201BEb1d868540407d8928F68F8f06e5BA4",
      "txHash": "0xa5b831d6d5210c2e8fafcfc8f65f243e3c1f20d13b5fe3166d13181a60d04ae8",
      "kind": "transparent"
    },
    {
      "address": "0x381eB6FaA3C3e8B52019a5DFaf4B42d67c89BC85",
      "txHash": "0xc205b4847f46f139c45eac4652b7febcc6760a89e7fc90d262f75fa68c6dd5b4",
      "kind": "transparent"
    },
    {
      "address": "0xD25Cb797Dc44F2cdAcCc4335B0C65EFc6E1593CC",
      "txHash": "0xd82349f53a57f055a21db14d32ea2651822c466c93898bd2c18169822ad258be",
      "kind": "transparent"
    },
    {
      "address": "0x335c034ba3acF80Dfe957c1415a9aFCDDdF493a3",
      "txHash": "0x2a7056c2cb4b4f91a8bcd0530e5361e62aa2e1614321499a1c7b21330574e8f6",
      "kind": "transparent"
    },
    {
      "address": "0x47F22f2aA9a679bBC03cDCb51c3D24bB574008E6",
      "txHash": "0x94c4e545c848c8259ae28fc9c15491453fb3435630cfd9d43614e1a2798aadc0",
      "kind": "transparent"
    },
    {
      "address": "0x08EC74D6E7080Ef898cad1301C3d97bE978F9EAC",
      "txHash": "0x4ec473fe3b986a4331fecc2754905d29358d8888c9c2f32b0c66794bd3461c60",
      "kind": "transparent"
    },
    {
      "address": "0xbb88573ddfd3450cdc0514a84876Df177f8ef79b",
      "txHash": "0xcf553e12f721d2411f1a978ff800f80c1f7096cce9b878df549e45efde888f70",
      "kind": "transparent"
    },
    {
      "address": "0xF898Bb79Cc295F2d3F94454A750F19625a370e75",
      "txHash": "0x54fb6b96a2eeb3b85ce87aec7b0a2a60dd2fb0f750de52ac0b5414f9e4583fc7",
      "kind": "transparent"
    },
    {
      "address": "0x1F574b82F403cAbc5358AC0f6D90d3f321542894",
      "txHash": "0xe5c885d797ce38c3eafca306b2425eafa844b5cba69f8abd514d62edb74a6106",
      "kind": "transparent"
    },
    {
      "address": "0x5492E026ace0f3ab62ef920c3cd0A8D8BA1D297B",
      "txHash": "0x80c91ae1363c9c4200f3a005920bb329737cfb2fb8130095afaa3993caf1bcff",
      "kind": "transparent"
    },
    {
      "address": "0x4c0321cAb8Eb57cF16a467238dc25AAD1c410Ab7",
      "txHash": "0x039bbd5a701a8d6a60cc63594392c14e76767b9f5b86c734ab9e9aed8a001995",
      "kind": "transparent"
    },
    {
      "address": "0x74621F731f7E45afE2B9eE2Df1863Dd206e739f8",
      "txHash": "0x0a4d2d7b160200bda451b0b9120ffba7104df9b5233674bd35486c8ac3cac375",
      "kind": "transparent"
    },
    {
      "address": "0x428eA67e7A17ae0A78318D4F2fDea23E8b9Ca9BA",
      "txHash": "0x46f2f6bdfa89d11b74ba92eb9ac26c030877ae6efa461f977ea032f986f4defd",
      "kind": "transparent"
    },
    {
      "address": "0x68d274981De9C75cF6E2A0c75bc2C75958549040",
      "txHash": "0x288e83cf72a0af3d2d5f2b2f476137f53876535802db8e54bef23f7d35bc3de5",
      "kind": "transparent"
    },
    {
      "address": "0x807a7A7bfd3f3d7984e0aF80c664BCB3e1edcbAD",
      "txHash": "0x78d20048fb75e0a56aa2b8273bf4d63a3705ce55725cdc76a3392d1ba19c548e",
      "kind": "transparent"
    },
    {
      "address": "0xb6dD86f0E46Ee92fa56F0C63bC17A9ca72c17EA6",
      "txHash": "0x8b64b5fd59fae7c30b646d7a35f08d40aea7fe56d04e86f86bdb1e8a6c458439",
      "kind": "transparent"
    },
    {
      "address": "0x3976211648cd980359d9E1ED661DeE4eE156500A",
      "txHash": "0xc304b3639bf3426be72011767d897cd47d19ecd55c23a1cf8784d71f2b2b0479",
      "kind": "transparent"
    },
    {
      "address": "0x317fE17F5F59576048EB6c51d7F4D979e2FA9307",
      "txHash": "0x7cc3da85de410944da86fa361788cba3de441a7d4ea9c9a0bdecc1006589e7a8",
      "kind": "transparent"
    },
    {
      "address": "0x62A6527C1d5c9C6b8b6542c037B1A87082950d6a",
      "txHash": "0x7699a66a2428e1f99a8ed984b64347a70c0c58911f513a4d789cc2897b6e97dd",
      "kind": "transparent"
    },
    {
      "address": "0x409a56E6277ce92A8478808fdbc4Cd5b3f1E5B38",
      "txHash": "0x73d0400a8f11489943e5833f1a5323eabdd65fa590c5d699f0c44c86835833a4",
      "kind": "transparent"
    },
    {
      "address": "0xe232fa82100075F16702198840C19B3b15deac03",
      "txHash": "0x21a3cf6047ea9283e86218b34dd9b626d55940ae1394882a7c1d02b36b89b941",
      "kind": "transparent"
    },
    {
      "address": "0x71F45E05D7c768463ab6d03714833Ce149c30692",
      "txHash": "0x50f1946d1b910329c26e4e3398c0acf47b4de4e37b5edfda0c4c21ea3d2cbf9a",
      "kind": "transparent"
    },
    {
      "address": "0x4EA5Df70656be2e4f22A4bFf7CE107f4b6229AB2",
      "txHash": "0x38ca554245c531613a3fca319d3089ec542cc7b2be525c54632d399a0ae238a4",
      "kind": "transparent"
    },
    {
      "address": "0xB4757619db5E5033e5248A21CF6e3bf7c890e36f",
      "txHash": "0xa7efe0fa4caad1750d09e36942cebb83c65a9bd3277182ac0a3e5f0baa1e419c",
      "kind": "transparent"
    },
    {
      "address": "0x3f9681D01ff9071104b4a51f9446f81aF8E497Ca",
      "txHash": "0x9180f4aff9e2449a3dae965ebb1f0faa9303a0f43072b3ff3c2b81b27eb5c03a",
      "kind": "transparent"
    },
    {
      "address": "0xea1e0CfEF2ad3dDAeB4683eA4F44c61066e83585",
      "txHash": "0x39633d8983573ade0c825f2d5ededaa72436438e28df2a498198e5a7cc2c3e75",
      "kind": "transparent"
    },
    {
      "address": "0x3547aFEc56Dd6a089331E6257600fAa2D9BF494E",
      "txHash": "0x51bb38ff2ea5a65cbf206f0e38af98ebe8802257cda29b1fc6f4dcc94f8c7f7e",
      "kind": "transparent"
    },
    {
      "address": "0x00c80232F1CdEF17C299d1455bFD02E4d00e29D3",
      "txHash": "0x8ea8c42a0683ac71490901ac0d00832ca2877d87cb4d2be32f7e320bc9f897ae",
      "kind": "transparent"
    },
    {
      "address": "0x08f0737596bb374Ca4108cEb63DBff313E5b1A15",
      "txHash": "0xcc2f33bf458466a534208cdd30b753ec16adfde28a15b5bcb741de69b0dffb3f",
      "kind": "transparent"
    },
    {
      "address": "0xA14394572A4BFe56e06EBb9C306Eb6FE2AD2F8eD",
      "txHash": "0xfba4e52ea352f8c696fac360970ea660113992d1be7007415a55243b5522830b",
      "kind": "transparent"
    },
    {
      "address": "0x5d316A438b25815Cd4a71dd0576FC2CaDF376a6F",
      "txHash": "0xbb50a2d502a18c57fb1604c25e57e8208e4121cb305f4ebb17c5813099d5d645",
      "kind": "transparent"
    },
    {
      "address": "0xfE0b7547745ED3857D002eC29CB3CCe8410A3Aa4",
      "txHash": "0x84249cdc431c5b98cdd6b7f15174b99c7203bcd5bb0906c4b8a5abd357e3cc0a",
      "kind": "transparent"
    },
    {
      "address": "0x13c4a18Ab1bc19293894871ad19DA9a8F6cB002C",
      "txHash": "0xad7d38cc7b2bc091fd43b8a0c03f1e6b6b06e551d8ce27afece3e422538d1520",
      "kind": "transparent"
    },
    {
      "address": "0x89B9CCc15F792E34eFA37c983C8dd5cacA6402cb",
      "txHash": "0x0a66bdacfb40b1d89ddd247c836e9ad9b395ad13a997a2250cf7f01bedd2fbf6",
      "kind": "transparent"
    },
    {
      "address": "0xB958F69Fd45b6Cd66772809220bFa2fd831566a6",
      "txHash": "0x0570e9991058eca74fdd6ae10f515b8978545dd045e2a08786cfc68ee1067dd8",
      "kind": "transparent"
    },
    {
      "address": "0xBc920371F6E68778354D5B184b50D5618Fe6CC94",
      "txHash": "0x91c666d24e3d8de8cff3cdb7b9320351f8f926bc45ea05eab95820d456887f01",
      "kind": "transparent"
    },
    {
      "address": "0x1943D61Fa3FFa39B5A8E441766ECfd7c5FA26162",
      "txHash": "0x3fb15ba59e95643aa68d4f4827ad359d4632aa0b6871cad53b0fa7a309c9e7b2",
      "kind": "transparent"
    },
    {
      "address": "0xF367275d3357256F353E57fF849Bd93df022A411",
      "txHash": "0xd042bd2d691749a8f38d88ec9efa9c1f9df07ae69847c3f27ea49f9f00802828",
      "kind": "transparent"
    },
    {
      "address": "0xb129909C62e705F98Ef65Cc04C8cA578eF9C55df",
      "txHash": "0xa1d76940e428862dd6ecffbd4a0c4d2d8fc56d576d8b5075d557727fccbeb1f0",
      "kind": "transparent"
    },
    {
      "address": "0x5691e2b5C86e5a80690dd31d50dd49B00Baa715E",
      "txHash": "0x2db0d104dd510c7aa12ee415aebe58499c4fb69e64eae8af9432e86c9edabd58",
      "kind": "transparent"
    },
    {
      "address": "0x636C5b9be0aC69c29a880BB0012bD501f541d461",
      "txHash": "0x040e500365c704d5e30ec1a650b1996a034ff54e077f23b90bcee852dd249507",
      "kind": "transparent"
    },
    {
      "address": "0xB6D64Bb3bC163Aad52676a7176644b732cbED77F",
      "txHash": "0x6592c4979d2d6351532debdfbf4620389b9e840cdd35e9b8bbeda24a6f1ea0f7",
      "kind": "transparent"
    },
    {
      "address": "0x94b46771d77082cE24f0A3F769718b3a41A67d49",
      "txHash": "0x0307d6091ee71537706542b41bc05a7412fb44204f7a0f914185f641e1d23d0f",
      "kind": "transparent"
    },
    {
      "address": "0x0448BF889Ee05D87a1B68CFC53bb9Cbf034B2f9e",
      "txHash": "0x0db2c5e3ad9a28c5bff2fe146aebf41983a2b8ca264ec9f7f10c90a590f74e56",
      "kind": "transparent"
    },
    {
      "address": "0x026d606a28a6d16Aeb48aF667814554225a8C709",
      "txHash": "0xf90226c07d5b70bd2854a3cb91002a4365eadc0b069d0de1f69b994a5d8d492e",
      "kind": "transparent"
    },
    {
      "address": "0xB8A2FDE195952F4f5D331a98560045904460b34b",
      "txHash": "0x5da4434070b4620f2edf57bdd27d0013f56a758102e925df6e76141d4d73b072",
      "kind": "transparent"
    },
    {
      "address": "0x01afdcF4d49404a1553Dcb55B78FFa0Ad4F5fe1a",
      "txHash": "0x5d706426da21b088363493106920a10f7a30b709d243ec4d0119a3792e7b2010",
      "kind": "transparent"
    },
    {
      "address": "0x8740D6403d58f90B925f6E1aa983873972488EE2",
      "txHash": "0x6baefbd36616a9f92c4f66d4bcc0bffab70b0a9aa4d40f742819f4b9dda972d4",
      "kind": "transparent"
    },
    {
      "address": "0xB570a56a8767e37444D951Df577eB5c26a50C118",
      "txHash": "0x16c3cfcc005cb4e31ce3865b36790800f56d503466b109aa416a72d3389b5b07",
      "kind": "transparent"
    },
    {
      "address": "0xF97819251D6964Fa2076425b8dB068e634723808",
      "txHash": "0x0c074bb531aea78e5728d4be137cb369dd624f995a2dedaf1a55c0aa0ef442fe",
      "kind": "transparent"
    },
    {
      "address": "0x2Df7e17641A2d4E3cE610c8F64213d26dAF8FB71",
      "txHash": "0xd30511fe3af3bed925833c0b91438fc8e801efb5aa314a90fe99d92adbe6bd7b",
      "kind": "transparent"
    },
    {
      "address": "0xB78C04343dB45900d7516d25d7E2b504Df96c009",
      "txHash": "0xc065bc0392cc24d0e1601a1aaa356160a4ed85a176388b76332cbdaed2bec5b0",
      "kind": "transparent"
    },
    {
      "address": "0xdeCe0eFA96431Da1944eb4c96F297853cA42192f",
      "txHash": "0x1fed07c19e6a0552ee3cb2c8b42d1e8a8273fbdc5d579a0aebeb1e45936fdd4b",
      "kind": "transparent"
    },
    {
      "address": "0xAd86251a08f43A338FED30CB1bA62D7D57B5bE32",
      "txHash": "0x5caf9db07d79cca4d2b8306c513e8d135474da59921c396d4d08c058d9ddf885",
      "kind": "transparent"
    },
    {
      "address": "0x6579a2bea11b0a9D3A8722cF601F83eCb5Fd582D",
      "txHash": "0x44c3c1eb8a4040e552462331e100a2f210ad73adcc7a6437c8cd48bd0851f1ad",
      "kind": "transparent"
    },
    {
      "address": "0xAA1A86289300F6f008e02c7aD7aa5f6f57479A62",
      "txHash": "0x751e7cb11820ec8ec58c79b4c1abf0ad57691c3b6337f84df046130419a54f63",
      "kind": "transparent"
    },
    {
      "address": "0xAa0B57fa0a94E35A79220B1954151B038d414288",
      "txHash": "0xf6739b7a1fd61d333803e843ef53d600f3e0eb2a451bfedb48890c65e89089c7",
      "kind": "transparent"
    },
    {
      "address": "0x86f760fFF83b377fe01db41D17d49752ccd898F3",
      "txHash": "0x0e89581b1f3c06031490db57ca9959f113e898ee2f45c2aef9b3b4acdf593424",
      "kind": "transparent"
    },
    {
      "address": "0xC8e137D6b1D0A0126f4386E03368C140d1b73053",
      "txHash": "0xd7e0027839521a91708c4d766b049245193e9084b98609b979e1497bcbbb517b",
      "kind": "transparent"
    },
    {
      "address": "0x0B706cE7abad3D6f5375f9d27b3928d89575A0f8",
      "txHash": "0x5c8005193d820e208e7114eb468808dc0f3fa72d7b84f9316ed02bbacbbc93e7",
      "kind": "transparent"
    },
    {
      "address": "0xbdc045e6C6dAFdcc7CcFd167815F073A11BFd7f6",
      "txHash": "0x8ef5ab0e009e9fa8448dbfdc9677795dd68753eb008fdcbc02e641bbd59872ca",
      "kind": "transparent"
    },
    {
      "address": "0xbF9994ECE6666fa041C952e7065d048339A74960",
      "txHash": "0x0061ed30e8256f53c002574bd2e266c0ca42589287e5fcdbc26339205e7bbaa0",
      "kind": "transparent"
    },
    {
      "address": "0xEbd6F55107F42dD36B7377D89844199267206Df5",
      "txHash": "0xca95323ede3402e1503cdcc9bc9de665fbe82e6bdb5c685fa86ada1413abe659",
      "kind": "transparent"
    },
    {
      "address": "0x43850Ab56a129aaa9a94B7172A476a91C593b683",
      "txHash": "0x30a1bc7e18ec64e6ae8546baccda25935942bb7baca39293f42dd4f756df38d0",
      "kind": "transparent"
    },
    {
      "address": "0x7bff0C9203C6E310aAaE3260dBE8304e9f16f353",
      "txHash": "0xa233e26ec5d923dd1f54ef12b824615cecf0d49df5697f1493d6b93b7e5cdd30",
      "kind": "transparent"
    },
    {
      "address": "0x91b91a2daFCBBCA82Cc42F745c739552BfBc524A",
      "txHash": "0xb91489dcef161a38fa14bcded58ce921d019af0feebcecf9fdc62fa5025a2178",
      "kind": "transparent"
    },
    {
      "address": "0xDC8d99C75339f095f2405910ec9e5e62a625Ad6D",
      "txHash": "0x40ef549ac2024a8d5a2ac27a89329a162bf3d3f2f27fe57c0f9f7e9f551079e8",
      "kind": "transparent"
    },
    {
      "address": "0x849e7797767D7BE2c498FA6972A0D9Ecdc61D2DC",
      "txHash": "0x46a782e219191417cd88e40a4986813428aecf5df03192d152bdef40f34b0ec5",
      "kind": "transparent"
    },
    {
      "address": "0xB6B0144679b809D60D148B64c081f1Ffc2d9a4ee",
      "txHash": "0x44f3dd2024f420c0219e1850b17857332fa347a4fb4deae152e87ba4283ae777",
      "kind": "transparent"
    },
    {
      "address": "0x2d9071562B90AaEE9dbBD638d2e954643c395692",
      "txHash": "0xeadfde908e5383c0002bc69652c75ff619e8fafbc169cc561cab01116f12aa03",
      "kind": "transparent"
    },
    {
      "address": "0x853Dfd222915c28d9168bb99453f67f79B23aed8",
      "txHash": "0x23a8596eeadc237477e4e54f6ad1e5ef0eacfe75b3f4a7a9a9fd1da9e54aaf72",
      "kind": "transparent"
    },
    {
      "address": "0x875B19395C34f50A53848e890B854462ABe671e5",
      "txHash": "0x845745bfd0db76e21c22821f57a344b78c71b9d6df26310d922405789682a4e0",
      "kind": "transparent"
    },
    {
      "address": "0xAE2B040114112981cf79821a722eAB1Ae0873Bf1",
      "txHash": "0x546ef8ea4a92c3cae711c561fe5d104821d306a5c1e3c67d15584f1c0945b397",
      "kind": "transparent"
    },
    {
      "address": "0xb25eb1fEBa5A3deDF459Cc96A937c9AF63Be9837",
      "txHash": "0x65cf73c081dbfdb5455dbdcbf9fb7a08c5ba8a57ab6dd97e5113854152151b96",
      "kind": "transparent"
    },
    {
      "address": "0xfCA3f33c54b4DBFD8b33207a7695e85c0f55eDfF",
      "txHash": "0x630f4877389cd3fb5e4945da018c4d44d9ffe7d7395782942e442ca95c24105c",
      "kind": "transparent"
    },
    {
      "address": "0xecec52a0aAD76d72ac6dbe142F39DA0F00eF5ea3",
      "txHash": "0x727ef340de0fd18da87cd4d1b152a23dfdc3f0a0a5c92acebce90fda6329600b",
      "kind": "transparent"
    },
    {
      "address": "0x4212853113414FceFD12F643703FfFEaF67F9e17",
      "txHash": "0xa22fefeb60f9ba2cd81f2c6654de271c1aec043331514f2ef5b2ab00388978aa",
      "kind": "transparent"
    },
    {
      "address": "0x0d2fF588A266eAa2467220F396D67Db1C0A34edc",
      "txHash": "0x6a1a3e6bafe9f2eb16821a3abd69fe3e5ff1a8a22a6de72e67d2c578b932b62f",
      "kind": "transparent"
    },
    {
      "address": "0x1F9d397B4DaA45Ae9F9004D10E1e50ef37cF6B1e",
      "txHash": "0x4feaeacfdee0f0d4d3a3519486bdcdbb8ab32328d4aecf4f78eac6f8854a1944",
      "kind": "transparent"
    },
    {
      "address": "0x7bC687C8536Faa90eAe35F3523F116f18F8b55Ac",
      "txHash": "0xba280ac90f5323615964deafc53e86398811eae2111e05af337cd276422f5c2c",
      "kind": "transparent"
    },
    {
      "address": "0xD2c34CdDAd87cA2b38EbD9E36b0c38eCe179b6D1",
      "txHash": "0x3c7ece586018f650d147f618a847e45d71fd6715a7b48c895734a2027acc8a7f",
      "kind": "transparent"
    },
    {
      "address": "0x1416Dc9B9e190A8BCB4dBa993880237E5b45DB20",
      "txHash": "0x856c7e5cfc127c23de134099a78f287eae7a894f880bae46e8651839e2a75db5",
      "kind": "transparent"
    },
    {
      "address": "0xcF6fc7caceEA8b90b5325632C76594e6e8aa798D",
      "txHash": "0x53d77dda35f41f7e058088ae0d7d5afe0454313ab504a529eb794f0e992e2d14",
      "kind": "transparent"
    },
    {
      "address": "0xea043DeA02699b0A5aBC284922A0e78bbBD788B8",
      "txHash": "0xc13ada8be9ed5f182d0223be65905bc0f47d172f8ccc47a2ea4e09be704114d1",
      "kind": "transparent"
    },
    {
      "address": "0xe362099e29dAF39148B71E2b4bd0a497398A1654",
      "txHash": "0x5885ab181bb8889a20e3b18a88e27190daf9dc643c80b76776d9f0ed269dde1e",
      "kind": "transparent"
    },
    {
      "address": "0x5fd381699396509D0571189447B7220f5C4d47f5",
      "txHash": "0x75edaba5fad3e43714f777ce398be6663fb2eaa21619d453606f1009b8dec92f",
      "kind": "transparent"
    },
    {
      "address": "0xb87Ff7111822c6Fe9029316b53D5Bc44A89B1ce6",
      "txHash": "0x902dac1f082faf85466e91c270bfa03db8fae85ad2f2a7b36ec00d2bc9f8f4a8",
      "kind": "transparent"
    },
    {
      "address": "0xBe690C5De481d06041A2A638990706CC03831D42",
      "txHash": "0x36b012d23ab2a198caa40f1f0a69bd593c6da0c7a59f9d74ebb2f04adbc67fec",
      "kind": "transparent"
    },
    {
      "address": "0xC3868B34f04afb096A1142d1cA9F6815D2A4D0C3",
      "txHash": "0x6e8c905029401f44dcdf37a0e7aef49109032a4ca96411a66329f45eb085981f",
      "kind": "transparent"
    },
    {
      "address": "0x09b974fE4f503E1cD1540e3B3dc93f870F7D693c",
      "txHash": "0x625bbea9a8c2c50a75b07fbba129fe80d2151a4778f80523131bafaef59c444d",
      "kind": "transparent"
    },
    {
      "address": "0xD342006D419731C4213055f791D31b015520a97B",
      "txHash": "0x9d762ef920e434116d19db0fba2b93a603a06d812ff091e1e6977813e62c64d2",
      "kind": "transparent"
    },
    {
      "address": "0x460BEF36382380cb0284b78a72597FC3a5715Ff8",
      "txHash": "0x1e832e72ef82401b8290b22be59f6c7bb6dc8ef14cf5a2f6f016f8a9a8387dca",
      "kind": "transparent"
    },
    {
      "address": "0x8F6C19C802d7b21e7a99006b07f126Fe8f74775E",
      "txHash": "0x31dd8e8ea0b7b43c8a5a25a4c207bb612b128b2b474628e8db46e7460c7868fa",
      "kind": "transparent"
    },
    {
      "address": "0x4d8350E487d8abdda9313f989a1cdB612C527E05",
      "txHash": "0x8b437a44a4a0131956486689c6af19007c003e4501c9aa974676d12a3b4d2529",
      "kind": "transparent"
    },
    {
      "address": "0x1eDeB152388f44aC5B55137B936b2aba44F1Dc30",
      "txHash": "0x64aae93ba0fecb409ed3e4f378e7ba7b6c091e95947084d3017a789833b7897a",
      "kind": "transparent"
    },
    {
      "address": "0x4933b25786FD1A9Af80Ee700c0BdE699B03B0344",
      "txHash": "0x5a30f2129cf7870160defca91c82f55a80571345b551c7653f4c27b9f0ec8651",
      "kind": "transparent"
    },
    {
      "address": "0x8Bf07229fAFaccfBD5094E7E0cd01542DD3e74b8",
      "txHash": "0x349a301cf6d5276d208cad1831bbfb04e9d3569a105296f8d86f1b09a6e7620f",
      "kind": "transparent"
    },
    {
      "address": "0xE6deb4b57B5519fcA5B2Cd9C2B3d88b5EC9b7865",
      "txHash": "0x2947b20a08841c5245eba8e719ac51a469a66045d551b2394fb0f01c3effda72",
      "kind": "transparent"
    },
    {
      "address": "0x5e289839D1e97f80f1DAA3e0C2ffc03280ebA2c7",
      "txHash": "0x2d4bc996bc51c186cb475e2c43505c609ab4a2ecf8d471e8bd40d16820e0d380",
      "kind": "transparent"
    },
    {
      "address": "0xAeee2b7B4Bb6E3E33d0f72789Ec73C69D6FD83aB",
      "txHash": "0xa3aa7ed079c5a26a0f2d93b44aa6ca93e397f4096129a5e876f7c68d1f21d019",
      "kind": "transparent"
    },
    {
      "address": "0x8d7b9201c3E28552C24d8FBdC49e115f56eF1bda",
      "txHash": "0x4c7dc575e43144b88b5ca88a77ae52a488992436804c41491a720efe118cd206",
      "kind": "transparent"
    },
    {
      "address": "0x6763313aF5874F823b26793B9Dc7e43aCEBc4107",
      "txHash": "0x8e4cc12ed018f9bab9e200e2e546c7dbefda5c8c5691f55c35dd02da5b5f3f2c",
      "kind": "transparent"
    },
    {
      "address": "0xb99D07b11Bbe4d09040E49Ffbe6f0d71461B7eBA",
      "txHash": "0x8d13e2c6efb82b055a34ed63605059337a8e10ccd2d58141b53da7b281c0a3d6",
      "kind": "transparent"
    },
    {
      "address": "0x6DD950B7bdc604a621a9485Cdf29a489Abbb17d7",
      "txHash": "0x94dd74cb2dbae25818f13625f0faa43e078ba737eecf99aa80abad3c8d21c1c2",
      "kind": "transparent"
    },
    {
      "address": "0x1b5Cbcf15E5E78dF3460EBB2E277D1Ba30740FFD",
      "txHash": "0x5a603554b0d0db5ae698cc942a00bcea486d5fcaf856e3c5ba9ffc4e72f2a16d",
      "kind": "transparent"
    },
    {
      "address": "0xE9b78369792f2573153c8c542aF1720956ab5D64",
      "txHash": "0x811607216cd1fe034b9d5de2b9eba04de0a917a20159a0914056cf83dff8d8cf",
      "kind": "transparent"
    },
    {
      "address": "0x0FD838d6Cf4a24332b71a09D1b6A55b61f02B0B3",
      "txHash": "0x1553d23d799a6e53ba38ba77e6d92d017eb7c5b55c5b834398a80d502cce1908",
      "kind": "transparent"
    },
    {
      "address": "0xAD8E343494B9D9aa798Cdf630ba3D9a38A1Cd1aa",
      "txHash": "0xb6fb985ace3e5318460d33ba0e013eca00edd5675eb4d12e3234837687c0b331",
      "kind": "transparent"
    },
    {
      "address": "0xa48AbC9479810B1bBD2fE2473930f987b37fe6cf",
      "txHash": "0x96efdc2ab0fa2e37503afe9031860b503e18ef50e27ba62386aea2ba6af653b2",
      "kind": "transparent"
    },
    {
      "address": "0xDddaA3f479F150470B964E24dbb62fae84204265",
      "txHash": "0x8e81adbdca430b0cf0a4f0346764b18fefcc4bd4cf833ee09574eb33fc2af326",
      "kind": "transparent"
    },
    {
      "address": "0x4fA966495f4bC0fD93199DE64f08F59AE19ECe92",
      "txHash": "0xbf340624546d9e99ee0d88b7726c925b55be8ee77d484f7adc284d8228916d8d",
      "kind": "transparent"
    },
    {
      "address": "0x9013dDb33041948d742Fa9880DB4dDCD3001E422",
      "txHash": "0x6798e310a97726774e14b8069bc108baf2b3190103b2b31972bea6b076eea94a",
      "kind": "transparent"
    },
    {
      "address": "0x24988A899519f8A7e89605CCe00f256f905356d3",
      "txHash": "0xe5d0854baa2cde74e7c393a5dfa3ce88ade779a4941da22ef8e133ece5a9e9a5",
      "kind": "transparent"
    },
    {
      "address": "0x3266F5002207E839522cFdfBceb1ca1a658135e7",
      "txHash": "0x91d97b1f0bb6f1903aea3dc9494df93ed987ea9bfd88732bfb3e400f00860b20",
      "kind": "transparent"
    },
    {
      "address": "0xfC864eDA58c3d99d1067602E827CeD41bcFf2a3b",
      "txHash": "0xda0d2763b8d34c67e339d1042ede05e6189fac20397eacc7e911771bd7d0e1ad",
      "kind": "transparent"
    },
    {
      "address": "0xEF1409Ea388CDC1655df1598377C2a2D9d2d7512",
      "txHash": "0xc21944cf269f3c2a02dc02320dca67be2e41ee577c055a34980316c87ad9eb82",
      "kind": "transparent"
    },
    {
      "address": "0xB9EE7604116DDae3d926F4241a4d2b2c79da6A73",
      "txHash": "0x47ca7a2ee7cddfbf33c19d38076557a3479cd84d6095345c3b3dc8552cd3bdfd",
      "kind": "transparent"
    },
    {
      "address": "0xEc6Eefcb59323E743c6C0E5DD72fE7f7B8cD25B2",
      "txHash": "0xa1d0ef289d21784e9d0e8b9959a225f2a721219d41d5095e36c7634dfe8385b9",
      "kind": "transparent"
    },
    {
      "address": "0x1E2B9c7b8e359Eb4BE2ac9F420533B3d30329821",
      "txHash": "0x02c53f4aa041fee68fcff0042f58ac45aa760ee9da8e1f230aacc8dd7a442249",
      "kind": "transparent"
    },
    {
      "address": "0x81511cB1d2f9C92DB7124EC4E56d7eE6809B3E6B",
      "txHash": "0xc4eeb111628c47eebb5044513efd2380cab2cf05d2e38b4a7fbb14ebc0c6ae07",
      "kind": "transparent"
    },
    {
      "address": "0xe89D5d25BB440ffb782F543E342790499044A244",
      "txHash": "0xa5d867bbce8990c25d18a2544e3f845e20463af9d25a74f36a479b62b1e08fd7",
      "kind": "transparent"
    },
    {
      "address": "0x592FD68B080c68A4875253dc52Ed9f96329c77Dd",
      "txHash": "0x7669a073c8610d80d34bcb6fc69cfac8d419bf34af8eeb6368b70d2b7c1ae569",
      "kind": "transparent"
    },
    {
      "address": "0xb35871aF39004AC8FFb654EB1c74bEB14c9C1aD6",
      "txHash": "0xa04b5ee53bfbeae09a2acfa7925b0522e1dee0585bdded353606037825e9f7cc",
      "kind": "transparent"
    },
    {
      "address": "0xD536b1D124CcDF9C7DA3C4a09B6278800FeFf1C6",
      "txHash": "0xf02d863f172d95f515dcca5ab4be7288bdb3699ff44b9eb873342970ede0cd9b",
      "kind": "transparent"
    },
    {
      "address": "0xCa762de386d876C638Bf83Fc9F4002214ac87306",
      "txHash": "0xd3fbe2af57f8eb2db0bda09cfcf27287166caad59d6d82d2172beb2037ab9cb9",
      "kind": "transparent"
    },
    {
      "address": "0x3FAa2119faB2091E29188409541F6914E94B2a6a",
      "txHash": "0x54f818722578f653b74ffba8f7130e50ac6bc34d6edc36ccdd852d5bea41371c",
      "kind": "transparent"
    },
    {
      "address": "0x4493E65e075534F8CadF6a460ACA529d07691900",
      "txHash": "0xde22365b07adfd0dd96396f202d56c10de2f59e021560daf7ea7e241e7c2f573",
      "kind": "transparent"
    },
    {
      "address": "0x57e0C0CAcAb56c0DaC765Ff1Ac6967B3F478D1cc",
      "txHash": "0xabc3d5d91c1580a9b5f7a8f0e8b5223d8de49b0aac5aa0f7de5233e94c887cc9",
      "kind": "transparent"
    },
    {
      "address": "0x7272ec606A2eCdF65A38A2E0426c295D2bDb6bF8",
      "txHash": "0x37f1d196e26318693bf3eab41b61405dcbacdfbedeffd6c67346b0c49781f6b0",
      "kind": "transparent"
    },
    {
      "address": "0xE87FE46278A05Bb93bd630541E74a5C9eD929817",
      "txHash": "0x1156b3098e6de792d8c632c1b23269de09fe589f231d1eaefd72dcd4fc421191",
      "kind": "transparent"
    },
    {
      "address": "0x78D9e8e99e9F3b690C3f27eE521a1aE87AA8B8E6",
      "txHash": "0x9739fd661b8773f1f17a60ec2ebe4ccd853822d8596256663bcf6faa0b42bea8",
      "kind": "transparent"
    },
    {
      "address": "0xC39A6eD82Ac7443461785B49e85D85384eb69087",
      "txHash": "0x5a669e35a2a3efcf77d472e8dee62c448996fcb0f08432ea1572f9656fa7a01a",
      "kind": "transparent"
    },
    {
      "address": "0x427E3778213FfA117F95D85ee8567CBE50eb8cBa",
      "txHash": "0x94814939c88f89a9ad4ef64029d2b13c601b089ca112fd159f64fc54d710c97c",
      "kind": "transparent"
    },
    {
      "address": "0x40Aa2Ce62a2286D886545e07A90a52edd73FE857",
      "txHash": "0x1d3202d50c8da64af1880b2714b1ac223e50914ec6dbea8c37089b897b7c166e",
      "kind": "transparent"
    },
    {
      "address": "0xc833A1753CD6722d0A362dcDBd0355B8B2276045",
      "txHash": "0x338e00d7e8edc7483ca2b9c1c0a99049a124701b79962f7fe956f33f163b6031",
      "kind": "transparent"
    },
    {
      "address": "0x147E3B69f592290f1179b1591239739E4B7Bb1f8",
      "txHash": "0x0cbad90c63e30585a3159a2910ccf0fc23622003787cd72d9e3cc0af8723026f",
      "kind": "transparent"
    },
    {
      "address": "0x926Ee4fE05C4D018cdF0Cad5B4bb6c36197e41da",
      "txHash": "0x9890d11f92b2edaadf3ad45a69ad40d6b986eb24760cfdcc4bce052c81a716a1",
      "kind": "transparent"
    },
    {
      "address": "0x9D87fbe8e2ec9bAcFC6b541b101130981A392311",
      "txHash": "0x33586bd5c3e4d7485b6908c3e0a129f26b4d5b78bf6c75e7d0aa320d4ea92f40",
      "kind": "transparent"
    },
    {
      "address": "0x12954f2aA475a9F92c5D1F40fA26bd48723e7FB5",
      "txHash": "0x7f9de0b482c0c4d2f3af625f4180b21a6475af7e1e031c11828f8556bff6c6fd",
      "kind": "transparent"
    },
    {
      "address": "0x659D0834a57A3ED9DC84910382383D0d554639c9",
      "txHash": "0x65125cd4c9633c2eb1fdb6c276e87f61f175968ee4499a147132f37b94a2deac",
      "kind": "transparent"
    },
    {
      "address": "0x58410fC0979e9cEb5a7e80826Bb2e5a65CA44736",
      "txHash": "0x13dc4a994687134e3966768b6b759f1fe861479cd8914da34d7135b9a0ebe58d",
      "kind": "transparent"
    },
    {
      "address": "0xC79998c99a41Ea7a57DB510054ac2288558C9993",
      "txHash": "0x96354390da24c7e27b1c89dea68f73a15c403cd4480790236d6c964e93ebbac3",
      "kind": "transparent"
    },
    {
      "address": "0x79Ca270Aa287e66FFef124702Cd16Adb42eD3B95",
      "txHash": "0xaa04696ba8e736b287da48c32146efedbe891565f88d7041b826e08bd898a1d7",
      "kind": "transparent"
    },
    {
      "address": "0x46fb6751D7eEAA1F44067ceC203FC222D333d107",
      "txHash": "0xb7d097685b7fc8c96fc62a7a0ebcb1794ec72ee09746bb6705bb976f5c42cc06",
      "kind": "transparent"
    },
    {
      "address": "0x158B027FE66d85442eafA61492884B33AC0eA48A",
      "txHash": "0x26feaa3dc799bd72a35f4f32f279baac9a1e01b1f1004ccbaa86bdfaad706489",
      "kind": "transparent"
    },
    {
      "address": "0xfCb2117C483F31F83ca21de182f2d1af453882a9",
      "txHash": "0x0c1bf89a4d9a7068ed9838ca8cec6a8b70ec2042c570943c0195475338acecfc",
      "kind": "transparent"
    },
    {
      "address": "0xE20D8a76aEaCdc54D58874566cba427422AAC6c4",
      "txHash": "0x2c503fdbd2dbb618aa31792a8a3460d0be8bd4689b6afb6bf4374b5f9417a7ac",
      "kind": "transparent"
    },
    {
      "address": "0x511388c0f1Ac96Eb3e8fDcfdcB07494c2d5EbEaA",
      "txHash": "0x054846c63df7723ede79e88a974f6a55e0ac2eaace74d7f518f174dff403e21c",
      "kind": "transparent"
    },
    {
      "address": "0x6A38d0d1A2776e7B94E956F540697fB111388B38",
      "txHash": "0x9b310413b3d08979e44e7f3ea34904f8843fcdce8c98a3f177cda9e69580ceba",
      "kind": "transparent"
    },
    {
      "address": "0x897aBcC022b9F928Fc46ae66F3427257035FE004",
      "txHash": "0x6adcde618fa25234b561e423324dd901965564fd6437c318892e2da69c4f2314",
      "kind": "transparent"
    },
    {
      "address": "0xb3C07261Ea6D1344134Eab96A8BBEbddAA89C008",
      "txHash": "0xea07352af8b71984c0aa3f45a344fe59f4cd9f43f2ea8b006bcdab3d6e7b37f2",
      "kind": "transparent"
    },
    {
      "address": "0x2Ef13A5ec7481096f84E732A0DB5298de2da3feb",
      "txHash": "0xcc3b840986ba004868db0cbc3e787c888935bc07faa4f9f610952f94461bca1e",
      "kind": "transparent"
    },
    {
      "address": "0x32A274bcf35033399B7bb9Fc5071CDc816A6B250",
      "txHash": "0xa92c2fa12c4d384f4002ab2a640015648cd5c26e94ae0d9de9ebbc3503579afb",
      "kind": "transparent"
    },
    {
      "address": "0xf89CD413CdA519AF89dCB7c7A52dE9C7E5646d01",
      "txHash": "0x794bdb01bcab53f3504eef381dc3dd6b98b92001a8060d81800384a0ef4ca545",
      "kind": "transparent"
    },
    {
      "address": "0x89a1084C9826270E01cE0025B734F69039B20221",
      "txHash": "0x5b6b699b38e2d59300db5b200ca28bb1df7f7b5fe42a26252bc37c23215f696a",
      "kind": "transparent"
    },
    {
      "address": "0xD9805936BFE05FA1BEDCaa0E2486457Be4390FF8",
      "txHash": "0x4ece77f177c49d926eaa3daef2857b8bb2d4ea1dc35796f96c06336d92421197",
      "kind": "transparent"
    },
    {
      "address": "0x57F6415A730ddAAf2D2aba0cF8f8d64864abb8E3",
      "txHash": "0xf30cfd6fa885a4dd83ebcdb38232d89feb85f2e5890f79179bb9cc680c80de2e",
      "kind": "transparent"
    },
    {
      "address": "0x2F94075B9E5D1e4Ad12349fA6be7BC141B54e651",
      "txHash": "0xbfc76083fca2b880be04f108e56a1c28cc9fd60125b5c640a4e4a7f748deee73",
      "kind": "transparent"
    },
    {
      "address": "0x711fAb5Ac598EB8C6A52A8b43329Cd4752edE7C6",
      "txHash": "0x56fad2f3ab9cb6c9d3afe6a84674cdf2dfd059b804cd3432acb062354475369d",
      "kind": "transparent"
    },
    {
      "address": "0xF3aD9eda5845Ba9B399E8A98de991bD33e8692B3",
      "txHash": "0x1de133597bf025810fde77af8401aca706095a975f5a6bc2fb5311855ac36150",
      "kind": "transparent"
    },
    {
      "address": "0xB774771cD719be8438399814892547a5bD250809",
      "txHash": "0xfd8d37e33a38fb982ea75d9d318e7846e6e02b2fd80fb9426e4ac2053f580bcb",
      "kind": "transparent"
    },
    {
      "address": "0x819ccC0694892DF1f5C8f70Df9012Ea4C3A6a1F7",
      "txHash": "0x8640a55110b962e0c03a23a1f7e3569044dc05e041bd1a2522c836fa65772a92",
      "kind": "transparent"
    },
    {
      "address": "0x33d9e9CfAeC26aC5e99B01B92eBd35Cc21dF591c",
      "txHash": "0xc1f2f3e62e4744876fc653499741ad9997a7c6034a2ecf21339f2de869f7e2a8",
      "kind": "transparent"
    },
    {
      "address": "0x0f2D3ff0F2206cF3084fE9C472f5d5d79e7Cfcbc",
      "txHash": "0x678490552ff78f54677bcbb903f0f7ee6b59c6a5d95f0a0d54d00bb0822cda2e",
      "kind": "transparent"
    },
    {
      "address": "0x8A6971C877Cc01fE29356267A758dedAF83329c3",
      "txHash": "0x5d4907bab3c09b14cad839d9bc0808e2280f9dccbf1e13b2c59a76454b8f8c6b",
      "kind": "transparent"
    },
    {
      "address": "0x8e70628ba7a072Cc1fBed9Ec9aeE586EDeCA9334",
      "txHash": "0x19b11fa73cea7a9b77b9f80a747d710d456c01700098649dc220205064697a9f",
      "kind": "transparent"
    },
    {
      "address": "0xB2D617bbd556f4339dE7C50d011a7910f68a9B39",
      "txHash": "0xd1e2143c7ca13dc75f3560ce12211f20121e3806bc8289394d1e5a395d7dd79a",
      "kind": "transparent"
    },
    {
      "address": "0xd3278F2B28521642035a67B85d5a606446Aed901",
      "txHash": "0xf123319a71e78fdb322e5ce94d95930eabff50efeded8fc24c8ca9ba1fd54af3",
      "kind": "transparent"
    },
    {
      "address": "0x3696d956bBA019Cf0F904045BD9741E009044616",
      "txHash": "0x4ed45e43f335a7a6cb2e29438dddb29c2c46f3988ca9aaba7acccd5ed115f2bf",
      "kind": "transparent"
    },
    {
      "address": "0xCfD2A1D6103D36D218fE4b45EEa92f0d1aff7C7b",
      "txHash": "0x58061505d81e9e63bb37f06ffd6b3fd0416f35773c0f58d4bfe52b087c25553d",
      "kind": "transparent"
    },
    {
      "address": "0x4a4f46DC53364bF6D24BdE3A4784565508423402",
      "txHash": "0x8318d593203353e56cc3f19e61b166cd0af0c7c2ba1dbdb177518e933f75397a",
      "kind": "transparent"
    },
    {
      "address": "0x241f16DBAD3E028B1D1ED0816eb427E2aE892BF4",
      "txHash": "0xb70267c0e9c43cd851306b1a2887946a7e9c8a95797a70ec28488158a85e5a82",
      "kind": "transparent"
    },
    {
      "address": "0x599079EaF8545E92F51e7E0993c6198D1A5D6f92",
      "txHash": "0xfcdd2c14fa2a5c7061488fae6eb857bbb478b346d123f899e9d784d5d1ae1514",
      "kind": "transparent"
    },
    {
      "address": "0x9D1095efdf497b0b7BcA6B98084cAd8b46218A6D",
      "txHash": "0xe8e8a55246e82e89c30c791b3db29739460fccb15f7139abca3732fd3590a3c1",
      "kind": "transparent"
    },
    {
      "address": "0x26924Ffd67eee19d238098f842B07e486845DE37",
      "txHash": "0xe59ce6b716d3ddb69aaf46b115dc7aed62b85c7d4d82343d52a120006021fc71",
      "kind": "transparent"
    },
    {
      "address": "0xB106744b273aFcdcC222705fE01183678b37592E",
      "txHash": "0xa31c7799656b6516349fd23c1924ee18f6a6c55cba296acc92aef0dd55b9f3ab",
      "kind": "transparent"
    },
    {
      "address": "0xB0bf2fE5d52a751d12AEc259E6E87Fb11721FD65",
      "txHash": "0x24a4a742a298d8d5f250624e21db94bcec445c339ba4b452a0c27a27da165a5e",
      "kind": "transparent"
    },
    {
      "address": "0x301C28B497F28b6C8778C35b50645DC31074F7E8",
      "txHash": "0x04ad9a1f6116d1fb4fdc2f5f1b1a2aca4ec94b4827c5c8b8825df3749734de0e",
      "kind": "transparent"
    },
    {
      "address": "0xDA201481927A725A249aAAbcBe4Cb514a056c755",
      "txHash": "0xb1829aa419f9748823a38046f7fc2f846d28c09b894204fcd5e39e30c9762696",
      "kind": "transparent"
    },
    {
      "address": "0xfbC58392B0a16D10Bc5c5540db5bd6FBb3a719B7",
      "txHash": "0x3995f25a001ed70827603129d22a39679bdd5a06e6103bc28b31974b72489c42",
      "kind": "transparent"
    },
    {
      "address": "0x3Dc9dEEfeBB707D2997f3B4593f16E2E731C1DB5",
      "txHash": "0x139408cd5666db512af3baf946e52b36aef4b06d579bb401b5a3e546e7e02f55",
      "kind": "transparent"
    },
    {
      "address": "0x410123d93166ED40639c89fdD8C65a899eB10D1A",
      "txHash": "0x534b1d7e61fe044b6953642e5db54a56f8e8b02bc721d940f1e1f4ea54d808e7",
      "kind": "transparent"
    },
    {
      "address": "0x87B92d1A05f83A7c4B352B7F98214d586541F682",
      "txHash": "0xa72607632a43f345ca9564a6e3857299795f843963ab9fe4aa3458ee4c21614c",
      "kind": "transparent"
    },
    {
      "address": "0xD24f1ba0DC7e4ef13fA1b55Ed9B24D5c7D6A0C31",
      "txHash": "0xc6defd134bffdb3fdf4218d0e2e0aee7764b31e4e9f17d9a09f90c3d6825f581",
      "kind": "transparent"
    },
    {
      "address": "0x435636Aca969069C59247F90B44dEaD7902d4a64",
      "txHash": "0x132ebe10ccfe9690911747e4d7aef1fff820787049e1f6bacea46e35323e03e1",
      "kind": "transparent"
    },
    {
      "address": "0x009e448C5c634357B71D9BDD8da4710d17E3c776",
      "txHash": "0x30d0c9d98a2a3ac698f84d9dcca7f13adaeab3195926007ebeb5d2376f7d29aa",
      "kind": "transparent"
    },
    {
      "address": "0x33ac7fA92283aFF08249bCeB44dAb36F2910de64",
      "txHash": "0x9ea052afae59304089f2e23db27f4d4508c284f10039adf0d0a084cbda0e2416",
      "kind": "transparent"
    },
    {
      "address": "0x1c71DfF96aAdd00554706c0d069334FdD7Bb1762",
      "txHash": "0x766cfc16a161881deb014feb6625873b4d448af586fb1b30014768a203a3568e",
      "kind": "transparent"
    },
    {
      "address": "0xf43F6ceC2a0cA8C807cA097Cf25e6e5AEE89964d",
      "txHash": "0xa5dde34228cef99fb017d7104f6f76e36583dc573dec0ed9aba7ad98631f7b83",
      "kind": "transparent"
    },
    {
      "address": "0x3A4856659de90020Af5d24b105E66B55930B3ed9",
      "txHash": "0x3c0e71658989ceb08cc16f5215d83db21f8ed7e8f15f5cdf4849e7d5cb46ee3b",
      "kind": "transparent"
    },
    {
      "address": "0xEa4b3Aee1A81375757C1fC761675D450D1B679D0",
      "txHash": "0xa1db894a15b4d618049b18ba373b60e9ae14372f35dee677f3f2119d85a99ac6",
      "kind": "transparent"
    },
    {
      "address": "0xa94B13C5347145899D9dd7d1D78021C3674A7214",
      "txHash": "0x989a2802a85ac33d972564de68f050567a316962ac1f765e6ecd6c2b78d830e3",
      "kind": "transparent"
    },
    {
      "address": "0xDE4642A44Ed02d2dDe3F4E3c94c6203EdfE7cF43",
      "txHash": "0x4d65a49052391dd1b8b55508c64f2b87c5cb35ce3b76c6453f8ae0b8be748792",
      "kind": "transparent"
    },
    {
      "address": "0x44E92478FC94279DF1fe7b6D99A2276E68a606cC",
      "txHash": "0x59459cfea5544f26216324454f943e2d7d1c6ca98b97a586e559181841ce5a48",
      "kind": "transparent"
    },
    {
      "address": "0xBA4F16cc96b35E31224B3F2fD97572Ffa7E13125",
      "txHash": "0xd26f08dbcd6733032c20a3c6b4ed16b7ac4056e565d544be77ed18471d3d53f7",
      "kind": "transparent"
    },
    {
      "address": "0x53b5a969d82F935A65450608707CB512b951A429",
      "txHash": "0xcadbfe087da848dbb7e6af9f440a7ad9052aa853faa9def42a7d7e30bae9ca4c",
      "kind": "transparent"
    },
    {
      "address": "0x3eC3EF5b55eaa2005af1EbFD8E30673aF515263a",
      "txHash": "0x959754facf5f3b264b2070190479efc7d0e749c0cb25f24d9918c9690267b83d",
      "kind": "transparent"
    },
    {
      "address": "0x755c169A75Ff4e75f16A20186c1265022d8d0139",
      "txHash": "0x966146063e99b95e38e706b2af1b717e28c08f82bb13065adaa667c918fe3b4a",
      "kind": "transparent"
    },
    {
      "address": "0x488B7C29f8a5bf3E7820ED19db89E1a39bEb6508",
      "txHash": "0xcea32b98b1c0fe7a90de0ac6b4b287b4f9400a05849df35c8c77a5960f191c2c",
      "kind": "transparent"
    },
    {
      "address": "0xa02Ecd0be8cD8D9392263392C7d992Fc77C0042A",
      "txHash": "0xa6faeffec8b05440ac572a9a004f9fad01f5e7bf5bca31634a699c6568df38e7",
      "kind": "transparent"
    },
    {
      "address": "0x9F98dD211989FC50b224D3e39Ac7CD965E8C2790",
      "txHash": "0x1e7dabc3532cf00b1865712ebfb568707879e953a078c821fa1b3f6873b1b492",
      "kind": "transparent"
    },
    {
      "address": "0x2B8d0F31c7aD8aEbF23680B9Dec7C1Bc8528Fae3",
      "txHash": "0x33075ed636f9a03e529a83fa64405502030f9662870e07d525ade2c66248bf2e",
      "kind": "transparent"
    },
    {
      "address": "0x4B4F798B1ae31d6e650F7dAcd9D8697a782a0374",
      "txHash": "0xaabb4f15e5b18313910ba50fe6eea4f668908d45c3d2d9b9fa42afb8df91d10a",
      "kind": "transparent"
    },
    {
      "address": "0x1C10C4844FC9a2ca92356E596347727A1ce13522",
      "txHash": "0x6bbf8d4218769034b9f49595813451835a7ed3e861d08f437a73b624e5316696",
      "kind": "transparent"
    },
    {
      "address": "0x1F6dD756ebB568bBab001709dA6354C8470Ad1ae",
      "txHash": "0x6a45f7b202c9bad6760aba5080673db7535ae869e1b051699349d97091bd4706",
      "kind": "transparent"
    },
    {
      "address": "0x6098fe8f033C7D78B3a42C350d51597BcaD77861",
      "txHash": "0x3bf104267ba93c909e37445a0d0e713e9dcfb7f7f2619613668fb49b5d30879a",
      "kind": "transparent"
    },
    {
      "address": "0x3d5Fc2BB86D07032AFf5Dbfa810959c3CC019c45",
      "txHash": "0x72480b356bac18987a7c6c1b17637dc3bfc2f178d09a6fec6264cd146fabda3a",
      "kind": "transparent"
    },
    {
      "address": "0x112f0e31E983163d172D3f2DAcEF2FD5069ffB75",
      "txHash": "0xe70ed5b7161529340d63c5ed257001641406e8b2aa0ad0d40eb700ade38c466d",
      "kind": "transparent"
    },
    {
      "address": "0xCDeb915067eBe427B12eD2Ac87338120036CEfF3",
      "txHash": "0x1cabf3ae7c3aeabf2e089bc6a024674c4fdecd0ef8d16ac08ee8459cac316867",
      "kind": "transparent"
    },
    {
      "address": "0xa16Dc6b95E8Bfc763db88dfd9406Dc0648eA2c9e",
      "txHash": "0x3163a232c729883c8af59b0f87baa4920fb2ccddc7288fbfcf5a9a95b2396dab",
      "kind": "transparent"
    },
    {
      "address": "0xdb8e1f891fe53EBf9155F6A1f0eE0Ea26b69E3de",
      "txHash": "0xe7bdef622c4950938d0c284fc155bf223f247d3f970011762594cc8f1ecd0750",
      "kind": "transparent"
    },
    {
      "address": "0xf47116675683c7d8C77F06C3f96bBC89a77057b1",
      "txHash": "0xa04e9efd1e063bee2105f2055a3ba90fa55c1e6dcf9d3f64322afd217c8e546f",
      "kind": "transparent"
    },
    {
      "address": "0x82B6b9b21B6B8B867C33541B89e05458237A1fA2",
      "txHash": "0xc04450d69ec00c5fc172f171ffea321bc6498a75ed91fe580cca45dc1e02341e",
      "kind": "transparent"
    },
    {
      "address": "0xC34540056CB670DC1F26F7A95C1877CBdfBE537D",
      "txHash": "0xf6d9b585600376ba67081828d17f13a431afd0f8638bfa325c2cb055d09c2c4f",
      "kind": "transparent"
    },
    {
      "address": "0xDF0b56e8428E74fa9Dbb48e8bF8821a11c020cC1",
      "txHash": "0xd056554272cc3f8ef7c70c4b7287dd5d313996cf69657c812f8f4b839d02c6db",
      "kind": "transparent"
    },
    {
      "address": "0x55FB7dd3ea7acd72A957cd0C2942edef2B0505Fb",
      "txHash": "0x9cdd11b886131c3dcbf59fc10c729b0598c3d4a323c5de40011f42bd6bfeb0e7",
      "kind": "transparent"
    },
    {
      "address": "0xf7BaB5279824cD6CcC0deB348d27e3BD423C6D73",
      "txHash": "0x58ee6b1f377c0dea4c5315e5a9573498095710eef759dfa4e18c6ccf302a0e6e",
      "kind": "transparent"
    },
    {
      "address": "0x195C9d654Cb3b0e4Cdf9B15d2B50e8A55F3b41D3",
      "txHash": "0x3939cadca3297e5be45b0c6e8716818d42115adcda48b4915f8789cf3efdae76",
      "kind": "transparent"
    },
    {
      "address": "0xE6A05D58dA6eBdb32CB32986e424a7B60678de31",
      "txHash": "0x630a6609c8ebe31330622810afca82089eb771798c7183c4d650f8d703f3c4e0",
      "kind": "transparent"
    },
    {
      "address": "0x9e26a8dc00401d0F907dD0e14Aa60827443a8f5C",
      "txHash": "0xc307a43ae8312a0f9f2290a02d53d23b23c023705856a4076b91e2df1cdd549f",
      "kind": "transparent"
    },
    {
      "address": "0xd169b1Bbfe3B0280DA76ecf283eDd5486Fa158B3",
      "txHash": "0x5a5106d99a1a637f13561711cca12e9358b9f41f2af427f47fc9f89c4e40b188",
      "kind": "transparent"
    },
    {
      "address": "0xA612282fA4a1BF2EFfEc8Edc704610228399e001",
      "txHash": "0xd82c76d54721b8f3127213fdd4d761586dab2948552a051888ba3b0db2307986",
      "kind": "transparent"
    },
    {
      "address": "0x68fE03747deB9A716a40D69961B8F2f499C37104",
      "txHash": "0x913170093c6e965b46eac63d195534a74ef8befc85a6b6527f8af4cd24a83a83",
      "kind": "transparent"
    },
    {
      "address": "0xAaE1FF73458c270D8aa01Ed9Cd1C6Cf43e2Dd48c",
      "txHash": "0x533bd58d4bcf6318a86d38f3dd608329d00797de64895ae0952839b02135898c",
      "kind": "transparent"
    },
    {
      "address": "0x4a9214938F2D9186413529b31ee4bb26cfa6C8D6",
      "txHash": "0x60cbb4a6c71d5fa0348167a374d44e4f56e8f353e658d173562a1c8e622690a3",
      "kind": "transparent"
    },
    {
      "address": "0xaE0fAa0b4F24deB91b2C00e6e68eDbf339619d58",
      "txHash": "0x91705dc2b2c15a0131adc7f84ed5c0eb92aec6f5ab4afe02cdd68b4e2154c5d5",
      "kind": "transparent"
    },
    {
      "address": "0xAC4da40Cfd72eF78F225745c14d69BccD62727b4",
      "txHash": "0xec4b82f48f4fcd57aa6be4d9edb0804560d2f80c11c9bc819f1dbec2bed8cde2",
      "kind": "transparent"
    },
    {
      "address": "0x2637C5181f64DE69c282B23f174238617FDC161E",
      "txHash": "0x35ed4db38b2ce7b6a6b832552e46a3b0717d8b0206cf65deae7cb482f68db42b",
      "kind": "transparent"
    },
    {
      "address": "0xF41B8026170D07087C7C30f12e62e60a8b839802",
      "txHash": "0x46246eee9a74200526984d6fac557de916d8440830bd8ce9f889e10e7c23942c",
      "kind": "transparent"
    },
    {
      "address": "0xCBd322939cEc5eBbaa83fa5F4FBFaEEaBC64F1f0",
      "txHash": "0xe2c3b995deaf173ff72748d61f8b4b38500434f9cf171dcb9386693852a44ec6",
      "kind": "transparent"
    },
    {
      "address": "0xF4FbC84ee2D84ad409bC12A53a081c06203F180C",
      "txHash": "0xe3a250864bcc63d040e407ce06e12ebb4674abdf9d753accd5f83eef4e3e05c2",
      "kind": "transparent"
    },
    {
      "address": "0x201f593F1715E30dB26eeC494265BA023BfD6877",
      "txHash": "0xa3d493a1a6dc95fc0c3d6a306c805b8c59777858054b2b7aa1ac3f1c71623e76",
      "kind": "transparent"
    },
    {
      "address": "0xc92BfBe8D51fd5c7739765cF87Bd64F90b043473",
      "txHash": "0xb005a29a3bd9d9f9f01c1ec0efee4ea1b07023e8e589df7432f2e5d4932e51bb",
      "kind": "transparent"
    },
    {
      "address": "0xCaF058bcED778318B34F44E9FA9ed2fD3D1E674c",
      "txHash": "0x63215f0a01769249aae13d036c2a45fb559b2bd2ebe2d1a34e1547d3ec5414fa",
      "kind": "transparent"
    },
    {
      "address": "0x98c87ebda53b3Fb30e67883D325b10A1D42E24E4",
      "txHash": "0xa1ae5da951dceda9ddd8548dc69d91c581513658b56113984487876fc891b922",
      "kind": "transparent"
    },
    {
      "address": "0xFbd5B1484e0BdDb9c771D55A87c3B4637d907C9D",
      "txHash": "0x694c4319b8e42388b7b20e6beb6df9fede1f92accf6f43744b1de7817be95bef",
      "kind": "transparent"
    },
    {
      "address": "0xFD4d26A536CB8d0e595bCfC85da659472BE3B20E",
      "txHash": "0xbeeb599ec5bffba80c00ba29587836359f23edb0f667decad4eb408153cdfdac",
      "kind": "transparent"
    },
    {
      "address": "0xc9a9c2a47f9782140465048bBB6fe5463ddcD13A",
      "txHash": "0x49b8a8536c8dd841cb0ab72831f7bbeb32351656f656c5fa19230d30baaef0f2",
      "kind": "transparent"
    },
    {
      "address": "0x4CDc264A8176300e3f4263CCB55E4CB766010e26",
      "txHash": "0xa0b098d63b20f1add61b4b0450db256caac22cb15a8ade69ed2d5132ac2f9068",
      "kind": "transparent"
    },
    {
      "address": "0x47AbFD055EC8E79861201FfFdC485e623492c95e",
      "txHash": "0xf745aaf189856936ece666533d65fc93c6d5b46bae57f7d9bdc7b58e1aa76f8a",
      "kind": "transparent"
    },
    {
      "address": "0x1D9d7D22A30138D875325C033D7F472C6c65Fc9b",
      "txHash": "0xc3a9762f966af2388015715fbaa93b31e74ced087f70faff3b6fd2156f975cd2",
      "kind": "transparent"
    },
    {
      "address": "0x5f167d9FebA9e8D481c8607cCC421e44ebbBeea8",
      "txHash": "0x7cdef7714ae6dbf440e444261ea29521454ab16bdf930ef5df973941b538a872",
      "kind": "transparent"
    },
    {
      "address": "0x6A07Df9337865c3036E486BD0e39621E66f0d0dD",
      "txHash": "0x87ced2eb7dd18f0943ee79de575e2761be1ebd66b3013ae5fef76a56b9437e22",
      "kind": "transparent"
    },
    {
      "address": "0xf4ca16Ef9509284cF76596cA0f915736f74bE926",
      "txHash": "0x5539cad153392a828d5430a1546a3429dad8b3c89dd59d4787b508f5c8c414e2",
      "kind": "transparent"
    },
    {
      "address": "0x9aFABCCfb2AeA9d83a91Bf641E74C2A6454A122C",
      "txHash": "0x84655474bd00c5599b2d60abc6e2b00454f7334435f2ea07a8c38ecc52fd7d54",
      "kind": "transparent"
    },
    {
      "address": "0x171682A2CeD8B7F6908D3D5E75F68c9dec317971",
      "txHash": "0x2ec842b36f99d1b0de35f3ee9b1111a92e65bee217a01d4247f5dc0952fd5449",
      "kind": "transparent"
    },
    {
      "address": "0x878a392157C37457fEb7dc5cF292e27DA98De097",
      "txHash": "0x5524bb54801f5b19b74670a4be986d8a2de632b5e9457c662aca077b2f171060",
      "kind": "transparent"
    },
    {
      "address": "0x60F9111e5AcAeb76B43c42d2e5480e82329d514A",
      "txHash": "0xa443ccb6f23380c38709b9b48a7b9d0914dbf75bbae974da914caeaf69804e48",
      "kind": "transparent"
    },
    {
      "address": "0x98eF4dD0124cD2EE404b900A5a998945BCef888b",
      "txHash": "0x657b95bf0585f38cdfe0bbad5f71c41bbdd82fb9d044fffb8b48413421313729",
      "kind": "transparent"
    },
    {
      "address": "0x2469f09d40e8a91cd334C2523077522986c85f5f",
      "txHash": "0x449fdd7a5a741520b4ff1986220d5bd18dc9dc2f79ce138b39e6bc886183a109",
      "kind": "transparent"
    },
    {
      "address": "0x1e435417c5463648D8AF5Dd522627d21A7623DC4",
      "txHash": "0x8deff2c67ca0c546f422031b6fb635e76d587a6014aa496739cb292f51ee8adf",
      "kind": "transparent"
    },
    {
      "address": "0x2b3fE1177D34811127e8bB577dE72d86D64Ee838",
      "txHash": "0x2c532bc5173ebbeaf8f064c67e85caa1a966e7d3ea4d78b229b45557e30b4e49",
      "kind": "transparent"
    },
    {
      "address": "0x1829208009b56982a2c98a85109791afaA7b8d09",
      "txHash": "0x58395cdec4675cb1b93cdc72f4c9759cd7c43ce3989d38e5241dd9cfaf2be35e",
      "kind": "transparent"
    },
    {
      "address": "0x4e51632416aE7473510A01520a80e230Ca4e303f",
      "txHash": "0x14593714fe4674452cd19f563aa6ada81437fc16e45529b4ad8718d54ad104ac",
      "kind": "transparent"
    },
    {
      "address": "0x8d9d32F848E038CA037fc47ecF52156EAE798AC4",
      "txHash": "0x11989a524694f97158eb33792dbd36d9bd5e9af3136f250c1cdf621e7d4d553f",
      "kind": "transparent"
    },
    {
      "address": "0x0b12A1A7AA0e448Ede80d88a39982d1AAEb70F88",
      "txHash": "0x2b1ac061330b36019a863d7ad4b467cb2f639a703bf22a85ee2ae4f32d08c8b6",
      "kind": "transparent"
    },
    {
      "address": "0xE081afc1461Ab1Cd1A1F57A7DF4608A3530C3942",
      "txHash": "0x6290f2d666215e72280f586456558d19d4eab24f0235a341d9d5e883bd829363",
      "kind": "transparent"
    },
    {
      "address": "0xF93fE1A0c4C194B3E814FdE13a8F55fE9cb930f9",
      "txHash": "0xe07e0d4758cc4fa0db583620aa9c53eecdd3f19d1f9f00be8f0eaaddbab250a3",
      "kind": "transparent"
    },
    {
      "address": "0xAB423a17d47B761EBf77Dc87750b5bcFe832FBB6",
      "txHash": "0x5cdac62d5980dd9004b5397d688291ba7972bf9ef8fbc02df0ea84bda01d273c",
      "kind": "transparent"
    },
    {
      "address": "0x7Ae628362BB1404430B71268c87C9ebeaE876965",
      "txHash": "0xd1a8d01214608fdd14634357632216dfbe252f041a03a13a920c8596ed473667",
      "kind": "transparent"
    },
    {
      "address": "0xacbc00EFc4F1E178aFA1fd46AC1E03538930083e",
      "txHash": "0x88e762cf606394b75f57dc8ab552e9da0f5b9e1838e4c4b5eba9ef2c53d2435f",
      "kind": "transparent"
    },
    {
      "address": "0x2F00d2372162fBcf8bd121d9f796DE29aa587489",
      "txHash": "0xbbd9fd03e1d71d4a6ac9aaa47ba84dfeeb874c1f0fcabf46316b438226635f3a",
      "kind": "transparent"
    },
    {
      "address": "0x3E34972b78871cf2E0955a0fE46f2766962C08af",
      "txHash": "0x1fa8e912f92f2489df8ef5c7ef7eb87ca1a34e42587382fa9eb8e3cdb69a4719",
      "kind": "transparent"
    },
    {
      "address": "0xAEB97451ef06e267D073bDE4FFb9802d345568E3",
      "txHash": "0x0c9e241e4b6986281b640b0ae8ffdeba113002a0c6f33ba3afd187ff32f13f56",
      "kind": "transparent"
    },
    {
      "address": "0x113398BF58126F02fE0a98C8C3a82206ec874Bf9",
      "txHash": "0xce6686049926cb9ed7d59cbcebca1f679dd21c6c4dd60b1941f28893578982db",
      "kind": "transparent"
    },
    {
      "address": "0xBA47fF0E33413B9918eb17718ef9685D7fB79F18",
      "txHash": "0x34f2279b2dd57597cdccd65fcfdcfeb1d43cf7d7f91196c2d72640993e5ff512",
      "kind": "transparent"
    },
    {
      "address": "0xA147d32117754f4f593795516a3817f24356969b",
      "txHash": "0x27e5a5f8ddedced685ed9d565febbf4fcfc50415a7a96c019f4c61c1bdd27370",
      "kind": "transparent"
    },
    {
      "address": "0xA87A99920c9d69dE59C3C487c98f390358a51706",
      "txHash": "0x2175c1c44ba3bd6b1647b610a704e5731920ddc63568ec28a6d3e814eba16ebe",
      "kind": "transparent"
    },
    {
      "address": "0xBB9e7a8a97e5570Cfa63b097E1f1eCcDF87a5745",
      "txHash": "0x4aa8dab305b532940587b42dee04dacea55970faceda9dd5aacfd845c005d637",
      "kind": "transparent"
    },
    {
      "address": "0xDDfD99795885571966d26e6b7bA41cfEd2515a9F",
      "txHash": "0xc1552a8ff817770967684b59e3559bf2204008ef952a275c5b70fb94304e68e6",
      "kind": "transparent"
    },
    {
      "address": "0x693f10b658A89539C356299589Ff7Ba390fbD31b",
      "txHash": "0x0020254d508c71f4f313f2afe511d9b68fe734fa7dd5d88db45e441a3c8a7bed",
      "kind": "transparent"
    },
    {
      "address": "0xC253B4e28FaF83c1fb58401DD6f06e59DB1A172B",
      "txHash": "0x876d752b02d609f1dc208ad20493b353d3bb5d13b1418a6056e9411b9fc19bc8",
      "kind": "transparent"
    },
    {
      "address": "0x5725349F743Dd420658B58Ce1b7e6AB0Fb8A0C17",
      "txHash": "0xbe0b4f4e021c7b0bf6739ac966883d547db3de5ee9cb80217ea934174844ade1",
      "kind": "transparent"
    },
    {
      "address": "0xb74f22704D4093C2cb8793e833A4935249D72abB",
      "txHash": "0xb697133bba7abf403bb169b5a739b572681250ae51cd9b1bb716c7ab9b936568",
      "kind": "transparent"
    },
    {
      "address": "0x23bdb70eEa6f12C948303fCc3a3E57D8c31C49fb",
      "txHash": "0xdb6a07c337536c97223a57de59cfa9c5f78c09d061aa523d4611fcf2d5831473",
      "kind": "transparent"
    },
    {
      "address": "0x342b8954C7B364528737A225a29043Ae1ca3Bcc1",
      "txHash": "0x2bfe52747fb224422bb9775921f5f823065ecca7165b1e54d702fb873aeaf218",
      "kind": "transparent"
    },
    {
      "address": "0xe6Ee6047EC73B9f44EbFF02104889b0ED783Ce4F",
      "txHash": "0x230bcd8b010fd1ffca103daab921ade868c52c9cc7054949c2973c8f1ade3576",
      "kind": "transparent"
    },
    {
      "address": "0xABBEd8136379FeAE9937D83574A61BaDFBE20828",
      "txHash": "0x9f6421f732623504a60fd70d0a5cee1a4fff0db26e7ea4890288663336f41e88",
      "kind": "transparent"
    },
    {
      "address": "0x8297cbBc4Ce139E87290B3842724349f74241175",
      "txHash": "0x8607834e17e6219b49f459442488df1c081fd01d2f03a7af413f639712092c84",
      "kind": "transparent"
    },
    {
      "address": "0xA4aeEaCB43F7f7D687b3c5e4e60937495C3Bb5cf",
      "txHash": "0x4b9238bc869f8be10cf77513f54b465118eed33799cd92aa3213ebe6bc35047b",
      "kind": "transparent"
    },
    {
      "address": "0xeA852B5d8578C2f98221167427549805ca3806b9",
      "txHash": "0x7d5b4e822e27847f56877c0659bb723cc319c7c7102a2ec7d16782cf962e9187",
      "kind": "transparent"
    },
    {
      "address": "0xa200682a9b81202CAa510987DA4439ecA663300c",
      "txHash": "0x6fa211f6d1b4ea2205c64b321375c723f54781fd92ef2159ea3239893b368e3a",
      "kind": "transparent"
    },
    {
      "address": "0x7E57f5E227BbFE03Ddd6354064A698BA2A9Dc8d7",
      "txHash": "0xeb2e6532268618e408999dbfe04c67fa7e2d2fb8e349d0e0f77aacef0fef1384",
      "kind": "transparent"
    },
    {
      "address": "0xD5e55A710e3375f3E1f8692DA3B041fb6d66fba9",
      "txHash": "0x212d8e93b84dfed4c7c317a499ec580971b75767ba3f1423838ec712ef77e682",
      "kind": "transparent"
    },
    {
      "address": "0x8386B8d6f8b69782c978f1bF4C796Be160B25C4e",
      "txHash": "0x107111800610b1ed859dfbfc24d4182d295f123f1b5ca4756af57b3baa5bcee7",
      "kind": "transparent"
    },
    {
      "address": "0xe6D5c82C7Fafdb6d68d3d1E476aaeF27598359df",
      "txHash": "0x0eabe4d36ff66f78ecf29fafe8ad1ff92f0fcaaa536b4b763f02afca124d02f3",
      "kind": "transparent"
    },
    {
      "address": "0x7eECEaFeD95818536F7Bc330aF76b2019435Ec97",
      "txHash": "0xbdffe5c2979a7501e65001e313129c66c531d8da0837540c71905519d1e34b98",
      "kind": "transparent"
    },
    {
      "address": "0xFDdFc2d6c6A433Cc2535cc05AE4cF6f0597e5336",
      "txHash": "0x2bc056459f6052abea91967ebf087e25c3ea9c41f297d82964d0115c128ec337",
      "kind": "transparent"
    },
    {
      "address": "0x193CDA49f9E4ee979e9A23B5ab2B5EF4F668B062",
      "txHash": "0x606962d1d68620e4351637cf9d13376d56b84e032195e607cf1e46eaa5921abb",
      "kind": "transparent"
    },
    {
      "address": "0x70ae81c7C5B2cdd00FA72AfD57d68429645B821b",
      "txHash": "0x1aaf6f032605edc084c429e36a57b6023b961b9968841d89f59455805fc7bc04",
      "kind": "transparent"
    },
    {
      "address": "0x4efB45Ac944dbcCB213793e222Be60965AEc9393",
      "txHash": "0x824f1490d0a1a4775114af272c7ae640cd3669c2252c3ca5b878dd3499f1701d",
      "kind": "transparent"
    },
    {
      "address": "0xB3537764B9740c1Be5167167ab7e741706c6E38e",
      "txHash": "0xb59c055c640755d6311a14250580e4b176f5a3f82d395ffd23781c38f86f2197",
      "kind": "transparent"
    },
    {
      "address": "0xCfCf3F4f6F5595878E9C3F7F1d38f8Ec0aA32Be8",
      "txHash": "0xfc87d268e3644e2e58c7cb129e331d4394f0d7bc8dbffaa88213ad5c223be76c",
      "kind": "transparent"
    },
    {
      "address": "0xECF18e5727b80b5756f44a73025199562f49eDe8",
      "txHash": "0xe0f78bb18d697051f3fd7d0f4969c0c4b624f5cdef5de358a7cfa8ed5c195305",
      "kind": "transparent"
    },
    {
      "address": "0xECDeB7c0e9E07f6297C0D8dF9543F76E8936aE2f",
      "txHash": "0xba064f8e3b0fe8230a5c4fdfd02a40973d0368203a4aae373aef8ea30c2bff5f",
      "kind": "transparent"
    },
    {
      "address": "0x8C821095CfDAa5e4E21F05087f0f60a0C5A19259",
      "txHash": "0xae63243e2320cbd1915da71c679120d747b89359666f8709816c73162d1d218f",
      "kind": "transparent"
    },
    {
      "address": "0xEc7E3D255d86E98249737E149995F870D97194ae",
      "txHash": "0xa0b6f45c5219136fccc828028e86ce83d5b356746b849e48e998c17269e4a720",
      "kind": "transparent"
    },
    {
      "address": "0xFD568821b39046BC440dB03593982695a3d7B7Ae",
      "txHash": "0x6231625b1d33a4d52f395749d9e23e8c0f4d25fe1fe010906fc626707f69b5d2",
      "kind": "transparent"
    },
    {
      "address": "0x2D5820774760EF154CDFE57e6D141325a17572bC",
      "txHash": "0xcbf0017c361d8b7be4b2975ba31819428abb783ae033b3e1c629ab6b30e5af9d",
      "kind": "transparent"
    },
    {
      "address": "0x6F3AB03588FB29DAa00aa6ccf15006d7e8B16D05",
      "txHash": "0x4dec079208661acdd1c8c5668ed2501e9e7fc8b9744d5b51f7fe1ecde4670ecf",
      "kind": "transparent"
    },
    {
      "address": "0x4fF8C0896E8dc99b3ff889605Ff1c249a1Ba1DC9",
      "txHash": "0xa86d43d9cea448e23d0366dc19f748dc0bf294593df361480b0d9b0fa12fc97c",
      "kind": "transparent"
    },
    {
      "address": "0x6a225F6Dc099AE1EB442992B5C459B437fb06EC6",
      "txHash": "0x1a71f6ba1d87f17a0cadc68718dff95ac66a7153562f0b4cb9ab20d122ed7fbb",
      "kind": "transparent"
    },
    {
      "address": "0x3E208dCBbf93678e72c283151E378F5bfBDEf83C",
      "txHash": "0x3996121f7923a1808fad549703c44ab76c06164b563801598c3874bbc4572228",
      "kind": "transparent"
    },
    {
      "address": "0x418B853C3F6Aa8166318A2dEaD97F12cE3C48635",
      "txHash": "0xe89547bebf2835d54e2677e7c63797b876306f1e49be9a4fe788dfd5ca971988",
      "kind": "transparent"
    },
    {
      "address": "0xb3059732CeDF31dc1f9eD328c10557bA34d10C13",
      "txHash": "0xb8e2f7b5ba2294038b2032fac8c5a2c6829ab07f170d5e7ce018dffd4482e5ce",
      "kind": "transparent"
    },
    {
      "address": "0x0F9576A2751C99B0F4096FF1AcB3F87568C2c696",
      "txHash": "0x5e157ce0264319d2f8b8b555a4760ee16ebfd4a956377f57a303366e6e7a8486",
      "kind": "transparent"
    },
    {
      "address": "0x403734fe7ea04e16c43b805C6082d8E2e476D090",
      "txHash": "0x8944beaf6cd7275a99241a26b92c85979014814078c96c3070ff4c045d9a70f5",
      "kind": "transparent"
    },
    {
      "address": "0x490e2C7255C31e1cb3cb2cf728Df77A06aF234e0",
      "txHash": "0x07645fcc199f9eb3bb56d0b69487d8d74dc341c2f842f74fc69a098094b74628",
      "kind": "transparent"
    },
    {
      "address": "0xDA8DCaBCC8BDBC3eCe44e6109bd5512883135442",
      "txHash": "0xd84851baa363b2c59fb56c719abd66daa1803e6a76958a2a0ed7de033fa5a5f8",
      "kind": "transparent"
    },
    {
      "address": "0x4CD35F87Cff34974AD43238275E9900981BE1c60",
      "txHash": "0xe6060da264a2d5175f6f77b98ac879affe1b5e532aecab5b6feefcca85a7ff3a",
      "kind": "transparent"
    },
    {
      "address": "0x5962f6b98CF374b610782495ECc90261d4f8020B",
      "txHash": "0x85c71e9dde74088be8010bd81298ba9b9126ae251e43de06bd819c3762623f06",
      "kind": "transparent"
    },
    {
      "address": "0xa00F00474C53AFa6E0ab6F9A1e2cF26BfDb1E35e",
      "txHash": "0x247f0c7e802684f33aa64ae4643f15f5afa08a97506765018393858f50adf787",
      "kind": "transparent"
    },
    {
      "address": "0x9d0B234E2E608039Ce534D8f87cB2845B2aeBC4B",
      "txHash": "0x45d64db9423e0df200888cac96425a8a473c77844d73ee5d819c006d9868e169",
      "kind": "transparent"
    },
    {
      "address": "0xfb1d5E30e18F4d1efeA1c772F990CCC160FA1394",
      "txHash": "0x86148eb636c45aa367846fe36234ada0089f4b86c9d39c686fca2183fe3ec7b6",
      "kind": "transparent"
    },
    {
      "address": "0x5b3905C9ec1871c1CF63482a368030b20065CD60",
      "txHash": "0x462ea64a83fa15f7653e5b0cebe7de3d90879868f1a304e8e256926c71681de8",
      "kind": "transparent"
    },
    {
      "address": "0x4f8B436A1C73d1c520f1BF8042E6caA0703AE65c",
      "txHash": "0x2902f675dac23e968cfb72d5f4af6eb64f8ab80799fa658a816eb8028141e7ea",
      "kind": "transparent"
    },
    {
      "address": "0xB358a2221074b26aFfF3dD29c83e81CD3A7d4457",
      "txHash": "0xa693473a852d2a2c9a4df823ec49c52354b9e9f18368aceedf1f9792181ba686",
      "kind": "transparent"
    },
    {
      "address": "0x26e2959fa80760B1dEBCdde4887448332617B836",
      "txHash": "0xb91806c56503bda3a8d53d0baa040c16eb9495a39425ae66f01c4f863750ffd0",
      "kind": "transparent"
    },
    {
      "address": "0x7cD8b8fDB712Cf93Cf70C96cb5196f2f395AcBb3",
      "txHash": "0x8fab6f79da236454fce7316f815ce56137ec110b8ec103024da34dad467dac51",
      "kind": "transparent"
    },
    {
      "address": "0x95c98A80205e2fdb7A5bFa4bfF5314450DEA85C7",
      "txHash": "0xe637c1e23cd444610dfa602b5f77fe45fdf1bf26db844588b7cf40a8938ff610",
      "kind": "transparent"
    },
    {
      "address": "0x7C4eB663CFE85C30d59E5276af3D1C50A18a3496",
      "txHash": "0x1f0b4e3e51ac08883bce64bda5088c478d4c6ad4ceef65c5abd802285554219a",
      "kind": "transparent"
    },
    {
      "address": "0xa64d8cD63F8ecA7d61176646dd981ac291494286",
      "txHash": "0xf0c970d3928046863c87ae2a9d3d75e8486cc869ab2be569945ff38a87613520",
      "kind": "transparent"
    },
    {
      "address": "0x2349594172fE0a153d751d3be52Db1Cd1EB6Cc18",
      "txHash": "0xa98e562613ecd679bf2e22c4bb53b69940662f232915d0ffbba925caffa016fb",
      "kind": "transparent"
    },
    {
      "address": "0x6b58e8607f17a3b7aB0aaDbCF89497e58A008589",
      "txHash": "0x98685285de09a3cef0b4b0988a09f431979262f049a7b495e7bf3bbf4493e718",
      "kind": "transparent"
    },
    {
      "address": "0xE73Fc0B716095bE048E5569cEF66ef8b75Faf1F5",
      "txHash": "0x6a8967624507a634057d6af68d1dc0267d357744c03f46993df11c39fb4c11cb",
      "kind": "transparent"
    },
    {
      "address": "0x6860b02e05467A351ac9ADf75Fd554b988b44201",
      "txHash": "0x141b6faef1d4e784d755cf53029d1bbd2b48e7b311bb5cac7e58d81263240788",
      "kind": "transparent"
    },
    {
      "address": "0x12deC2DF607d6F8917897Af5341371b987464A9F",
      "txHash": "0x5b29267e81e1929107609c9e0f0438366d73dbe89a8da89db2cc2ddbd23472fc",
      "kind": "transparent"
    },
    {
      "address": "0x126C3EE730553658559A46EDFD41D9bbdc6400A9",
      "txHash": "0x309441228f7e5375b878774ca877f7c6fd26b2033efcf3ff2a2e3b3889f9ad87",
      "kind": "transparent"
    },
    {
      "address": "0x199c447dd0799CEEE770296F9Ae46227840A8dA3",
      "txHash": "0x1c6a608c92db9b0b82b057433031dab7f6bf793870c2780869d77299c91b4a72",
      "kind": "transparent"
    },
    {
      "address": "0x3d577Ec91a32143F2993F58433f152D20CF122E1",
      "txHash": "0xcc21fef0079ffece1e0a9f9a250a23b26fbc63d34c732b69563e329b27c9ff8a",
      "kind": "transparent"
    },
    {
      "address": "0x134Ede078792Dbae85365dB7F318C160c7a7Deec",
      "txHash": "0x07291fbfdf46ad2890b8cf5d067823aeb24c3eb7caff0ca1949b573ade29ce65",
      "kind": "transparent"
    },
    {
      "address": "0x6B6FCE08d83020a82ECB47fd886DECbfbc135ecF",
      "txHash": "0xb848c43f7700503af45194e285450ed79caae20db3db07ec38e24de19f45a1dd",
      "kind": "transparent"
    },
    {
      "address": "0x7fd99A7147Fa51C19cfE0555f82AD3A2A7b9Bc04",
      "txHash": "0x9ae682086b3ffe8a1a1e9b93063807d6c301268cdf07f376bc1e8e9e9cba2e24",
      "kind": "transparent"
    },
    {
      "address": "0xb7118d3DE125aEC9d8A776deF090d928be54b542",
      "txHash": "0x58c21b5c969cf1ef04393af45f4335a9d928318ad67c7081759be180c13b26c3",
      "kind": "transparent"
    },
    {
      "address": "0x9758f425cda1A887d5E206ca58B0106b9427A246",
      "txHash": "0x38bda86873f57b3602209f91585eccc4cc5e0eb8de1f837442ce24c5dcf1587e",
      "kind": "transparent"
    },
    {
      "address": "0x8A92Fc9519fb523a4f4F8976E5B03780D3Cb1c32",
      "txHash": "0x3f82120140ccad8d84ffe12b9f3e9d50034d1a5c1955966251a784fde584b919",
      "kind": "transparent"
    },
    {
      "address": "0xd7B46d7017D2D50EE4507461E2E765Fae9Dc4B2C",
      "txHash": "0x3ea5f9252093a2e018cc6cc30e8b3fd1da04e075af75393577d4e22b5b1c6cdd",
      "kind": "transparent"
    },
    {
      "address": "0xAdD10d196ddb2c0EeD51a9E1f66D60E7d6e780D1",
      "txHash": "0xec15847c466c73dcec2bc4cdbd4c06f4b1432826f196066e7ec16d7d23f6b1cc",
      "kind": "transparent"
    },
    {
      "address": "0xabFB9649C2fd380BDc8ddc263fA9AC4d222378B5",
      "txHash": "0x89440a3f5393f57c4c84d59c2d2cde042195a034c5c4d82f7cbed473ba870bd4",
      "kind": "transparent"
    },
    {
      "address": "0xc7e11Ed18F46f8a14eEFd100AA6e9D4070569506",
      "txHash": "0x088dcfc3fd94adf44d6d5c0f4f4fe1bb3ff0e2830fcfc26b028c41e4f56bb793",
      "kind": "transparent"
    },
    {
      "address": "0xE40297fc279a2d6FFa1Bc04c3138c179025526B7",
      "txHash": "0xe61095efce813083c6826ad4e6a733fab62acbbbec0f2daee7fa5270dd498f24",
      "kind": "transparent"
    },
    {
      "address": "0x7e161c0a6c65FeB2912bc680026E55E3487925C6",
      "txHash": "0xdcd1359585ebebd93fc61432baa6e8279323104059ac6558b98868e0d2bb0d13",
      "kind": "transparent"
    },
    {
      "address": "0x194f170A8A2F99D3388b8f9FD22E97348dC74a88",
      "txHash": "0x3dcd5918620fa6f46c37f0424b5a3c0f619d73615ac783e9e261d62568270738",
      "kind": "transparent"
    },
    {
      "address": "0x0ec94d857c751f87Cde270545a9fb4412Fd73Ce7",
      "txHash": "0x39f5b93e81518171b8d54b1a9d722624d98b8624f9ee9f08883d792651dc9a44",
      "kind": "transparent"
    },
    {
      "address": "0xB037fC19A08998065FB0D44b5D87F2480dfc33e8",
      "txHash": "0x68a8eb8d0b21c55aa84b7cd1138813bbe6a5dc79148a880eaee95e41dee4c40c",
      "kind": "transparent"
    },
    {
      "address": "0x1DC4965cB513C30153e6f7E55E6bff2fD0D32b25",
      "txHash": "0x4fc733becc76f4f16423970fe570d38b5cfd578cb448708b3389ced78060c647",
      "kind": "transparent"
    },
    {
      "address": "0xfb7310D7ED2900B5538FBf233605D95eEdDb755B",
      "txHash": "0x27c153c1ba35949feac6c00a4ed47b31255d788432851babd34a2c14c9bcdb70",
      "kind": "transparent"
    },
    {
      "address": "0x73FD83EcF89Fcae625d1942DD7c654254C09DD37",
      "txHash": "0xade149a7ff8f31e0bfd169fc911fb31bc551a7c2a4939990c263926ae8e1eb3d",
      "kind": "transparent"
    },
    {
      "address": "0x6E519c5d16B6D74f341937b30d69C7ad28826d37",
      "txHash": "0x32942d29f13e9005e65a41d494c1311000ba81d8ea6be7182a08bc8240c54014",
      "kind": "transparent"
    },
    {
      "address": "0xAd39b3635C297789968A6ce4b4Be7c25eEBd094C",
      "txHash": "0x4b55f14090f427860fbb104f53dea83a6c5df393ff528c4302c199ff79a0a0c5",
      "kind": "transparent"
    },
    {
      "address": "0x72975d43EFe5d10a6cd06Ee3bd6453f767d679bf",
      "txHash": "0x3a17e47e9d53ac9e9c600247b9b4bebd5c4609297c90bb080519365b722cb764",
      "kind": "transparent"
    },
    {
      "address": "0xDf9CEDBcE294445211Da952aE6b0c05762C10b4e",
      "txHash": "0xf8a5fb23856ffeb51113eafe32cda7ade450df26aec53f5c7c34fe532f2c4faf",
      "kind": "transparent"
    },
    {
      "address": "0xc1FdeD7ffB87455d44Ce415F93C23B0216003524",
      "txHash": "0x53ddbafff222ed9b8a961e560638e4017784c893544bc52975f051cd60c4db48",
      "kind": "transparent"
    },
    {
      "address": "0xd82F731a9fE88E2d64bb10769f31e035b484E3B1",
      "txHash": "0xa43229e23c203c32a5924f4a4a086f0ab65db3d123cf62feead8c3465bcc7fe1",
      "kind": "transparent"
    },
    {
      "address": "0xAf3E4DD7e63bCE904226D69334714e38c2BFc857",
      "txHash": "0x295d477236c294555d070f7711dd6402ca2980dc64c59aaab0ab7b9b2ef3de2f",
      "kind": "transparent"
    },
    {
      "address": "0x8788Ad21a69Cb5648976bb4c279A5226Cce33EbC",
      "txHash": "0xedffd32f4554bee78507932bed7f78c0c7590fe92ddf7596841b93fe7853696b",
      "kind": "transparent"
    },
    {
      "address": "0xAe2d4089441338A834928f1C3c2CFA5A1BEDf6a0",
      "txHash": "0x47ca262f72c853f8479887d56dba72379719e468d9a03a6a554933977d677f75",
      "kind": "transparent"
    },
    {
      "address": "0xDde5405Dc1cD19c239956431053ebBfa08Eb8850",
      "txHash": "0x3943f2b6e0dc72756c2ff5f0b19bed7f26d940a567943dfa2f60af07ea1e854f",
      "kind": "transparent"
    },
    {
      "address": "0xB34c919cf02eA1a8bf513F191BAf7a1CACcBdE01",
      "txHash": "0x1655082168e9a99581f8d71527ff065cfc10f22eed68825bd35da2aecddf16c1",
      "kind": "transparent"
    },
    {
      "address": "0x94FcB20d718Ca063d753b8DdbA0FF6a8f34B558F",
      "txHash": "0x251e535cb89f8910de8f179a57397304c119856e597bc6521ac2b275ffa081eb",
      "kind": "transparent"
    },
    {
      "address": "0xC1321598dd50000E79D9a0337613183F7b854603",
      "txHash": "0xa859c59b007f04e847997013a645469e5276503eab2c375ba7ae94fda5784d66",
      "kind": "transparent"
    },
    {
      "address": "0xcba1c9df9945fd5F67ADeB5423bc0D70a7D63e76",
      "txHash": "0x65b93eccbdb9f615225450d2062d36443569fedaaa154256adf29bc437dda5a2",
      "kind": "transparent"
    },
    {
      "address": "0xf637791bCFD2deF7f44e946F1670322427858E0c",
      "txHash": "0x7b753ef7942e5826d6c47523f202881fdb6f6261c3f1012933186f11e9f57965",
      "kind": "transparent"
    },
    {
      "address": "0xab0Df1C9A5541F922C1201F903376bd7Cd5dA348",
      "txHash": "0x13883b215f12cd1e65be2f6a1be896e69b7b262a356acfb906b8664882db843e",
      "kind": "transparent"
    },
    {
      "address": "0xb88947D0B3d047Ae9057D49cd86E952EB723c65B",
      "txHash": "0xd60588d44b9997f0643df7dd844d9303e8bf2aef8148a96eb8afb176a70d25b4",
      "kind": "transparent"
    },
    {
      "address": "0xd39c6601539e1AB8A93B14faeA71eE0346396801",
      "txHash": "0x834040fe5d28960982b8518baa50dd5e63ecc7a4a1eea7be09b02f426f787d41",
      "kind": "transparent"
    },
    {
      "address": "0x8643ECA5f6125c5807510292b8a4FFd04107E1e6",
      "txHash": "0xf00b2964c714b4b3cfe62c6fc30f23d48387c1c13c504d9b96271262ed1c8b7d",
      "kind": "transparent"
    },
    {
      "address": "0x7e3cADE7BDB03b0Dea900a4fB9D96cE71CdA0368",
      "txHash": "0xc6b9c4a5329d0fe911fe9965f474de538578755ebf50a9e910dded7e80ed4364",
      "kind": "transparent"
    },
    {
      "address": "0x7dB5EF1deD47C30DF67aE54aF7083e0F76592286",
      "txHash": "0x901f658bec9d1f2613757c55447f7a3261b9179c6109a877e4aeda66288686df",
      "kind": "transparent"
    },
    {
      "address": "0x35da5f4cd53012a3CA99eE43b8801d0d16A69668",
      "txHash": "0xd6b41f5581829e585831118b9c937428590d7256827e57041a15bc8260b6de2e",
      "kind": "transparent"
    },
    {
      "address": "0xB7cBde5b809c739dAe98add76b3CD9cb1c601A03",
      "txHash": "0x1e0a1461d573d3350802716c855f27c6adedd8e38ab07ed593b99244e4bf0a6d",
      "kind": "transparent"
    },
    {
      "address": "0x577b3473AC32503e7d529D08502333216890b9Fa",
      "txHash": "0x51980222dea73845920916d9ca6e13985b411f5ae98615ee72eb488c9d657f1a",
      "kind": "transparent"
    },
    {
      "address": "0x9c1Be4024AAbe1EdE594F357307AaDeBc66c9969",
      "txHash": "0xc9b535e962d5c7900585b676adff61a9bc9db89756301b6401578eee46c637ca",
      "kind": "transparent"
    },
    {
      "address": "0x4Cd6E5b7074D83fb2b5E13712B8593eC5a5AD202",
      "txHash": "0x82eb5d51a0b7d863e6ad1d5d38d264415a4295255ae221f03fabcd7b108450ab",
      "kind": "transparent"
    },
    {
      "address": "0xBbB2E54D504b8717c007e9Fa24fb8c427b5e014D",
      "txHash": "0x44251ef623eca44bc2c5efc774db72c197dda300b3ce734f18d2c0430dd2e55e",
      "kind": "transparent"
    },
    {
      "address": "0x257aF2B2202f3D5fee13A1a84d1A93bE7d74d0F6",
      "txHash": "0xdfb4191a1b1cc6c6483782e9694d6ed7ed68962fb5261540cf7bdb2a35cf8036",
      "kind": "transparent"
    },
    {
      "address": "0x6acB0eb9cd9B295B19d4F6d26B30486A48436B98",
      "txHash": "0xc431bf1900af4976deeaa91d7ee57555ec3309e9deaecf62813518d2496dc9e7",
      "kind": "transparent"
    },
    {
      "address": "0x8C30930fD9569375EfDf77B7A8d51eDF9333B7f4",
      "txHash": "0x05345aba6b9f2b5dad37d622005360544a90c6006f7db33ea3706a6cea7402a5",
      "kind": "transparent"
    },
    {
      "address": "0x1aDfE3Db35537412C92D1E23A561CAc05e467195",
      "txHash": "0xed62386d46f4292a5ff97ab272218ddec1c13e3dff920d514833343e29ad1ea1",
      "kind": "transparent"
    },
    {
      "address": "0xBc8ECD58e00001C40D0A3a4B14DE6642a3b09dcB",
      "txHash": "0xf0fabf1feaa1ee9fbc8e11c233e93db60ec61b9bd57780b632f39f1044de72cf",
      "kind": "transparent"
    },
    {
      "address": "0x41fdb87Ee92eF8A58e6DD42555BAF7EFA02D1Ce2",
      "txHash": "0x720f9a81baf26069e98e5381ee2dde581d520bcf2b319ae3ce7288956c12d209",
      "kind": "transparent"
    },
    {
      "address": "0x26b4d59EDEa9Cdf253663AC6eeb010d813D3aa81",
      "txHash": "0x5b829b0963ef0903e601eb1c0f865b0f7a06a9500dcf1c183d3136074e92e744",
      "kind": "transparent"
    },
    {
      "address": "0x36a5b21b86ba6155386dFCf8442F3b06f87f41A1",
      "txHash": "0x77e5f5fc47c9a70962b1dfcf2052c9bb66c7e33412c695ee3665873d36bdf7d4",
      "kind": "transparent"
    },
    {
      "address": "0xfE2De0086Fb3675e183297Cf73d30DaA92f14761",
      "txHash": "0x20aa4388bdd8c0e5bbd9c944791facbb9bf54813b4e247f261d66967330c90b2",
      "kind": "transparent"
    },
    {
      "address": "0xBa18774c2Bf1df7704A662E7D8819e99fDDA544a",
      "txHash": "0x03f4ba2e55c442cf5c14b483534b80fd76b4995862b5c1398d3493a987194bd6",
      "kind": "transparent"
    },
    {
      "address": "0xD980699C92Df5D26fFfdD7190baB72DCaDf73f79",
      "txHash": "0x1ec41eb2d4c9a5a635a68e5a4f5a54b35a115fbfa23c03512404655e5458a93d",
      "kind": "transparent"
    },
    {
      "address": "0x07a91Bb9eaB6af18D200a18f3796651b15Ec7cFA",
      "txHash": "0x7dc41226a877add1a54785460216ef8d479f996328223abe91218fd10d0ee4a4",
      "kind": "transparent"
    },
    {
      "address": "0xBc6dE059887b169a68D0fC16D6475eF6f877a79F",
      "txHash": "0x57633238525e4700e98b505674655b0b8f19f51e43d64b8ec6f60b9ef872bbe5",
      "kind": "transparent"
    },
    {
      "address": "0x7dd09677142ebDaeC791e79a447562557A71d8b5",
      "txHash": "0xc025254a0378ce7205c053fcc94f667a54a4e6b30b7ce9ecb1fca348ab9143e3",
      "kind": "transparent"
    },
    {
      "address": "0xA76a9c6548D8c487883f759AEe015AfDb323CF4f",
      "txHash": "0x21626136539025a88ac1ee0dc32ea7f202b17d1b9cff45036bb89b0961740a29",
      "kind": "transparent"
    },
    {
      "address": "0x1073618920502560919e8Daf24bE787A78d5A87D",
      "txHash": "0x0d1a512ab99d5a70a084529bdc7c3dabea1b5a2fc4bcd26d011bcfb9641773cc",
      "kind": "transparent"
    },
    {
      "address": "0x429a362349dae36350c0fb28123fb97c533587c7",
      "txHash": "0xc57aec20f0a4410e17057935afce4498f748cfd9ec0d23a68939671c49fa0727",
      "kind": "transparent"
    },
    {
      "address": "0x8525e9a2001d4821972B485d81894E9083c6DA58",
      "txHash": "0xdd99d18c510a5f2deb2c57dea3c7274ad1e330f1af0b323b3d3fac6573a2aa8d",
      "kind": "transparent"
    },
    {
      "address": "0x3C74DF47E1D57600417AfB1b0105f8a052a6b709",
      "txHash": "0x187cb2793160db4d9eb572e0f7ce9d435fba7db0e80ae1701e14d987e073ff9f",
      "kind": "transparent"
    },
    {
      "address": "0xF36dC9A1ED5608A3b78BC495A34D344Ff77Ca84C",
      "txHash": "0xd4586add0778615601e078fb45eb6b841af2461c2e79ab1c7112fad548e1aa22",
      "kind": "transparent"
    },
    {
      "address": "0x4fed5983a31615F77Bbbda19bf2C175c767d7a5B",
      "txHash": "0x3c2289a65057d25a43c7ae60f254f05d7579a090cf10ee0ca9b41b4685009b40",
      "kind": "transparent"
    },
    {
      "address": "0x39513803bB0943CBd344319b3AB7BEd3a1B98286",
      "txHash": "0x969639e2b98d60da094819d86be3fb21b365014093758152b5820779f98495d9",
      "kind": "transparent"
    },
    {
      "address": "0xAf22CAc95E339B2372c437c97f55FE3D110ad429",
      "txHash": "0x97c4a6ecaa33b295e9cbf2de7482c5a23362d9151a3fdfed0ebe996e4cbef37b",
      "kind": "transparent"
    },
    {
      "address": "0x5282cE382519dB1C59b6fFD56C59627B68ae59eb",
      "txHash": "0xbc581686945ee159205fba92aac32aa7287e79a3ab7a81392433800e044333cb",
      "kind": "transparent"
    },
    {
      "address": "0xEf06F757413B92D11A672b6BcE723642Ea110487",
      "txHash": "0xd8a4a4739ed6e0e6f193cc88331d8d439b53b0713d98e52bafb5bc94ea043c99",
      "kind": "transparent"
    },
    {
      "address": "0x4DcB6fD8244C65054D7Ca2F92E3A294144C98eE7",
      "txHash": "0x88134c63d3d672e42b934ebe05d1be63692be6f59bf2a26d4a1fda6708b4219c",
      "kind": "transparent"
    },
    {
      "address": "0x4c0C72518639f15E7f20f235404a1768A77be5Fc",
      "txHash": "0x4d1d54f533ae395e1d28870249e64895eed52744f3dcba426db0acd67b7fdd9f",
      "kind": "transparent"
    },
    {
      "address": "0x77bC2e2Add0FEbCC34658cfB55E1acb4ab4038D3",
      "txHash": "0xc0a47f97080fb33777b872cc2cf1564ec0aafd9dc5dd3cf3f6c7ede2e5af74d4",
      "kind": "transparent"
    },
    {
      "address": "0xefa3504706EB10A2aA20751b3c8640E1173A5C0B",
      "txHash": "0x1b325bd992f4d1d708df872e5ab4d17eb28530f77a90ab3a12810f04e8b7244b",
      "kind": "transparent"
    },
    {
      "address": "0x2C0c62B1324BB27D62f211fadc080D6B343bd247",
      "txHash": "0x418f5345c4d42eb441023e694cb4b60b92d93fb83b512e9448943573d20fc417",
      "kind": "transparent"
    },
    {
      "address": "0x84A3323b274AE5a1512964a1248f0Bf1Bc4c509E",
      "txHash": "0xee7cff40a5a0acc249a45979ad9921e9c80cd5bf73eddd260155c2b44edc0a32",
      "kind": "transparent"
    },
    {
      "address": "0x6E2CC2b5e9F6EC3d8Dd11Ef652E3eDd5947939D1",
      "txHash": "0xc181e89116ff42383bfe19c67e2c8d277c5fdbec6bccc8d1efa170836610ec94",
      "kind": "transparent"
    },
    {
      "address": "0xF3d35bc47eFb85C101B125bFec4e463c066244E4",
      "txHash": "0xbb0586bb785cd74035dec35b5bc257a113c3b1cc217b92dae3b9adbdc80059c0",
      "kind": "transparent"
    },
    {
      "address": "0xA36A263AC08B30170003cA1749dceC03F40B4f32",
      "txHash": "0xd297a6a6fe6d10450c0f13e6b549063ce4a18e11fe6ac465e29d819f4a75b74f",
      "kind": "transparent"
    },
    {
      "address": "0x654d2b49284D1F269994Ef196139C4D4052304Ed",
      "txHash": "0x98476e54846b8db731147ab8d16e639bc1dc4cc38f79a37d14bc78cfb725637d",
      "kind": "transparent"
    },
    {
      "address": "0x5F22EEeAE6F801A7672dAC579b8457b63B84464e",
      "txHash": "0x6e3c162627e1170cf6c2229c17d86740b5a1d579c2f945393eaf9e67697468d5",
      "kind": "transparent"
    },
    {
      "address": "0xda56fC0187d25ED52ac463cBae1Ed6a1f10a335C",
      "txHash": "0x8d21cfcc5b781e14e1b4b0b81bbfb4138d317b54e4414f918a5db22899e84ac6",
      "kind": "transparent"
    },
    {
      "address": "0xDD38718e700Fcf393BB87Fe951a1523Af0732104",
      "txHash": "0x2320857e40cf071ccab82a29d7ca4eefea5b7e008ca4dadc4c9d3485e9b35c26",
      "kind": "transparent"
    },
    {
      "address": "0x7a077BC01171c66DA239fC77a7Ad2ac91065B7F8",
      "txHash": "0x1e4a684c567666c859e211b401e53664e316f01c915a34387490c5ef6dd0770b",
      "kind": "transparent"
    },
    {
      "address": "0x602066dC3AA0f6211821Ba67067d37BDdFa9594A",
      "txHash": "0x44fffa529976dc5cc3da2bb3d6a4888adcf774833942a4271b2f45cd02dea8fb",
      "kind": "transparent"
    },
    {
      "address": "0x5c62E466cB40cE7536694a5C773f4fD0062c244B",
      "txHash": "0xe1bbd26571816b9693a752f1b1ee4960b0735e5888b71cce2bb15be11b5eece0",
      "kind": "transparent"
    },
    {
      "address": "0xb535b1616287551cC08a0217fB415b9A45EC4247",
      "txHash": "0x97390e53ee3c464d00cc5ed11631cb7a3b44fe9b599d8c202c1c6fdc0883935c",
      "kind": "transparent"
    },
    {
      "address": "0xD47B94F493130389eB0Da09BAe24417C3C837869",
      "txHash": "0xa52e40d9fad52c6fab552e8f37f113f00399328e527630af613ab9545cefdc36",
      "kind": "transparent"
    },
    {
      "address": "0xd9edb5E806b945BcBb5fEF51a2B52C80e01B136B",
      "txHash": "0x02645ebee1e67fad722e972a82f2011957ca337bbd1dc1b36c93baeb24e0fe13",
      "kind": "transparent"
    },
    {
      "address": "0x48dC27399D42c054363e49160fF3f89b7c296321",
      "txHash": "0xa908d440d7161973735ebe5279df0d58eaeb998ff3034eb06c6a078010e59bb8",
      "kind": "transparent"
    },
    {
      "address": "0x18049492e5Da3f3812653b1036d6877709958CB0",
      "txHash": "0xfb9d3484f0e525af111d7f75e6e197373a304c9d1206cf95fbc21ee8fe4ce328",
      "kind": "transparent"
    },
    {
      "address": "0x15D814e39824C9B380EDCB0824AA6E1b312a8509",
      "txHash": "0x6c819ec4b48fd3efa9341bcf06586049d5e38a0850b0447ef5ce3ad04921bd4d",
      "kind": "transparent"
    },
    {
      "address": "0x1D4B420aE37bb5cE1D5bD604F64c1d14236Decf2",
      "txHash": "0xb2e97b2cf342ab5368d571b6c82dd3651854fad2eafc535cbf347388e839b50c",
      "kind": "transparent"
    },
    {
      "address": "0x9f3ce0EB46C236A323742D0119f7Fe16De257d4e",
      "txHash": "0x267e26cdc69a2978b46737b641e06ab6aaa7ec9efaf22ca2626778b437995d18",
      "kind": "transparent"
    },
    {
      "address": "0x874aadabbaca0F1493898dFAEB9A1fCC0247b847",
      "txHash": "0x9ef8c47ac90d990eb7326e42eaf95761b1704cca2537847d387d5036fd819905",
      "kind": "transparent"
    },
    {
      "address": "0x10fBE251Bb8d12F2A017fb756366E44D274Ea7eb",
      "txHash": "0xc809e35349b2ca6c1a23c8002e4d2f4fd3ed9c2782ed84fdb32648912010dc22",
      "kind": "transparent"
    },
    {
      "address": "0xd076E63693E492a8a3a76f618b9745852e6945fa",
      "txHash": "0x282f25f1cf3b12c09fddca8dbde6978920a271304372303e9bf36fb3c4d55297",
      "kind": "transparent"
    },
    {
      "address": "0x72891b793762C9747FD08390B270b495B2B2F522",
      "txHash": "0x57a41cd430f228cc140735f3e6277c498ff332cd74198b168f3ba6499f6f6e05",
      "kind": "transparent"
    },
    {
      "address": "0xC1033b7EA445fA37812757DeC027faCe99825E9e",
      "txHash": "0xb37b01252660ef061307a73f4244f60527d618fb63bb9824379ce1b45e2b1ce5",
      "kind": "transparent"
    },
    {
      "address": "0x2cD6dBD150e1878522EcB1a46fA12Ba59e9532aE",
      "txHash": "0x263e70e03aba68fc6f6d9befd26debca73fd2eb21c0287fd976626acf491efe4",
      "kind": "transparent"
    },
    {
      "address": "0x6aa5A41c5f6f51cdE5a0a4d76D52dcF4f338dAB3",
      "txHash": "0xa2f30e64e2b10046a47dfbe5c725661e0671c212f348f4b6a5dcf9c152f9f4bb",
      "kind": "transparent"
    },
    {
      "address": "0xd15293545bb4FaD851f23de06A3aEc5B862ceA9c",
      "txHash": "0x1784c515e4a62e513076788a9af6bee276f5c811421513f234adf75fc69ed38e",
      "kind": "transparent"
    },
    {
      "address": "0xCe0EcfBbb6715494414aC4fD70D7E01485d7DA94",
      "txHash": "0x9c9e0339fb5922fa6f2d2efdeccfeaccd4dba53c9de2e39904668e42cd205d14",
      "kind": "transparent"
    },
    {
      "address": "0x852679B04a717451d7cAD90AAd62267aacaC5932",
      "txHash": "0x0b3455f505f11f9185fd4df024d000540a85a35d957ea0f6c1bb5787760eca03",
      "kind": "transparent"
    },
    {
      "address": "0xC8d42B1914C5C6bF10ff331E3b45643EFE5454a3",
      "txHash": "0x361a644660f3682ebaeb49e15f2602be6824ce0ae9426d063f2dfee8050b1a1e",
      "kind": "transparent"
    },
    {
      "address": "0x6a77CC273056FD421f47Ba2a8a9187c2eAAB6DAf",
      "txHash": "0xc62878230ca83d7943e94b2a0c4d45231941f74d6ec4beb59e8232293cecce0f",
      "kind": "transparent"
    },
    {
      "address": "0xD8225055604A75a51383E2447ed93Bfb48abe923",
      "txHash": "0xb21b0d384491f5fdb47742f3818e84b63a719de1711435cc38d9003c07edf017",
      "kind": "transparent"
    },
    {
      "address": "0x66DC4BF3eAE9424Fb10ABC674830fEF59D3707bB",
      "txHash": "0x1ef6d87cfa91965ace8ca91e5756b51876c81e7ff7111499a51dee22a24afdf2",
      "kind": "transparent"
    },
    {
      "address": "0xb2d9947bfd19700Ce097E1895Af1773A7dd1872A",
      "txHash": "0x1f73a7b7226730b8c320c6173d95c292e1311f87d3bcc2e612feedce479ce323",
      "kind": "transparent"
    },
    {
      "address": "0x0c01229087FcC03C4e1419a9b69BACADBe62763A",
      "txHash": "0x3bb7a5d6694a51a5227903a5a27ab129451172d084af8960c649aa98f7648286",
      "kind": "transparent"
    },
    {
      "address": "0x6510B3a14d98B3926f0E733d3FF7C611e5a83D27",
      "txHash": "0x0ef144a855c1a2df2e2145ff40ad24ba8f51589ce6669040566beb6b9733aaf0",
      "kind": "transparent"
    },
    {
      "address": "0x8ae962E03499E21954085f12AC414cE33E0d3749",
      "txHash": "0x46933b501e34f834a89c486c8cacb75a88816682f63a60fa5be2c7c182f4edd1",
      "kind": "transparent"
    },
    {
      "address": "0x2447189EDA1eEc8804e2b5D61791453C4f548B38",
      "txHash": "0xab46e7343a84a0ed08b97a948ca96c2c7eb36bc5502d8f6c324d47e0753e1fe1",
      "kind": "transparent"
    },
    {
      "address": "0xdBcE7f64808bc61eCb8F93F6d47D9fBc7eC81d85",
      "txHash": "0x3d26ec2b14e1f171fab65a172f628fb46394dcf4f8e48657b79d3098ad68a2a6",
      "kind": "transparent"
    },
    {
      "address": "0x3273f3696e58270472b01C475b7a054c6D3B7AFC",
      "txHash": "0x8ce14bcb7aed96a158c73d74f424c02cd4c8b8ff0f03c2bfee2bdd880af0b59b",
      "kind": "transparent"
    },
    {
      "address": "0xC6Cd66B761556F10120cACC0BdE029e270B7225D",
      "txHash": "0x5df4db9c664fd3d75d9106d4cd5b581c91159cd894a943c98d6be75004115789",
      "kind": "transparent"
    },
    {
      "address": "0x11A880958C673B6C777669757455C193C823e402",
      "txHash": "0xcf5060b24b36b7cf77a7558dd5688474eafa49cd705549eec1eb2961a8bc0cd7",
      "kind": "transparent"
    },
    {
      "address": "0x4046F65D05Eb64d9815c7c34dA307eb19BD914BA",
      "txHash": "0xde4abc271c0b8ca64177db76f70b2036fb6ba91071b575509aca9187daedf570",
      "kind": "transparent"
    },
    {
      "address": "0xaC5202005a63c08142790f1761c65227eBFbf247",
      "txHash": "0xa778fd3843d1e537a61f6eb3fe5e0c59b0de1543f442cf488012988650a90ed1",
      "kind": "transparent"
    },
    {
      "address": "0xD747D626a5A17885eac19a4662905a709a481890",
      "txHash": "0x5bcc82e83dd46c8e62c2b591904cc48811890f9d45f63d6b53751467e7c9ea14",
      "kind": "transparent"
    },
    {
      "address": "0xD7958eCBE32972A2b2B50b3A54F2648d07bDC3CD",
      "txHash": "0xcbf6f86931d30f97551419e3a881778b7d282f32ca12658a916370d556dbbab5",
      "kind": "transparent"
    },
    {
      "address": "0x2Ed17C79aaF5c70Ae8b3027cc1bdB17f4307faE7",
      "txHash": "0xa754471bdf210967a67638a25a869ef725a7755749fa45fb165a82e597cc0c0c",
      "kind": "transparent"
    },
    {
      "address": "0x114209cE3C59Bc262c9e541d2d2824AC79aE753d",
      "txHash": "0x23f2a936239bc305789b4cafc6cde046bd815dfd80da498a61384bf926eb1c73",
      "kind": "transparent"
    },
    {
      "address": "0x290e4639232a5a3289DC33Db954e47Ad5C4FDA59",
      "txHash": "0x461ac56d0f5847b9445d1840febcc79cd00c4085713d83ddd65cfec606746b45",
      "kind": "transparent"
    },
    {
      "address": "0x8f535e122f53d0a42fb2DEEC76e1e8f097bc8f9e",
      "txHash": "0xa7b1be2e049bfe5fb0388b6f721468b4924ffd8b172fe7606ac0dad3c6edcc33",
      "kind": "transparent"
    },
    {
      "address": "0x64e9Dd7d1d3155Bb080EE6cBBdCdf7919F3ebF47",
      "txHash": "0x25506d9cff7901f83d4ee8abe499ce878efcc67d782ab0248783068d5955022f",
      "kind": "transparent"
    },
    {
      "address": "0x420E4c58745e244c80fDF17FA1B1879aa1176298",
      "txHash": "0x428525b887cb95cfd5138ad632e988b2b84d3a525e768249bb3dd69d31768a81",
      "kind": "transparent"
    },
    {
      "address": "0x772b0e3aF37A56e1C78245d15A47274C2C477fD1",
      "txHash": "0x9ad09372811bc9a53534d1ceb6227919ac54d7d0f927a8f9cca5e71643093cc6",
      "kind": "transparent"
    },
    {
      "address": "0xe80b28bF71b17be8A8111B64Bbc0Bb300A1b8D0c",
      "txHash": "0xb6b53ea16556fd3cc62adf3d0498e8a7ae3ad5edd96129cc55fee5f2f500c12c",
      "kind": "transparent"
    },
    {
      "address": "0x85ECf703833169Fb870212Ae913EfE9e8A0BF857",
      "txHash": "0x2181b49f162b81d0052203aaaf51c2a6a70dc2c0971af315e40e09e9238b2c54",
      "kind": "transparent"
    },
    {
      "address": "0xC431CDE07DA9dB600b4DB1957911b75c1Dc0F668",
      "txHash": "0xae72e58032b2a4a2f99004f02e8cb78c963d9eabac94d2a9bdb4ab30a8f99630",
      "kind": "transparent"
    },
    {
      "address": "0x585bE9B81F56582a374caC8f2EB2812ef8747a5c",
      "txHash": "0xbe3149d86ba86bd9ab8bcd6b04636797bed65976f3d33b5cf1c1acf22aecc1fb",
      "kind": "transparent"
    },
    {
      "address": "0x716190D2F42A92cFB507721B46D40328DbD16229",
      "txHash": "0x85a77e3fd50a601dd234f694d0e77213f7fff3952568eb8e9562ad56f2ed583b",
      "kind": "transparent"
    },
    {
      "address": "0x676354a6cbBF44A448796f92FbC86B32dF1B48fe",
      "txHash": "0x151e287998b2309d27f89553bc3320524aad0d4ac4692ec8562573599ca63389",
      "kind": "transparent"
    },
    {
      "address": "0x0bDB6dB812f81350c065FaDCC307434363Fca397",
      "txHash": "0x84c5bfa12f87bad65539ca609f21e2ff6e1fd9c4e4b6cf43f25bfe0a1cda7319",
      "kind": "transparent"
    },
    {
      "address": "0x33A8206014C211b4f19854F2fc984079086dd5d2",
      "txHash": "0xe0ba6761edd64391fcc1e0a7e01ee6f02513096a762a2e5ca6f7ebc2c8c96495",
      "kind": "transparent"
    },
    {
      "address": "0x8808A926955F4e885933E5DC8b01c06C21404E2D",
      "txHash": "0x42b3c9fc4f9fbe94bf5ca254601026cf25edf140d0e56a87b69c67b38b102f80",
      "kind": "transparent"
    },
    {
      "address": "0x10DBa19aFb34a28Ec85Fe549621905C732254490",
      "txHash": "0xbc8b9898e94bc52a26266536a26faae69c4fe75695a590b52db7aa71097f68f7",
      "kind": "transparent"
    },
    {
      "address": "0xB182A20bdf51899c883C6Ee7268a9DC1b0045Abb",
      "txHash": "0x86ec8d339ae88877c32d6200bf4116e41cee0964de265170587a661c1d668822",
      "kind": "transparent"
    },
    {
      "address": "0xf35554E5F63eAF9bF7e977548f6F9D4F32cFE459",
      "txHash": "0xa5809825e8066e86b5075bbb58c87d5c87af0eda113f006adc1035e3378c1736",
      "kind": "transparent"
    },
    {
      "address": "0x3B6d5DAd6662ba9D2120f2B3Ba2E93067dA9B81F",
      "txHash": "0x6924ef6d9bd2b70cadc64322438bf9ba9f24f4caff4b11f4f1de9025adc81b9c",
      "kind": "transparent"
    },
    {
      "address": "0xb78801948A2b7c0d8420EA95AEB08C6a684588DB",
      "txHash": "0x2094febc843bf8976c785a2339d56da6bd488857bd82747bb6a3574dea7c4ddc",
      "kind": "transparent"
    },
    {
      "address": "0x9cf5738Fbac61d37C162c0B56b0f1e6BAC063105",
      "txHash": "0x02f4287650fcc40062c9d94427192801bffbf093d5a627633a7a0792592a16bd",
      "kind": "transparent"
    },
    {
      "address": "0xB51fDaCb13f27180698E8DD9A9fD6DB6697b9839",
      "txHash": "0xbe0df2f2f6296913691edef20e2aa45b110b21e473287838cf827805c5606aba",
      "kind": "transparent"
    },
    {
      "address": "0x69599A05561613199b8eaE0BdC310C66e339F192",
      "txHash": "0x185b30bf9892602f5c616fae86fcfe107aff1de8b9bee169917807fe3eab9e26",
      "kind": "transparent"
    },
    {
      "address": "0x7d7E7fDa424aafbeD162bF73806BbFcd39A9F7cB",
      "txHash": "0x6a99007fb235114a8ce9949358eab502974dc8f44a11a4967aef72fe53f19279",
      "kind": "transparent"
    },
    {
      "address": "0xB5bb654561D1874F86fa265C20AFAb43F4C0153E",
      "txHash": "0x05f84b21f2c6b52b3cc304a41a9aaf324efd6043ccacaf3d31a21a2a1d769044",
      "kind": "transparent"
    },
    {
      "address": "0x2B6aeCc43b760D4D2A37077bCC61d5FFeCa17f53",
      "txHash": "0xdc1b23a892cb025d394d1009323105fec12f9d3126939f0207d843d3a9dfa6ca",
      "kind": "transparent"
    },
    {
      "address": "0xe76219e84b2635569a64b173d68402003b9835B9",
      "txHash": "0x70bb8c20354f84274904cefa370ee3a9394221517907d775a97e0be2448d99c7",
      "kind": "transparent"
    },
    {
      "address": "0x9eA381E0273b2D9176E920D5eEac936803b4bA21",
      "txHash": "0x471f825fb4680a2a4d87f7faae94e3b684c394ddd48cfd4e5db93e40961c8aef",
      "kind": "transparent"
    },
    {
      "address": "0x494D3b9081790c05d35cf40c41fBe288A59Bf646",
      "txHash": "0x25eaeb4ab06af1c513e820b1530910f5e05283139d18af313694eec9dedf696d",
      "kind": "transparent"
    },
    {
      "address": "0xDbaFC75586e56446334ea118e11B031E8be5D6f7",
      "txHash": "0x766f8cd033e4258e4f432f37977f9a9bf30a5f33f48a31a18e584ad524f1e935",
      "kind": "transparent"
    },
    {
      "address": "0xBb75097A4E5DF875F64Fe41Fb906b03CF06BdB7f",
      "txHash": "0x071d71ec5a9ec3096558ca57aac04e8534fb0d7232e1f7c6531c9c11782b5f7c",
      "kind": "transparent"
    },
    {
      "address": "0xE412c635D5cA3FC0c9fe55701E19adD96A2C7d02",
      "txHash": "0xc32eeab28f7594d3f8a4597ddcfa6107e3f0397afea150a6acd43b73f2b60c15",
      "kind": "transparent"
    },
    {
      "address": "0x4C1604d0118505f8570245E9afF2734B62947C25",
      "txHash": "0x30a57cd81823df4e918e1291ca0fcefc8cbc858624c1ca25a270284408373c35",
      "kind": "transparent"
    },
    {
      "address": "0xcB98F5FC76AE1b3985626482Cb77A363fCB4F57E",
      "txHash": "0xd1a68674d34b534205eac150e3210c4f0785555f4f194ee7d5da4cbb27980cb7",
      "kind": "transparent"
    },
    {
      "address": "0xab3Afc24e182cB45AB6DfB3c44d1Cf10DD910094",
      "txHash": "0xf7ef7afdff7cfecefd3abb79c1fe822cad94f738e9470c7446d62d9c6a4a5223",
      "kind": "transparent"
    },
    {
      "address": "0x62C633E70a2D89234c017deCD17E42012D8A15FF",
      "txHash": "0xaf03b84856ae1fb2e2d6e0874c9856ba9a4e4bd5b753a96f99b418e9b7da54f6",
      "kind": "transparent"
    },
    {
      "address": "0x448574402c0ebaCA57BE35b53EE80532e5c07903",
      "txHash": "0xeab01c2d81098289afdc0d5aa30218f46a235887aca036306df695cb95786c6c",
      "kind": "transparent"
    },
    {
      "address": "0x8bfCfb623e3F68EFb9765448C58544e366A5C864",
      "txHash": "0x96e6e8a0250c70844b55fe8005902c39f63b5c14834b7a54b8fc905745b8238c",
      "kind": "transparent"
    },
    {
      "address": "0x433C8B5F2AD3F8417249c77866598B895B2D08F7",
      "txHash": "0x945a849102608ddfe93f290d87a7870afd87846108281da4cd58dec3d997a39a",
      "kind": "transparent"
    },
    {
      "address": "0x573929ec945184e09DB53AC8F4dEf4b34d395ED9",
      "txHash": "0x7ecac6c3a4f92a3fa0e2c511f9ca9543210a56e6788e490ed5b496bc8fbde772",
      "kind": "transparent"
    },
    {
      "address": "0xAF8bfB7D371a868f973985b8A79aEF501709Df6A",
      "txHash": "0x9976c49680aac764b3e8bcd955ef1260bf0b8b3206fc1eeda7e9605d099a945d",
      "kind": "transparent"
    },
    {
      "address": "0x43dc7e8A1D4e039bCB5d8457c37c096590019c09",
      "txHash": "0x8430d50d1b5e163c6e1a7c8f6dadc5be6122d2831589164116304d3f52f2ab22",
      "kind": "transparent"
    },
    {
      "address": "0xdf7b0F15eCDCf0deEd4D7a0314e8739126139708",
      "txHash": "0xc6ecfef77e7a3b47cf3e014a4119ddbf05ff7fb7cbf10dd553bb8873858e6f28",
      "kind": "transparent"
    },
    {
      "address": "0x36E1BF6690f3aD0350599fFDE0d359880B234C6B",
      "txHash": "0xdef2a3869542576e23cffaa2c34080a34a9c6ce1e2eab6fe9f84335e82769a69",
      "kind": "transparent"
    },
    {
      "address": "0x825D102D282C80A7588eD6CeE5b0e4DA38B1f36a",
      "txHash": "0x555cfbc7f530d71342fd560bd87380dffd0aa73bbd55021e184b682248e1bd7b",
      "kind": "transparent"
    },
    {
      "address": "0x02144Ca08b888A6a6C7c2beF3d4291FEFe7558e9",
      "txHash": "0xb7930b305cb27ba904857a398bca350ef575ff51670a243eb09773ce68002ad4",
      "kind": "transparent"
    },
    {
      "address": "0x7A55889a5e895812C77aB20e00495A59A5BEde19",
      "txHash": "0xd9fd516a01747c86a0dc5b00c1356aa08aa55e66a5d477e877caf896f34c8db9",
      "kind": "transparent"
    },
    {
      "address": "0x7cA105e4efb0744dCF4aCC0b976C568D0816fF18",
      "txHash": "0x0249124e6b8072939d0399c8b60eabbc75364187c43ccfdbecfe39878c318bda",
      "kind": "transparent"
    },
    {
      "address": "0x3Fc306868e6344ABe3c716a778B69d2Cd126c702",
      "txHash": "0xd36a9df55970ffc05d1faf61f73f0154f1f4ee6b300840abe8c0850b1b37beb8",
      "kind": "transparent"
    },
    {
      "address": "0x16fbD57E145B50fEB60376CCdB1398544f77f2f2",
      "txHash": "0x6729400bc918ee777ba084149db56a6a3e096f8794fb8bc778c2365902343317",
      "kind": "transparent"
    },
    {
      "address": "0x9ECBd536E231332116b29E679535242CfAF15a78",
      "txHash": "0xe71638b7bff500acc186b81a1a2874eca8e8e3e7f90571cc9685428beb584dd6",
      "kind": "transparent"
    },
    {
      "address": "0x4130fb76D263e52dc52eAc73368c97B05b0F38eC",
      "txHash": "0xc578d68c554d269c429b5a17d6f5092ba61d06d4ca41a3eb65f500c5db8e6f32",
      "kind": "transparent"
    },
    {
      "address": "0x22CF726F6d0B2b576Aa51FC343C35c23F8A0B88A",
      "txHash": "0x3a8c4827c06250732d640d1676d943ee2ac13f91c0040f349d6e61f085b9fde2",
      "kind": "transparent"
    },
    {
      "address": "0xD19779944f8441b6cA72E37c35c23034B8b90D2F",
      "txHash": "0x52e1d7cb0d12a87827af47a85dbee5d01b45355d8722361e531c950c921803b1",
      "kind": "transparent"
    },
    {
      "address": "0x6ef892F023839790b11c3366850de59B9feF58B2",
      "txHash": "0x32041b9602d7f603cb0695095c4c7b6bfe5680b402566c3d46baf39f498f2958",
      "kind": "transparent"
    },
    {
      "address": "0xBB9CE94625e4E8Ce86bee1644B40d1B1D42d6336",
      "txHash": "0x15f1d7b1b4cbca575be5c9d6ae7ca2f92e3aec8f6fb2944bc7058cab04cbef56",
      "kind": "transparent"
    },
    {
      "address": "0xc636597AE245CBf2bfC04A6077DB962a73702285",
      "txHash": "0xf0c6231824b08fcc3ecc3baa0d93a74cbd6ba2851ee8243c5a2d3454df578ea4",
      "kind": "transparent"
    },
    {
      "address": "0x8bD61946cA665FF2132a3AD69a9CF19B80567844",
      "txHash": "0x963404528f74480bf21fdd7da01e9f9a370dd21ea476fb82e70438c8f9bbad40",
      "kind": "transparent"
    },
    {
      "address": "0x6A7f08ed80480DbB794d35F1D77605437727e2bE",
      "txHash": "0xe35d7b134e24bf6d53306fc9f03888c3eff9f42d80f572ff7eb8d2a7cc1cbbd2",
      "kind": "transparent"
    },
    {
      "address": "0x3d7439517F349B1fB524Bc0946816CFDA69eA3e7",
      "txHash": "0xaf00ffb0e3b5deb3d5aa1b32210f51d0a502a31133531487c43a0baedbcffb5b",
      "kind": "transparent"
    },
    {
      "address": "0x7C4e2E0e3ea7C5a0B0509e79224d73c8CfBd5F53",
      "txHash": "0x1a1c02bf6b8171aacea68f6b3aaa1237a9798022d19538d13c8191d93dd7bf4d",
      "kind": "transparent"
    },
    {
      "address": "0x5aa368D0a8573fe0473ddee0eD2D7f9757a83E1d",
      "txHash": "0x62e9682bc200af42263bf3ca553debe93e5218e130166f1ea54d56d9e8b83d56",
      "kind": "transparent"
    },
    {
      "address": "0x07BdF6875e7C7B55f4fb8C519d530C8DF0e5c174",
      "txHash": "0xbf0ddf7ce9224b0b5b7d423b65d749060bcccb59df1ac19b9cc15bc3a8d0f0dd",
      "kind": "transparent"
    },
    {
      "address": "0x26fa78959D45463553f6DbC99b4dEcfC28d83626",
      "txHash": "0xd3e5cc5ef9d955404fdcffc60411f2c1fe86c00b810bb764c517a597af95fe65",
      "kind": "transparent"
    },
    {
      "address": "0xa910C02DD6894E8A5b7B4E914e3077646Cf84E4F",
      "txHash": "0x771ea0a47ac7ace411c09faa376ec4771d6268c59e70fe391d78bfc230614f1a",
      "kind": "transparent"
    },
    {
      "address": "0xd5fcAfEe26389E4444437B8D502Fa9F980598888",
      "txHash": "0x01f791e4392a693a412c139478df7dd414c2bc345d816ea0dea8e438eb6fcd9c",
      "kind": "transparent"
    },
    {
      "address": "0xB238AF95d8f07841E90fC4b76F13F1f3125cc45E",
      "txHash": "0xffb5ed4514e37375e68b209a79da6f4073eef613d11d41806ea47ad01b832674",
      "kind": "transparent"
    },
    {
      "address": "0x7ee415a09f170bFD5A3Ad78f7762e1727598b49b",
      "txHash": "0xecb5c7e03b1a810f3641243a04abefca0792d0e725e35ede56a01e4e84f2c584",
      "kind": "transparent"
    },
    {
      "address": "0xa3C90a651F36afF4bb0B7200B8C8d063BFc811bD",
      "txHash": "0x7a06a6c98542c80b40857b3fff4da5175c9ffbf0b868ed034607d18f6d36e3ab",
      "kind": "transparent"
    },
    {
      "address": "0xC5e7e245987D10abe2f5b1b6512D7E54Fb06dfA6",
      "txHash": "0xbc16f7fd37a793ad6aa73d532a20d98931197c904ead39ddad4d3b91edb85bf4",
      "kind": "transparent"
    },
    {
      "address": "0xEd549D6160A6E7AC1840Ce68D0d4d903103803ad",
      "txHash": "0x0a0837929267bb0fc13c2c0b6e496d6f2d51c433d938ece9dc1e1368bd13cc03",
      "kind": "transparent"
    },
    {
      "address": "0x30f6F5c4CA0C2b5f3BEa3B7cC71946665B039173",
      "txHash": "0xaa359f51347883e866f02afa047328eb49abd32289f748460c4c5ae2e2a7abdb",
      "kind": "transparent"
    },
    {
      "address": "0xaFf1d48fC43012Ae9D1414fD6b6bc52586c90cF0",
      "txHash": "0x253f54ef2a63ac536fab18070490e0ca31ec33b2176d83a62cb4465b7e4a14ee",
      "kind": "transparent"
    },
    {
      "address": "0x5EBAEEB45057Ac23a83FCE4A3249b55dB9F665d4",
      "txHash": "0x2ed1788e34e0c90098e0380b5d2f54a10e3e8e304576c883049e5f1387057911",
      "kind": "transparent"
    },
    {
      "address": "0xB437F619d4e2F212644DFc4548A13367f3FD8856",
      "txHash": "0xf91a468fd72c4a4558799524243e7f18c4f7090c09ccde69438dc653aad56b1f",
      "kind": "transparent"
    },
    {
      "address": "0x39F585d6eFf0415Ee24EE5502d89362831dE24e5",
      "txHash": "0x0c8ae7b6e5da41c0c3bef3e4340cfb87415d1f408182edb67b7e6d40f12261ff",
      "kind": "transparent"
    },
    {
      "address": "0x7D2031736B99013192da7869765de80e56037b40",
      "txHash": "0xfc74a51b1512b25121296f2ba1e70252adf7adb4ed6f1145b0770c1bd4696f4a",
      "kind": "transparent"
    },
    {
      "address": "0x922bE107A6841a92aFdB64B1fbFdD9E5788C8558",
      "txHash": "0x65ffc7cf96d67b64aab2458cd9146464e65e0f8acd21c2150d6f952855e05194",
      "kind": "transparent"
    },
    {
      "address": "0x90cBB76D8a6c841eA25D4d52CCaD99bc5Db671C0",
      "txHash": "0x073b87cd32252aec45af0e5fcba190febf191f6b267849c996f6c999a72aa1c4",
      "kind": "transparent"
    },
    {
      "address": "0x154946939F7a017fe5aC4c7CdA00b0FA2b1B2406",
      "txHash": "0xf959d7f888eed69d75cac458ff6dbc49c3cd1fe626d7183e69e56b295d225880",
      "kind": "transparent"
    },
    {
      "address": "0x0307AF0e28E39E7e5B53e9aeab79CB19E0C6b210",
      "txHash": "0x2ec9b1898fdeb6b828f2b7083d1fce7463dfe368d2d3c9bbbc4e7dd7a4da5187",
      "kind": "transparent"
    },
    {
      "address": "0x1F8672470C5c80e6899D60082fE58637F107e9dd",
      "txHash": "0x49f749fd38be3d190e3969601264202f3aed24594ce45776454c39e68eb8269d",
      "kind": "transparent"
    },
    {
      "address": "0x94960b519e715C1818baAc7cecd75c6655764a18",
      "txHash": "0x8773f48380646f1a36ac105fc1e4c6533bfe10922654019e2f5ece27008331f1",
      "kind": "transparent"
    },
    {
      "address": "0xD0019879540e8AC6A551616D0846a9D2fB9fe6ad",
      "txHash": "0x6dfe4fe97a8913c5d914d2f01c6334c5ffdd02c3b327207212e83f9707f777c9",
      "kind": "transparent"
    },
    {
      "address": "0x92A0847F0404F8BEB2D598ecF5E9c0cd415b7320",
      "txHash": "0xa166ce3c4704fb6c0b557d760354f089e7f2d419b6c039dd0e9eae0489cc5dd3",
      "kind": "transparent"
    },
    {
      "address": "0x7aC6ab673b9d4AB2E06f94b29eE0fF825CA1Ee83",
      "txHash": "0x9702d3e6ef1400f2f6a5110eb96e6873fd6700780557f0ddb21a44dda588da8f",
      "kind": "transparent"
    },
    {
      "address": "0x569462EeB30E8e9De366F74aFA7A230d4295D164",
      "txHash": "0xc6fa44aa330bf2d00d17cf11981f70abd1ad3f6cd716cf741db502b65e597304",
      "kind": "transparent"
    },
    {
      "address": "0xdFA2377a55a009a21De5471b9A9f1d00FFe2B934",
      "txHash": "0xbc9220b80b30792a7cce5e86cf3d627694576da2de386dadf10757427184b68c",
      "kind": "transparent"
    },
    {
      "address": "0xba31273991b88A8Ed2009AC365710d1a2b9688f5",
      "txHash": "0x3acec882e025290a4da9546f50fbd4f2decf4569fccfc1f08ed74489f5bde295",
      "kind": "transparent"
    },
    {
      "address": "0xfa6e2F6c181ffcB663a5D05Cb0b388aE788d04e7",
      "txHash": "0x7f6d7978455fb0f84a63f0177f1cc509208d5195efcf2e082e896333d54f4bbb",
      "kind": "transparent"
    },
    {
      "address": "0xAb1266686E7788f1D81EA55D0f4052b22819Ae00",
      "txHash": "0x17987a7d306762f55b01c448f765d378708bf1e3638916b56b4bb8ac6152d1c3",
      "kind": "transparent"
    },
    {
      "address": "0xE76b775b1c66978fAE748530F0e853bEF1624a45",
      "txHash": "0xd5057e9271313654bce626703b8c4915e6175752ea610256201a04f936940e3f",
      "kind": "transparent"
    },
    {
      "address": "0x81A4Ca89fdE5733593553cf94c4E8eD260b1CE28",
      "txHash": "0xd651c75685f1f958fa44f02900e65360ce41e4cc57d306e79debedd8913a5b27",
      "kind": "transparent"
    },
    {
      "address": "0xB18297573c2B092816c0D77Ffac0D2B4C611C4e6",
      "txHash": "0xb649a55d89c989fd05b9e3a3c34d43b7a2ffecb18a75dd24294857906d66d335",
      "kind": "transparent"
    },
    {
      "address": "0xc5417a9A1Ec311463A8B1aE4d90D794cd89cCbce",
      "txHash": "0x426d34a7ef4ef27b060c3f22cf05b71afda732489103700383cd53de34508b8e",
      "kind": "transparent"
    },
    {
      "address": "0x6319e799A805532a99695019D627630dE9d08F60",
      "txHash": "0xceb7feb36706787d0f7ea1aa986ef9f36d8da0c61f13c96ab2def85d3079aa4b",
      "kind": "transparent"
    },
    {
      "address": "0x11a36451328fB999d2CCe8C8132D0CB1A72432d4",
      "txHash": "0xb7e0f9fa4a84d3601b1bc5e66b52d6713dc92c0acf01334abf069f43f615a855",
      "kind": "transparent"
    },
    {
      "address": "0x140875D6B93B740502185Ec585f75A6D17cb94A7",
      "txHash": "0xf137d71757839a6525966f4511b245f7e3f74c37c71e20435d86f76ad0578c8c",
      "kind": "transparent"
    },
    {
      "address": "0x842c7C446E795091037f699203D2592993b09Be8",
      "txHash": "0x00a5cf194845a026445dfc22da055d2d6c3f91072f51b151a4dd1dc665825c19",
      "kind": "transparent"
    },
    {
      "address": "0xcEe1e727734F489047a18Ea33e1092E4dD5B6fc0",
      "txHash": "0x1b5804535d495a067978488af4449bb827073962d5b2b805a130bb4bde346000",
      "kind": "transparent"
    },
    {
      "address": "0x336dbD09c87b2768155960C65B61e4d62b40197b",
      "txHash": "0x8ded2ce7175c1ada27af810f71462fdf17888c9955e4114b05b782599132dee4",
      "kind": "transparent"
    },
    {
      "address": "0x6EF51140D9a0D664e6AE48B8c72be43297e3a388",
      "txHash": "0xb921c7d7749bd981b9aea03723511e3425a7c0d00d59ea9414f620cff8bdcbe8",
      "kind": "transparent"
    },
    {
      "address": "0x6b792062eBceCAEC56865518Cc7d612ED710FB67",
      "txHash": "0x294b0eb0286b1dd21c3f1bc3a4bd1f3f7e1ad4bb3fec4254d40a96e86ec16280",
      "kind": "transparent"
    },
    {
      "address": "0x66166c6f45479Cfb579153a7942A894F4C00Df6C",
      "txHash": "0x979716973c44c85c2bf8b24470463d891f573f621b416cfbab5fc2cf775b4317",
      "kind": "transparent"
    },
    {
      "address": "0x493A2046d4fFC78b7873d7E6d838c2Ec185aF6Ab",
      "txHash": "0x23ab7c56c1411a5fea1f066baadd4f134aecdf07f8ce8cf94f184a5d8daeb749",
      "kind": "transparent"
    },
    {
      "address": "0xEc91c7189e252414AB693358A381733b564a653e",
      "txHash": "0x5eb3093ab38f7994481014ef6ea415ec90069ad5c5db63d30b62de53992e40c9",
      "kind": "transparent"
    },
    {
      "address": "0x8987D5AD3d6739fed7A4C862E1E2e2234128109d",
      "txHash": "0xa3c0db2774e0e89459fb46d760a3023d698e1633696025d6edc5031cc9673e01",
      "kind": "transparent"
    },
    {
      "address": "0x8c0951A1b24d2E02060AB1938aF9366f2Ea6144E",
      "txHash": "0xa0529bfdc9c1640aab4b70cdc6e590bb86505f24b1020d625994a7191d061929",
      "kind": "transparent"
    },
    {
      "address": "0xe9566a22EA4B022232bbf36C2BA45C7A3d772C4f",
      "txHash": "0x3b902fb41759879c7fcbdce61662a2d2ffb3b6f8cf34248c45e66962a3953843",
      "kind": "transparent"
    },
    {
      "address": "0xD25A575c5cc4162021a1Fa0D4eCE5D1b18AdB231",
      "txHash": "0x459e25ee777280d42951235069e50eae0aae8aa25922f13445ffa79b35e80cdd",
      "kind": "transparent"
    },
    {
      "address": "0xE52E66c2b8aE5b30c234642B54A19A362D1330AC",
      "txHash": "0xa8db7ea25a59e12eaa82b486f71ef42e37de6487e8d5796062ce58e2636b295d",
      "kind": "transparent"
    },
    {
      "address": "0xe8F7561aE8376E623EcFa7F6633d71C8C0aeba4A",
      "txHash": "0x9a8470d921524d03486446d3b5608f0dde88ca291d696faca29a476cd7e31fac",
      "kind": "transparent"
    },
    {
      "address": "0x56b4a22730812AEaBdaF331737e43bB6140BE096",
      "txHash": "0x07624fc5d44815e518b9c273fc4eb85b0edadf56a76e0644a6ff2bfc627b6d65",
      "kind": "transparent"
    },
    {
      "address": "0x27168A617650E7F27C4A2cb1a37cFFdE5C9e6117",
      "txHash": "0xb91e69bcd2a3a2215d2ef203f7a4d2364e0baafa0acf68baa6350353c4d1e695",
      "kind": "transparent"
    },
    {
      "address": "0xBfDfd49775071D3E5d8E32Dd25D1a27d880caAca",
      "txHash": "0xc2eb521e74121cc5725dcf54c4c94ac981aeb1eb29f07434871688594d2478aa",
      "kind": "transparent"
    },
    {
      "address": "0x595571419d0C290e3b45533Bb25b081e4781246a",
      "txHash": "0xc5318e9706cbafafb48b2ff16033811c1b92c7a1b924fcb25882b63648a2bc4c",
      "kind": "transparent"
    },
    {
      "address": "0xe8b4C3162d9D0e8Cc8e8f5C1520a2d6991683966",
      "txHash": "0xc5d8e190396be96cc48ab5fde244d2c6aa7ab70e021c0e270130495d7bd135ea",
      "kind": "transparent"
    },
    {
      "address": "0x3Eff9E6B9F80A9277F0E55cF59bbC86E514cAc29",
      "txHash": "0xfac29ef6654195479e6d6214c17097a2018452666c50ca1dccf52c30ec9ad9a7",
      "kind": "transparent"
    },
    {
      "address": "0x0524eC0706BcC344482369029f08FE2c0147BB07",
      "txHash": "0x4da695640c747a7295b0a1a44a69e31eda12066d7d36a63357b2eb743eca4c25",
      "kind": "transparent"
    },
    {
      "address": "0xF0914CE54a19279138392cFD9402227A6a684d9d",
      "txHash": "0xe43b9ad323c8c53e05ed426edbf26bca0824bf52684c0e8f318e3b52478bc2e5",
      "kind": "transparent"
    },
    {
      "address": "0xBcc3a5312B667C75391629dFDF3AF8693569Ba85",
      "txHash": "0x2da10ad0e18e30fa6d4b077bcadc30c7270ce143e6621b0613aeb5c3a8ed8f56",
      "kind": "transparent"
    },
    {
      "address": "0x8E4695cB6D96E5AA94DDe8eF732D6d4b396B6F0c",
      "txHash": "0x902022543a1f1ee18057dee629c3f1980e64286afbef00ddba73b0402ef237cc",
      "kind": "transparent"
    },
    {
      "address": "0x0258883622F3a21AB932B7551F3a7f9FC1a4ed65",
      "txHash": "0x14af6e393314033e842fd1fdf45a83eec1cd3028cb9c02ec17ad9ad669bf25eb",
      "kind": "transparent"
    },
    {
      "address": "0xAAdbB82255511aA9AAF029c99A6Ca40FDBBE7706",
      "txHash": "0x099a324c6283e81b06021e48daaa1683d566d68983a1ae089bb64adef89a0dba",
      "kind": "transparent"
    },
    {
      "address": "0xd5f2384c2D17E2C8cd6687F379F103c2cEB319b5",
      "txHash": "0xc056a4b4d3ba408f91527d6b851e773782cfcfd27f8bc61bfd0d82609e835761",
      "kind": "transparent"
    },
    {
      "address": "0x7e528f4365Ae6d0d9FC474ccC7058542A4129796",
      "txHash": "0x0b6ceebd4b83dbbaa93fcb4d20ce894220e77361993b7a375578573aed51aeda",
      "kind": "transparent"
    },
    {
      "address": "0x2B68FA9484639e73E586A3b658fba6b72d29f4d5",
      "txHash": "0x29be02323db9465cf6f8f120a38fec28ff1efbd2fe57b62a6192fd2fa5e92c95",
      "kind": "transparent"
    },
    {
      "address": "0xebd4fD36F29C2cEF430C7718323363D9Ee194d09",
      "txHash": "0x3204d4a6154bb471b71e0bb643c5965394a28cdc93e7f37f7e1665d1a9e7cfe1",
      "kind": "transparent"
    },
    {
      "address": "0xB22037e6ffA8F3213bB31542c9BAcF9731445926",
      "txHash": "0x53fb89ddfe3464946cae06f82c2c2662b6f4786d2c63317793813b2a0568d855",
      "kind": "transparent"
    },
    {
      "address": "0xbAB4439842435BAbD7A3584178d929A5B241D96F",
      "txHash": "0xe364a199071b356173eb54976dea8710f67c4a8c6c50eaaa687d58e060ca640f",
      "kind": "transparent"
    },
    {
      "address": "0xf3F16F224AFD4a9e5caf12BC6947ef4AAD2631D4",
      "txHash": "0xb551700f627d1bca24adfb9bc7f9b223af93d33a6227673cbf47c8cedb028b49",
      "kind": "transparent"
    },
    {
      "address": "0x5De9BC95d474a0867bFDC3d75bC8141e4b5C3f15",
      "txHash": "0x9482875f2698d0bed32d035a48bde1b1898fe59a02abc09ccb9a3ec93296d67a",
      "kind": "transparent"
    },
    {
      "address": "0x2f65ea3E62cC18092165Dc40588453e6F02385fC",
      "txHash": "0x017d72f98d6e8ef34eef1c5caf7f656663c2baa1030c1b5046807d38707f59ca",
      "kind": "transparent"
    },
    {
      "address": "0xa49409B91C42DECAb835aACCF312b1E3758480D1",
      "txHash": "0x03f1ce6d350cb7dec8c3a080d9f050c52c47d983f684f867699a771e4a606f27",
      "kind": "transparent"
    },
    {
      "address": "0x09991594F13a415bf56aB957bB6930851eC33E54",
      "txHash": "0x345d0584c7097810cb92ca2b8005e450d1c94dea41f1c17236aa8e3f21981ee3",
      "kind": "transparent"
    },
    {
      "address": "0x3d0b8495C4974f7be1D2964C4Fdd2d96d1C728f2",
      "txHash": "0xe946a5212399b4a333b9ba43ce00c453ad5018871976bb32f15f552a85fdd77b",
      "kind": "transparent"
    },
    {
      "address": "0x1F5d57001BA08629b309EA85f3d2f42280907Dd2",
      "txHash": "0x3b24a5160ef30d09124057c0fd354df014c2f77a8569e1b199f51c8f485801e8",
      "kind": "transparent"
    },
    {
      "address": "0x197aC68Da094F9f0cfebf0C613fB4C2f112f5181",
      "txHash": "0x4036660542f9a20500bfcb7fdf2ae7c77c11fb8cc2e47182c894694c80f4fc2b",
      "kind": "transparent"
    },
    {
      "address": "0xf284FbDaA7EaAEf039E5767dCbBEc49767084793",
      "txHash": "0x7162a0ed19044aea73b25d5bbddff403c11a4441e16a7fb9543ac9b13c814b38",
      "kind": "transparent"
    },
    {
      "address": "0xB32A72b47bDB645acda7eB31f87bF563573f3ce0",
      "txHash": "0x981a65ba1ea32785dc199f94326d21b723161818c067db3a49ecc496cb8fecb0",
      "kind": "transparent"
    },
    {
      "address": "0x4BBaA8A691Ea7d8b1aD6ACa005e24819470CfF5e",
      "txHash": "0xfcaf8e4a60a99042d78c2d722a31837c024d6cde565adedfb1fb5f80483fd943",
      "kind": "transparent"
    },
    {
      "address": "0xDf505B59632047Bb9d6C8422fbfe24E761861C98",
      "txHash": "0xedf2d69d9881f069a890a5f49086143bfa28da518b20c00386f22230563d8edd",
      "kind": "transparent"
    },
    {
      "address": "0xc9977476588f32bbEF283FdEc65e8D2cb693355f",
      "txHash": "0x9709551d6ffdd7cff4d2cc7d659798c358949500fb5d8bcc73a151506c70e0e8",
      "kind": "transparent"
    },
    {
      "address": "0x9723755aEc67B307368799eea6298D220e1BE637",
      "txHash": "0x1a78334274dfd44e885f775e6688c374414fbdd84d37aacbaed29a69a40666f4",
      "kind": "transparent"
    },
    {
      "address": "0xD2B6a019F3328BdfB83B040451DF360cA286F3DD",
      "txHash": "0x3ccdff72a766ef8d3030033acba1047ab97c9aec7b74d5be1170860951ce46c4",
      "kind": "transparent"
    },
    {
      "address": "0xf949F31FC0d134d9f311cDbFd982f1Ca3bd9caA5",
      "txHash": "0x433a02f85227bf858b35c6d611a98c8168d374fb57b4a4b6e50c7869b55430d6",
      "kind": "transparent"
    },
    {
      "address": "0xFB7Ad353EC38f33672A219Dd15C6536c1f8Ad630",
      "txHash": "0x7e29f457715d23f20aa99795ad29f887549ae9b8cbb531cc886a0f5239f9b184",
      "kind": "transparent"
    },
    {
      "address": "0x9eA729770Cf535C5d27aC0ceee35b19BA6807992",
      "txHash": "0x5a915ac17b65f05799244a1136ca3b0d17a65312c54e7e401166b8fb6e0e155a",
      "kind": "transparent"
    },
    {
      "address": "0xa1501692809D04bB9BdF174F9561C582B8F1F89C",
      "txHash": "0x47e48129c9ca4afb95c7fcb3c97016ef38a85cd8c4505ab5caaba64d1de1b884",
      "kind": "transparent"
    },
    {
      "address": "0x7eAC4Ee8296C27C2a61f29DEE5e5cE66DCf2E8c8",
      "txHash": "0x68a9222ff751c8e820319cd829ecf987ab415ab36b4d48047c7ca85a9e5b469c",
      "kind": "transparent"
    },
    {
      "address": "0xf11953A5846721a284685A576aC0238A185EB093",
      "txHash": "0x6a67692ca62d94dc0abab103a3aab5bfd044201c424e2892067ec1772734ea2d",
      "kind": "transparent"
    },
    {
      "address": "0x6382718AeD7f764BDd0eFB8250367D6A68da9422",
      "txHash": "0xc65f72f6721ee71fb44120099814cf8a6d5b5200f384ea397beb92a937ec6a70",
      "kind": "transparent"
    },
    {
      "address": "0x0D576026025Be749f5D587A5c3D41f1635729810",
      "txHash": "0x07f51bf85fc2d858a0a12b548b1fc6d4e5f0844bb658f15859ea0ef64a820d0b",
      "kind": "transparent"
    },
    {
      "address": "0xBF7cdEE1849f43617dFF769513a9d73d6CD50173",
      "txHash": "0x04a7af26c22733e763720b51287029ff15fdbc9e9563e0ba1afe0b9da9763bfe",
      "kind": "transparent"
    },
    {
      "address": "0x774cc82a0f3e9eab28D3Cb59bDa5F478981AAf8C",
      "txHash": "0xd7436efb04643b862f9bf75d2c6210317d90483406fdce1239c3dbdbfc45d1b0",
      "kind": "transparent"
    },
    {
      "address": "0x978Ef7aB5a318877790a21442097dE229816b489",
      "txHash": "0x917db5e31bb00a8a3ecc269be0ce1442f20073211ab8e68f4f92164605825aec",
      "kind": "transparent"
    },
    {
      "address": "0x42c5fc4bF136755C43905C541659D6f308B293f3",
      "txHash": "0x7be844c4df53d53104379150b990b9a39a6f79ba61ab2db4ced086c5ce674e5e",
      "kind": "transparent"
    },
    {
      "address": "0x542714C35C5e98296ee26E5CCD71d596F5331B9b",
      "txHash": "0x4b78161d9c5de1fdc4b8eec7ee9b9fc4e64a571ce4fa5a378367430f8c816cc4",
      "kind": "transparent"
    },
    {
      "address": "0x0044509e61C166F8a21CB25B021C7D8aBc744DC7",
      "txHash": "0xcc485a3d30718f86b54fe2f7df2a97c98c652189809dbee3865d989b532a4fcf",
      "kind": "transparent"
    },
    {
      "address": "0x0F3d3b16f4413ACE9E834b7E823b50b6140E38EF",
      "txHash": "0xdcfa66ef4de92f5018107b6e5e6c1d526e07f9d52b6b1771151d234616a8e5fd",
      "kind": "transparent"
    },
    {
      "address": "0x71302963645e45DD92850785bB35A69c7fcEB623",
      "txHash": "0x6e6c72c90a027e5ee3e31f5dd03e4298f3ef3c96855a638e460dc7a3f5f33ea5",
      "kind": "transparent"
    },
    {
      "address": "0x1A9715ebA86932D2fb9F03c48C37D9085d9e9615",
      "txHash": "0x4a2080871ff6f9ff7fc672b7456375ba8cafd36f3cc1a4b6d89963e6649e35bb",
      "kind": "transparent"
    },
    {
      "address": "0x961b1Bfe3967180335E6e8A011d6D92574Aea3eE",
      "txHash": "0x00c3632ea65aa1c9e8f901dffbc9a0d077ca3eca6a6787e21d151b1943fb6140",
      "kind": "transparent"
    },
    {
      "address": "0x6d7Ea69706Bf7aC250C359833C22698bC7b0C131",
      "txHash": "0x0d9136d484a3f3c13c11dae36796899a699951af545e0e1a25c6d82df356cd43",
      "kind": "transparent"
    },
    {
      "address": "0x8F10757dD72b5D418ae887aF25D5003185f07dCa",
      "txHash": "0xcf8b78c5ab1d25f13100ba997f71bc9413be70c4f68155cd4047b8f861bea1a1",
      "kind": "transparent"
    },
    {
      "address": "0xE66F32a3D01Ae1A10B8D5255348f42E8425766D5",
      "txHash": "0x7dfacac76567b2a0243c2340b85b71e52f05aef7ced0db0216f72ad064e45e01",
      "kind": "transparent"
    },
    {
      "address": "0x909257ac22923b2A507F535e413b68934792782E",
      "txHash": "0x3b28fe112e5b8737f29a7b9a79d79cdb52727d9e8c82fdefc058ca8b009131b9",
      "kind": "transparent"
    },
    {
      "address": "0xe36783BE01cAae8b8AF3f06C8FA8635dFfDb5f23",
      "txHash": "0xbf8e84ac83f7dd54019455f2bb900b556765fbd9174b72a11008d0cf3d1d54e9",
      "kind": "transparent"
    },
    {
      "address": "0x605616be8B39880C8aC3f8b87194c7A7B61ed0a9",
      "txHash": "0x215e0401db88cf81a025f3e90c02c3f54242ad6868ad61fc5431871757c65678",
      "kind": "transparent"
    },
    {
      "address": "0x7688Dfd2801E62f8fB6E7EC688C173D4501c6CA9",
      "txHash": "0xd53041154dcab6a479558044853e9381d6e86cce203fea9222edf67755441cc4",
      "kind": "transparent"
    },
    {
      "address": "0x0dcd0AE85d45e738FD2Ba789D5F46d5CbE51555D",
      "txHash": "0xfaa0d6c529d46a0ecb590feabe817f17ee0274f2bbd9592622e9c44d46da1d63",
      "kind": "transparent"
    },
    {
      "address": "0x8a8c3805fB7d4652aacDe4ef264798C246B9F38D",
      "txHash": "0xdbda04f4e25c5f648113d6c6858e07b23baeb30aa985e06c47d26f47d1c1c614",
      "kind": "transparent"
    },
    {
      "address": "0xea7Ec8f75340c68AFd8874b905ECd1ed962D101a",
      "txHash": "0x91c8e42458e180aef74df31e37b27ca9c0bf772da19939ad6906d35c9081355e",
      "kind": "transparent"
    },
    {
      "address": "0x59391533f2e5d752E0A7F3674F8866C09B2FD7dA",
      "txHash": "0x0d7b4878c79487dfa4df6ea9ebd0f721f5d28728d644eeaefcc5a6d6549fe895",
      "kind": "transparent"
    },
    {
      "address": "0x1770B3e26FE52ab0529f1CF9868B25002154f0F8",
      "txHash": "0xbc73f452ad39ef4a7d5b48d1f695c52f7d5cbbc3481e60c5dd031cac47b7affa",
      "kind": "transparent"
    },
    {
      "address": "0x2Ff4461622e4c0e6E37f08a58c082848915E4526",
      "txHash": "0xffb20f56923568eaea7ad9f230b68da6710358376b14f25c1cb127b7129ab5ae",
      "kind": "transparent"
    },
    {
      "address": "0x20Dd2ee22fBe884411DAD7f866df0feD4346B32f",
      "txHash": "0x2f7b20d3fe297841bcc4b229fcb9909c2cb07facaaab90880152e73925126e25",
      "kind": "transparent"
    },
    {
      "address": "0x452c51c6815d8d9F9459A68b5de0720a29748A72",
      "txHash": "0xc2cacd82c00c0860007fc28c37f9d1aa9bac698a0f391b0189fdd437dca03f7f",
      "kind": "transparent"
    },
    {
      "address": "0x5068a7bb713E53790E2C102008D551bFd15e5474",
      "txHash": "0xcfed3ce836c2dde3e2cf73dbcc4c7a2dc129b2f1ab6515ce6aeff4f3f1ca9c1f",
      "kind": "transparent"
    },
    {
      "address": "0xfaaA92185B0D270697462d986F86995c596B3152",
      "txHash": "0xfcde9ac075d8502c0ab947afab51038d35aa1e65ac513e7333544c3a59fef31a",
      "kind": "transparent"
    },
    {
      "address": "0x954ba1547974Fd1316F33734888225c44Ea268C1",
      "txHash": "0xd1aeac85574d3d3252ad53c2c156b88793def14bf0d671ec5faaeecfa19040ca",
      "kind": "transparent"
    },
    {
      "address": "0xB6808b311e67F3A68C543be068C0594a4FfAe62F",
      "txHash": "0xd9b4b25fdecdbbd38f5725eff7a82920b1273fb70fe928bf415b36782f9b4ffb",
      "kind": "transparent"
    },
    {
      "address": "0xDb4Ce9533E6BA9E2Cc3fe887D4AA92B7FE77766b",
      "txHash": "0xed5ab4fe01fb7db4e1982ca64d454b3416a392fdeb7570c50c783307d6bd1f72",
      "kind": "transparent"
    },
    {
      "address": "0xa1Ce72D707735682Ce04610D5E2A231dC2acbA58",
      "txHash": "0x4c45361353e63a483800a3bd2af6a31ecea81325b6258cd62981e5286ad3bd5e",
      "kind": "transparent"
    },
    {
      "address": "0xa1B4F46Dae727Ab454DF31fF7B677a4bcD1B5BB1",
      "txHash": "0x5049d08ddbf8c06db86a77e1552bc64f4969b4065c56ef6c9e5662fd1bd132e0",
      "kind": "transparent"
    },
    {
      "address": "0xE37C33a3121CbeeF9C154bE2571110A834B12E70",
      "txHash": "0xef5546834e3e9fe4de4a196e4d2fbe00fee8f2b663457bdb3e48ba8013befc6f",
      "kind": "transparent"
    },
    {
      "address": "0x6db4ce9224C0d93BF1a01997F017914210f4AFCF",
      "txHash": "0xb1667a2b8f8cae44dbfb456436117867862307d918fc689ceb04a27410ab383f",
      "kind": "transparent"
    },
    {
      "address": "0xbbb668430aBDA026E5c18198f3641be0c15b2b87",
      "txHash": "0xcfe884d6e6dbdc0e0608f0e6af623364dc95dd117b632ae84057806e41c259e9",
      "kind": "transparent"
    },
    {
      "address": "0xa6C6A47016c8b855b198F75663959B6c1Bd42b8b",
      "txHash": "0x4d6ad1f618d81826647842126e246f672408e959099e06bfd406c6bd24edf4a2",
      "kind": "transparent"
    },
    {
      "address": "0x4514fe184960b2A9A11535f7173CCb7A5DC782AD",
      "txHash": "0x88da1c8cd0ca05f91d5843caecdc7469007b329c8b29565dcccab28ab89a01f9",
      "kind": "transparent"
    },
    {
      "address": "0xA1F150e868394Bb064b66ab3958B4BA279f8c0c5",
      "txHash": "0xa541003150052b910a32f79bee7edaa2936013bfafff03531e6683208f7f1469",
      "kind": "transparent"
    },
    {
      "address": "0x7B875A4bF8Eb854890da679257e43e125D571092",
      "txHash": "0xad99559772a39b04d1d5bc7abab44934dd018cc7f64d549da0bb1ad310f7246a",
      "kind": "transparent"
    },
    {
      "address": "0x152C362ED6a8dd7981ba987cC6fa4a3848E4B70C",
      "txHash": "0x23bcfd58655ef18a135b0b0e5d1ab5d2ff1ff430567f66d20f33645e389ffc15",
      "kind": "transparent"
    },
    {
      "address": "0xdfbc1060304e4e3F4003406a1eC45428b95A70d1",
      "txHash": "0xaedd02cacd9ccc2e5c1f9071fb99cdd2a93204f1abba3022b30ce90eb9c594c5",
      "kind": "transparent"
    },
    {
      "address": "0x7ED1D3eC6A8051c785F59BDA58731108C02a77E8",
      "txHash": "0x54278cb03d6a3b0cbc9a7b959c0b466bac19df45e41cb2dff9226f852a8bcc7b",
      "kind": "transparent"
    },
    {
      "address": "0x2fB7C8715a24610192545B629Bf58c77569dEc61",
      "txHash": "0xc58de29ee214c9dc353e621e91c06baff5fa059ed0f6ea098b92e80366f3624b",
      "kind": "transparent"
    },
    {
      "address": "0x471E62cbd13F8d940Ca0cbD2288Dfb040c40995c",
      "txHash": "0x6f9dac1c0b86cbe22a8bf0a11a4f622da1418b06d98cc98966605234f5c78d12",
      "kind": "transparent"
    },
    {
      "address": "0xa07E7ADebFE9D05b08cae0cFE5A3b53578bd7F82",
      "txHash": "0x2132fe9424aac0e80781f2effef3d3be167ba93461d9bb61520a0c0c2b5b3a22",
      "kind": "transparent"
    },
    {
      "address": "0xdd3AAC08E4d7369eed4184200b0BEbFC775fb748",
      "txHash": "0xee03feba94dbcf7cb3b0817fe5df0dc08ca7ffd267c6ae8bf54c497297b0af67",
      "kind": "transparent"
    },
    {
      "address": "0xa1c4e641Fe107f6390549dFDD256B6d23070aBF8",
      "txHash": "0x9729bd844f58f543237eb90a6cf957622cde626d647d6788a6512e59fe5b0e42",
      "kind": "transparent"
    },
    {
      "address": "0x66D12De0FAeB5CB944Ba9Fcdd2c82d756022f36B",
      "txHash": "0x197c207f004847e24ee0a8eb7bcc79b2fa684f4da2ff86111561956f332b8c00",
      "kind": "transparent"
    },
    {
      "address": "0x11f4b9EfE85156d84AB9aBC0A1C5702f672f73c9",
      "txHash": "0x296599f32174c8768a9c625f69e2f42c5eed0e7a3f7b1eb6d250b0cf94a69be0",
      "kind": "transparent"
    },
    {
      "address": "0x42A2296EB6e12233bF8d1053bA0ae7aeEB8e4d26",
      "txHash": "0x4aad8a586f42a57f1601d504d95985f36c345ab8c51795a60f700c9e1dbfbe00",
      "kind": "transparent"
    },
    {
      "address": "0x67070b9cc21cF78A7740B1F13FaA439ee3DAFDC0",
      "txHash": "0x76442c0da577e4e501d22c3dcda89ad35010ae6836f1f2e26ee4036988f96ede",
      "kind": "transparent"
    },
    {
      "address": "0x991532FA55317B56481C477BB49E92D048d9b4a8",
      "txHash": "0x709c82de7079200030ef32338a65622262b230e5fea422201ba32903f8ef50c1",
      "kind": "transparent"
    },
    {
      "address": "0x8C4049AFa93277aB9111dA7851809f87098B348c",
      "txHash": "0xf517339d205e6667c10e6262ad121cff41f620fd9318cc7ea63fe7d5caf1a957",
      "kind": "transparent"
    },
    {
      "address": "0x5DbdfA5dFD58094a1583EA2D04b2461a5e593FaE",
      "txHash": "0x7ed603e1c82d90b3c4e07f32fe731e55564e9e47fa09c0cf893b56f0721bab62",
      "kind": "transparent"
    },
    {
      "address": "0x1EF116E30CB802d883C496B64f2834aFafD0c0a3",
      "txHash": "0xc8e754eddc5197a666677b1404b7e9bcdea55fdebcae1aa97bd8474973f10a84",
      "kind": "transparent"
    },
    {
      "address": "0x847A32e2934Fc463Bde5a156f50A4aC5F22174C6",
      "txHash": "0x6e8c16a7f7b688d6f46c70049001213935ea622c24658ed8c432d74d55d84904",
      "kind": "transparent"
    },
    {
      "address": "0x99741D0608E48850C26e7CEC0BB1Cee9b9A13255",
      "txHash": "0xcae256b2d3a0b871e605c138e92ffc1d558a1eeb4cec28c394f50ae456d52e67",
      "kind": "transparent"
    },
    {
      "address": "0xE95fD00860C151be49b416D4B17829CA74a37aC5",
      "txHash": "0xe2f16554d18faa747f6e4d7f9f8846cd4e512d8c9ec76b8c076b183aea2db913",
      "kind": "transparent"
    },
    {
      "address": "0x8730D2917481A8752DCbee34868d1b0fc6bA8975",
      "txHash": "0xfca729600b2ba74dfd5018bf9166cd4dc9a675fd15e9681ee16dd6d113cf92b2",
      "kind": "transparent"
    },
    {
      "address": "0xA4fc3e9D3AC388FDBE3BF7F3a2C53fE0F86Ba9cE",
      "txHash": "0x7a5b62e305371edddc13b69f9426e9e6c2a51271e68a779bfbdead34be43bc0c",
      "kind": "transparent"
    },
    {
      "address": "0x8fB91c77A06367359Ac316061C222e0B589a19cd",
      "txHash": "0x348d208a8f18ebda7913f116dcfb7b785cdf6ad4a3c91967e5671560aa37dc28",
      "kind": "transparent"
    },
    {
      "address": "0x3eB64203bc31e1a647FA2442A63864Cb2BeBd262",
      "txHash": "0x979142bb8174b15abad3ee9b1419a435700a059bcb5b745e5f4b75ccb8790d97",
      "kind": "transparent"
    },
    {
      "address": "0xAB7054E0575f08ECFB40B3E687b137dd45184c29",
      "txHash": "0x6b17a4ce8e397c35946179863814caae85932713bfe5611046c13855dc318efa",
      "kind": "transparent"
    },
    {
      "address": "0xc5e8016f83BF85C2765f4C4F9a1482Cbc29Ea965",
      "txHash": "0xf156aa3b2e76d5114f49e2fb5a6072703f206eb6093a27ae496c690d8aa6b6bd",
      "kind": "transparent"
    },
    {
      "address": "0x995CA0371081A63889A34795759e6F333974505d",
      "txHash": "0xcf1f4f5e3df564940b2f3e0361cdc3727bc6d2a6121ceeba1f046ce8f8e4ee7b",
      "kind": "transparent"
    },
    {
      "address": "0xD69955eaEEbC4E7b70eB5229810843b74B7bb2DF",
      "txHash": "0x320c5c59abbfbf1709eb92697ae7f2751e54af9abd250bfa6ae66f13eeedc0ae",
      "kind": "transparent"
    },
    {
      "address": "0xAF4F8C9e464eAEa021320154b2FBe82c45C17Fb3",
      "txHash": "0x00c4351d7a51b369b2a149d125dbd7e2817b13d7daa7cf81e52c5feca91efd12",
      "kind": "transparent"
    },
    {
      "address": "0x6C5D2D339bE4641E2786B25289eFeE9166749B52",
      "txHash": "0xd119b248719b762fb2f928cb90ad95c5a12a462ace80d06d07be33b4685c5681",
      "kind": "transparent"
    },
    {
      "address": "0x0be3f72AF7dB4e0f211aEE6D08EF922fDaaAf79f",
      "txHash": "0x849164a7541eb00fd8c6cd769ccda9368618eb12ca446f5b649a78196bdb02f9",
      "kind": "transparent"
    },
    {
      "address": "0x90dBB9bd9bf2da6D3611718bf3F422013B170D5f",
      "txHash": "0x5392eab047dbf663c3a5172cb21fb2c1b397fdcf6650bce9527a5068fca1722f",
      "kind": "transparent"
    },
    {
      "address": "0xD636C10dE4095aCb5563B6D720763c4f24a7E03D",
      "txHash": "0xe8a807fe16acfdc8400999d6f1d8e4ea7e9b0f15f68bae59fd60d9a1402d1061",
      "kind": "transparent"
    },
    {
      "address": "0x4C1B133F1bFd4b1319CD0e508cFf0B37118F145F",
      "txHash": "0xa91c2939646fd5722f4061767e9d625790a43aee3c022f8b2833e4e2384a060b",
      "kind": "transparent"
    },
    {
      "address": "0xD169Dc48328985B62ec515Fb0C8b0A20079Af5C8",
      "txHash": "0x76cadba6b8687f67e414cdeabaf504fec956b60c805ca040fd10150bf6f6e4ee",
      "kind": "transparent"
    },
    {
      "address": "0x6E794DC405952690c15CaC297c956224F9Aa7002",
      "txHash": "0x4d43a4916f617f7e67b013a2380caee4afa0043d7d5b5cf438bb3c6afafac16b",
      "kind": "transparent"
    },
    {
      "address": "0x7CDF800a3716994C4e750781e9377F6191B4B7F2",
      "txHash": "0xc234260e1300aa39d482cd4cce486c5db511e8ffff1d1196cf0dbac917b20457",
      "kind": "transparent"
    },
    {
      "address": "0xa0B80d83635C62b0566aDb627944671EEe269E3b",
      "txHash": "0x74926a4711ad5c2f5a4a1aa1f5ac0b084fcaebc89746f4eb7879e81a94c8a621",
      "kind": "transparent"
    },
    {
      "address": "0x7E4Cc930ac7EF215AA117Fca716d0E3Ada858CE7",
      "txHash": "0x316679d86dc019f79ccb33568aaa435dafd034dcdb0307f30de9c8d9f6553bac",
      "kind": "transparent"
    },
    {
      "address": "0xE48D5ed5c8e6996C2dc115B00fECC6185841BC3F",
      "txHash": "0x05119eabc08de6b8e13df2ed2df100164291b8dbce3fc1e8276f22a2119eee8d",
      "kind": "transparent"
    },
    {
      "address": "0xC5a6e32B82ec53D20a60e200ECCd8b011063d1e3",
      "txHash": "0xf6501af5c0053e9c9905c6b21c7001c7ba310f15fc0b777bf8878b2959015abb",
      "kind": "transparent"
    },
    {
      "address": "0x301bA45CdDd7a2c9e54Be93Dd794D8D257A2Afc8",
      "txHash": "0x7efe5fe096fc9210e7c2e8faa27c03f5e1e875816c2032de947bdb756ecb2f7d",
      "kind": "transparent"
    },
    {
      "address": "0x9824a4d9B55e4075D0162bd929C83B4C6C792079",
      "txHash": "0xa6638d974e59ffb338bc5210bb641c740bd9afb801b3fdeb114a369b5088a160",
      "kind": "transparent"
    },
    {
      "address": "0xCE30f0cb350D57C3a0754EF39d374C7DF0B1BB2B",
      "txHash": "0x8d6f3280e0be08cadb9e38e6f88c8e134d626aec816b11818aee5e8d2f2cc555",
      "kind": "transparent"
    },
    {
      "address": "0xB497D9AeFc07B9d827F23fB04DaBD2514224bc4f",
      "txHash": "0xc2f03786591aeb910277462bd1e84794247aa2b87f832520d7bd8bec904d70ce",
      "kind": "transparent"
    },
    {
      "address": "0xcF2AdbCE8feb35b64741B5C7a4b6090BF6ec3Cd4",
      "txHash": "0x6eab147612d0f5fe6e22394db323c6956f350b0371bbd7e658fe7a2d7e0bcf71",
      "kind": "transparent"
    },
    {
      "address": "0xA1d32fF11979382F50A03686Ee0385C3FE40E259",
      "txHash": "0x37ff4c2c5320ea1c8c2f7af470451a5c4abb63a790830055f441c3a33cd21b01",
      "kind": "transparent"
    },
    {
      "address": "0x112e8909521fbAF31312F6772893F0DF71fe1c65",
      "txHash": "0xd73993ef8905b5721e047a2d7ee0b350b50f2fcd6999878909518543226da72d",
      "kind": "transparent"
    },
    {
      "address": "0x949A273F6ce1217ccCC4744505e789fcd6BB6B25",
      "txHash": "0xdc8d6181443328b53ac42f1922a7a1ca24d898dce9a27332df82850363239901",
      "kind": "transparent"
    },
    {
      "address": "0x3F8f7c691B1746776dD56030cEfCDC0304b6c4EF",
      "txHash": "0x642be5fb41b64f0439399e9686bb1683bb5ca4e268d02a07e947133f6a5936d9",
      "kind": "transparent"
    },
    {
      "address": "0x2E28e4563c96CB799A4D91316DF4f47AB364df9e",
      "txHash": "0x1438d7bbe4ca024a63c49ccf6c0223595b2a56203c268146bed14faee65c580b",
      "kind": "transparent"
    },
    {
      "address": "0xFE86D6e200dF58A4cf953e5E491F0790EB44b9d9",
      "txHash": "0xe10a5b7931362f010f2a6378cca93b5f22d48e6b33553179318b182895e6ef32",
      "kind": "transparent"
    },
    {
      "address": "0xA55C3E4aa32A04221677F247C458eD65A3632B1e",
      "txHash": "0xc39fc408a176549bc023c497d11ce19bbc006025bd139774e8aefa30d5402e87",
      "kind": "transparent"
    },
    {
      "address": "0x0b7aA6e2307B243c4C391B232Cf81Dc997490aD4",
      "txHash": "0xf9d892b1c5806d9589537df1dcf44bcd9cb977bf43767b91ec87836833d2752d",
      "kind": "transparent"
    },
    {
      "address": "0x05b5179face5C1A7118B38aA0f683520b24bFE24",
      "txHash": "0x12d593c83ea0c49e9bbdc409df0acba82557843cc27f3e55d19d9ac3c165fe8c",
      "kind": "transparent"
    },
    {
      "address": "0xc75FB6E8fcAADDC7B9039bD969616A460af14A06",
      "txHash": "0x4e17374e9a246eebcaf5c5bac1983b47b77dde98bf9b66fdba568b47c04c5b2c",
      "kind": "transparent"
    },
    {
      "address": "0x1f6B234CE2B7E94585FD9dd5054B5B3A660323bC",
      "txHash": "0x5e11ebb8d1dbd654975cdb564e376e881216ee96d06308d9a6a3fc94ef0b4d62",
      "kind": "transparent"
    },
    {
      "address": "0x4E588f47773fd079174e8384dBec1a0198982296",
      "txHash": "0x125755ef622e32996c8ead07ebc1b91cde70570fb44ae1a9984b07d3d7766536",
      "kind": "transparent"
    },
    {
      "address": "0xe306eF9607Da717A298064b516B701dbC46bA564",
      "txHash": "0x21a668296a7fdf33f248ec8144dcdd4ea8717bae1f78b8d1abfab2bc9da66fa2",
      "kind": "transparent"
    },
    {
      "address": "0x1d82719654ceF03Ce0EF9F2AB2D4208e7B512Aba",
      "txHash": "0xe854b2fcdec8b00474a3c48be79d0050883467d1c814d52605e6bed7710d3483",
      "kind": "transparent"
    },
    {
      "address": "0xbf5Ff9B79756A275AE296f83DdC386D80e49D3b2",
      "txHash": "0x75cc587a0afedcabcce7b8a7a07c341169adad06f7e260d24ac3fbb694c84b73",
      "kind": "transparent"
    },
    {
      "address": "0xaFA95B706f8B62893947E7f57A867a8eA73a9784",
      "txHash": "0x4331600d32e534274f896298c97fc34dd9778f3cff33ec4b554355a0c49a1bac",
      "kind": "transparent"
    },
    {
      "address": "0x4C2e0b67ceB3eaedF85D54D7BC4Ae4dc9cac55EE",
      "txHash": "0x41bc07703db4f611668f5f6d00dddb52ac598b130206a46c12ec790e15176863",
      "kind": "transparent"
    },
    {
      "address": "0x6d79c427aabb2FdD9d7368a9977eC49d7D4ABb31",
      "txHash": "0x420b372f3cd482d2ed455dbfcf44feaf31174dbd254a328767366fc65aa09ae7",
      "kind": "transparent"
    },
    {
      "address": "0x9d097907262C26c88C3a5caD4Bbb4cffF5E3A027",
      "txHash": "0x195ef2d4bac49bdd76df20a23f0c441511e865609c08dec7e166782a82387815",
      "kind": "transparent"
    },
    {
      "address": "0x123b1a3C1Cc9ECD66599c5aC4f2362d62634be04",
      "txHash": "0x9c0169d546fa4718ac61a48a20e0e2e4e7bd5c84787cf310a69c26a945627952",
      "kind": "transparent"
    },
    {
      "address": "0x1B167f4c2096e80A25188908d94553Fddd769B86",
      "txHash": "0x67f776dfd79c855063f7e08303d43bba23432ad010ec6001f99097ad695a0788",
      "kind": "transparent"
    },
    {
      "address": "0x7F58532Ee65BBE593f9588676bE16A463Ea892E3",
      "txHash": "0x238e533403cbf036bd10b5bd77be2dc514d15b22557a014ff1b4f1f4d6c027eb",
      "kind": "transparent"
    },
    {
      "address": "0x4164C585ab8F73cbA766C39961b4f65c50f9Db2B",
      "txHash": "0x3f3b6945430a0deda3e9d856c59a2c7f856e0df466136051c60af0bea7a481c2",
      "kind": "transparent"
    },
    {
      "address": "0x72283C7f092952E77E932dD122FA19D91Fd722D0",
      "txHash": "0x1998c12b69cfb57e327771ea42f056ff03fbbb7385401580e33b7a5e4af5a471",
      "kind": "transparent"
    },
    {
      "address": "0x474F459781E64Cc633f11e2acA77e755CdE00718",
      "txHash": "0x8e65cfe2655c07efccdccbc1062b699ba00507003403b319f7c682d840e1fcce",
      "kind": "transparent"
    },
    {
      "address": "0x84C976243aFDB5036B97C35cBcB8a4333F49e91D",
      "txHash": "0xd8c4e55cc0ca5394b847fb75045fd00b82ac8bf0452c7a63f790b50044ca1959",
      "kind": "transparent"
    },
    {
      "address": "0x3942d8ED8F015A67B60f4A74ae5e8B05Ed3f8EcE",
      "txHash": "0x2579c5fd4fc811dc91eb6877a1bd67afa09094443122a51e4f405c7d11c2ee2d",
      "kind": "transparent"
    },
    {
      "address": "0x4E9e6CDa04D914aC70BcbfC24479a229f81086eE",
      "txHash": "0xe6e9db0968683689c7f3ee16db8452f14fcfff32e2d6fe4b6e58a3c0ce83dcc5",
      "kind": "transparent"
    },
    {
      "address": "0x118C7b4b936203Be4F8936110071A9c6b0Ea8bDd",
      "txHash": "0x2f26fa3d2cbddc56b9d8fe38bfb295d2679408e33f21a00802b71f5173f05baa",
      "kind": "transparent"
    },
    {
      "address": "0xa584fD3160afcA6Daddf6247B84474EC8dC989F4",
      "txHash": "0x4555347206301ef2b9e1b0a43bbca16262af6341052955e34774bcff0ebfd365",
      "kind": "transparent"
    },
    {
      "address": "0x0CEaf1C8fc2E5298e201Bbb9da2315d0cE7dc5e5",
      "txHash": "0x0c226256ae7d9474290441b88a98ef61ec8b957e5af561fc003cc87fc7a345c5",
      "kind": "transparent"
    },
    {
      "address": "0xc77eC7caa8CEd6037E519A33CD380ee96D69d856",
      "txHash": "0xbc0b12ef5559115069ce7bd31ef4d7cfd26620348dcfb4ca3b0e38b36d82d14a",
      "kind": "transparent"
    },
    {
      "address": "0x985bB6C03c21AA20F16c0302fd62c28108fB4693",
      "txHash": "0x830845c3c168bec4f19fd75bc66682f9a2a4e8fd13a81f8917cee225e5742391",
      "kind": "transparent"
    },
    {
      "address": "0xbc9c8bC94FaD12e2F6CcCaA307c70E9Db41bC8Bf",
      "txHash": "0xb577f0a0e3ed074f629fb6ead7c22315a169001e30c81358a0c8afccc68c2742",
      "kind": "transparent"
    },
    {
      "address": "0xE715129f9863B481C5D3874C388e0BC65d9d607e",
      "txHash": "0xa9d96f398ff58a5da634fd45dd7530367977bc6657f58f4e3b8bf910e34e2056",
      "kind": "transparent"
    },
    {
      "address": "0x87DD1AF7327a10B957f8cdD2f1D870a63ee22547",
      "txHash": "0x63c77a90953a75c281267a710623de1aef3b36876ca344d584e27fa1b3a3b0f6",
      "kind": "transparent"
    },
    {
      "address": "0x023D91ae6fF0c00C3256a1bAD369A539Df0d1898",
      "txHash": "0xa13ab2d99f83bdddfa68fadc7538392e4381c232eb111cfc8192c5796820a101",
      "kind": "transparent"
    },
    {
      "address": "0x899A091175291883D73C43a607F37D7D5b689a9E",
      "txHash": "0xd51794c4d6e45090126ba1cc59a5b709c673eab81662ad5bbbea01f7d4e05c22",
      "kind": "transparent"
    },
    {
      "address": "0x9d2a263A1bBA5925C433eF595e037F627A82f41A",
      "txHash": "0x3d5412e5e0edc9028edcb66925b79daa082056a4158dbe4647700a624fa71535",
      "kind": "transparent"
    },
    {
      "address": "0x7A470E4a46C7Ccf59d2343F33276F5aBe1093818",
      "txHash": "0x25182bc90f06319cd7f6f34d42bf1ffe0bf30152b91e85e5c5156352ee495881",
      "kind": "transparent"
    },
    {
      "address": "0x6482EeeBc6b95Bac35324F4828130e9f92A9E60C",
      "txHash": "0xb4dc3c1bb474bd17db0fea0a2a21e9d6b9c277e988ec36bb4f10012af9a89253",
      "kind": "transparent"
    },
    {
      "address": "0xf4A1854bB3206f0d06292Ad8fD3bB84C15729485",
      "txHash": "0x723492dd91f5983e2c0061b9f28803cc8d9d3d401c3a17e86da11b59281527ef",
      "kind": "transparent"
    },
    {
      "address": "0xd698CFAA76af205742967e2EDe4906c773Fc2304",
      "txHash": "0x2cb0936aae2928b92f82eb03d3dcb94e70b9aeb2987fa1cdf243d2a9e8ecd019",
      "kind": "transparent"
    },
    {
      "address": "0xb57ebfC60252F0B429429DA88C751050CD076728",
      "txHash": "0x4a6815809d9d2240ca6fca8396b4d0feed2c7ce395f976ef250d8fed9baa035c",
      "kind": "transparent"
    },
    {
      "address": "0x998d9dCcae97478D7dED459C92184b4911ACb244",
      "txHash": "0x869f9e6dd77cdede5c130706fe84f43ee3800268a2fa08e6f675948b5c393e00",
      "kind": "transparent"
    },
    {
      "address": "0x6be924a917C99eA9DFc60ae2E95F47c73A4A903b",
      "txHash": "0xa00b24bb4a7ba2ba9f28c19473efec44109e79bd122892315424a811f389d5ce",
      "kind": "transparent"
    },
    {
      "address": "0x1Ff7c048587725B75e37d721aaac07599e041a3E",
      "txHash": "0x3b38b4eba04c4717f7fd07228bf46ac3242ab2c580ec14de8a52ac5bd978d3b8",
      "kind": "transparent"
    },
    {
      "address": "0x0Eadb434DA4c4403E68Af61B22F5c5CCf2603a28",
      "txHash": "0x29497f51ed5d1c3ffcd570489eae0373f7481ad3a60782ba2e56d85426ea25f3",
      "kind": "transparent"
    },
    {
      "address": "0x030cb532784256D70F23A479247f2b35274c04Cc",
      "txHash": "0x8d70f83adcf0e5b1e03734c9791d50606d9ddc0f06d1ea8e1c2857eef75ea123",
      "kind": "transparent"
    },
    {
      "address": "0x1C9e8E1443e9Ba6123C9a63b038BF2C324057FeD",
      "txHash": "0x1918da187a2c23a88ededa18d7ed0ba2ac6e9f32a58025b208fa143491074b2d",
      "kind": "transparent"
    },
    {
      "address": "0x387f3246CB7613F9e68F8831d31628e8B3534B99",
      "txHash": "0x784ef71b1a2a78a53241fe261ce1ed665ae2fdb5ae472139667b6facb0f2bc47",
      "kind": "transparent"
    },
    {
      "address": "0x1E851002C20feC5C881e5FeFC440e204E5AF2157",
      "txHash": "0x9c932b3c9ebfa52229b24f964e56daeb650ffec5223c549f7e9b9a26e1f4fc54",
      "kind": "transparent"
    },
    {
      "address": "0x5dE22704F795c20e530f2659cd906c6723e621D6",
      "txHash": "0xcd436710cad45a3971e8a2d721bb7912c2a53b97a41a9f2b978283b7dd7010ea",
      "kind": "transparent"
    },
    {
      "address": "0x0FEd9cA54b16964D3271674862Ce5865A0F4887F",
      "txHash": "0x2230d07861381e9eeaf260db05ab009a1750f52027b06ff188bdefb767dceab8",
      "kind": "transparent"
    },
    {
      "address": "0x4D27b00e54aA614d6162eE94fc349A7F43eB9256",
      "txHash": "0x377a6c5a786d53a1f23ebb23f77c599d8a76b6d1ff838af0bfff12aeb8174410",
      "kind": "transparent"
    },
    {
      "address": "0x9F52a608Fd5768bEf23F0596615a7C423660878a",
      "txHash": "0x3ca6ab93e6edb305b665e4596c8ca70497d02c2aedf1eda81cbc3be9e31f0916",
      "kind": "transparent"
    },
    {
      "address": "0xB4514a242c40F5774Ae17b29b1f00b894cF54ec4",
      "txHash": "0xd7bb73a18f612531b1ccdd4b721f812cfc7045a7a812b48ee4ec802d8be38081",
      "kind": "transparent"
    },
    {
      "address": "0x2f247ECD3F6841E16f9DE72705eD7C26Aa4C2AA6",
      "txHash": "0xae4f1c060ab1c23f0bc1eb76f079a2cde77238c4d951ad9eaae92809d09e2017",
      "kind": "transparent"
    },
    {
      "address": "0x9a56B7C3ca4148A330098EcBDC9B708b6d12d980",
      "txHash": "0xb9320a6066b46e9fd86e08d55a116c2d3a96ef57a6b661d85953d4900b26f61a",
      "kind": "transparent"
    },
    {
      "address": "0x8eDE95f53C7597aeEC919F110F133BC828b811b1",
      "txHash": "0xc3d21e7753e70558287abed55d8b78232af36825fe50fe70f82f10df8874d797",
      "kind": "transparent"
    },
    {
      "address": "0x2197134A528014Fd325f9e7Cf1699369a2f65449",
      "txHash": "0x7ff0f0797797e95e3b57bad874fefaf2de58d84df2da122ccd65a47421ac4d8f",
      "kind": "transparent"
    },
    {
      "address": "0xA62Da627548A0f1CC2832E77BB59c3ef8cb1e3fA",
      "txHash": "0xa8c628656a8eb49baa455199f6ada10c7cbc2e8c64933b31aadb523c1cd1d431",
      "kind": "transparent"
    },
    {
      "address": "0x3628e89C9C655d7FA422f81acfC4c86F4422A6FF",
      "txHash": "0xa8a040f5a3ae20475fb8aabc78f85062e7367e318899644b9bd5f62a02941540",
      "kind": "transparent"
    },
    {
      "address": "0xE6E68401A5ea716CE5A78520d1273F8aC0dcc4CC",
      "txHash": "0x0caf7cd15b707557976dc475670bd1caffa944f005fe7406d597d43c801af946",
      "kind": "transparent"
    },
    {
      "address": "0x995ef164b1efb1452b6ea17e854bf6bcE4Abb802",
      "txHash": "0x04f2df642cbb62d5d94e44ccee4631f27a1a018d970c606aa1ebf179924d01c7",
      "kind": "transparent"
    },
    {
      "address": "0x35797a366aF8C5D94894718Aa0B3F2DCeEa0d92E",
      "txHash": "0x38d2e3a083d7fbf4d71d18775e43d9f6637c263a1463dda59b5dc65dcd01b0c5",
      "kind": "transparent"
    },
    {
      "address": "0xE34d94f552baafd6eBE7010ffF1F1af0738fB7D3",
      "txHash": "0x33e93d360a6d75777d943f842b9e78971ecf812db4ff51fe0e8781a7f65178b7",
      "kind": "transparent"
    },
    {
      "address": "0x3970eD35724eB8924a6F45D265387FfFC20FE088",
      "txHash": "0x97b32f5848ad3036e25ca83a815cb14baa1cfcd748acf69b49d5776cbbae4acb",
      "kind": "transparent"
    },
    {
      "address": "0x5494b325Cbbb6C85A9a096C31981C45ed6826Cd3",
      "txHash": "0x80273d6e709ef491c1b32cef37779051ead66c35124aa8234f7671ce10121903",
      "kind": "transparent"
    },
    {
      "address": "0xDb3bAB4Bd461CF004b0a095C031D1444Bc56AD13",
      "txHash": "0xcea22ca2813b9778893c8ef7656c45e2a40f85357118f9da6e08969c8a27482d",
      "kind": "transparent"
    },
    {
      "address": "0xDCedDF50ed2E04e9b21f1AcD28e704B370d5A645",
      "txHash": "0xdc2e2c00a5be6150d25e72840dd671848b16d3144bb7b7345181c339d0e572e6",
      "kind": "transparent"
    },
    {
      "address": "0xF551519AA2e76603C4D064fDDF5Ff32735e94298",
      "txHash": "0x67bbea716e080333e1f499a0ec4a56f904e9ffab14d1af55e80d4b0172c21cc5",
      "kind": "transparent"
    },
    {
      "address": "0x770aB723Ab4f062292F252282FedA4520e5C944F",
      "txHash": "0xac754ef58e77a91c6454f34ed04a659ee14acafc125f640fcebadf8b5379376d",
      "kind": "transparent"
    },
    {
      "address": "0x0257ceaBCeef77A0feF4917736be0A6845dE134C",
      "txHash": "0xdbb6a4872a00b24b1efe7ffc8b538cd871cc70a58bc657196c79673abf958040",
      "kind": "transparent"
    },
    {
      "address": "0x8FFD87d766EEDB30105a9C7a3518e2B32Dbb3822",
      "txHash": "0xff57c66d9fa883694287eb720369be8800541f456b6dd8ca2c2c36abfe1023f1",
      "kind": "transparent"
    },
    {
      "address": "0x2f3Fb645ba6549723ae65Afb9b789D73AA5B1B4E",
      "txHash": "0x969e5a4161429e904db3d5f179666df259ff2c423b7f7de5418b195b270c81d5",
      "kind": "transparent"
    },
    {
      "address": "0x1e750E793262C7312C445a2BFC947dDa93f8d87f",
      "txHash": "0x7171df07dae5bac0dbd7bb0fd536fcf7bbef05f62c243130a6f0d23e3c0f8697",
      "kind": "transparent"
    },
    {
      "address": "0x5D3bba9E81E3561cde162BD596F660e2E360D541",
      "txHash": "0xadf4b7b4c546aedf830676fe81eb0968f8cdd1447c5d2adb8789bc86be896bec",
      "kind": "transparent"
    },
    {
      "address": "0xA1B3fB9162D44859B6A54987601F391F1d387e8e",
      "txHash": "0xfc09376c1da3098c3b61fbb11762c4c4eee49e0348dd4530d741a8af78f17b98",
      "kind": "transparent"
    },
    {
      "address": "0x47a198A24195832bC1e2413762183bdF3743c4c5",
      "txHash": "0xa290ce37f0859ee2deb77f5f56433e94fa1e1c36739ed3552595ff4218dff551",
      "kind": "transparent"
    },
    {
      "address": "0x2e67e7AdBB8Bdd03e36c9F4131b9ea0E5022DBD1",
      "txHash": "0x2d6b5019026dbb8f7c080692154243c02f81d61b52c6b5140cd74f6010647c0a",
      "kind": "transparent"
    },
    {
      "address": "0xb6Fb3571070981D09963C5234436B2ccC1535CA3",
      "txHash": "0xe95659a1cee2e33556481904692ce33a04bf3ebccbba635f5260bb0b47e0a59a",
      "kind": "transparent"
    },
    {
      "address": "0xA9F12122ee8c2E23A583904F9D2A83B3734Dd028",
      "txHash": "0x41b69177e0e98b24c2923650ffb809706817f1b1940cd12aad19c908052050fa",
      "kind": "transparent"
    },
    {
      "address": "0xbaFcD9f20E35dCc2840C4872c37523724aD9fD19",
      "txHash": "0x7fdee261bcd9fe1ff12a74bdd401e342a887742ff59c5d76ffa82881d5176b16",
      "kind": "transparent"
    },
    {
      "address": "0x273f20fd9704bAf01d006a0246a99248C4fd5dD9",
      "txHash": "0x8664cb0a401acf2f9f04948b290f46c0accc141859570ab57725bfff7253acd5",
      "kind": "transparent"
    },
    {
      "address": "0x04adA07508b5176f74E567456fF30a49F4CE7B10",
      "txHash": "0xfc5ac3f245165e195041833c4790059d0a7be3c5d94b593a655de39092ca7edb",
      "kind": "transparent"
    },
    {
      "address": "0xc28F3d9433Fd4fb9b87522dFA34e50f7D86fD842",
      "txHash": "0x76f419351b5eb504beea3d18eb1828d2d45194827d6d4b59a51f29c0039fa3ff",
      "kind": "transparent"
    },
    {
      "address": "0xBCD2c575375f836c0eea339D429406De0C6Fa618",
      "txHash": "0x773547e7161b541f1759f46fcacde88d7be821e6c5d3f251a03597f71a493f29",
      "kind": "transparent"
    },
    {
      "address": "0x25EBf13BEd1b618213cCf70E17dE74dFD2735805",
      "txHash": "0x39a83b51f9cde797b56394cb19984d5e6d434d2451ba9de26319db62afb1945b",
      "kind": "transparent"
    },
    {
      "address": "0xD110de1E30d768BEdC8D3ba12E341923945A66aA",
      "txHash": "0x62c285317962e06afbd0eff103502aa50251fe7bb7d471821bbccd5e7a7bd431",
      "kind": "transparent"
    },
    {
      "address": "0x287dd73A3Ff92c3e4c83466C63D6c7975C941736",
      "txHash": "0xd8f9adf0e5b5d1f575d51e84a5959c788700898241eec04142af5449ada7880e",
      "kind": "transparent"
    },
    {
      "address": "0x27BB742f725Dc444c878D1b2a6Cb119Ba224DA80",
      "txHash": "0x473a04ec0b2edec1f1938a75aa0e41731efd5ba66508b371679c7dc959dc9ef2",
      "kind": "transparent"
    },
    {
      "address": "0x54cE218Da1b8856229649665d19D17854769401D",
      "txHash": "0x866787037834f168c0c0d120f589995d5ed2dab06cc97a9cc1bf6a55d3dde5c5",
      "kind": "transparent"
    },
    {
      "address": "0x85f3Fb92591de20D37D477874c73c04B758A418E",
      "txHash": "0xfd55adc8044ff5cf10503ee71e514c2710d102c46a1b384ecafa387216bedce4",
      "kind": "transparent"
    },
    {
      "address": "0x62cD27db1Cc60B54ac63611C4D9375934c7a90C9",
      "txHash": "0x61de801d52905de5366694496efa62265364efc999486690c2b723bb7c006735",
      "kind": "transparent"
    },
    {
      "address": "0xe78bA7778b4104c54b33dB8F3B8776b1dA75fBa0",
      "txHash": "0x9e741a3f81b75c529881b696a2fad180cea7dc66ce0ccf91c686b94ad1e1efb8",
      "kind": "transparent"
    },
    {
      "address": "0xe6f3F0B296aDB7506f457525B44320D8DC31c889",
      "txHash": "0x9e6e722e478296ca3ab97f286082887d6ede9e4d660d185be74259b417c5042b",
      "kind": "transparent"
    },
    {
      "address": "0x83A52515Eb6acd37909b60953165F64943E79ab6",
      "txHash": "0x8416c5650278203bb66ae37751b838c31f0cf89bad7642d04ae501d3a6f7efe0",
      "kind": "transparent"
    },
    {
      "address": "0xF3003774f4805f70378F942FC2F0Eb3Bd630523e",
      "txHash": "0xf16a95cc8ff1af6b9127e66837f626460255d271e6f91e8dd078380d65517638",
      "kind": "transparent"
    },
    {
      "address": "0x4Ce58A5069C860d7B52D530F435178C075090bdd",
      "txHash": "0xba3a626931b9cd4ac064484d9890c53bed4d182d942cf62ac602a1ef42d79fd8",
      "kind": "transparent"
    },
    {
      "address": "0x115057E310c5FDa6ed8545384Ac52Ed19611987d",
      "txHash": "0x3f0331e8b3a35d6b230f567ded1c84a7ea5705d83ed89273dbd48819786ca1a0",
      "kind": "transparent"
    },
    {
      "address": "0x127129066fdFA97E6B2c3F98fcF644A56Ef54C06",
      "txHash": "0x6e46976907c7c8f24676adad3c18c6d28586bc3cd5c38cbb71e0b44284625738",
      "kind": "transparent"
    },
    {
      "address": "0x0f67796F83aa3bFa518d3FAB1037578dc39Ef5f6",
      "txHash": "0x454817b83152dc8d804058cf49ea8b3b096d65969ffb3f17442c9098b8c2b53b",
      "kind": "transparent"
    },
    {
      "address": "0xA41Ada78E2Eff8C4b24b96C8466D1f349Ce4EdfB",
      "txHash": "0x1521068f4895f9fbb89161474130212c659ba3789a46b036b19c85e79a80fa11",
      "kind": "transparent"
    },
    {
      "address": "0x7A08dc6DF74Fa04bC78d0b813e313d0c34c873cc",
      "txHash": "0x2563945cc056b4c6e3117ae6840277cd61e2aad14e8d85b6d07485f8c475637b",
      "kind": "transparent"
    },
    {
      "address": "0xF6Fcf9756629F4F32107b0bDA9982783Da35c870",
      "txHash": "0xbda33014f85673349e4a716d81331f4fc66b68a01cdcbb90d0573ed58a6fec8e",
      "kind": "transparent"
    },
    {
      "address": "0xD85615392601F3660138EbCE0b53cDD9F0b5668F",
      "txHash": "0xda93ee1e1bbb53b0aa844702aaefadec272cb5a2f0754d422f158c4c5ed07c01",
      "kind": "transparent"
    },
    {
      "address": "0x1A3fE2f56e10B4ac25c57cEAC00A37785D588176",
      "txHash": "0x0b4b9927e60fe39b55a1d10bb057216a8d991914a2ab3b870e993100adabee72",
      "kind": "transparent"
    },
    {
      "address": "0x16C5E6859F79cBD7Ed6dA3f17Aba5eeFDBcE0b00",
      "txHash": "0x09ef6a83957f23325a37468ccdb39b8463fabfd4dc18e7a763585d91af3aa4cf",
      "kind": "transparent"
    },
    {
      "address": "0x19f85Aa92Cc6325A6bA8332973Aa67C3Bd70015B",
      "txHash": "0x1e7f4feff43bb75f5de1900c12a601ecd45b9ab83500b07eb4700b52ff9d1c6a",
      "kind": "transparent"
    },
    {
      "address": "0xE24B98A340a3BF80d97652cBAA0A20D81984e30c",
      "txHash": "0x97b6fce03fccaf7503002821180d1b2167311c4778e15a5621786c9564a2ca3e",
      "kind": "transparent"
    },
    {
      "address": "0x2B0133030c33Af7a36b819045D77b0Ac10a3E957",
      "txHash": "0xcb2c0c4c44fa77dfdbd39bd63fc35d69b7408de9087ef421ade170d777071a3e",
      "kind": "transparent"
    },
    {
      "address": "0x3172E30EDC8a1ACB6E7561eebE0e52EADB1c4E78",
      "txHash": "0x3f0a3e5df7396cbe24311f0658666f9f6abc9583d6c7a5059fb86637c48f3037",
      "kind": "transparent"
    },
    {
      "address": "0x2544C834058e54C1418F3723a3e08CAdb33fd038",
      "txHash": "0x6c7b19fa197b630a36696700842ee57e07b10a0f7ce4bc7ff3a24a8a57d483ab",
      "kind": "transparent"
    },
    {
      "address": "0x93469B9c70983c253Cba6304cb7893843E49B653",
      "txHash": "0xab12d0c45955aaaaa9106e8833a5e43846029721b4a3597b9b9ba93ff8fd6ddc",
      "kind": "transparent"
    },
    {
      "address": "0x5E9817c2Ff3249b6aF622913C10b22Fe00950fc6",
      "txHash": "0x500de03c1333675c2d82a25534d62f0ee8cf053956098939d38f3ea44ded5981",
      "kind": "transparent"
    },
    {
      "address": "0x5A0c3Ba75744bC5a29d5cE21BDb3BFD527fDB61f",
      "txHash": "0xd7db7006e2b2f79e03d71e6465887dc26f9dff285cdc4fc0835ea4662b76fac4",
      "kind": "transparent"
    },
    {
      "address": "0x42Abec245262eb58d0b361e24bF95ec138c64011",
      "txHash": "0x1433f8e5ba82fc318a4829a9773f0e3c7a858efa1ccdfe12a92b4b5d65bd4478",
      "kind": "transparent"
    },
    {
      "address": "0x088416a9cADDaD4812E21EFd7069752AAEa7E6a6",
      "txHash": "0xcfaea3684d740a613a84d157fac8040b232a6f9e65aced0a3709f30b9aad3e05",
      "kind": "transparent"
    },
    {
      "address": "0x6D0c5175B3c5dc97C02bDcD1448B5E2B8ddD21Cd",
      "txHash": "0x4f1822bd00556367682ef28651b586619264ef9f2b55b1aa36d4ff4ff9bc5a3c",
      "kind": "transparent"
    },
    {
      "address": "0x89b2E13ba58e232E740683d8974Ed818c6853842",
      "txHash": "0x2a7d12f83ea76461ae38ac7b3d5fc85fb35330901e4b1fec9492aaf97f4cbb86",
      "kind": "transparent"
    },
    {
      "address": "0xC2Cc207cB248B42814fB3AC841e55723F2E2AcF1",
      "txHash": "0xe11896154f86814d3e96f88e8fe000a2aafdef853ac740cedb5c46ff731036ab",
      "kind": "transparent"
    },
    {
      "address": "0xfd243Eec3D5eCf78b3D614877a6800878865842c",
      "txHash": "0x7a1075ee862b7a0fc17780767f3407287ebcc0fa2a285565578feaf31df73851",
      "kind": "transparent"
    },
    {
      "address": "0x25eA967Ff5605Ec48557D2C83e760052565E4b06",
      "txHash": "0x5eae2f60e7b6af26b26db137c7851fc1ee34b01cc157201cc467ace486c7dfca",
      "kind": "transparent"
    },
    {
      "address": "0x16e63731841B75f49e11E30E40fA2F6481c2351c",
      "txHash": "0x493346553331ecfce33a96d04ccc8336d83c960fef0e50f56bf95ef10c762acb",
      "kind": "transparent"
    },
    {
      "address": "0x40C164666Dba334A98a5B10A8c0c9ad923F22b26",
      "txHash": "0x2a8f625ed42aaa05812d3bb134b483784a5d23cb2e931c9eb749816b927ff625",
      "kind": "transparent"
    },
    {
      "address": "0x8907c560A899A6796491478E6206Ef6d43c036BD",
      "txHash": "0xd860a2497a75ca4b3228b67889280401a2a122d8e535813d1e1c1736aa183cd2",
      "kind": "transparent"
    },
    {
      "address": "0x085511bf0dDe004af0AB387D48046f35B93cF31C",
      "txHash": "0xf858f7c00ca016dfb5ac5e23dbe8c28944c6d53c6647fc42089874a07ed25d3f",
      "kind": "transparent"
    },
    {
      "address": "0xD5841Ba29eF6eaa316CeBDbacb05c6Cc2b449caD",
      "txHash": "0x39b01d5963b48f86627ae84f4a43a9d898b09852cafa7e75c0b3429562636c43",
      "kind": "transparent"
    },
    {
      "address": "0xF64E2e767f3F6e237bc466ec15EF5F5D74538070",
      "txHash": "0x10a4200eab6247af7bc97ad9fe5f180f8e784f63646c4a2ec566f7bb2a43037c",
      "kind": "transparent"
    },
    {
      "address": "0x2159E0Ab307184a75dEa6F408E63991b9D86AF49",
      "txHash": "0x9b3672257283df40ec6b2bbf48b32a157fbe80e77e52312eef684b52759fa226",
      "kind": "transparent"
    },
    {
      "address": "0xb6EF5a4f4E25Fca4ead6b970469638378f4654B1",
      "txHash": "0x8282feb0f278cd257424a70e780668fade4de5ed06c97c4e3d302ebfa67661c4",
      "kind": "transparent"
    },
    {
      "address": "0x361810EC2ae9615D85ad24F4664ecD342fEaD3de",
      "txHash": "0xcfd3cb197bd2e5b403cf79b3ebf2d3b1ec7d31194f45afdb6f7fdb504f7dd718",
      "kind": "transparent"
    },
    {
      "address": "0x817755cf94Ff7591430c58f2b6604C2933D5F1fc",
      "txHash": "0xc4f8a5b2411f4c0fdad840b22be24e05ce358afc7d8ae1b36d86623773f484d1",
      "kind": "transparent"
    },
    {
      "address": "0x9c4532Fea646e69893B5d30583a092E006bee136",
      "txHash": "0xfdd41bbbe67d5aa1d9dd813e34f4cb0d656c452ac3a9756d5c08cfaa0d3b2339",
      "kind": "transparent"
    },
    {
      "address": "0xaf9A83DDD9BE300Fb3F38103c114A91A2f74E66b",
      "txHash": "0xedc295c0bdb381aacb3d8229e24b8d52b8fa2a44e7ccf9f7c47e33e4974967df",
      "kind": "transparent"
    },
    {
      "address": "0x676eFe407DA6C0AA0d7783e00Cdd209Be630A1e2",
      "txHash": "0xe56fa70048e56cb94d4f020e6078955ddb5fb8c1bbd1c9cd06a926371ca5f143",
      "kind": "transparent"
    },
    {
      "address": "0xE45da7aDa1a8D29811D13d53ff421D9139e8FcE6",
      "txHash": "0x9fefe08acb114d3b04614f9b72aa215a463004f8c5d2fcaacdd01137daa7fa7f",
      "kind": "transparent"
    },
    {
      "address": "0x9c957c57FFE7916Fd1FdC139F1a24183167288DA",
      "txHash": "0x6e363dfb96e1086cb63ffd90beaa33846222a3a4630fcc4cd6d97e05495c4337",
      "kind": "transparent"
    },
    {
      "address": "0x309BFaDc60D6Ad8bC168B2800F09fEA89219Eddf",
      "txHash": "0x9499d0b6d81e0881416aa75090d1aa216c283179013c6b95e5ffdcdf78611fa0",
      "kind": "transparent"
    },
    {
      "address": "0x15D85Daeb53dfc19332bF9dA68613323Adc8a7Ce",
      "txHash": "0x5e2773e6d5deab2f4ee48c1c368cbb13248a3c6e26fdcccc85008f26bf899847",
      "kind": "transparent"
    },
    {
      "address": "0xAE46ceF3D07A8EbFA63aeC4f6AE2f99B54718213",
      "txHash": "0x969412dd1dc12ed9c5dc4846f7dcd9c2fac654470accedb90947038b06460907",
      "kind": "transparent"
    },
    {
      "address": "0x2230aA0a3aa74002D9FE129D156D6722A7749Df5",
      "txHash": "0x0fd1c066ac198f2ab197098a81d1a7e614a325c68461a026aeccd3ac09b84571",
      "kind": "transparent"
    },
    {
      "address": "0x1a17f5aF96028363A6a2695396f30d06C8F6c988",
      "txHash": "0xdb2461ec545b38ac58d654d4a21b6937862cbf72d25a3650ccab1295b84981c7",
      "kind": "transparent"
    },
    {
      "address": "0x790FDdC56393cB3C4eBbaDC8CC14CDFcE0c7ae2e",
      "txHash": "0x9b2ab927e9d37fe8bea8e6aea659ae595b4db3378bcea8c71d0651086889035a",
      "kind": "transparent"
    },
    {
      "address": "0x4CbAAB969bA2b77dB4cA92f082664Ed57aFDe26b",
      "txHash": "0x6676f686e46f05fcd72a7022dd80ac1e085c72ade1a687a44df9c9ce061be90e",
      "kind": "transparent"
    },
    {
      "address": "0xCeb7A1Aa0a128449D52ab6eec537EAC453b68F1A",
      "txHash": "0xb81dca7aff80d26bf0a6d64176da95dedde5aebea6effd526305536d494aa434",
      "kind": "transparent"
    },
    {
      "address": "0x7222B7da8A432468cc2E1d891b897c2FC791E4f1",
      "txHash": "0x01ea8a478147ee21434492386b0f38405f5ebeaf5bdb212e2310591454189d22",
      "kind": "transparent"
    },
    {
      "address": "0x65fD98260eA78753c335dF35C13d716bf84179fF",
      "txHash": "0x9b0ce155f327987bdd9f77eee7fffb9e036295a43b03d7e304704ded892b546d",
      "kind": "transparent"
    },
    {
      "address": "0xd7bAb445F0cD005f0c5D0df5E691aeD22608bFb9",
      "txHash": "0x344d0015df99661f6a7637f63af87f3c21b7b790c8d717dd647b39c08d907267",
      "kind": "transparent"
    },
    {
      "address": "0x4a9A32795400a72b112082DceE43266E601C0605",
      "txHash": "0xf7c2b56fc121724aeafcce17e8d2ce640880c7c9650ba102f459ca52cbe7dd38",
      "kind": "transparent"
    },
    {
      "address": "0xDB6Fc67080228b4b653f5FCf5752e352FC26C397",
      "txHash": "0x03f1bc25f9392b2dc5a4a04c8dce89fcb69f67fb571ecc9284d75b727469694a",
      "kind": "transparent"
    },
    {
      "address": "0x57B00689c88Db2307D9372B38CFAb0737e730467",
      "txHash": "0x34987252a6102c080bbf0040f1c9551a0d14aa11e139b8135b00cc55a5b8bf18",
      "kind": "transparent"
    },
    {
      "address": "0x700f67d55d41DeF48eF410a5F894F7d43f5F29Be",
      "txHash": "0x87a26b1ac2e934e5db1c6ab846a128906f462f631330ea69a31b46aab4e35c00",
      "kind": "transparent"
    },
    {
      "address": "0x67FF9C20d92Da069444E2C9661B274460C62211D",
      "txHash": "0x1b37c951bc76124bac255f3ff2e52ac49ef72460cd4a2606f6ce4908317a0fdf",
      "kind": "transparent"
    },
    {
      "address": "0xC8791aB955e9329d3EA3c5ed49AD2EA5675D98D7",
      "txHash": "0xb9c12a0a330d5b1356de951261c74d98dca1b306ec05c1e90cc60a09b848449e",
      "kind": "transparent"
    },
    {
      "address": "0x0D1d9387c512E36eeCA51D296E133493Db1272Ad",
      "txHash": "0x29bc5dd18ee8239f43b86e3a003734686609a3931a5f6f42a59e4b6e515664e1",
      "kind": "transparent"
    },
    {
      "address": "0x1A34979A1CDdC988614Dc2Aecb149418Bb47ac8A",
      "txHash": "0x58145763663a1b0c02e1aa9d9036f27c735873a5ff6ca48329c5b279d8628147",
      "kind": "transparent"
    },
    {
      "address": "0x23F2C94B44f83842A4e9B406Ee2abC1b27A86c8B",
      "txHash": "0xe010443205138ac9441210f395bcfdb445de9bd321b8bd213ebf40520a4c30e4",
      "kind": "transparent"
    },
    {
      "address": "0x3fe091fB52A30D16Ad7ee9aF6E3b4616941ACCF1",
      "txHash": "0xcfba9e7c9e8ea8f6dcbdfd62f8da37e671c493300525e88347ec0b6366377ed6",
      "kind": "transparent"
    },
    {
      "address": "0x96f29bEA4DB8678e1f4b2F4f3aea4C7091f99B61",
      "txHash": "0x3dfa7bbfc2beae0beb593e8cec87cf8ebd6abf44c83c292903367371b7f62a25",
      "kind": "transparent"
    },
    {
      "address": "0x9087E6E5bC514547e994a9A05BEdB873E15023eb",
      "txHash": "0x770c53b9fee4ab9b1c6b8df1772b7aa6f103c99a2d7efda445d52677526e9f7c",
      "kind": "transparent"
    },
    {
      "address": "0x0ADb450910b3aF3EBdA8eE66B76FE0A74DD10Cf7",
      "txHash": "0x79b4023a8ca5b5738488cd2e860d41569125101b72d9687c7b1e701b8320e91b",
      "kind": "transparent"
    },
    {
      "address": "0xcc33E1F3F8949845fdBC875B0E0b80CE904E0e63",
      "txHash": "0x4bbd2ebbc8293047a0a9eca13480a066c7a7322600e794f12ebe8cfcfd174fdb",
      "kind": "transparent"
    },
    {
      "address": "0xE4edf27f6475693DcE4FBc0795aF48bf1A1bB59B",
      "txHash": "0x9105856186a1ba69e4b08d50c99212029c7317b1b0b9b67c6bf05f503097791f",
      "kind": "transparent"
    },
    {
      "address": "0x09E547f005344697717908955037A0F0b82078c5",
      "txHash": "0xd5560ee4c87a013853560a53928e0bb807a77ac5bf43ecc32a71792bd5d8a56d",
      "kind": "transparent"
    },
    {
      "address": "0x42fb68D01c59923248E618F263080788120e443f",
      "txHash": "0x5d7d4f95bad6b7b172763ee98436656dfae75bcc8fe0901232f759a16caec54e",
      "kind": "transparent"
    },
    {
      "address": "0x3aF8B77a04C011b1a3F5Befa27c15b3d7663c8d4",
      "txHash": "0x23850c9307be1d820fee93adf8e1a2ac34a29b1a985cdf7d348af3fe084133d7",
      "kind": "transparent"
    },
    {
      "address": "0x3703413483731d42d7075CF4213BF4D95994957e",
      "txHash": "0x43b23dfd80a0fa7fd767b0693beb12b35d9685ac883c3e8bd9f4b7cf71fd0ebe",
      "kind": "transparent"
    },
    {
      "address": "0x82d493c7a48b436eaB9A8cB84113A12Dc6463793",
      "txHash": "0x7fbc3fef9d558337218efeba97a673015a1fbc315f3dcdbd8d31929c61e4e9c2",
      "kind": "transparent"
    },
    {
      "address": "0xaaA3c14AF96b03d3af22cc4C38ECE4Da8bc144ca",
      "txHash": "0x4e48817f362cb7bb5d4adc7876995ac9b9c827f1016610b52f5f8d2dc5755e6a",
      "kind": "transparent"
    },
    {
      "address": "0xC3dAEa1721DCa493610278292faDE16Cd81F6082",
      "txHash": "0x52dbe19d48d8270735e12a96506fde852bb076a6267c61d7de4d442ecd7c7765",
      "kind": "transparent"
    },
    {
      "address": "0x83682ada8a5613090e563BC0E0afDC3882aD95AA",
      "txHash": "0x316fe175eaa7039638d5136cba21ae0cdb27ff61f120bae3b6b3dc89cd27481d",
      "kind": "transparent"
    },
    {
      "address": "0x24dca587791d1733b672D8D8B0C0A4C1fC9F17D8",
      "txHash": "0x7b56ef267f8e803b95c1915344bbe87f796e98004fd441defcabb9cd8e43fbb3",
      "kind": "transparent"
    },
    {
      "address": "0x857CF8F8F195921acE372cDf2f7CAf671cD37671",
      "txHash": "0x055490cea35d38bfce619840d510e0c745fc873ca750eaa3cfc46dcb20b2bd62",
      "kind": "transparent"
    },
    {
      "address": "0xD897AE4C2094575A6722Ab65477e0a5587F883D8",
      "txHash": "0x85ab34e6d9c33da3a7a6fdd5858b42400ff0f57a87a776296ac334d9d08565da",
      "kind": "transparent"
    },
    {
      "address": "0xBDfB76BAD58712A5222cAe36d0aEdAE9F8B02743",
      "txHash": "0xd6889b0a1f5663b89338e0fa8b247556334c006305caa87fe09cdf5f9a9a4f83",
      "kind": "transparent"
    },
    {
      "address": "0x46FFbf23C4F796645994221AA7D32feF15808ddB",
      "txHash": "0xe8f835a6a475fa914bbea78d0212ce07d4d7623944b7d93fd1ce9c01eec070f3",
      "kind": "transparent"
    },
    {
      "address": "0xAFAF0EF0cB33f2A9091Ed4D555468df70Addbee5",
      "txHash": "0xc2435bf3f776a3ffd1b75356200f9f1a2c4c2b6a1af819c7855d68f81b95ac29",
      "kind": "transparent"
    },
    {
      "address": "0x9241c94853dc8a3b876E3CF46400772a1486f758",
      "txHash": "0x0de13960ef550cc2c6161740d70b6d385b53b2cb60d786734e305c9cd112bf65",
      "kind": "transparent"
    },
    {
      "address": "0x5D27B9b2db6ff85ab215EE65DAb45C41208840dA",
      "txHash": "0x3001a6dda663a4eab8b5c14eb7a24a4191e73a1c6ebb8d9ff71f4ccef939a268",
      "kind": "transparent"
    },
    {
      "address": "0x345cde7b7ccED85983b32406100D6fdb37A7c01E",
      "txHash": "0x1c07261a9bb4ce0af9acfe77403163fc9cefb837a2c0907cfa2413a6d061cb7f",
      "kind": "transparent"
    },
    {
      "address": "0xfaC20ffB6c04C9ec4485f70f9915ceAc4d727785",
      "txHash": "0xbe54ee678e3efd54ccbbde087ec018375f3315bbb35d8a98b63afaf91fc9d083",
      "kind": "transparent"
    },
    {
      "address": "0x3B7808169B951ca05D5D4423F71b0BC17dC03dcD",
      "txHash": "0x745eda86da2dfc0a9984df1e316457a1d5c1b69d8de4e2c500aa6bc711041f5b",
      "kind": "transparent"
    },
    {
      "address": "0x9f552A33B5899914366cc12eF012F6C02ca62e24",
      "txHash": "0x69ad1fd7613f3cddcab1abbbccbbe29919f45a6d55eee2da06461a333e6f543d",
      "kind": "transparent"
    },
    {
      "address": "0x1fCAD35c6Bdfbd8aBddd534FF84D3F5c2Eb4Ab04",
      "txHash": "0x2c733aa9dfe0c0ccfc4efcae468509bff15ecfadff305073a0af99adb399c8e4",
      "kind": "transparent"
    },
    {
      "address": "0xEF73C0e60B4Dd1B33a4Cb1440625bC671890B9bc",
      "txHash": "0x55ac623d98a453446d0ffd40b55174497aadb78e6c7cd5647b072ac23f314d88",
      "kind": "transparent"
    },
    {
      "address": "0xe266d30715039847E2D3F842CDe732E31b6E8188",
      "txHash": "0x5b820ceb691898bedc184aaf4dbcb61ec2bfa72ad63385858e9ece4f1a2d9534",
      "kind": "transparent"
    },
    {
      "address": "0xd225F00aC56dd26D4F4E1dca1dd5424Fd2C29253",
      "txHash": "0xdee453c86e77685be4b02a3a79b86cc3fc40f736c3e6370fedc7d9c68043e9f2",
      "kind": "transparent"
    },
    {
      "address": "0x680417Aa91457c7290205c77debD8EBE6Db8b003",
      "txHash": "0xb524b2d2c682cb52a7a9f2c84fba550c6a302c9155db9d5324cb51884a02493d",
      "kind": "transparent"
    },
    {
      "address": "0x42a27D21421cEC8dAf1D168F00128e169348594a",
      "txHash": "0x07fdfa54600fd6a4dde4fb0a8a79a024c60912bebc93788045435e1b178f5a92",
      "kind": "transparent"
    },
    {
      "address": "0x946b64E2417Db1370Ddd5E2b2A2D07Ff6260Af9f",
      "txHash": "0xd2dafea77866dab030abbb9e8af2ffa63f237b1e711f0960abd74ea165b1212d",
      "kind": "transparent"
    },
    {
      "address": "0x7d6eC45FB26bDF3f6d4594AC2a0E6d23B81EA9cC",
      "txHash": "0x4964bb2a228dd27fc7dc1d12ccb5191daaad95262275b010724eebdc05f4483a",
      "kind": "transparent"
    },
    {
      "address": "0x3B78B0Ae5C80ac7E7d58eA9dc7574853b9163a16",
      "txHash": "0x75ae11b8676a7e8e28a0f399d70abcac184f9b79872fcd60495f81a2cfb3231e",
      "kind": "transparent"
    },
    {
      "address": "0x40842B37b518b42FE996d3Fc11Dd2b222dA85a85",
      "txHash": "0xcbddb4e4b0a2bb17c0508b76f5277b29a241c90f681a317ebf35c548d85ea9bb",
      "kind": "transparent"
    },
    {
      "address": "0x8DD13C6787E4c863C46BE4004E4E29FC5A0eBA46",
      "txHash": "0xb0eb1908d3fa74d9db9cf218e28e06733edcb6e2ee40edce071f2a6d46b14f46",
      "kind": "transparent"
    },
    {
      "address": "0xbEa31Cd8af48643d06deE783f65CBD5461A02a68",
      "txHash": "0xcbc62a5cd7e068639e3e2bd354fada31f99cfe9346129196e4c20e5bb0e2669a",
      "kind": "transparent"
    },
    {
      "address": "0xae497696a03Ff642b31c67D724BD8a5D70D2DC4f",
      "txHash": "0xe24edf9abdfb60c9e6c01cc6b071d3642351f2a3314f9aba29c78288b8efb14f",
      "kind": "transparent"
    },
    {
      "address": "0xec82260e3ED160Fd60DA0859c561e8F81e65aA7D",
      "txHash": "0xefb2bfb015dc746d4893f65c57b7d07d2035c283ced46df40cc1e818edbcaa24",
      "kind": "transparent"
    },
    {
      "address": "0xcb4C3B49365063FD01bb1E656f3a3011e6277F0b",
      "txHash": "0x547254cb9c0246354e610dbc86fc23fc577e7ae896c954f8055ec7bce7abeae0",
      "kind": "transparent"
    },
    {
      "address": "0x91a6f130d1A3365708349542cFecb04a1EEb9960",
      "txHash": "0x23a885e66167bb4194a15475f55bd985e9f4b43403c47c066fadda38e369de1f",
      "kind": "transparent"
    },
    {
      "address": "0x531c62B6E8EEC625ee052B57404B476D9bb5b584",
      "txHash": "0x0d35293312f10ca6d1b08a7a68a45d8d119eb68c6009bed7d626dfe392c262b4",
      "kind": "transparent"
    },
    {
      "address": "0xf83cCC34E8f7b8Bad39CC4F2B980a851d52aC7aE",
      "txHash": "0xe45585f222011d9040b37d2fffa6f83f33958ef5b97686a1eafd49797e64219b",
      "kind": "transparent"
    },
    {
      "address": "0x0103f1fB6C403acD18221BA9AF985Dc072DFAd7F",
      "txHash": "0x2533faa3fb783bfc06f4c67bf8e113364d2d77971626444397068984a20660bc",
      "kind": "transparent"
    },
    {
      "address": "0xBb731f98B7e4a6D54aeb93c323Af470F6a954aC6",
      "txHash": "0x116ad8d85ea437c64940d88d48c66b0b562f5fe1719b790bf21ecf4f26db121d",
      "kind": "transparent"
    },
    {
      "address": "0x372024109145A2d4713e594DF2eb272f21720fE9",
      "txHash": "0x2f8fe46e4d9fea5e7eac10656ca76b8f4ed5ff0a6b31af1229db78a666a5ae9d",
      "kind": "transparent"
    },
    {
      "address": "0xcB6528DB2Ad8d099A5269017D47EBDFE28A22329",
      "txHash": "0x62beda5d18d98b3488a1d710b6bf4f0423927c2ef9b815e27b894fa4463528d5",
      "kind": "transparent"
    },
    {
      "address": "0xa51B6f8B5A419c7E10CdCcDE7B753475C8FE9bC6",
      "txHash": "0x497e320011f514091f2680b7eba46acd0aa412b9cfbcb746ee90b357f6de4f05",
      "kind": "transparent"
    },
    {
      "address": "0xc2942067091120dc9961a253561322bC7342279B",
      "txHash": "0xa40dfd23ba675b83808395c7ac1b2db2d6a919fa25a6d38625be921814c51b37",
      "kind": "transparent"
    },
    {
      "address": "0xb278ac6FC087962E0FD61c3db57D3040F10AcC7E",
      "txHash": "0x83a5c4d664c8ed327b302e692219887290380f84dccdc2619dea918dcf0f5a8e",
      "kind": "transparent"
    },
    {
      "address": "0x7619082c32d8C673dA1eC5A97fC71F9Eea9Fec69",
      "txHash": "0x04be9c46dd1c74c7e18623293620a8a9eb8dc4772ad05832acad183033b73184",
      "kind": "transparent"
    },
    {
      "address": "0x6630e8b6cA0D3661af57d831FE3C19DeD9B2aa1C",
      "txHash": "0x4bacdfe2c545519b1a911b1bcedd3cf342bb9703b2a185b03b188517ce994142",
      "kind": "transparent"
    },
    {
      "address": "0xD9ee294b5c1F6Fc040404Cd3922B995d4429C212",
      "txHash": "0x570a9086f3c72c81d8b315718fe69da35736db404efe654ce1dd607cb4b994c4",
      "kind": "transparent"
    },
    {
      "address": "0x6bc8512985306CBe569617e99c9Cb7a70d417564",
      "txHash": "0xc009f1307580e386d849e9a81b7d368b749c7f21d251ed0f2d3e9605b5ecac76",
      "kind": "transparent"
    },
    {
      "address": "0x53Ad0851c5ECbb52ef51813117c72A6eC0DC8955",
      "txHash": "0x4b7dcbd642ac799bbc1e44439755d15baa6cd7665935e70dd8a2c3771d2d15f5",
      "kind": "transparent"
    },
    {
      "address": "0x71Bc64050ae259cdDaCf802B8e3abBb76e828268",
      "txHash": "0x6d2f24a2682b8b2285d736510b99234a35074318d11a0f7f85ab579b2f5bf3f4",
      "kind": "transparent"
    },
    {
      "address": "0x961EcD6D74f656e84942C3001f5Ac76DdB5A964F",
      "txHash": "0x17d080e9468b87d2e4a75d2db695a972ddda9303aa91d23a0f2ff9482b573c54",
      "kind": "transparent"
    },
    {
      "address": "0xcFE054f4C43B10e04FA89229f43654fa58944371",
      "txHash": "0xef215cd0f3b0f47decb3cc67d66bf7a5f834223bef651617328918720af80c83",
      "kind": "transparent"
    },
    {
      "address": "0x5eA354e67949a7811DCAA7Ee7A525c2CecE89C41",
      "txHash": "0x8b360979f2c5d3ebd2f07883f1425edc4a8e92af1aa848f62bbfdb5b3de10a11",
      "kind": "transparent"
    },
    {
      "address": "0xA08A2bD950acEDa33e537ac04c9639Ccb60383bf",
      "txHash": "0x5beeae1aedfc9e05593694f45ad63be4c0be7cb005d2521c3aecf75ee2068fac",
      "kind": "transparent"
    },
    {
      "address": "0x30A4bee73Ee19766E355bfA7B5C588fca46C1122",
      "txHash": "0x3f6a71e32c4469591db1f73bd15759dec5d4295632ebc1ad9d1d338559feef6c",
      "kind": "transparent"
    },
    {
      "address": "0x10AaDFFa836F114953F00aab44E104835F3ec515",
      "txHash": "0x377f4eb5effcfc8b9189ae7013b971c7eab23bfacf71aaee37ad107ed6a8335f",
      "kind": "transparent"
    },
    {
      "address": "0x92908028eE9b873c2E2ea59a288f0AcF43F9d41d",
      "txHash": "0xee85b488f469ab7253fe9da0823c38ef8512cabbfa1c8cae6dc846a72fee1c9d",
      "kind": "transparent"
    },
    {
      "address": "0xE1cA6D101A26778297af23992217D657C8567512",
      "txHash": "0xd75bf0752eae312f7d3b406d63d4a9c286518d2eb80ac7f2c80888442a6eb874",
      "kind": "transparent"
    },
    {
      "address": "0xE57cD69988df73A6E0A6cFBa52d384D20508768d",
      "txHash": "0x5012c6edb8822d58825012efb582c7c83c9f300f3690f213997da613e1e7051b",
      "kind": "transparent"
    },
    {
      "address": "0x2bAC54756dbB32DDb0ee099918Bd90B221340d1C",
      "txHash": "0x1c3b3e5a2549c69deccb092d60d13c404ef37d44b18e50d23508abad80ce3c4c",
      "kind": "transparent"
    },
    {
      "address": "0x4e095FC717F9b596511c7151A35b9BCFa5F2cbe7",
      "txHash": "0x016ba07a613e4b318dd4b422995d8286cb78fb54ba2fd6e31dfe44d47ff7a894",
      "kind": "transparent"
    },
    {
      "address": "0xE70172Ca6B0c7667C3D6aF09DbD3aCd21c790f85",
      "txHash": "0x838e454c47d532402a1bd0d3ec76e8b8a4e548e789aca6d0407511dabe0ad44f",
      "kind": "transparent"
    },
    {
      "address": "0xb5D95b643fA5485d4a6D3bC3cc857724964978D2",
      "txHash": "0x38645416981071d014a8b8936fe8664ceb99a9bec07516128c0662d347633b76",
      "kind": "transparent"
    },
    {
      "address": "0x3431b1c556b933bFbE19d8321C6F74828E2863fa",
      "txHash": "0xd126e79d0969a37c11fcd0278e7878db56cb473776851890bd09708bf20ce368",
      "kind": "transparent"
    },
    {
      "address": "0x9F472a1f03078d15dA8471170d547a00E9fb5a91",
      "txHash": "0x97c510f38843592549c00d71330e71dcce1ede20f1b8b05edae6840ac981d9b3",
      "kind": "transparent"
    },
    {
      "address": "0xcdF3384C76D0A654d4Ba62F9AE0d368B34aC6812",
      "txHash": "0x5eeeb0f1795c8d2c0cfc3ca051cc67bee72048e73b248fd2d29dbccfda7c7ad9",
      "kind": "transparent"
    },
    {
      "address": "0x47DDf6bC744fF96F10232879c1ecDbf3B8cB02C3",
      "txHash": "0x7824af0c3aafb8da106a81b778fed4ad1d268a04fea4855e92716d69f36b5b14",
      "kind": "transparent"
    },
    {
      "address": "0x9c2bAF94Bd08a360Eb15045d31B27102941CdcF2",
      "txHash": "0xfe2c678ed45c1b3b21bc08967cc659fec621db9efea1396533ea61b728a8c496",
      "kind": "transparent"
    },
    {
      "address": "0x616756fa395Ec7CA12Ba1A68FDEE9f318797A808",
      "txHash": "0x3aabc59df72afce723cfc699c30425aab9b523dfc3122e9777545060d82e0dfb",
      "kind": "transparent"
    },
    {
      "address": "0x90F53A4F6016B3Acc32D928995b3f975DA6136c9",
      "txHash": "0x68740db001ad6f0c6c977f695d7d6177f648506945ef64d77697478912c5e31a",
      "kind": "transparent"
    },
    {
      "address": "0xF6Cb8919F4230A07f9aa5a2d97D2326dBa080c65",
      "txHash": "0x0471163a0136275d4605e70c8a5b44b3af76d988f9a5a4d988e05453d98be1f8",
      "kind": "transparent"
    },
    {
      "address": "0x6Db1c96Fc330BC5C2df3ABea735A0Eeece99466a",
      "txHash": "0xa68041fbcb805c481e665a2360b4e06773f187526a9b9110eba14de73b52a9bd",
      "kind": "transparent"
    },
    {
      "address": "0xd54CaE13F63e3001952Cd302C72aE195726DcE20",
      "txHash": "0x42ce8e247064d2a7a8da638705c7f789f58be086e70b0f5c3abe019f12e23a89",
      "kind": "transparent"
    },
    {
      "address": "0xB01dD877a25cFfbF7616F36621B8f289C9EaA666",
      "txHash": "0x24c4b614f326b933a8199554ba50253dd8989dbf311f9329fc5116d977fde9ab",
      "kind": "transparent"
    },
    {
      "address": "0xF9eFa414A1D50B3177BEDc2A6CD01bf4769F4315",
      "txHash": "0x241d6a486bac3e75f97c53507bfde8ba829d63dd90f2f3783668e270991f4a2a",
      "kind": "transparent"
    },
    {
      "address": "0xf1fe1Bc6642fBf7455304bC27029EE1f3D10aA5e",
      "txHash": "0xbef4760ae6320ab23b49f93e10875af61383183de17f33647df691ac495b0019",
      "kind": "transparent"
    },
    {
      "address": "0x5bd8eE58F40A0c0Cc45759DE61be0c3fFD86a47F",
      "txHash": "0x60100f9e5d101a80b7dc3ea3ba1f9c3e37099e89d5f8806e7fb9b4a40974bddf",
      "kind": "transparent"
    },
    {
      "address": "0x4e1040ab82B9193B4176F93a02c762BD0E24B5b0",
      "txHash": "0x925284c0f30934482c79e7e2e835e6e68afd155dc1744ffd5b912d102d125d0b",
      "kind": "transparent"
    },
    {
      "address": "0xeF1A06Dd09c7EA19A403cdf7f641E37Edb886bA2",
      "txHash": "0x9f94b0ba1859d5a1762cfdfb3e55238865f112e5f93ad7fec9585f7d7c7e9db3",
      "kind": "transparent"
    },
    {
      "address": "0xCDD2E4836368C29B3Cc2a8880567310aC55C0aD8",
      "txHash": "0x4e98b02bb3c00aa5cb3ae41f33dc1b8e9af827306cdcd2248023d0e0b0e098c4",
      "kind": "transparent"
    },
    {
      "address": "0x849B5F5Fed3fbfb07DA21E64e55492eDaf1D5de1",
      "txHash": "0xb60af56c5cb0afdf0b08878ba63cde633d019fa8a71bee377707cf4f453823d4",
      "kind": "transparent"
    },
    {
      "address": "0xF6A7C2827FbA6B619fc4Dfc912df562bD861cc18",
      "txHash": "0x0af6de727eddbbc1a7f9828ec2a5637b134e41547e0d30ca88488b1dcbb6b98a",
      "kind": "transparent"
    },
    {
      "address": "0xf365abb2f551289C25a4a4aCd5Cc8b03a4C4265d",
      "txHash": "0x7f9ac610c6d7ba318434175e26ec1469d6935258ed4067824e262ac67cfbd3d6",
      "kind": "transparent"
    },
    {
      "address": "0xc3460b6f4aAA9f2D331F10f849db907283c8FA0c",
      "txHash": "0x7c0b75b8eea3004d1709e77c92c553194cb34e46e3bf5861d4d7000a6ee40d5b",
      "kind": "transparent"
    },
    {
      "address": "0x14E586E2D1d31c53A8e5913478D6B6002796b2D0",
      "txHash": "0xad16ac12a88ce4dc611e821760935a7bcf203421a74d8d1aa0ccd1642b352461",
      "kind": "transparent"
    },
    {
      "address": "0x880C71a7fd6f6306d71376a3366B7aBf614DA1a4",
      "txHash": "0xe03d6bfefdafabdc4e7f4c85cb2c9c95b9a47f83ed2f6d511c6bd3c49920612d",
      "kind": "transparent"
    },
    {
      "address": "0xda86B9308c4bBEE14Af340398CE84461F5a47d00",
      "txHash": "0xea114b43ef160d5b4e449e9105f4a6a5985a7b45a4a52edd991c29f59ea96cb0",
      "kind": "transparent"
    },
    {
      "address": "0x9373eb293875436056f2680465e3ae6C24849e0C",
      "txHash": "0xadf50388a80e63845ddb3ee1a275edc19bff6be20bfefb3abdcc0790d1e8680a",
      "kind": "transparent"
    },
    {
      "address": "0x97304cac74a3DF78923a5095cf14e05841dDeb33",
      "txHash": "0x90591c65259c80457a7c232ff526a373ca07af3e8b5b78758787ee764e51316a",
      "kind": "transparent"
    },
    {
      "address": "0x1bcc594F1Af3621633097608adf14e735234D861",
      "txHash": "0x3cd5e7e46d712a910e9818f1acd0e668ff994e8a7f648d03c6156c7ba8b01145",
      "kind": "transparent"
    },
    {
      "address": "0xCA808a65c6AB463AEcE8b40A7967059FFEEeF334",
      "txHash": "0xac8b9701324eb60a7c786f530bdb5164cb7e7539d6f881c1e2023c3cc0bd169d",
      "kind": "transparent"
    },
    {
      "address": "0xB65B6D10b43d7E890609Af9effdc4a8d01910985",
      "txHash": "0x32dc7bb8e060a38783e248c4ea18db7d0ad636edbe95cf2254c7e3ac66970719",
      "kind": "transparent"
    },
    {
      "address": "0x018E442578E9C391f1E9D0f45FeBCf3A266b295c",
      "txHash": "0xac22b9de738fa55590a03e0893aee802a17001de642aa1f004fae00295b8f8e4",
      "kind": "transparent"
    },
    {
      "address": "0xA1ADb9F365fe4951F1a4aBe630045b5F96eb1C65",
      "txHash": "0x4d4ff62735be4e48c2dc9ca680972fec36a02a3b8432e8b4dc63ac552fc8a3a3",
      "kind": "transparent"
    },
    {
      "address": "0x04311C1DbeC9791534E7E627e341b91130cEab71",
      "txHash": "0x806bdaf0e5190b8501abb3963aa18d2c0370a47f57c359a285adf0881bbe34b0",
      "kind": "transparent"
    },
    {
      "address": "0x72291eBE3E7da7F7B9761D6c9A17d1EE8C236256",
      "txHash": "0xccb3ffd3d1e2720b952648f7420454d3cb8ea62a34cd459f02c4bf701f10947e",
      "kind": "transparent"
    },
    {
      "address": "0x7874836daFF7b921f5c3933ace7fcbBB3f59cf12",
      "txHash": "0x40ef260fa0dc9e8fde2636314507691bddf68d7949c7e4587516ae9e33709a19",
      "kind": "transparent"
    },
    {
      "address": "0x7ee8B2EFDD78d288089812978f13De70195Ae03B",
      "txHash": "0xffc4a96b051146934ce2fd094cf32f27a95bf383f28af7026d5aa90238c407b8",
      "kind": "transparent"
    },
    {
      "address": "0x76c4B90C0b4533E4A4De5BD4B32CE029Fe8d0e15",
      "txHash": "0x2865460a00e2d4c7591703425fef8648ad87a1654ecd1a17ee2eb2fe149218e1",
      "kind": "transparent"
    },
    {
      "address": "0x570BB66A9dD9De9770De4F9F5FDf068db55BA5aF",
      "txHash": "0x7f55fa433110764c3fb94af0a92da59216a9508cedb287ec4ec1de639f0c031b",
      "kind": "transparent"
    },
    {
      "address": "0x544bEB0634F15d57A2329686bC0c4073c504E296",
      "txHash": "0x8d020a1faaaf82247f2f9d79b8890b91317802940f7ce61ce5e4f132a072c474",
      "kind": "transparent"
    },
    {
      "address": "0x47770f38F3456C73b9387b920BF2916a375a73eA",
      "txHash": "0x68928707562b7353da3c33a11f70a19ee47871bdcbeea9367a66a5bcfdfe1806",
      "kind": "transparent"
    },
    {
      "address": "0x753430852C59387AcE87e4913A6158B5D2FB7C35",
      "txHash": "0xbf3039c8425872875da9091c7011931c4a3528fc5927e4363a0e53fe16f2e5c8",
      "kind": "transparent"
    },
    {
      "address": "0xFCE9664398d75aD1d62F3ec61E884146ed1e4cfF",
      "txHash": "0x881496e245983340addfc98251989299991b6245caa355c2e892f68bdc0e6b1b",
      "kind": "transparent"
    },
    {
      "address": "0xE03f5A5e6113a289ce965C45aB21af263F887376",
      "txHash": "0xa066fa2d252c02eaae304ce91140bf1bd62d6f6d665441ea4bb66fd95348b587",
      "kind": "transparent"
    },
    {
      "address": "0xe2b247d78958C29fA4a90835cE63234E41DED8fC",
      "txHash": "0x73319585a7a8427ee8e986c86a7e3e39937601323394514584ead10fc2987e05",
      "kind": "transparent"
    },
    {
      "address": "0x70D1AE01870e3Bc4A7072116Ad3ad7AD0697C890",
      "txHash": "0x9ddae63b098c2408399e2ea3a16b17d2da7e47e712df78e0d4143df1e5a56063",
      "kind": "transparent"
    },
    {
      "address": "0x437bc73C36470A2D4DaA311Bbb0428Cc8995f8E9",
      "txHash": "0x603d776aaaaf24def1b07ebc902c01f1e17ac4f5c637421ffc6d268b012bd244",
      "kind": "transparent"
    },
    {
      "address": "0xb38aa11BFC7496C6Fe012ffb07cF763546238585",
      "txHash": "0xfc32e0f8bbe91a46e79d139130bc68143d7d38d061588464534c9afbf6bd7fed",
      "kind": "transparent"
    },
    {
      "address": "0x21f228929cED75D68F011a78130C5d4ffbd61ac6",
      "txHash": "0xdd460a2a4c18a0d06c44e31706a04ed49b2aea1c961c15b81b6fbcfff9ba184f",
      "kind": "transparent"
    },
    {
      "address": "0x23398A5473e8F5d67BD25c4909bE0F92F9Fc5aE0",
      "txHash": "0x588058f89b7ca186878cb66782d7ed59c861069e46f124c3c93c364777463ece",
      "kind": "transparent"
    },
    {
      "address": "0x1c9D6C5F652B8b89Fb54e905bd9D8677f2aF7204",
      "txHash": "0xcfe5d435bff2ee45e1204a6e2f013b1a12a69f29e971318a2329dc65f313ad28",
      "kind": "transparent"
    },
    {
      "address": "0xEEA44f20f3B0b512Cb5640AD822adc79173a7B14",
      "txHash": "0x77e1167cbca7b5586c07b2ce89285aaba1af0a80aae2e5dedf8523e9e6b190b8",
      "kind": "transparent"
    },
    {
      "address": "0x5BF30fFd97C4a7329C3B0847bF5804Eb845AD50E",
      "txHash": "0x35d2d3119bc3261a8ffa7695939a04e3ac9f9108049c3578883f5ec94f226670",
      "kind": "transparent"
    },
    {
      "address": "0x8F6119C7E1D8fD8e6c5FB3DBF7C946803fE58B67",
      "txHash": "0x43499262ca46ca270a8a46ee9f0bf28447d8891e617220fb7d9c9f90304d3d37",
      "kind": "transparent"
    },
    {
      "address": "0x45bCDd9Ff7fE6531E39c24E82C13A847A753517F",
      "txHash": "0xc1ca5116b73f98c3f7bd038790eda0ee1c9ec8c7dbd4567a6fb430c52548ab7c",
      "kind": "transparent"
    },
    {
      "address": "0xABFD9B2c238b47892f648aEdaD76325BACE65B83",
      "txHash": "0x37ecc63a26b6009d6375b649c5a75620f9d5ad84522bed7c05d3532aa104e621",
      "kind": "transparent"
    },
    {
      "address": "0x5e205B491cFb08bACcd00130F0935F89F5c139a1",
      "txHash": "0x86532a99f8029547f7ace9dd34a3611cd689ce22d5fb0ae11e15cad91a9f0998",
      "kind": "transparent"
    },
    {
      "address": "0xaE2c5860Bdf95cEcd182EA007cb03c5ADD1BeFdE",
      "txHash": "0xb0d320adf65b9d615db7b3450e230a2438a09d1703806ffd8cd68efc6b758622",
      "kind": "transparent"
    },
    {
      "address": "0x3137Cef57094d701A579d9F07899B11e6ed8D850",
      "txHash": "0xe2dd3ddb23081edb6c99361eab188b330da4d5725c25cad51a79b0a3e2ad1d1e",
      "kind": "transparent"
    },
    {
      "address": "0xBB341EA958086bA8b1ff68d1338Ac7013041Ea2c",
      "txHash": "0x25520dbc3f24c7a2c60082d1860e82c25ec088c20ff1d7225d23508489077b85",
      "kind": "transparent"
    },
    {
      "address": "0xAa81D1d2D76F55ACD013D5157E8A519EfcF49392",
      "txHash": "0x270d4acd66820af96facd712743ed1d2042c42cace822b628ac7b7b27d0deb55",
      "kind": "transparent"
    },
    {
      "address": "0x55D6124ebCfB81064ac7a3990B5cf1B559052150",
      "txHash": "0xdfcc98bda7f0110edc097a85000584986ab49220493db3ac36083f9409ae8272",
      "kind": "transparent"
    },
    {
      "address": "0x1Ac969d576A0bE4906fdCE9e3d4cC0Eb28380274",
      "txHash": "0xd58f2522b2db2c3be5b12163fd4415d4e81b856138d2cc2850af6726e1b8a14e",
      "kind": "transparent"
    },
    {
      "address": "0x1e12a9b2e474109E31bf5053d40a55E74751aDcb",
      "txHash": "0x4edcd67bc9d3714225a42d3ac255e8362c791d10057bc7f5c6ac9a6ec4da97c5",
      "kind": "transparent"
    },
    {
      "address": "0xd8a61273e34B6022427760659288Ec65bedF1Be1",
      "txHash": "0xb43a98cf9fdbf3d49b5c17ef8a3cd38c96415286afc28eabc271ba5b29fc97cd",
      "kind": "transparent"
    },
    {
      "address": "0x6cc683573A45C7481CaF6390A0E819c0D7De9b07",
      "txHash": "0x6c306ffd8fa09f2972525998c19a9bfe4aeb4867731998c1184a14f043b18d02",
      "kind": "transparent"
    },
    {
      "address": "0x16B519d14196162EA6De7C67cAe67C912D7F8261",
      "txHash": "0xa5556ed5d790833b18f77f410fff8a7af4ae1f8572dec8c3c649a80bc327be2a",
      "kind": "transparent"
    },
    {
      "address": "0x1E137A563bB35Cf1f8363D27a77D408655A6B57a",
      "txHash": "0xb90bfe92ddd65749baa73205f83c6dba7c984f375b0066a75b49bc21242b7a24",
      "kind": "transparent"
    },
    {
      "address": "0x358ac9D87abC99344c036F017b353bCEF3fcB050",
      "txHash": "0x2ac76067b92f5b644c73f55dcf053ef396fd950d0eb417ef827f13facdd81c78",
      "kind": "transparent"
    },
    {
      "address": "0x67E7F89eEF899AFAa98b19d43ba8723E702Ee8d9",
      "txHash": "0xeb3b97c373fad23c1f7c4173313e2c6935e623403672d94a01347557eab943f4",
      "kind": "transparent"
    },
    {
      "address": "0x3015b2e1635CCd162A42a18c6B213a993FF41D0d",
      "txHash": "0x0c375765a9383ea38579822815c7a315c4c6639b4fec8bdb31ef2f8c6182ecb7",
      "kind": "transparent"
    },
    {
      "address": "0xc77BE458aD1d1445514Cc982a603Be1edA9e23D7",
      "txHash": "0x5212d17ce9367a5030803659158db48f7e79b50f01552ba04f342b6e075aae9a",
      "kind": "transparent"
    },
    {
      "address": "0xe6e54A626c46d81968e4c53F2cAec5B04DF7A0D1",
      "txHash": "0x9cffa28b515aae39b6e057b5eb24bd2bf530e995ed55c09e8996adff60afad89",
      "kind": "transparent"
    },
    {
      "address": "0x569699CBE0405374dC7F9Cf62138d3F8CdcF36e2",
      "txHash": "0x7433d5cb4745cc76845aaf913cd78c6a833529d66e00ab5b8257d912772239bd",
      "kind": "transparent"
    },
    {
      "address": "0xD9b9b6a9847e64D473e9D4F334ad57860a824592",
      "txHash": "0x4023b53cdc087ff2b83c89a58ea355da1370d2ebb668043a6b52786dc7fee7a2",
      "kind": "transparent"
    },
    {
      "address": "0xEfd9b0c74A83E2C3e3558aB9B323731CC8512d3b",
      "txHash": "0x05d4ad30694d2251b4b3cf2cf189fa9efbb2d7e7bf8271d64eb02b03be336906",
      "kind": "transparent"
    },
    {
      "address": "0xDE31a078929C1296e87207fAdF5aC74Cfff2b2E5",
      "txHash": "0xf4d63b0f4a41c597cf583ac7126fa324681bbc6593d44071c92cf3c4bf697399",
      "kind": "transparent"
    },
    {
      "address": "0x53Cd93b24E61E76aFDb0Efcc48961f5e368d4037",
      "txHash": "0xf02cbb4c83f082d55787683be02399f24c70c2e1068014008d72b7d7793c7f61",
      "kind": "transparent"
    },
    {
      "address": "0x3BDA304c4c40951fE0d6877cd5df9EE2ac89688b",
      "txHash": "0x250346bae6566b7e5aaf2745c556643f1bf0fb6ee69fd3fd4e9fd44f7ce1072a",
      "kind": "transparent"
    },
    {
      "address": "0x53DEE90456669Fa7111575da8c003BA1baE3A0bC",
      "txHash": "0xa009e8b808bb6baaae35fe289589f7d8eb6388dd1f5a6a97562b53f9ad7e17c0",
      "kind": "transparent"
    },
    {
      "address": "0x2Bc40DfF9F812a63E704906BD0cCc810529d3BBd",
      "txHash": "0xdbe7e2ffc697342265f584869dfa383c5e51fcf2cee72ab494c104745fb0e0c8",
      "kind": "transparent"
    },
    {
      "address": "0x4DBA8047c39b60B0e9494ff01816F9905fA8fd1D",
      "txHash": "0x6b0762265a69d8cabfd6b40f2771c0fc92384f6520f2256cc99982a8584065b8",
      "kind": "transparent"
    },
    {
      "address": "0x0aF62507db81A37EAACE85197295F0F57dF31587",
      "txHash": "0xaeb66505ff947fb10b69f9685ec8300f766dfd5b499ddea8531f03d9cf4ff095",
      "kind": "transparent"
    },
    {
      "address": "0x5D78CC72145d764406B4F36cc04e6eDB8d8E879A",
      "txHash": "0xafb5ffa87dfcfdb54ded17f94bddea24881b33941bf1ca411da3f224a8a50ba3",
      "kind": "transparent"
    },
    {
      "address": "0x11C05d90E310C46347a0433762c06388f8A54458",
      "txHash": "0x8906093f2946eed5b281e638503123c208116d6508d10d0d274d01ba6a27af3d",
      "kind": "transparent"
    },
    {
      "address": "0x067d077FB183386A563BE23977FB42E5B9CC7d82",
      "txHash": "0x1663d377ac14b93579beff963d89c4da3350fbaa50dfaaa15c244338c8cc7c35",
      "kind": "transparent"
    },
    {
      "address": "0x683bBff0e8C1069A596D36C5489C015013d90625",
      "txHash": "0x4f7a7dccafbfdf9518ae27135abb6b6d5bf8726c924fea77f1ba3ab1be063d7f",
      "kind": "transparent"
    },
    {
      "address": "0x64d5efaC780a2079b68e8e159Dd18b4D6F34b4C2",
      "txHash": "0x8c127c5955d8280d2bfeb7e6dc700c757b742377773a3d18ea106026783c34ee",
      "kind": "transparent"
    },
    {
      "address": "0xd8cdA8dAac364B80A24C2bA2C710cd03a09cEc74",
      "txHash": "0x3a2bce290fec5109a5d03501c89c585f60dcb9a6143d232a708061a3d45ba9b4",
      "kind": "transparent"
    },
    {
      "address": "0xa3df307Abd5cEEbeD182e9682dDd2451CA477b0a",
      "txHash": "0x115b4c19838b358412b79fb68b82569ad474d132577454990d912049f4ec554e",
      "kind": "transparent"
    },
    {
      "address": "0x06b43B7372eD0ac82a48235971E957EeeE486Af5",
      "txHash": "0x3b33d239aaf5047c574066d03c51b8b2b0fca4042ef39e4e8464965d76441523",
      "kind": "transparent"
    },
    {
      "address": "0x7B5D27c1Bcd00378d72E14e36E3affcDC488460A",
      "txHash": "0x55a8b087ac80e6323ecbd7d5dcc9ba383f11c123c872201fab3d29169ab927bf",
      "kind": "transparent"
    },
    {
      "address": "0x882e17AFD1998cd112648d6d52F0Dc3E701c01ac",
      "txHash": "0xd10e1489c1bba1c6ca723b2f631cf4c9dabf342aea10a818baf39a230d7c848e",
      "kind": "transparent"
    },
    {
      "address": "0xaA24791381996e9e99ffa25311B3BcbefDAbF018",
      "txHash": "0xb81a132e39f88a4f68485b19da6ac69bf87c71fb1635d0188aadbb39b26e5edf",
      "kind": "transparent"
    },
    {
      "address": "0x092010fAed0434895f0d1897E7a205ccB5469f69",
      "txHash": "0x773422f898a78fb3f31ff2aebae9b09a4dee8420b0a306e68631538120f63263",
      "kind": "transparent"
    },
    {
      "address": "0x12fF1abeD740eF1AB6140e101aD5AE93eB07703B",
      "txHash": "0x97455f0d39c26b223788426aaa45bf8ac7384a4c0b585af8d9d69e48f738fceb",
      "kind": "transparent"
    },
    {
      "address": "0x7c64EbDa64A4601f536f062b32121fA3A101Ad24",
      "txHash": "0xf4fa2fb58844a267c48d0f33b44e5fba12582ae7439003e8214ab913319a1ce2",
      "kind": "transparent"
    },
    {
      "address": "0x966049F79CC8C5494e26b3fBeeA3c119FBb39cDC",
      "txHash": "0xb9107856b995bdfe05e6abf00ef18a45df8be98e068ca585208af0644141e280",
      "kind": "transparent"
    },
    {
      "address": "0x5d20711BA0A2c3DEDF10B62973BcC36ce011902E",
      "txHash": "0xfc63553816152a682dcd165be773dab7b60a14c853b47c92f3e51ee6f29b2e03",
      "kind": "transparent"
    },
    {
      "address": "0x0AB674dEde91D7Cf50ff5966A65122D83eA33166",
      "txHash": "0xbf183c5b1abbbcdf9b6d59e99132b0a580de6f3dd267450928ca8c1ef3d7da0c",
      "kind": "transparent"
    },
    {
      "address": "0xd8325C4C0660955B95dDd7F103100f55Fde99752",
      "txHash": "0x62908995f27d83b12c6d05ad636cc6a7006e7e3fc84845188ac3aa6c34d0e7f8",
      "kind": "transparent"
    },
    {
      "address": "0x5BE3BbB3825a43d099E630231c163532B9555F9d",
      "txHash": "0xd2a65e7a5770dc9f3c449e3100b14af8ee8eafabe04ef41ab7083827738ca181",
      "kind": "transparent"
    },
    {
      "address": "0xf5A3e2c7bB2d9DFb71b3f102565e2E93a8AB210a",
      "txHash": "0x4416a9bfdf9aacd1a22afc84e4d81649b101c183cf36b5c6dff475393f112792",
      "kind": "transparent"
    },
    {
      "address": "0x90e11A210CC463885f2fF90986809C115bED68E6",
      "txHash": "0x3ad519e05dfbd62119f649c677736487dea1284516c63d86fb487b3bdadc93a3",
      "kind": "transparent"
    },
    {
      "address": "0xc8d6CaB6Ae41e22A5822bd74ec59ED6F7e7FB967",
      "txHash": "0x6ecb0186e94fd33cdcaaf78f99c231153c0ba3b4027def1db612a85aa91b4c27",
      "kind": "transparent"
    },
    {
      "address": "0x737cA02e7b47Ddcf143C315FB3905c5C2DA38d83",
      "txHash": "0x933ee9c45eab4fe24b117a898a13ee82999a61f849386aef2fc02e0b3eba0cec",
      "kind": "transparent"
    },
    {
      "address": "0x1017161aF1a5925A911F0438f6180967dbE4b141",
      "txHash": "0x883262b3410f3d062c69246cc2bd6acdba739213921a88462c3985d45e9f2c54",
      "kind": "transparent"
    },
    {
      "address": "0x69F7be0e7BC39D509fe6AB1eb7431C8332Bc2789",
      "txHash": "0x03766c40f6b8815d0e8daae5299ac72f33e027fdaf7bb610da6a842317064c97",
      "kind": "transparent"
    },
    {
      "address": "0xb031d1b9a6D69fa85724862b23F3DcF172c2762C",
      "txHash": "0xeb1344c8abc51c9f3e5c993b80f51ff36ef363e7530b7dc99f1e2d7a36cab581",
      "kind": "transparent"
    },
    {
      "address": "0x49F26FbcaFC6146613D76FA3C90A2d79c5D83f13",
      "txHash": "0x99f95c0dd241a26babef4210ba1c36317869082bd4f27790172b5eba52f55234",
      "kind": "transparent"
    },
    {
      "address": "0xAaaEbFEF4AFF499AF2172dAD54Fd0D77B31BcF24",
      "txHash": "0x830fd9122e2c8553d1ba6596321fa8c65256d20dabdee57dee2425712da9ce41",
      "kind": "transparent"
    },
    {
      "address": "0xD805c4BC236CAC174146bFD07B2014E7Add24Edf",
      "txHash": "0xbfe4ea209f69fee52d02cfdb689716fd4f76cc2bd85c6b376d200482d09ab6f3",
      "kind": "transparent"
    },
    {
      "address": "0x5e48851Ab5266Ea7dD6d1E5ab754d74E8a3bE3Fc",
      "txHash": "0x0ddb9b6401eaa3c222f986f67e518db505c680a58bbba86f16ea8faedb278ba8",
      "kind": "transparent"
    },
    {
      "address": "0x7E8A58f020bd897e509DF60268d6E8FfA0c7d1Cd",
      "txHash": "0xb65e97d247aab38252902abccb433524ddcc925c187b02a527fc66b0b65096af",
      "kind": "transparent"
    },
    {
      "address": "0xDdE8E8a6FC07146cC0246D202FaEe81441C6a25e",
      "txHash": "0x6d5620cd9fe84249bf369f89466766c65b05cab94ff7232757841f0b232fda4f",
      "kind": "transparent"
    },
    {
      "address": "0x9d76fa885B573b0d9737A5daD9D5e2D5d66D3EFE",
      "txHash": "0x75fcc54907298836c789969ac2e8ac457996f4e085b6484829b510b703abe34e",
      "kind": "transparent"
    },
    {
      "address": "0x08eC2fbfE564bDF96BDfb06B26607C0A436fBa88",
      "txHash": "0xced2e8a3375082b58a4d831054fa6285c98a081a864583178955712b25e8b86e",
      "kind": "transparent"
    },
    {
      "address": "0xA17619e81Bb30Df615F65427da65D460D37A69bc",
      "txHash": "0xc241e7e97fb2c0944623f247f4e78578f893d825b03e3b481ab38c2c31418a72",
      "kind": "transparent"
    },
    {
      "address": "0xA71C30B4D60B3376cA9A2c75Ba98d2A59aeE33C7",
      "txHash": "0x40049c2b2603c3768e4255e55cb05cb195ea1e5cd5b7b25c0776d750f2e2b5b3",
      "kind": "transparent"
    },
    {
      "address": "0x94e1DE16AF5AA87fBdC7D1ed434F02dCF77291F4",
      "txHash": "0xe155cea323b293d6d3d2623a6e1223f8ed008b159d47d082665d3505ae32677b",
      "kind": "transparent"
    },
    {
      "address": "0xDC3F75acCA4a926d246203731BeBEAb8FD5Bf9f2",
      "txHash": "0x7df18f5d5ca1cdc3a4178e5c6912620d540c7624594f96380267ff659dc39021",
      "kind": "transparent"
    },
    {
      "address": "0x026a332E208acE7BFffdF4538e2832d208e17bC1",
      "txHash": "0x40c2e3ee056ef1c25d85b89f939c31268beaa71453f389fbde09ea3beb729380",
      "kind": "transparent"
    },
    {
      "address": "0x35378517A4eC5169c058b63647135B854F393b3a",
      "txHash": "0xf965e347c70f2a2506e02419ceae6c273554cf323734908c27efb453bf5bc8d0",
      "kind": "transparent"
    },
    {
      "address": "0x67C3387014B1A1Ab1F5884f1fF1EA7B0aDb14CA0",
      "txHash": "0x472d554f3d2ca58194c93392819c5eea9f224ba5adb90770c4f70b5a8bae35b9",
      "kind": "transparent"
    },
    {
      "address": "0xee6bCd78DA0D3e8C1A8D6d270aEB49329A96966E",
      "txHash": "0xa19a0464c010d1677e9efe561215a6907387d7b0ce75c30f268c5bba8293a1bb",
      "kind": "transparent"
    },
    {
      "address": "0x609151E155157993e7c8Ac7d309987a71005399B",
      "txHash": "0xc8816508265bdd9537166d0af0f0c00c0a5e077e786e793b20853b302f3d457c",
      "kind": "transparent"
    },
    {
      "address": "0x20d850b08285DCf924C35353EE6cEb4d897e2239",
      "txHash": "0xbf579c27c0fdd1a22840c09f70b903da26548636f2c45fdc75927895d60eac1c",
      "kind": "transparent"
    },
    {
      "address": "0x0bD5c599F1937c12263b6D01d7657577590d460A",
      "txHash": "0x10d804d012f0d3d29a15a4a22a22d561f075cfdff381df0aa2fa55851f143b42",
      "kind": "transparent"
    },
    {
      "address": "0xD08F73E24B9FDa3731db452992CB92C178b4457F",
      "txHash": "0x640f3541a4b9d2e1e4251946deb6ca18f6cd16414a4e2bfa459cc17a6f4f47b9",
      "kind": "transparent"
    },
    {
      "address": "0x2992F528d8b776b8C7d5af144be2ec61D8F3eDA8",
      "txHash": "0x1d0bb5e78c6c0ede022353fabff90715165087abef34200e1b2ccb6f1c789e6d",
      "kind": "transparent"
    },
    {
      "address": "0xD8C0608fB37b85420DF48272C8A1d6EA57C50C77",
      "txHash": "0xc28da059ac95e2e78ca646df5728949d86fec8235a00da5e430d76899c9671e4",
      "kind": "transparent"
    },
    {
      "address": "0xb66C531dC06Eac6ACA4987eC995527263414f0DF",
      "txHash": "0x508c707116fe23f8f2218e8b667f3895544e6c4a60dc7f466616be67bf7f8550",
      "kind": "transparent"
    },
    {
      "address": "0xD821F9e9826573F55B59cE73e65282A185F27407",
      "txHash": "0x97b1611fb7880b6e2f41f3abfbe2cde6910a5244acc43a28ca041638f76876fe",
      "kind": "transparent"
    },
    {
      "address": "0x07cA88C54d3024d41FB1fF2A2dd949Df81433934",
      "txHash": "0xb90ba2eb791d3227d8f4bac011a0f0f14364b48009446ba25def32323cc63428",
      "kind": "transparent"
    },
    {
      "address": "0x5B54164Cf7aAA65a4d70AB6815C2CfE398053D03",
      "txHash": "0xae40ef7016f2a299658a9b13923cf19628167e0032c5bec2c3dd57e099edeb60",
      "kind": "transparent"
    },
    {
      "address": "0x84b92fBA3A669Ec3290Bf1f122a6aA9eDDEeFdBa",
      "txHash": "0x9232f01c9fdcc4089c744a0be449f7eb26b889194a96c392161f77048f1bdfab",
      "kind": "transparent"
    },
    {
      "address": "0x2eB037A70bF5F8c770F32F5478548eb9CB860A08",
      "txHash": "0x8d66d568357671b1b28ac61daacfe62d46a0ea0678975bc1ef10e51d374624ca",
      "kind": "transparent"
    },
    {
      "address": "0x7Bed079d1B9d093d4810CdD09472fAace8AB6F1c",
      "txHash": "0x9af09176748958765d7096864b5e5ebc714db3dd442b25b8f8de73e11dc25f11",
      "kind": "transparent"
    },
    {
      "address": "0x042B113CC215E83439bEACC6915FFE6D006857Df",
      "txHash": "0x7923228b592e628a26d57b9cb6da1a44a5acb5b75ef8e2b958197bd1c8805557",
      "kind": "transparent"
    },
    {
      "address": "0xC87C4F575aCE8E2aA486d8B9E8bbF96194A74A8D",
      "txHash": "0x25e66b2b2962807212144494d98136b402c23a7852dd23326a9ed2a998165937",
      "kind": "transparent"
    },
    {
      "address": "0xE9ED58F99f211b813d84Cf23E70F3393eF9747d4",
      "txHash": "0xdf59c20fd6b921b4eb44befc5b64c07abc40081c80cdfe39a52b0d91bcce3eb9",
      "kind": "transparent"
    },
    {
      "address": "0xf040634F49e9fC9bD3be7652b364B7b99A4c75de",
      "txHash": "0xf8cfe0f3e8c66dffda74cafd613e2f604a1c85a1eddfe69e7ed584b8ec752875",
      "kind": "transparent"
    },
    {
      "address": "0x0ecF0cA9931Fd7ce7ec20C122336f3d815950702",
      "txHash": "0xf347c54f5a4af487d0c8678c7f5fce93ea94838d7ddad25a411cfcdc34b0ecf3",
      "kind": "transparent"
    },
    {
      "address": "0x6528894B7E67025a35d70D00Ea2812493245Db07",
      "txHash": "0xe4908c078c6d2f727c97a89974edbd35ea4d48b988fcebddac81fcd3e294cb74",
      "kind": "transparent"
    },
    {
      "address": "0x3cD231029a5f3920C83E0345d5939076a604bA48",
      "txHash": "0x4d88d41f14bf194959355db1b6a61b78853fd8c6b796404d6895264a816ad1ab",
      "kind": "transparent"
    },
    {
      "address": "0x0cB3200e79431b5ACFB1672Ad2ED3820E3d55b08",
      "txHash": "0x5a3ce29210619c0bca697843fba42d220768975bf146ad5866700f473da99dc3",
      "kind": "transparent"
    },
    {
      "address": "0xD830b0059b3a0432b2753C675b74114045E95Ed5",
      "txHash": "0xf13b2e1620df18c50d2e0a623b9f7241df87d710511debd91e754ea4d193560d",
      "kind": "transparent"
    },
    {
      "address": "0xcdbE058750bc74F55f3C418c1E96422aE312463C",
      "txHash": "0xcbcc79acefeed475eed804b3f5c5c0de0364f250954f06d64ad5d52c82ec798f",
      "kind": "transparent"
    },
    {
      "address": "0x8ab2CEB1bC1f56190145e6a3514E9194B520bADC",
      "txHash": "0x41f1fa694d1cf69a5a310c78a3a5c16dca412fa89fec5bd5897233776441fdeb",
      "kind": "transparent"
    },
    {
      "address": "0x31E2A7C57d394b243aB4EC3889E48486D9fa5341",
      "txHash": "0xb64573332e148b04dde53a23dbbe21ea5068407cb16f9caa78cb210cdd69e8cf",
      "kind": "transparent"
    },
    {
      "address": "0xdA5A27346b4c9c831b2CebD7f6620afCdFA72239",
      "txHash": "0x3f2dc1692e8c23e3933f8239a797ec4d5b82a70446b20aaaf89f0d899ec598cb",
      "kind": "transparent"
    },
    {
      "address": "0x333784A24905288178B0bbF199297e00e5fa3D6E",
      "txHash": "0x364b2b9cead51ca3296ac8512979b89c8171103efc0248ba3c9fed1e3c969f2d",
      "kind": "transparent"
    },
    {
      "address": "0x7991852F08949AB4E9e78582183D53Ff3d93C41b",
      "txHash": "0x3b97088db055453e59be7570d399bf01f0a51ee8b171f622b713396b28c047ec",
      "kind": "transparent"
    },
    {
      "address": "0x9B0d49c83b0743E6dbEDDe48F9fD084629693454",
      "txHash": "0x4780ae3ec2c7c5ff42d7b60da30e302a02e8a2722dc9560c069e596ab4dd5d25",
      "kind": "transparent"
    },
    {
      "address": "0xE814154f5aFCe2822686917215D10aA21fF0B670",
      "txHash": "0xbaffd4f2dfe4f35532bf81668c045da99f2e85a06cb65cace6e032f37c5e36d1",
      "kind": "transparent"
    },
    {
      "address": "0xD3F725f24b34c554Bc115653D9F52F5e4b88F476",
      "txHash": "0xd956370f0e66fea2d50c7cc466c54cf40af5af311951855fc833cd5f06e5f528",
      "kind": "transparent"
    },
    {
      "address": "0xc128e4a2160da8AD4Fa63ebE72466cCb80CC7aE7",
      "txHash": "0xbbcdf27c36e7032f2646bef5367bc2efa89ad9a3349be82bc84a7ad553670937",
      "kind": "transparent"
    },
    {
      "address": "0x496c07398DD45872861Fc7D10C79475255ACe1B9",
      "txHash": "0x84c23e4682ae552c56183d4a5fdf1aecd36b297aa8064c97fc6efe3b662e7210",
      "kind": "transparent"
    },
    {
      "address": "0x75874ae259aa153D1b3739aa573708c33360f6E1",
      "txHash": "0x4b2435fe881022e1ccfb2412094da0178b913b94949d874fee543d34c4660917",
      "kind": "transparent"
    },
    {
      "address": "0xad72b25787399C331a6d75C9EAbd4908851FD06C",
      "txHash": "0x657e98c940599955c085be60f09482e285c588a8fff9b12c3fca784f89171fd6",
      "kind": "transparent"
    },
    {
      "address": "0x67DAC249691c614266490d1748E548b332A9b187",
      "txHash": "0x0bf129f7dc859439f45d974a66369f361902638d1e83fd783c2e1474514d0e52",
      "kind": "transparent"
    },
    {
      "address": "0x02d0317815349CE488539EAb504b0984D72c5b8E",
      "txHash": "0xa1ffa833978160714a86630c6209b3a3ec8dc1414096a590ddde86f6a504e7ae",
      "kind": "transparent"
    },
    {
      "address": "0x190deFd4C9dCB6649d389a58DbAbA9A6509AACdC",
      "txHash": "0x9c098ba3ff7635081daa81b63923f3f5c82366d99a40b89ddaa5d27a7d86136f",
      "kind": "transparent"
    },
    {
      "address": "0x4826b2A1509fA78EdD48578155BC3352db2190f3",
      "txHash": "0xe8e4c3bd4c5978d1c91c0c05483b23aa4ee449a0b33b3b9b503d25ddda271cdb",
      "kind": "transparent"
    },
    {
      "address": "0xAFa10fd1400ef7A017fEa7D2f2B4666BB936a324",
      "txHash": "0x80f570d8ea52cd797cfa6073f671309d0c7913715751f2701913cec865b8a679",
      "kind": "transparent"
    },
    {
      "address": "0xDa23BE205C78b376CbB8dC7E456ad019219a7F5c",
      "txHash": "0x7c542a6fa4c08e401f21254d61c7c7a75795eb0c8654dc87a2f1b5a5a1649684",
      "kind": "transparent"
    },
    {
      "address": "0x508cB5e0D17E38b5097B9f5B0BA35249E998AdC8",
      "txHash": "0x810815834bbfc3c67beead73b70d3521667b988f35451161e4e74b45ccdf54be",
      "kind": "transparent"
    },
    {
      "address": "0x8ad0dca7EB3f4B6D7Fa145f7C2d84033d8307F11",
      "txHash": "0xae48303146cbae51f99794c50cdd4cc754c2f5c713fe780bf9e6888be7cb5beb",
      "kind": "transparent"
    },
    {
      "address": "0xcD87c917341363A062A8BEA91Fd6f29E6c1D8d6c",
      "txHash": "0x8a42abaefd8b5e476c35019b327ed4e2c3b4d4d755ecd65597616200afc5c4dc",
      "kind": "transparent"
    },
    {
      "address": "0x87BbEC1E3FDD12D9548ecdA185d1734119213133",
      "txHash": "0x6ec407bb2879128488f7fcfdad0e50ae5f6db6afb564e1f0fadf503be52f87f2",
      "kind": "transparent"
    },
    {
      "address": "0x52F64d346A6F6c4734D4E1CF207a46b608ed1968",
      "txHash": "0x9f7c6c7773b40e25ad99d59e1a9e4f9f51a70e1d6edfeedafdde2ca9a049b77c",
      "kind": "transparent"
    },
    {
      "address": "0xA47AC4Fd8F7D10392bd8f8cD94C88c835953C206",
      "txHash": "0x35a39e680d7071d7d349c6ee5580eaf7fdd559d82787d2a82fc6491a08b88e0c",
      "kind": "transparent"
    },
    {
      "address": "0x6b3202FEb3ec3bE43387759804A27C8B6099c8B2",
      "txHash": "0xe4ff1c1232a22e4bf2764242849125975e228e16fc124c23f61621db4634c80c",
      "kind": "transparent"
    },
    {
      "address": "0xea1bdfB4De3e11457147F8Eaf35b54356671727C",
      "txHash": "0xe559b886ee0ae1fdfc13bab26a9a71e9e6528320bbf5daa697a5da01e2fe1aa8",
      "kind": "transparent"
    },
    {
      "address": "0x622b077d050c3Eb6eB45Fd24b04dF00F70d5bfB0",
      "txHash": "0x95622323472d7469a823313adaedda45e58ebb3044d61a8ef74e8b46a8875c0a",
      "kind": "transparent"
    },
    {
      "address": "0x967f7BCD7B8c23Ee10bF75f2348c2bc181Ea3CCd",
      "txHash": "0xea17e3186fe8208decf45fb3c443be35726690d018d3d69610ddc6f5473f783e",
      "kind": "transparent"
    },
    {
      "address": "0xf101E48873cf851BAf3603d670295196987B99Bc",
      "txHash": "0x09b802a44d7c7331c96a4853fdfd7f37a1d838b7c212738ff7c961a0f5abe09b",
      "kind": "transparent"
    },
    {
      "address": "0x08cB15c80C95854702288c8BD1f8FDf8E5615cAb",
      "txHash": "0xd85e990a2fe711b278571c2b51001540dedf57b8626433a932caa49ff785c82d",
      "kind": "transparent"
    },
    {
      "address": "0x30ca482089DF60085182D1c8d5cd18e6F7B99b8b",
      "txHash": "0x06e69fe2c6e19de9d631a4cb18d48c58d121f415dcf7a528c77c98bd8adea830",
      "kind": "transparent"
    },
    {
      "address": "0x7de33E14Bbd7659BdFe672252D4Be461477De526",
      "txHash": "0x9b21cccbb03d505a173c169831748b1cf6bb604622ec8d95b4a0c270fc4eca70",
      "kind": "transparent"
    },
    {
      "address": "0xF000e0047DED3BF09b2f82a840634759994aD499",
      "txHash": "0x7eb9d636dab47c2164df6533abd3742228174e99c60e14158c92bc1bd69f18da",
      "kind": "transparent"
    },
    {
      "address": "0x3D6F56AD9e3Afb555bE67f851B810A024106dFC7",
      "txHash": "0x64026bca501a323c88fe166d5a11b986b4f1c1df5fbec39970d80010453fcb60",
      "kind": "transparent"
    },
    {
      "address": "0x1B38A6c1A12b241DAcb24CBD09A8B6690416708a",
      "txHash": "0x738e0732239a00b9e1f96e3e32f14040b3aa50a4db216bd3fac9a8fe6c9cbca9",
      "kind": "transparent"
    },
    {
      "address": "0xc435F6eaD56B25e233944721415bd2E161765966",
      "txHash": "0x462b4de90d13f6240cf05d2c457c315549a8997a4af6dd514f2db5bd612f60fd",
      "kind": "transparent"
    },
    {
      "address": "0xf640685d082cEdCC095f85F9494Ca3241b38A0ce",
      "txHash": "0xca966b34e72eab34fa7d296b02f10ea09bfd89f77c50a7b2bc7e978ad203c80c",
      "kind": "transparent"
    },
    {
      "address": "0x420d1c8277875218A86E0c0Bd9bB5063Fcf8f764",
      "txHash": "0x5e40a367a1baa64d89428c61886c3fffeb47e33be4e5d7358b55d9cb9aa0141f",
      "kind": "transparent"
    },
    {
      "address": "0xd7de572f5D60Fe745c25e1fe41C9873FfEF4185a",
      "txHash": "0x2a0b4ba9fc2bc6135c37f47bab15fd5c3ae7d4b5aeb2d154b77437f97d49b0cf",
      "kind": "transparent"
    },
    {
      "address": "0x152cA1C68192Ff337E722B96c0953E6004E6BD7d",
      "txHash": "0x2e4f5c1cae6cb7bfc46fd20fe83992af7e8cf65208ac1f389f2ff22ad85a2ee7",
      "kind": "transparent"
    },
    {
      "address": "0x9eec151d2139628e4dC124DFE9cD42437eF2d80e",
      "txHash": "0x3be442c0d4200d7224c4c9d8e55cf3f1c023c685c86fd1474cd32bdef12f606d",
      "kind": "transparent"
    },
    {
      "address": "0xC54b7Fe562cbB649df1Ad444b7bfFc388204DC6b",
      "txHash": "0x30b693cec9cef5d680be6aaf19fb8fc9a5f432688ea68db7ad261f2087ed0271",
      "kind": "transparent"
    },
    {
      "address": "0xEd3Ee3e35F11211D0b0767CE47B969Ef99bAEC1f",
      "txHash": "0x39d9dd100e133aca2b2b17e9c0374668a593529697b528660a55326d35fb8f53",
      "kind": "transparent"
    },
    {
      "address": "0x5Bb25088145b0738B5842C5C25709DB56C034E62",
      "txHash": "0x2bcc5a26d826c8029bd0211558281c809d11dc96fa3f3bd6eeffd032ea2dd6b7",
      "kind": "transparent"
    },
    {
      "address": "0x9De17D1F9EDF715fe92ccA5e4268cF8337946688",
      "txHash": "0x7a2fe5b05bac1e61b82f13618396eee43193aed9806ff6807d7876c8e4f5db0e",
      "kind": "transparent"
    },
    {
      "address": "0x508E8536e222517224989e6B249dFF3D5B25a998",
      "txHash": "0xc599ef49f273f17808344087436c7559d9bacefe80eb45c444e1e0dc89ed8ddc",
      "kind": "transparent"
    },
    {
      "address": "0x74a6D449EC7Df270a526142375B14586a7375eBE",
      "txHash": "0x5dbc7d6e7f5834e411571d2840419f6e15a6f204da9ee88ca85961c5007cfd3a",
      "kind": "transparent"
    },
    {
      "address": "0x3F157f115E470A4EA2FbA11780068AfE1D2f3e75",
      "txHash": "0x3a61b458e21ad4fe4973957ee70d4df601374a1d4bd0f8f8a4f88da1c6e1e7dc",
      "kind": "transparent"
    },
    {
      "address": "0xa7D69146C987c013FFE8434b42B6482AABD429e0",
      "txHash": "0x82a7eab81dbd11af983cc34631f5351afdd44960edf14996a766fa5d7d1e6315",
      "kind": "transparent"
    },
    {
      "address": "0x57b9f7dFB14d0f3A0c13E4dD4209AB48433AeD10",
      "txHash": "0x1260613c8592e3325515c84abff60f4cc6e79920ef59c573e0aa24ee57385489",
      "kind": "transparent"
    },
    {
      "address": "0x4f4219539e461B396EF2101D269Cb24AEae35f1f",
      "txHash": "0x7b6927c581cada6abbce929bcc7b6e478aa046347071817849325fa611e8a016",
      "kind": "transparent"
    },
    {
      "address": "0xE206E38e4397dc581782DbBB9715C87220C021B5",
      "txHash": "0xb314f32aed673b16f38957cfa804709a2d09f2609dbbc09183d947cd7d2f3260",
      "kind": "transparent"
    },
    {
      "address": "0xa70BF098488D92097f1584786f0f91D2729706aE",
      "txHash": "0x47f752b9d842cc48cff17925865362ea333757f86bb1eb25a8a303dbc80efcbe",
      "kind": "transparent"
    },
    {
      "address": "0xD8f6f44eEdBCFb5A7817600d20528832b59011C7",
      "txHash": "0x057c5625a988a93b68109f6f1842e6b20dbd15817f033f6c2e7cef99e3d25bcf",
      "kind": "transparent"
    },
    {
      "address": "0xC4B0d403F24B1513EC52a9E6e4A51928A2fa9668",
      "txHash": "0x6cac2b2b284fc0c881d2db38f52d7c43d84d238ea4d6d1a8656699be3c2b181e",
      "kind": "transparent"
    },
    {
      "address": "0x4b99F4B5BE566fe887c7Cbd245C9558728151Fcd",
      "txHash": "0x5524b4f92b53c8f60fe6565e8dd321807b81cdc1818953a0fc67658d39893c95",
      "kind": "transparent"
    },
    {
      "address": "0xA0C0801ccf271f1Cd6f46e2E6b3D2DC4505F2839",
      "txHash": "0xaa6ec036f90d66dac4b9d27bc637ba914eddac4ed6c057dcb448836d89f23d62",
      "kind": "transparent"
    },
    {
      "address": "0xAF1c373459faa694b3aCDad51A95021D8EdBE736",
      "txHash": "0xe1a22b8914eec0417e1125593fd990222daf01ea92770a1f39d6ac868a12bedc",
      "kind": "transparent"
    },
    {
      "address": "0x8dCa8558c219118136f16422d8C68216587B6b70",
      "txHash": "0x5a3c72453e5072f4b0c8bb263ce04764b01f56e96646cb58a8f38154008ea86d",
      "kind": "transparent"
    },
    {
      "address": "0x6420567C6507704d88E983e36B574b27a9B7f9D3",
      "txHash": "0x3bb83f6af54aa89567108617f8d5373c1df5510262c968762868e0b066669361",
      "kind": "transparent"
    },
    {
      "address": "0x7c4A4BCb1Cf4C039Fb0eCB1104B28F33501a5B01",
      "txHash": "0x5a7917a53f7298836e9f51994dfee1fb5f4cb408e74047205a32af6877bedf7d",
      "kind": "transparent"
    },
    {
      "address": "0x9384C57477Cb1Ba8C252718d4F0cc2c20B355395",
      "txHash": "0x4f00655c7e16ef20bc0f2b9c03abd1af2fd05fa593d12e96bfd046bc289968f3",
      "kind": "transparent"
    },
    {
      "address": "0x7242e5629a3Fe5A2650EC4dAA737B397DE413deB",
      "txHash": "0x65adf3af862fbd1930b4bfab8c41fc0cdfe3add73c48f9b928f14872f74b7207",
      "kind": "transparent"
    },
    {
      "address": "0x0e3183b9E10Cf6844432778156e6FAFe0D97B079",
      "txHash": "0x1c924aaf449bf3a0dc0285818c576a69c9528c49c32af9bf9091b84bf0a37348",
      "kind": "transparent"
    },
    {
      "address": "0xb66231B02f7B80Dd8cb2d1602DC412A1afa43045",
      "txHash": "0x285de068bd9d02041e6c09503718341c1691e9879ba223a4e785110a29984d97",
      "kind": "transparent"
    },
    {
      "address": "0xEA0980250A8c11c86FE0e784a9250a10aE302364",
      "txHash": "0x07f1287320b99f11c84ae0159e6f832ed40c292c9ef6c19854f88ccd3dd7f6ed",
      "kind": "transparent"
    },
    {
      "address": "0xEBF2da3AA38aD244e607b4D7518330371341a602",
      "txHash": "0x4d0745a74f28cd2e1c554e7965e52be8c98ab164a086a2fa531e56cd0fec9f1a",
      "kind": "transparent"
    },
    {
      "address": "0x2A1b859958C54651A94fA46F718f434d273495E9",
      "txHash": "0xa3715f28e1826c940613c11daff6d23f9c657504273a52fc37baf2b835f900c4",
      "kind": "transparent"
    },
    {
      "address": "0xCC26c779f766372fBAaED95FE229942E2A469a82",
      "txHash": "0x301938c6c33cec50059f6113f54d56857bc5be2a4194157dfac7f03549465b94",
      "kind": "transparent"
    },
    {
      "address": "0xA26F948b2D39831D67c786fD02Db1dD140F40343",
      "txHash": "0x58ac30ea7b881879433d77e292a9487d0115f484891eb8af544408c19de80f25",
      "kind": "transparent"
    },
    {
      "address": "0xa85C45A0839B57410421909A8Ada782f76beB1ff",
      "txHash": "0xfaa4d6286a81983076c002fa81750ff59a5baeb106d6ddf49215273ea87fa78a",
      "kind": "transparent"
    },
    {
      "address": "0x40DA908c4d04D9894ED1851527c8c9979100f437",
      "txHash": "0x59b94803fe0e8d7e24ab04b9e95b4c099dc04139465db234ae0ced67ed8cf5b8",
      "kind": "transparent"
    },
    {
      "address": "0x5d88E80B4f034bba04f8eBDC23144d885DA558EE",
      "txHash": "0x8b0c3789ff110ece19c68b3a1bf3c869fefd51e4110d2cc82b87847c7637f5a1",
      "kind": "transparent"
    },
    {
      "address": "0xa83B9562fd59A3C0b60F48CE27067EFa025F27d4",
      "txHash": "0xada4278b777c1f19703f87d922bf73561eb394e5923ccc6c4e6b91f98548c211",
      "kind": "transparent"
    },
    {
      "address": "0x543230f6151912c2931DaA327e2a283947AA744A",
      "txHash": "0x0619723cdc4b1b58f1cb0d2fc8cd361d3f40381fcdb2271547816963fa70167e",
      "kind": "transparent"
    },
    {
      "address": "0xF643965eC0ef7942f82d5c5E885BCC1eE06A538B",
      "txHash": "0x29f72d3aacc987a3be3a9cef6c0dc9e1b562d2cbeadc633edeb3f784afb18e94",
      "kind": "transparent"
    },
    {
      "address": "0x9F208C0E475209633dE23264c4Ce812813fa9f05",
      "txHash": "0x00ad67590b3ce47b878043a9d519f86e6d97495370c9e4963f7ee18282c9b9d7",
      "kind": "transparent"
    },
    {
      "address": "0xd98fc14B7C78F844A35651628ba9069e89D4A969",
      "txHash": "0xb2db56c48aba69047fc534767bfae35ec9bb5793005e53d29e45e4d6074af0c0",
      "kind": "transparent"
    },
    {
      "address": "0x1f83e735Bb3ca7d25EA65143E5BFbB79940414Fb",
      "txHash": "0x9cc17a85f652671b5d1d83d9b4ed35f7544f43f272c32caf27799128c7a92c91",
      "kind": "transparent"
    },
    {
      "address": "0x038FEC225D80750526857f65108860A28635E197",
      "txHash": "0xa32267cf92a89fc35ba8d569738bcc2ab80980a2374bc4f33ae489ae38b5f087",
      "kind": "transparent"
    },
    {
      "address": "0x5C43849137c489B15aEaE0705A599c485CC94E18",
      "txHash": "0xc825eb77b72c9e1bbc71942ee3571c27efeb3e6ac9735ffea29b9305948f3bfd",
      "kind": "transparent"
    },
    {
      "address": "0x591425df3d121830eFafdD18EAfB15aD58C4e993",
      "txHash": "0x354e28552d15278315fd9bb7dfc0d101f5ee7fc5e8a8e0fe01d2c5a406bffdae",
      "kind": "transparent"
    },
    {
      "address": "0x47BC38936ff81Dd0217D486A7B5cD08309A0ffC2",
      "txHash": "0xd7c1dfc2c29c1f7b0bb10446f86f27dc17a6b9f61b941ed8efa2cb3e1c396fb6",
      "kind": "transparent"
    },
    {
      "address": "0x8AB8e420e0D155F431282B2e285dc24933e5BCE0",
      "txHash": "0x3d02dea4707fedea4c9ac8b10e341be61d1e90f56f9c437b9f30024cae092cc8",
      "kind": "transparent"
    },
    {
      "address": "0xCBa75e64B5129c7D717117426F685033f9a3f191",
      "txHash": "0xd46ebd7e74c989b4db49ca6ca03e85a360365f58f30a0beab5be8be793c47858",
      "kind": "transparent"
    },
    {
      "address": "0xA2721D2BBCd40da088312Ab6f2d2639DF6291984",
      "txHash": "0x232e2c1605e11ecd8580793eb7e63211db8a5a26f1f3af4a19ac596df245d2d4",
      "kind": "transparent"
    },
    {
      "address": "0x08Ccab5e07f95b0E6A670069210CD2E0BD3DB280",
      "txHash": "0x4e48232873c3c7a0842d352d36cf1e3971cf64a13ca2a16468f3d4496dc11b09",
      "kind": "transparent"
    },
    {
      "address": "0x2791FB827193E1Ed8e6e19159653B1a4C4f6Bb85",
      "txHash": "0xb58e56d1806a546ed5b9e4eec729fe575ee3b1425da6206c04f8dc47b645be5d",
      "kind": "transparent"
    },
    {
      "address": "0x415760078a54063467cFC3E17904e87FA1CEa6a9",
      "txHash": "0xe43b1fe6c3831377bd23fd92a77b4fba3e2a8f76b60a66497662d4693eff0a8a",
      "kind": "transparent"
    },
    {
      "address": "0xF902c458DA37d273Ba01699a0a7a984023EAFca9",
      "txHash": "0x639dd799dc4cc581efd2df038d9671bd38cc2d247fa9552d9bf55cdb2a850c00",
      "kind": "transparent"
    },
    {
      "address": "0x84A76eB219681e84DdCC2CB0bfFEbba2884ADd39",
      "txHash": "0x30a496ebb1ee0830775ff8e4625bd00e5b1c034011cbcd8c0a235f81e27e98f2",
      "kind": "transparent"
    },
    {
      "address": "0x90C73d67d78A5F6980762B3fd2edf5C636fF90A2",
      "txHash": "0x437fbb9b7773471b78d40db7000db1a0dadc4616fcb0ba969b8cd9a906681d75",
      "kind": "transparent"
    },
    {
      "address": "0x8De2B398270089296664c7A484fBB111B9d0aD26",
      "txHash": "0x12ba57db46c271e852c4e7034d39fa959204674ac8bf5873c11b4ef7fe6d2e95",
      "kind": "transparent"
    },
    {
      "address": "0x7136Df447db89989f748f5a2c3e3a0C1726822cd",
      "txHash": "0x721901c149285c1430db3a98691e71af2cfe74c1407745124e970fb579c9d2b8",
      "kind": "transparent"
    },
    {
      "address": "0x0Ab704c8F55406F861c3B489a26a01bEE540Cde4",
      "txHash": "0x9e49de0ca018d535f99ce7dc91a84b4d776c27dd043474916390f1e819ab768b",
      "kind": "transparent"
    },
    {
      "address": "0xB4Fd82c73A9760979Bc37F661471a29545925f30",
      "txHash": "0xb9942290a9c2aa8b0410a375afa7e574c0dd21297fb953e82e914b49f39132a1",
      "kind": "transparent"
    },
    {
      "address": "0x1f527f90522970dA029e5A4c35C2F76512b439E8",
      "txHash": "0x04fdb1a87652fd8f850e0ffccc69c827ea6581ae16f478630f5c7616162695fb",
      "kind": "transparent"
    },
    {
      "address": "0xfb27D3CD045DabB028D31C0744128beDE6c87985",
      "txHash": "0xa5ac6c86d63f0c2acdf5bfe443ddc1eebe545b6d19915d9f5f0daaf102742b1f",
      "kind": "transparent"
    },
    {
      "address": "0x929Dd91238B96E08E962CbF480AE4Bcff72BF8aa",
      "txHash": "0xe3324ad3a9b8a43b081d87ab2d17408dd746748499e26333b801aa0d5542a60d",
      "kind": "transparent"
    },
    {
      "address": "0x293CCe39dFC0BA770809c8b1129BD0820da02Dd7",
      "txHash": "0x707111df49b120277bd09e0ed3fcbe357d26fa024cb8bf9b3f28d048851ada92",
      "kind": "transparent"
    },
    {
      "address": "0x95498Eb6fD457113340041480a3449355A3adC70",
      "txHash": "0x843b0ad255f1d5cd715070af3b5e79299de2caad28f394439d65cac21e4318d1",
      "kind": "transparent"
    },
    {
      "address": "0xF548D9Bf13E59cC947B23fe8CfA15BD1868FEf1c",
      "txHash": "0x1c61652d98a647e7393547181b7479d335313ec2507202d5dee0bb2074d5944a",
      "kind": "transparent"
    },
    {
      "address": "0x41682c6E88a9303b2E6a850F612FdaD0604635ea",
      "txHash": "0x47f6d233c4e2063168baf84fd104cd3ad2295acc9e80fa488175895984cd27e3",
      "kind": "transparent"
    },
    {
      "address": "0x545Dfe89589AdB879AB067a5260718a6e346D69b",
      "txHash": "0x49763f72b016b7edbc65159c141451e309a18e5ffef273c36ee011d4e6580c6e",
      "kind": "transparent"
    },
    {
      "address": "0xC59F9A6489A6089479C834AFca1A8A736280fa34",
      "txHash": "0xbe312b40807a2a028396bd2e39247bce28cf976eb13932890055825e3aee4a94",
      "kind": "transparent"
    },
    {
      "address": "0xAa106a978a7E3347faC5121B3fc599c6e8990A9a",
      "txHash": "0x57946245844d56221f71e8bd3cd6043b911955b0be042751e1dc54d22946029f",
      "kind": "transparent"
    },
    {
      "address": "0x02B455C7945e8D58DEe6Cc14d391Ba879A43a1B9",
      "txHash": "0x7eb52ccf2ed7b96a1fec9aee92ee45cde69e0c25f789fb3171ba0b3f04c3d8a1",
      "kind": "transparent"
    },
    {
      "address": "0xF5A859f54a1357007bA899BDCD689e2f9b994161",
      "txHash": "0x90991ce2c1b880b06b4154813f2ef650d3ca9af02123c7f3ccad215574146d52",
      "kind": "transparent"
    },
    {
      "address": "0x887A48CEb3fE13e828714E95F9D259A9a6b7a85A",
      "txHash": "0x685e89fa71f0cc13eba311a5d87613f3bd9c9f47678ea6e1f37c03ba773a0cb0",
      "kind": "transparent"
    },
    {
      "address": "0xAb0F18F0F2c9F6237Ea10d32672751fd8223A108",
      "txHash": "0x78e7619e6d437d45b7d10af8822f0bd8e55d6a6fc672b4bae0b8cb77d091c370",
      "kind": "transparent"
    },
    {
      "address": "0x2169E764eE82a6e93332FB17791A375973093392",
      "txHash": "0x0cac6b126c3e072568aa51c21e6bcbf829a7ce75430f437c317bdffbfb257146",
      "kind": "transparent"
    },
    {
      "address": "0x9385aca69Bf102708c051bB5b148A7bdC97648A1",
      "txHash": "0xd1f1ed8ccae1069125f981c56804c905ccc10bf3a24f6117e8bcaf2e904d96d3",
      "kind": "transparent"
    },
    {
      "address": "0xD3398894b91002b251f237f1d9Fe7376b7BF85C5",
      "txHash": "0xb594c4a39cc134a458f683e75f307382f79f2570c0ba6f3edb6d7d14bd031671",
      "kind": "transparent"
    },
    {
      "address": "0x3CB5C5B1495ea8d5Fc77400398589313551A0438",
      "txHash": "0xfd2dac9925895b05776f20c92f824a1c8aae14fcaf10df7375d67ccb8aaf1d78",
      "kind": "transparent"
    },
    {
      "address": "0x36CA24cF7f46fACdd41fF9461f887f094Bb4f16b",
      "txHash": "0xa802fb4d879945aefc5113d9f101a243afa9520c1b273735a5d0f01031665abd",
      "kind": "transparent"
    },
    {
      "address": "0x3dFB48C8107cad56089897A191d688E915940eA5",
      "txHash": "0x48cbab6d4c506537feba9b0eed9acc37beea327205162410203c670d8f178f60",
      "kind": "transparent"
    },
    {
      "address": "0x1dEd373c2CAD172217fB2Fb59315A254Aa9A24e7",
      "txHash": "0x333735afbbe7424d4330a6ca6faf5a9093aa5f5fa3b8028291bad304bdac3358",
      "kind": "transparent"
    },
    {
      "address": "0x643242D6167F33D74D904A9a7926162F250698F5",
      "txHash": "0xc8a49b31be4ea93c69c47040978e0e7a1e4fbdca48ca40a8a113dded1c0a130f",
      "kind": "transparent"
    },
    {
      "address": "0x6c5d2C1ae7c481BB63dbF609fb55116206F68974",
      "txHash": "0x0515bd558751479b46c70990a9d390e9799ec014c343db27ba5ac3ac178581c6",
      "kind": "transparent"
    },
    {
      "address": "0x42F30A8C1aD4b0AaBA1e094483B9c619e5225cBC",
      "txHash": "0x9d10da84496fc2f9e86f322bfa3f1ac69c7d445a13c09364a76ab44503e99047",
      "kind": "transparent"
    },
    {
      "address": "0x55aA49A3585a2dDB1B768892337AF100aadcE5Dd",
      "txHash": "0x6e7fba94f754e18a56a477464da45cd78d041cbfe038d904986c93610566b9fc",
      "kind": "transparent"
    },
    {
      "address": "0x08d8D765699252E5bC0B5cAec4ab5d140D264765",
      "txHash": "0x33182ea2249c8244ee569d969568e3cd75f4004e733692c4b22413e6e569b224",
      "kind": "transparent"
    },
    {
      "address": "0x08bE56805018fBB1A73AE7D0ed6f5f35B7D574f9",
      "txHash": "0xd5a7b083fc8826d4044175cb47469b23cd42bd98ed0075ecfecb5c23e59d2a9b",
      "kind": "transparent"
    },
    {
      "address": "0x1F20BeE5F1cd5320A5aE755A1fe40c14c513bA49",
      "txHash": "0x2cc36be428a3b33c3e19e69f9192d0c8c11fee9b978ecd84050a5854653dc414",
      "kind": "transparent"
    },
    {
      "address": "0x83fAfc3dd23D33ea4E950D350912A70d67CDa774",
      "txHash": "0x1ba9cf01549da268eb1af4713cd12526b9c094d923656b2d447516e5df7df6dc",
      "kind": "transparent"
    },
    {
      "address": "0xA918BE54a076a414E360F61E8f7208D88bbb902D",
      "txHash": "0x0e8de80d66c762ab5184fd33c87ccce6d11e6b9c2d9632bd6bd525bc2dd3974a",
      "kind": "transparent"
    },
    {
      "address": "0xBe8856a88A7D06156081A23320F57fBF0477C1a6",
      "txHash": "0xf4566969c889b3ddd873512c645c0c9b30337c016aef31c039129396f2e9c86a",
      "kind": "transparent"
    },
    {
      "address": "0x31037aD14E6a75f1F5D5d472983a996bBbfdc265",
      "txHash": "0x67a1dd7c5e89472c1c7abdb7dab749ef8507327af4e9ea45a3afbb88cca7ab96",
      "kind": "transparent"
    },
    {
      "address": "0x6a23eA0D9d89ab03153802262f18db2cDb3b990F",
      "txHash": "0x3ed5f2bcede7fcfda94bed66644f2523cbf9f6631ad3c3e0bb2d56dac1f78aa1",
      "kind": "transparent"
    },
    {
      "address": "0x9E6E03587E82B8718728362D75C02Da0B035392c",
      "txHash": "0xab76e13cd8f2d9ce68e9e7ade4820acf64db761c184547d4bafccbe074cd7351",
      "kind": "transparent"
    },
    {
      "address": "0xa412AE5DE0b2c7EBbB5B07878092899C089FCb57",
      "txHash": "0xfe0ddd15deaa9e03933d57690b59387c1cbb718e6e9e4a10884b2af3e485f7db",
      "kind": "transparent"
    },
    {
      "address": "0x7ec108e6803AA50f641cFcF8800693EC0A17B433",
      "txHash": "0x9ac6f8ddd8e9494c4a567cf1368963e9a63d3c71a7cdfbcc2cd5f6d45d8cee48",
      "kind": "transparent"
    },
    {
      "address": "0x776314A393886aA107f12EBDF2811Bc18BE4897b",
      "txHash": "0x0391f03fdf7fba65d8776bf02101324cc12ef652ed504b10fc06061129e19b6f",
      "kind": "transparent"
    },
    {
      "address": "0x67FD772b67A6E2b6E157Ce1Ba1dDb4c46a5d67e2",
      "txHash": "0x5a0ce08731b000ac6252a6f2dac62db1d79cce0ba03782d4d018ddbcd0c15a46",
      "kind": "transparent"
    },
    {
      "address": "0x9B1a976D226D994Dcd4605791FF3B26B6673171B",
      "txHash": "0x6518e5ab0dda5b1d82759823cd69910e5da3f1caa166acd7e237e262f062b325",
      "kind": "transparent"
    },
    {
      "address": "0xA9dBa80E9af4027b322F1ebe0866775b12aAd14c",
      "txHash": "0x3542e17e518933432188fe6d605a75ed8df0f9cd7391d8fb33f95fd97ab34969",
      "kind": "transparent"
    },
    {
      "address": "0xB5393bF395c493155AB1Db3be8c37c727D413CC7",
      "txHash": "0xdb808796e2249696672de48dd603c72fe2e45e0413c5bfe6b3faaaec3f3590b2",
      "kind": "transparent"
    },
    {
      "address": "0x7ba7416edE4219C185cC623410fB0475eEc11233",
      "txHash": "0x9eb1d30409f260e856e975680db9ce22788b2dcef16dde8cab865188dda97e54",
      "kind": "transparent"
    },
    {
      "address": "0x4047aFE1E72cd51397d6B79f7dbc7bEceD60E4E1",
      "txHash": "0x46cd707a35c26f47fe54ba73b2947c016610803a8ede08a38e94cb7c4ba21844",
      "kind": "transparent"
    },
    {
      "address": "0x1adEF976DD6a3E7BfC5080192d5215b7664cBE78",
      "txHash": "0x0ede563c7274619220776233b629beed9eeee872476f9ed8fd0c5a7b56e76441",
      "kind": "transparent"
    },
    {
      "address": "0xaaF0119C65eFC69883590A8C09c155FbD9032f3E",
      "txHash": "0xf1cf054100aa550ee00f4b65b8dc96283f0604bf53aedbb48b712533b804403a",
      "kind": "transparent"
    },
    {
      "address": "0x29a51835D7046b8d4bF2Cf7E62151b4e34907dcD",
      "txHash": "0xe827f4f9f1e5310ebec567b7e8f6725bba662b7fe9b568123f483b984de088fa",
      "kind": "transparent"
    },
    {
      "address": "0x9F0CF0C948DA0f1aDB5C87e15f9093258E5C8D90",
      "txHash": "0x52d94975e4d62b2b076c1a4247c2f14cac3e3d4ff101c073f5f0368634db2600",
      "kind": "transparent"
    },
    {
      "address": "0x527d787C1f66b470BE2Ee11BCe0c111b64a3D4f9",
      "txHash": "0xed21ad5aa370618efd585d41ef9c246b1407e8ad252adb23dcf0db24274f46e4",
      "kind": "transparent"
    },
    {
      "address": "0x66a92D20C9Ab70e2D639a5d73C1bE1aA6d45a669",
      "txHash": "0x7a0070f5038c0e002abb80fe5742890925b25ce0f859dc8203b4e89b48b7f691",
      "kind": "transparent"
    },
    {
      "address": "0x97962091B054A42170E4b1509625119f638Afb19",
      "txHash": "0xcd06616510e81b5644836921f84c34edeb928ccb2e841e2138da840736863882",
      "kind": "transparent"
    },
    {
      "address": "0xf4295A2B277F4A6770918f8D42377EDb31Cf182F",
      "txHash": "0x33909f9324751bad6a09ad8b17825f8af87967cee22b0bd9fbc3b0ec96b22511",
      "kind": "transparent"
    },
    {
      "address": "0x3C0bB45B0B22F74037ECeBADf2d19Cb8d0460F09",
      "txHash": "0x37c8c7a01ae729eb3be8e23ba126b143eafcac674030409f12d0fa91abc2af84",
      "kind": "transparent"
    },
    {
      "address": "0x7F01D243D7F0eeb8FC8C5F58299EfD7d0F19C6A9",
      "txHash": "0x7dde7df3e6d5c8c7e6b3ca330a954217e4835a52d411b437d037acf35e8d85a4",
      "kind": "transparent"
    },
    {
      "address": "0x0e077e677FAEA99EF4e8CF902b7087A2b683E0Db",
      "txHash": "0xe46d4d8e88951fba438bd0a76a48a91a8a1b3b1dbf896df4e66ba7b4bb90ec7b",
      "kind": "transparent"
    },
    {
      "address": "0x69DDcB4043EB95f91945cE65C0990a84358EE415",
      "txHash": "0x94cab5e472be85d50c87b240ecfc439950a1df65aa7f46f0d4bc621c7f4b72df",
      "kind": "transparent"
    },
    {
      "address": "0x9cA080856dED5314245E0ACb109691b34F9a5BF3",
      "txHash": "0x6290690abde41028270c9e4acd3977faa2b690d96307a83524fbf083cee2a15a",
      "kind": "transparent"
    },
    {
      "address": "0x8DC6e750A2636f1e07e6286c6C171E842158a284",
      "txHash": "0x832fa6345e43d81a4eb069bb9f843ad1afbefb0aa60cebd9ddd216d81a2b16f3",
      "kind": "transparent"
    },
    {
      "address": "0xE7B8181e9ffF1f9E033b5250ca3046Ac3Db643bB",
      "txHash": "0xf27efd318b1c8317512743b87fb7371dcb354e954d501e7e29ea985b5ffbf1f4",
      "kind": "transparent"
    },
    {
      "address": "0x2511f2F3be601C78b5Cb1F118ce85F4e1102B2fE",
      "txHash": "0x6b6d1d30663c0a548ba5842ecf201ec96cbe50c1e4b23bea19f7ed2306a2c0f6",
      "kind": "transparent"
    },
    {
      "address": "0xd1D0F0dE76017d639749aefAC0701096Ac3981B5",
      "txHash": "0x2c523e085bf6c5b1217038f3dc5e4c71fc7bd58600e4be8d341372cd95505b21",
      "kind": "transparent"
    },
    {
      "address": "0x48551F7F40147C9258A4576f1C0bc16b41B170f9",
      "txHash": "0x056f846b4d738a5bd577fb25279adf17d70e573ebb5001ecfc40372ca57b9713",
      "kind": "transparent"
    },
    {
      "address": "0x0B95f46B9B5c0FA51CBe9739CafD57AC4cac6999",
      "txHash": "0x5e34b4aa72e54af24e9726832eac1801b2706647ff898558eeaf65ce3de8d8aa",
      "kind": "transparent"
    },
    {
      "address": "0x44B377924B179673D67FC2a38116d9d4e5002642",
      "txHash": "0x04eeef624444c10752e4b125f656d0b641cf232db8d361c05037e5411b9f3757",
      "kind": "transparent"
    },
    {
      "address": "0x88c238C7D10884C76826421118F4205AEBc1C6d5",
      "txHash": "0x2b377c72cbfce5759438d5709d94b18a2389dbce09cd97955894ee1ccf0bc165",
      "kind": "transparent"
    },
    {
      "address": "0xa96EE472f0D1A9cd6c736d1873cF871aD9754342",
      "txHash": "0x05248d4219d6af094739f11ca32032b8e8542cc4367a0a7e2f891c569efc4e19",
      "kind": "transparent"
    },
    {
      "address": "0x82D589F97f55305E13A633018e0eeeeE0cD0FA79",
      "txHash": "0xe96677ab64673e33aa154b29185e81ab469be9fe2cdf740bf7e8e7de1d994d5f",
      "kind": "transparent"
    },
    {
      "address": "0x7A01B146aF0F5Ce3f56f81E72446110bAec45aC7",
      "txHash": "0x79d7d57f3ef0a878acb0bbafe8eb387926bd3973b5ef116abc3ea8599c119cc3",
      "kind": "transparent"
    },
    {
      "address": "0x50B058B750D253146a58993B5300c5Fd6fb7BaA6",
      "txHash": "0x19af6d0b48f9eddf15aeb7eda4bfa7e87cacfb4e5f730e02f2d1d88e2ea798ef",
      "kind": "transparent"
    },
    {
      "address": "0x9D0082fc5aa81994d68E44c97E3C46b0d29aC807",
      "txHash": "0x9692932ecf9d6e04e48e29755b76fb8c589c4d3cb743a6d7b5e4015017fc1ee2",
      "kind": "transparent"
    },
    {
      "address": "0xccE4E456490b5dF14CfFEE708402f6B70136a4c2",
      "txHash": "0x0a81cdee28b3b9ea53c4d292c0263d3431f6766cbb802d217096d7601859d9fa",
      "kind": "transparent"
    },
    {
      "address": "0xE0F27Bdf237cF23B7205EA0A61D8D9a25B8c8d17",
      "txHash": "0xb5bfb9444d3dc9ec552c765ac45825e57b81af293d4ada05c9c5d15291f3a3f2",
      "kind": "transparent"
    },
    {
      "address": "0x4aaA9a7351C98c98E10301844E995731Eeea358E",
      "txHash": "0x83936fd2735cf084587f9d2f3a0904291601c00c400d71bffde549c66c34d532",
      "kind": "transparent"
    },
    {
      "address": "0xB23F65e199841dCA6F8813d8A782BcF4C841E374",
      "txHash": "0x194efae953c7b4cc625d0c61a6ff50c704f478b09ebfebdc427c5b4e5e4d44da",
      "kind": "transparent"
    },
    {
      "address": "0x0A82DC15B0379351bE4B713f1572b790a74abF99",
      "txHash": "0xb22351a5b8c1c2a9c5f59844acb1b5c25a6614f4b60fb3403a8216806e03ec49",
      "kind": "transparent"
    },
    {
      "address": "0x53Fce569518fF32898073021fa96F93356774512",
      "txHash": "0x34d839af70e96d41198331bed5c13ccd3929849f25fab2eb874f1d2c3582c101",
      "kind": "transparent"
    },
    {
      "address": "0x38c6c9Ee447F328E2100E69E5541808695933327",
      "txHash": "0x1d6436bc4b88140f355380e9a12c1f9cfaeb80573141c074774b445dbf7a404f",
      "kind": "transparent"
    },
    {
      "address": "0x0a218E156bC43269164057EA6180B8098C7fB4EA",
      "txHash": "0x92b962e6d971d6462ec1e52c86d56a614ad0698a0e22c1c9635f0d27e69f2d44",
      "kind": "transparent"
    },
    {
      "address": "0x302C45Cde67b143fA5982fcAbA5840982fDE1Eb4",
      "txHash": "0x252c01a4ea5f7bc1fc8ec83987a045560c89b1c441da116e002db4f38434c9c3",
      "kind": "transparent"
    },
    {
      "address": "0xaaC937f1CEd864Cdc8bAb24218eb350D85Df6726",
      "txHash": "0x76994e69df7b003c2a878fa9e2e6357c3d1d357c94a7d3edd993b5823de425a7",
      "kind": "transparent"
    },
    {
      "address": "0x7D6023da02DA7085c44c3478A9D7A2a252c109FD",
      "txHash": "0x999956f97b1d2eac6aef9de13c7fb1cba01be6c21815fe9f6c4c46e9fdccb670",
      "kind": "transparent"
    },
    {
      "address": "0xa60C24929DcE2C03A2AEa6F8493554102321afE1",
      "txHash": "0x18ce1845d8cd5f47db9da71dab4384b7a369195e08b7ff558d9ddeadc1e3aa18",
      "kind": "transparent"
    },
    {
      "address": "0x9926F3ED4449F9B3106682CEd4Bd33a930138301",
      "txHash": "0x7f3b1cf6bf56212f5f3914b52056ba325134ca6d487f719f9d0e148ecb019d9f",
      "kind": "transparent"
    },
    {
      "address": "0x128877Cb2ef699aeffE92b74fc3B270495D9253F",
      "txHash": "0x44e7eae30c9736d9e4b00860e3dc19b11f1295dae7a28593ab6107c9817584b5",
      "kind": "transparent"
    },
    {
      "address": "0x7Bd68A2848C6A2d72Aa74De2b40F443Ef5470587",
      "txHash": "0x3b0be739505c070c60f1db76ee371a3a0358c53efb8a1c8158201eec29707414",
      "kind": "transparent"
    },
    {
      "address": "0xd753eab694Dd61960D2Eb260Cb6292A426f40fF9",
      "txHash": "0xb75a4c27b94d1896dcc4e6b855c73c0dfae054c54dff94c0874c745a95cc266f",
      "kind": "transparent"
    },
    {
      "address": "0xd39A7F1d34097AaaF52CD9C67C9aB083D2Eaa2eC",
      "txHash": "0x00bde1398732673158e26ee5dad51929b82fd6038d8e6548aae28c236f32c329",
      "kind": "transparent"
    },
    {
      "address": "0xEF7db5a6b44C9c881CbBC95F7697181655269a8E",
      "txHash": "0x6a3c9da90eae08d8743597efa1ad3112e66d8d991bead0720690b0f6964fd6e8",
      "kind": "transparent"
    },
    {
      "address": "0xC888D11330E72eE47313AB16e44F5Eeeb31deA11",
      "txHash": "0x00c271eaf638011d03a812ce65b1e75c6532a8131c2cbb5494335b3e52065144",
      "kind": "transparent"
    },
    {
      "address": "0x37C2597f68AFA31956EEbF3ece8EeCcF4aae6f19",
      "txHash": "0x201befba662d77ea8641ca0dbdbfafd6e60d9b2bf0385d8257b9353654ac8775",
      "kind": "transparent"
    },
    {
      "address": "0x49D06eA3001326e355C53dd4c4d30A5c2E0c5333",
      "txHash": "0xad97e22084fd05bed4271e6cfd4977b240cea9ec18832ac42d28ecf5e3cbd8e7",
      "kind": "transparent"
    },
    {
      "address": "0xe82065AA6B89f78544Ee0b4717B12564Cac28691",
      "txHash": "0x5303c18c6ae86c8b0dd16e9f1e4006fd8540eb176acfa88c515fb6f6f3cf1418",
      "kind": "transparent"
    },
    {
      "address": "0x9E1733cD36957bf219E6945226170e0E3D6b86f9",
      "txHash": "0x79f6949fe82b2ed51c522d9a6eca53cc5234fec4ea08f9a558fc109216de3d8f",
      "kind": "transparent"
    },
    {
      "address": "0x77731FBbE889B61AF1Bfc9C0c40fC759463f0DaD",
      "txHash": "0x4f987928ea07c1dfbbc1e0220390299586d7721da90c143e432bf4299144ce62",
      "kind": "transparent"
    },
    {
      "address": "0xe70965317a934d57a948fB94219261EA929f48B2",
      "txHash": "0xa38a917118f6b23c841a3de81b0919f2e41ece08d6d9e81ec65bc5ad4391aca2",
      "kind": "transparent"
    },
    {
      "address": "0x389741996C9Ea92263EdDd3F3740565e6583B76a",
      "txHash": "0xd3148b1bbde2c0399cb5e2f3321b0d98717f641fdc02de2e36af9f55502b59ef",
      "kind": "transparent"
    },
    {
      "address": "0x32A7866bacdD2EE464A2bf83FA1B0e170f0434Cd",
      "txHash": "0x399ea42b8836b8ce594d0cd73c195a92b94509dcd5787d24bd08d487af6b8983",
      "kind": "transparent"
    },
    {
      "address": "0x46360d62e68107685d3dec93DdBA2574079cF05c",
      "txHash": "0xc45e14431fe97487cd6191209feb4db8184454982a960ada2b5926a04beb62d4",
      "kind": "transparent"
    },
    {
      "address": "0x5C5872D47BF4b1e0E132c1E595c850Ca89505650",
      "txHash": "0x6f0ccc761bf74209ab9b8ac4700a80e03757b080cdeddc3a5ec7eef6d062faa2",
      "kind": "transparent"
    },
    {
      "address": "0x44C666c93CDf8A2A32C5B426b3976516CdFFc847",
      "txHash": "0xb803433336464f8743a48f7eaf6d0e0f7cb0cd62fadc7a242ef2cb3f1d89f80a",
      "kind": "transparent"
    },
    {
      "address": "0x65809d375138D472Eb3eDeD18f50381F2B3A6274",
      "txHash": "0xdea6b697ab4fae213b069aec6b59ddf72cd4721e8bf6cd07e8e99d24cea3efd8",
      "kind": "transparent"
    },
    {
      "address": "0x0D2F08e45cD8919800EA1dd39157AcB8125C06c2",
      "txHash": "0x9cec7b7818f1b2b828a12ef9982e69e165ed5dcc60183e246c868d97c12da09c",
      "kind": "transparent"
    },
    {
      "address": "0xD1c406eFb61eE913ab7Ce8387411127D61c48a7d",
      "txHash": "0xef4b625c47f557655ed0305bc6b5a22b6e4f07c2d060d95058ca1d6435661da5",
      "kind": "transparent"
    },
    {
      "address": "0xc34c7064eaF0f88dFDC1638222235748Ec0DbEB7",
      "txHash": "0xaaa8c9e056ecabbe2855dc8be4e101815e8dcbced9fbe52ddc48c91eec21ea75",
      "kind": "transparent"
    },
    {
      "address": "0x18360CE9187A4E71A125afCDF250070C6A9c1Ac7",
      "txHash": "0x31dad677e952fffce36a155bcae3b0cba483246078756c4955c502e5c90ef0e4",
      "kind": "transparent"
    },
    {
      "address": "0xe9c87cA3Eee9a27752703c7Aff514071AB565c59",
      "txHash": "0x72922fe732e7d99da8e3d52cbca0406561bc19a7e62747460aae9ba172cd4439",
      "kind": "transparent"
    },
    {
      "address": "0xaDB3348E26Dbc7aB354d7C5d32D1be22AB94F7B0",
      "txHash": "0x7f24f95ee008fb4ce2c5d675f840d7a6dde0680b6a15f0c7c6c0e2ec7d79b88d",
      "kind": "transparent"
    },
    {
      "address": "0xFBcE4adCB5A4138b631515ED1fAb827436FD453F",
      "txHash": "0xd5d3c5c618ea4ef82c8262e085add48556a45dec8eca88da0f3864a41d564ba4",
      "kind": "transparent"
    },
    {
      "address": "0x18c7eAB868D88e75C07ddA9Ab767220bcB8e95f8",
      "txHash": "0x733fa88f6b1395b328238ae6695dcaa4995b9551686ccf96974b57579a044997",
      "kind": "transparent"
    },
    {
      "address": "0x10466e91d48798B46d0603b3ab0c9fdCaeDD659E",
      "txHash": "0xb18158d6f284e42881533742b6d1c70d1f30e687f75fcb6ae3a19d288f4c3d4f",
      "kind": "transparent"
    },
    {
      "address": "0x94a1416d1962c17F8bf7A3E04828a5a9A2309F4B",
      "txHash": "0x89fe0ffa6b00fd7bb8cdadbcbf2f872b260ea233827d0897468802ef5a05a769",
      "kind": "transparent"
    },
    {
      "address": "0xDE78DC8D690Ff31576b7968999ece452a6EcA85d",
      "txHash": "0xa3fbc69475d9f926e707b72afbc0e41bdeef2bd1dd29bd43ade8e47fc95663bc",
      "kind": "transparent"
    },
    {
      "address": "0xAD7c36166CDb5962F6046F888c17c476057b1cfE",
      "txHash": "0x862ef2480177fbb6053b23c0edcce2cf3c80c402bb512e218d8aad2c89e304fa",
      "kind": "transparent"
    },
    {
      "address": "0x7911964b3b9937313a24a46348c5Afc44F369f0E",
      "txHash": "0x5d4abad5bfaf713cf0d14ba385430d6215134c437c00bce181e869d7727d62d6",
      "kind": "transparent"
    },
    {
      "address": "0x636C5340B2CfEDbc754B4Dfd208F900f37b814E5",
      "txHash": "0xe012589eed60969272f85646ab6ae7c59ec494af1dc68ce314500d72923e29ae",
      "kind": "transparent"
    },
    {
      "address": "0x98047E0d2B4eac08Eee3E9081f536d1442Cd8A90",
      "txHash": "0x2f814f17fb8a27a6241c7290bb7e58bef23fdc733eb0140b0c51296a1f8cc9e3",
      "kind": "transparent"
    },
    {
      "address": "0x6887ac5C4A39Eb81dBEbF6411F10AC0b872358d6",
      "txHash": "0x5becfab3f35d817122ae5bc444fcfe78c3108ae0d2869ec8b180592a4d417cb7",
      "kind": "transparent"
    },
    {
      "address": "0x88E3D7Fdb77148cbB680907936f5C025ca1E4349",
      "txHash": "0x95f352342dc5365170c3884e66aea10fc35a7cd3a7e77fce135b6c0553bc5400",
      "kind": "transparent"
    },
    {
      "address": "0x2379Eb76Ad823dE80508811035A902D8EB4803E9",
      "txHash": "0x1afe5cc1892e41a7f9373007007b5b7a0002e1ba2bdb1c7361c17d0bfc51e5ef",
      "kind": "transparent"
    },
    {
      "address": "0x031eD2128602D14db8279A2799802d54692220De",
      "txHash": "0x1a46cdf59f3697a6f08d28843f974698e3c786e097a8d9133be318dc1a88bf57",
      "kind": "transparent"
    },
    {
      "address": "0x3F615Aa7Fb9209c95a2Fc14Bf7183679d2c677D6",
      "txHash": "0x5df4df0d5fd95a59fd9a4ba001861fe4d6eab2c3199a99e859a5ed6d4521a61e",
      "kind": "transparent"
    },
    {
      "address": "0x645909c32bfD3033BE0D6df17667C8C7C12281A3",
      "txHash": "0x3f6d52ad8a0082f686d049daa864ff39a22a7e066f70a736f2f9049da730dbbc",
      "kind": "transparent"
    },
    {
      "address": "0xd4cb2BD29Ae077E3DdB83010C5097eEDbEeA0c2A",
      "txHash": "0x962f14b0f7112a57c169de052659a92d106092efaaf019ee23a01362f350e831",
      "kind": "transparent"
    },
    {
      "address": "0x2B8ea566b6eDc7F633F120412Cb5dabcc8b1d1f7",
      "txHash": "0xd226f06061e5c14c6bf37447e0ed9cf45ea7c530b22ef2bba543abfc559fb00e",
      "kind": "transparent"
    },
    {
      "address": "0xe4b4C1D8cb3b43B30227bC867EF6E6acC395E472",
      "txHash": "0x29db9a82591a1ca881b41a1629067e650035f9fe52de8466c15daaee270d3d51",
      "kind": "transparent"
    },
    {
      "address": "0x83afAF717A77fD1F04fEB75BCba6E1fA52CE3a21",
      "txHash": "0x0c4f6a11a379247ce2a9995065347d41b5b5f32d7c432ba51de5ef4baf1179d9",
      "kind": "transparent"
    },
    {
      "address": "0xf9cb10a5198b0572221694BCB3aea65d81FAd900",
      "txHash": "0xb50122c8ed515fc31dea783676f4dd58c4625e157fc87fd10888fdb329b11ddb",
      "kind": "transparent"
    },
    {
      "address": "0x6bEaB90C378995e65923fC01b670bC76fE82151f",
      "txHash": "0x8dba5e20d42eec4c504b2f52f389a0fda0592ebebc0e8c46f2e970768690b9ee",
      "kind": "transparent"
    },
    {
      "address": "0x717610d2D547019c98d0De81aDDDb692665f7358",
      "txHash": "0x7dc461a980644388b954804a9ba5793cec54e23f7b631ff4dff09184bdb53de0",
      "kind": "transparent"
    },
    {
      "address": "0xEF49C706cb432a0eb1024A346B0e456C4fd45eee",
      "txHash": "0x74928dd8eb4c644820d16d1a67512f714eff6878c90322686cadf9cc96f26ae2",
      "kind": "transparent"
    },
    {
      "address": "0xB848C3Aba2B27FD45Fb0aCbc179ce55c21E31cF8",
      "txHash": "0x63150207fc15ac9d4f13b3b67c61f090d23a09656e5545dc10b84f97fd410ecb",
      "kind": "transparent"
    },
    {
      "address": "0xD621c2d12f68cB456f01669FD44FE1D4BCdd4f3f",
      "txHash": "0x8861fd0a694d59ac0c602426ba0c30ced9a0025730be16d29667ca5f45d366cb",
      "kind": "transparent"
    },
    {
      "address": "0x5df2fd50203be2a89EA41Fb3eB85d285E0bA3591",
      "txHash": "0x596062fc383ba5611d65eba59244a76d133b22c02a8b62278410d8b0f8542d06",
      "kind": "transparent"
    },
    {
      "address": "0x9A26015F01B80E6fb4B620b4C9A13F77C6ba5dEc",
      "txHash": "0x0502e6301932726f13f22954297456ec8603119ff8a89410f1c7524e4115a36e",
      "kind": "transparent"
    },
    {
      "address": "0xcbe3C41EDe701aDd034745DfF63C35E80663C29A",
      "txHash": "0xad81227e013a4a0a619931840126b7568626d990c5788ec30466eb66df0bfb5d",
      "kind": "transparent"
    },
    {
      "address": "0xB984385C4Bd359fb6b3aCcd1B227192404E6105C",
      "txHash": "0xbc5a134ccf0f6ee9058f2803b6cd72ba4b0d75268fde0e12b7a4e8ba598cd2d9",
      "kind": "transparent"
    },
    {
      "address": "0x454A442C4E67A2Ecac269718CE75490e5191D617",
      "txHash": "0x74decc89e9c9e0363b151e3abbc52ec8310b758eb7f6fe8f25979ca30241860e",
      "kind": "transparent"
    },
    {
      "address": "0x8b19e8fae5aC3D2b256504134a0e7036f3a4a139",
      "txHash": "0xcd982c7b5accc61cdee9d430bcf99ab2ece921f774d593c091c367b9bdd14968",
      "kind": "transparent"
    },
    {
      "address": "0x93F52154D3086349d81a981A2e391A90827Db8b7",
      "txHash": "0x17fb62ad961f00b4fb35137f6b0fc4edce723fb3fdaacb680df282a792702476",
      "kind": "transparent"
    },
    {
      "address": "0x76bb7AcFF83DA6465d2a2CfDaa9948C3a31A4414",
      "txHash": "0x1bfa5472d6f26a28c2643cbeb22bf35928786a6619841405596a65425c1b5caf",
      "kind": "transparent"
    },
    {
      "address": "0x76c1B8FB46E5989C66Db392b22eeaf0D1d795754",
      "txHash": "0x793e889c0e4639895e91d59f90cba4af1e576a21b67b7a7ea77a5ca4e4fd770e",
      "kind": "transparent"
    },
    {
      "address": "0x9dd2DE79439856ff791F33fa1D0c0fd4cf6e4248",
      "txHash": "0x8727621d765558404cad7d18f20f438fcda3c25d04fdd08b8ed9ee9e34032f5f",
      "kind": "transparent"
    },
    {
      "address": "0xa5Cd5Feb60c3CD55Ae6f41E9eb7239f41C001BBf",
      "txHash": "0x45855e6735465ef2feb8f4af6f756ddffc8bc8b6870e5177d7276e3a8cda2116",
      "kind": "transparent"
    },
    {
      "address": "0x0bDe243881d2e6B634B47F69DE697D2F150Ff780",
      "txHash": "0x3a7415eafe49e4cddf54b8c9c9f6f2c56b757a714592f73d998b2e02961b487c",
      "kind": "transparent"
    },
    {
      "address": "0x230a8240f6e5FADeeBe843474630D8A2d8E11249",
      "txHash": "0x1e870ca029891bc2a4bf721ab473b64e538db44b809f226da191b144e336d21b",
      "kind": "transparent"
    },
    {
      "address": "0x7561c71727E8D94dA6d2375a9C30cb3e425a7E5B",
      "txHash": "0x381a8b74f0c05da45be63217daf981469160a04b3f80f4d0f02cbec8392349b1",
      "kind": "transparent"
    },
    {
      "address": "0x17f7812D31CD3ac4C4766e227790D6842Fb0d1E8",
      "txHash": "0xa9f710163870177ec7422776b5c0db42187a231de92e1d9e8d19d5037c58459a",
      "kind": "transparent"
    },
    {
      "address": "0x0EB8Ec39A4637c11A5B29b4c3E89c480cc2FD603",
      "txHash": "0x30eefdf859e051d1141c11b8023fce8f03c82bb7e39bca9967b977fadf44c571",
      "kind": "transparent"
    },
    {
      "address": "0xE39C3fC8A095DC741f173CF9f9F62fE400Bc89Ec",
      "txHash": "0x3f1b48691ca644953aa19b9c024eafa38639fb71b5bf8a338631e285c830f577",
      "kind": "transparent"
    },
    {
      "address": "0x503E2B9cFBE6cfCa58E5beDf8b31AcBC47231c35",
      "txHash": "0x61bb92ef05b272588f670f0216db4c977ac92afadc8ba80e3d29d59a34c15f0e",
      "kind": "transparent"
    },
    {
      "address": "0xB9830f3b9c61De681fd99385636F92B63604f401",
      "txHash": "0x887ec57c122316ade8bd4056d5c5e0b09a77f7b6e4de33f8faaf14e4f66c58bc",
      "kind": "transparent"
    },
    {
      "address": "0x62B64c6af08B811538b1AB39564eeA352CA173Ee",
      "txHash": "0x69438d9262117b0206634d290b0b6d7cf058b23a962cb501837abc807bfa8adb",
      "kind": "transparent"
    },
    {
      "address": "0xf6643AA31c57e115736df4C9Ce205308e4987D82",
      "txHash": "0xec57cb89dd29c6e507bde16204c28104f8d9b08a4f2fa882e60ad987e83b93a5",
      "kind": "transparent"
    },
    {
      "address": "0x205445bc4863B623dBd8AC0a7A87d8bB01c7f608",
      "txHash": "0x2e3a8f0d633389ac8bc786647b56b3002fdbc82db4e27b5bfbf2c6e7b70012b3",
      "kind": "transparent"
    },
    {
      "address": "0x059276c83a4112617D82806B53E816d6F05a1F68",
      "txHash": "0xccdc498702e391d7d61484f7c3d261f99f59b7fee5f936b564f5ff3d58f2d9a6",
      "kind": "transparent"
    },
    {
      "address": "0x27a738b46e76914ab290A807f7e27e09de6b116E",
      "txHash": "0x4f6740b80845e6b60bc7c99e05cbbc05042cab5c15ff42a6f19dcb68bc3481c0",
      "kind": "transparent"
    },
    {
      "address": "0xE6859621A8a0a403Db7b6f27c086A13b9d036e11",
      "txHash": "0x6f5f8260ec64d16cb25b55b2a4c5df98ea167226cf631926d150c21779adc2c5",
      "kind": "transparent"
    },
    {
      "address": "0x4A2630A7b1FCEcd7615B18163FdaEAe8d5f123B9",
      "txHash": "0x51d9276b973cb911abe4028e7cb5766a85d986b0b841a8d518e19b40872ed4b2",
      "kind": "transparent"
    },
    {
      "address": "0xFa454d29a33fD39078eD49c512bC9098e8cD8bE4",
      "txHash": "0xee8f0981a0c80b4e25b13669b77081dc654c7f0f5692c59e1745f2ab72535501",
      "kind": "transparent"
    },
    {
      "address": "0x6D8636662207136D4cDA2252e4f52f5b08424B94",
      "txHash": "0x9a0e987b497187f7f66142af533c12d0e910b34e88f18fd5e1e2962bb60f1531",
      "kind": "transparent"
    },
    {
      "address": "0x323cA492a20ceCc41a2c08c6Ecdd4e6d1c777542",
      "txHash": "0xf67f8d19978d328051acef644c1b29c6c1a75199d35bdfcae8de98ca6921566e",
      "kind": "transparent"
    },
    {
      "address": "0xcc276Abf324EcFE6AF18229E66B727B42f5f5c68",
      "txHash": "0xb7bd338ddff9889499ee74141e6326fe8325464011e5d4d7723e5fa54f5c26a5",
      "kind": "transparent"
    },
    {
      "address": "0x34ACdfbc9AE7eaFFb78C14B7c79BB72cD0680590",
      "txHash": "0x0c51dd3a32eabbc2c900d00d1bd4a0a77db53bb6ca0c423745a3b28461ddfd86",
      "kind": "transparent"
    },
    {
      "address": "0xB545c3944Ba64A6BCEC90011C4bB4Fedd9375402",
      "txHash": "0x55af62b3fede158a6ca01d8fa74903f5cc345b18b762d664575429f15c04b67b",
      "kind": "transparent"
    },
    {
      "address": "0x95403CC7c435b4536641798c01e7467aDf92d0C7",
      "txHash": "0x01a5a3fc13ec2bd38aa43caaf19dde7d49a4215e03177b140b5e3b970f85d772",
      "kind": "transparent"
    },
    {
      "address": "0x0109bC0a0f3604D35C8cc85efcEeFE5fC6C20960",
      "txHash": "0x75674aa1969d6c151b631fbd852f29323a961e45df62bfc0cfc2c3460f28677d",
      "kind": "transparent"
    },
    {
      "address": "0xF607873b4810cC9c6F23BF141BafA91Fea03D22b",
      "txHash": "0x1473bb1e3011a0e9eed0e48fdb1a7d1f505a4974835e2f587340caa7d783b676",
      "kind": "transparent"
    },
    {
      "address": "0x5E46D35FeAe93DCAc67cC823aDFb1E79Aa6d3882",
      "txHash": "0xaf2f260b9509325907e04ec5336890292401497d93b5f392bc008d5d80a84181",
      "kind": "transparent"
    },
    {
      "address": "0xcBDf08D2BEA297d024078B9ae7411030d4B55689",
      "txHash": "0xb029e594378556d8ec2e4eb7a2621c4a3fe10a5db2d4c3f669aebed6282d2bd7",
      "kind": "transparent"
    },
    {
      "address": "0xb79846230e21f5E0717116D630A71c33D9cBAf54",
      "txHash": "0xfb2cc86a35dd426a21c01919e068b8884ea0dfe08533166b47b2c8a3408d612b",
      "kind": "transparent"
    },
    {
      "address": "0xDd9fC268341c8A5Accd7627D46bf73bea996448c",
      "txHash": "0x513acdd0b3fd7c5ce97c682bc202033d5303238a50a70303139bc7bb314638c2",
      "kind": "transparent"
    },
    {
      "address": "0x6F28fa3a533C5B565a5CB3ed390f7e0170112774",
      "txHash": "0x4c942c3e6f6ece8925d28a0e08c68db4243e3fa22a43780e1eccf597dd59d6da",
      "kind": "transparent"
    },
    {
      "address": "0x20E1f30931Eb9418860C0D0fBbE8aCDC7879eDCf",
      "txHash": "0x59f4b82be6ff8691c5c4d4ad8fdb9f498ff666656573ac8eaf4826dec677b546",
      "kind": "transparent"
    },
    {
      "address": "0x2f9ae015E3cA82789b3e411966a02bd5e38A78E3",
      "txHash": "0x8d57d2231350cf63e4a8b20a28098b2585c36f071151c09c30fcccef50185eea",
      "kind": "transparent"
    },
    {
      "address": "0x08C4326778F420d3832a2004D6f3F6A8E3a5BfC0",
      "txHash": "0xa332a58367d72a778c9211598bd797d7b31a48e692325f740a9c08902c340ae9",
      "kind": "transparent"
    },
    {
      "address": "0x939c6c1c5c64724742F1A56080A71c77dc9eB2eF",
      "txHash": "0xe36395e15c2b974770052cd93935d75df0bdb1af01b081c35942e8f33527d8a4",
      "kind": "transparent"
    },
    {
      "address": "0xC5A044c1A086901409c8184570089f7fb0467f99",
      "txHash": "0x31eddd5e18883d0181b77bd9a3a1e938c3a29f752cb2ba7ae40b6b91ede30654",
      "kind": "transparent"
    },
    {
      "address": "0xc30d8157758d9bc9889f146c1dA5D513E38B3623",
      "txHash": "0x45679938782a04e03dc9fc4a715dd82ba2e5d21b3287e82a7ccd794ae2f6554e",
      "kind": "transparent"
    },
    {
      "address": "0x2dc6c397Bc1d5Aa585DAd55080419a7Fc90d6C62",
      "txHash": "0x9373c298a8a6fcdb9b31c7517f2e89cce3f9c8410c92fd3fa9600971cf53f407",
      "kind": "transparent"
    },
    {
      "address": "0xeE23C8927757785b0D42A3585B9FC00088df94A7",
      "txHash": "0xf5a7dad334a7f926c12ec98a76cea1f010244db67ff673b280ffcd3a011d4c2b",
      "kind": "transparent"
    },
    {
      "address": "0x6b7D775e3f4D6A14Cdf820935E3e362e19C6639b",
      "txHash": "0x1c304455bdfee5403751e81b68fd4a6f78758eaf1a113e7f996bbc662593d5ce",
      "kind": "transparent"
    },
    {
      "address": "0x65b8C3dd3B7524ED144747ddf5eAC2313314a570",
      "txHash": "0x497a01d7ca87e353e2f25a3a717b1e68f364f9451556f3d0a010a25c5d3d8918",
      "kind": "transparent"
    },
    {
      "address": "0x2fC98Ab9eD2DCB0E5A54d33BF4415680d999eb75",
      "txHash": "0x7e69bfa87315e7ef7c9a48e2c2950c593fdc62d908d5c6a1e9e421f2ec641e26",
      "kind": "transparent"
    },
    {
      "address": "0xC59595e33B80Cbb7c4747e4c1F187810E4Ac9923",
      "txHash": "0xf8b87f633a0fef987121bcaab066df4f14b80860200c1d2ead39bf837d582c19",
      "kind": "transparent"
    },
    {
      "address": "0xa6B9CC17d87C6E5CEEd96647918756a5D6E6274E",
      "txHash": "0x92669aa2bb26815c2d47b88fd8efb30fa06f6621c0dc0564c06d6f8838797b6d",
      "kind": "transparent"
    },
    {
      "address": "0x6E346593D87c4D31BECe767611341aB48158b373",
      "txHash": "0x78101f96e0f6945d33cda6d7af0e0e0bb53a1d5af9d3d2f2a7d89c0e5f5436cc",
      "kind": "transparent"
    },
    {
      "address": "0x0253F0CBE8D5dbb479804f47313DC7Fd39872ffc",
      "txHash": "0x5b0cddc50ca148b8157bd078598ea874bb0bb460d9605cad653d0e8cc651a7d8",
      "kind": "transparent"
    },
    {
      "address": "0xCea01BDBbEdDEf5A1968cC1003678BcB0D3D458B",
      "txHash": "0x897c8478ae5ab67ea2fc80bb9b2f2fde21ab8dace4a0ffc449644bfd9c5e0c98",
      "kind": "transparent"
    },
    {
      "address": "0xfFa1a58F65C1F1B3096cCbD8Fd3e354C4d0Abc47",
      "txHash": "0x8ae9326dd9064a67dea4f0bbd6a6c65814bd523855646feb7e4138fd8a595526",
      "kind": "transparent"
    },
    {
      "address": "0x1E17283fDdDb16DcB2A2AD3968Fd9b98044c6064",
      "txHash": "0x4a2035b6dd16c47efa4dbdf8fec3ecda3cf975acb26046b64c341278008a4800",
      "kind": "transparent"
    },
    {
      "address": "0xc89F26E848dfD6515034954c6eAf851C3a6e0fBE",
      "txHash": "0xa3f9a2a0613b98f64be6af296bdef32601465851a46ed4b257ea3f398bae68a4",
      "kind": "transparent"
    },
    {
      "address": "0xEB67659fBE4b336b154B96a48876C3cE13ABeCFc",
      "txHash": "0xd74c9478cd363627bf3bcc8cff10cddd370e3273823b48181a4e5187ff49793b",
      "kind": "transparent"
    },
    {
      "address": "0x264F6489ed9639047f3c082F4243395f2c97EFe0",
      "txHash": "0x21d30ff0c06b940c7e51705098bd3e1f9bede785a719ec77d727906c50b0e647",
      "kind": "transparent"
    },
    {
      "address": "0xf7dD6FCb8BF3C4c9a00C4E776f108bB5362f92D9",
      "txHash": "0x3713ec01e701221e557aaa0c3eca0b0f62efe30a53415331e6204f6104af5533",
      "kind": "transparent"
    },
    {
      "address": "0x2C91004308112b0e07961bA866FB03b95fe1CF9C",
      "txHash": "0x9a7498dee88c31aabafa9cb12e74ff853f6a6c41792222028825fc2b5f922c4a",
      "kind": "transparent"
    },
    {
      "address": "0x806edd577559C89640161964f9A54D3CC7C51880",
      "txHash": "0x232efeafcdad8a7d508a4a81b6207fbfa08032eb11e5a183b726b437e7a6d3a4",
      "kind": "transparent"
    },
    {
      "address": "0xDc8CA5d3B4ebBcA3F611F19011C4093761a44539",
      "txHash": "0x07441e57d0a92d3e22a15bb12020fc6327e08f5f2a4604ee08b58f0cd83ae0c8",
      "kind": "transparent"
    },
    {
      "address": "0xD2299d4EF93fC2089cF5D9bb391E7b7dF3C8055f",
      "txHash": "0xd56014e4d96d70a5193e3fcf65a1a2936546f090c1dfd7466c0c454f7909b45e",
      "kind": "transparent"
    },
    {
      "address": "0x50735402659c8446034Cf98F9ADa5d41FA29adFe",
      "txHash": "0xff310e8cc0e037e343028dc0c7f215e9aba2c8bbba9fa99bd3194d8012e7ea7e",
      "kind": "transparent"
    },
    {
      "address": "0xACad51da4F274E3e119624306B737ad504ACA4aB",
      "txHash": "0xa8119d11e1a0252e5f4f2e4055cef930dad4f0222747ffe8ab8386d2db081efd",
      "kind": "transparent"
    },
    {
      "address": "0xEB1f13a02D4CdDCc369DACB7A19CDE8B87157D18",
      "txHash": "0x466533a1c6180a447e85af2c4e371cea46bfc496e5d5deaa3ae6dceab076f9e2",
      "kind": "transparent"
    },
    {
      "address": "0x67A49D0D30e843FA534e53906E51000BbCA52e66",
      "txHash": "0x226d5b0d878e81818c75725d1b8fb79c03877b04a77bfa23e7dde7db95c2b4a5",
      "kind": "transparent"
    },
    {
      "address": "0x103eB6bF888F1740ffeD560b87FAbb963756Dc86",
      "txHash": "0x81543e72c5534206df38d57843ff90bacd508e0910ba9f3008a74687b0b56f56",
      "kind": "transparent"
    },
    {
      "address": "0x50b65D51D9f4B47cE00655670d67F4847C6f6363",
      "txHash": "0xded63e8ebba6ab5fe6ba78d6dc51982e7cc1f462faec4051d61f2d0f103c1ca1",
      "kind": "transparent"
    },
    {
      "address": "0x69Ec62758A6358AB86d0cf7455Dbd657FaA29061",
      "txHash": "0x50a61930f62c7a7d81479dc7982f274bed21305fdcf8756014db1b230a6cfd93",
      "kind": "transparent"
    },
    {
      "address": "0xc6b26AcfEDFDb066d0D6f60D387bdfd8cCdAb05f",
      "txHash": "0x944afdb2d4146badb444b8ecae44c9c85122ba3c68eb8137cebd11585d60f4d6",
      "kind": "transparent"
    },
    {
      "address": "0x9C4f670e1fDd9f71a27B185d3aBCa62F76D559fC",
      "txHash": "0x4d95dba763ad25b4423f0b9663f5c0f15e5d2013ee1d220d2e5e82073cde0f52",
      "kind": "transparent"
    },
    {
      "address": "0x98A4BA0A9963B07a57525C803447210028e3A683",
      "txHash": "0x747c831c94bc68da159e167b2abc6533767043bb03bd288c4ccb33bf84f36061",
      "kind": "transparent"
    },
    {
      "address": "0xFb9a540E38619C27424F622Eb643F7903114e4B7",
      "txHash": "0x8e7716d7473e9268f28b606aa433a9ba95ff7d97a5a3f5eba0ff897427c9a6f5",
      "kind": "transparent"
    },
    {
      "address": "0x16F470489bFD20908191E7b134c75bcB088037Cb",
      "txHash": "0xcc72c7812f6b0710e1cbac4b2c5ed49096a8ef05a023eb4a6c4f2cf481bc87e0",
      "kind": "transparent"
    },
    {
      "address": "0x2163a3D19ac0b5274DB5BC639ef3D6529415c516",
      "txHash": "0xd229e4d194604e5f0c575c0d9f916f865d224f7bde75f1423d2b361fd817d4aa",
      "kind": "transparent"
    },
    {
      "address": "0x0B325a3bC77196d9267B69b483D1289039dbE27E",
      "txHash": "0x5dd42f2939dcdfb8c9908a1d30ef1960807431cbdabb5368260145abb54461c5",
      "kind": "transparent"
    },
    {
      "address": "0xbdfE482B791c3c8569B6994E2906Aa6A395c6187",
      "txHash": "0x5ebadc2e43584fa150f0142c5729f41a34110a31568cd5c3b1bfb8b4dc01b2f0",
      "kind": "transparent"
    },
    {
      "address": "0xaa6f5b8BD07Ad5F72a260Fbe4eeD77E69ccAf09B",
      "txHash": "0x4fcb5f6f7e2659413391d146cb2bbd01d1c90fe958b01396cce78d2980e5a4dd",
      "kind": "transparent"
    },
    {
      "address": "0xC6AF4C187f03002Ffd86E8feAb9Bf3B22A16cB7F",
      "txHash": "0xe34896a5f411f04eadd169d20ee8a0d5840adb57043abea6b2506f8cab00ff7e",
      "kind": "transparent"
    },
    {
      "address": "0x4EC0E3D53FD79ed80Bb910Ff7b0d38367e7a1588",
      "txHash": "0xc439f24322bee737be7abda59e6043f5f53d0070dcdd25f79a3600e718d1f9e2",
      "kind": "transparent"
    },
    {
      "address": "0x906b90D9BF3cfe0a54DD0BA94BB1a9F0A4FdB148",
      "txHash": "0x4188fb6540d590874c427557d22659e333019cf9320747b17918fb3f87182e5d",
      "kind": "transparent"
    },
    {
      "address": "0x9461157a148A0d3650aEE2e60990Da8BfACca556",
      "txHash": "0x3a633a2e0cd37fc90a386e9b0080806a984e4bfbc1dd1e6baba38319b8faf8cd",
      "kind": "transparent"
    },
    {
      "address": "0x032e316776142c60E1e4cd1008dB19aC62DBBe06",
      "txHash": "0x415ff07b661949acbafbf3265423adc0ad61fcc083b0daf72045e03ea608cd2e",
      "kind": "transparent"
    },
    {
      "address": "0x5bd2812c5Cc8016dcdffDEEedc125C90e056f497",
      "txHash": "0x6c0b8cb426dfad4bcea7eab26751860408b2c236eb1456d45c7aea56b637edc2",
      "kind": "transparent"
    },
    {
      "address": "0x55f603BFd52AcA7965f3CEfeF36ec3Bd28e34273",
      "txHash": "0x77990109fd6a44faa43f9035a1499e3820d9a22fd7cb95aec41cb92c6bf2baa6",
      "kind": "transparent"
    },
    {
      "address": "0x56A9B788b29Ff50c6e9eE2Df9007112011a31bE7",
      "txHash": "0x9318c1c06ea8b28587ae883c07222b7abcfe3627b61233bbbafc19fd732a4251",
      "kind": "transparent"
    },
    {
      "address": "0x2742aEf16539EDea360DeEa1e833E8F1a571b3B4",
      "txHash": "0x32ce7c9ff68ff622b36a48748006aac58fe458de0af3e4846c54759e7a10d928",
      "kind": "transparent"
    },
    {
      "address": "0x721C197e658BFf89b0b5366AaeC692cB00fAb029",
      "txHash": "0x7cd09ad3ac979269ba2d202d3c7175e4b6cbf4f37968f30bb0a9e92b9c2517d3",
      "kind": "transparent"
    },
    {
      "address": "0x3847C28DAB7627043dc6E1D0F447ECE843f857Fc",
      "txHash": "0xbb53d79d31d2bc6fcedce954c8e5a29f363f720b64d65ae570f0e098127ada68",
      "kind": "transparent"
    },
    {
      "address": "0x17Aa678f4C823aA60de02e8094cFF9d462d902D0",
      "txHash": "0x72bdd6f43c3e6c823d8fa48b2de651ca976ca1c6875ac4b4405b32139f7e5a69",
      "kind": "transparent"
    },
    {
      "address": "0x01eFf03c6CB2469a5A1C8F160F3358C41d31F59a",
      "txHash": "0xc900072c9e268ca1571d0cb461d4f47f888350d7140c414d756158ba90393ed7",
      "kind": "transparent"
    },
    {
      "address": "0x0e69EB1ab1a547c01453E1AF7e7Ffc7440C56204",
      "txHash": "0x1bce0d49b06e9c9d04a6b4a23f46251b448bb03e98326efe0567bb494982f0cd",
      "kind": "transparent"
    },
    {
      "address": "0x090E2ed463ff03196319a671E514347658554A02",
      "txHash": "0xd41abf48ddc2eb0a366c29436c4f8fd08117bb19085c9def293c0cffda4ad7a9",
      "kind": "transparent"
    },
    {
      "address": "0x8039a5ddAc53ceFC769ea35957Ca0be0c7bdba4A",
      "txHash": "0xd85e9f3aa4656dc4bc5bad9db9e4c99cbf0acf85db823e138644710148ef01a1",
      "kind": "transparent"
    },
    {
      "address": "0x78172A3ceF23265Fe4D9b840f4aB8DAe6195A7bF",
      "txHash": "0x1c9a5efd5679a9f3e753fcf8d38502d5311f68b0ea1c56f511071b71f3e69e17",
      "kind": "transparent"
    },
    {
      "address": "0x3784918DBbe9C5402c972B8bD099B435F9A071D9",
      "txHash": "0x0fca6052de368b906fac7984120f4f7b7b0d22baef415e597b34143bb2415fd5",
      "kind": "transparent"
    },
    {
      "address": "0x938Ead6F847Cd4c108C6aF9a365431979D82F0eC",
      "txHash": "0x4c113942afd296307dab16085d52079879623b65357e8ee80dbd72c16329bd97",
      "kind": "transparent"
    },
    {
      "address": "0x5A2C8651c6D45A431181B91b2155f338f3B3B1f7",
      "txHash": "0xfc242f7b1fbd0d7bfce2f453c0fc40ffd512428d8b4ace016b1cdf5ec3d99c44",
      "kind": "transparent"
    },
    {
      "address": "0x9E723C22aB07581eC5529C9BcabA81619aD3689b",
      "txHash": "0x208936a90c28c05e286975bfff8b23dbf16a90c1e4e209293234208906e211e9",
      "kind": "transparent"
    },
    {
      "address": "0x69e3A6d8D7358dB23Ac5974E4213C3Aaeb34C2B2",
      "txHash": "0x95ff2238540f205b8dc81f9df8c4cd10e17d5f80dc18785b60cc9c69cfa2783a",
      "kind": "transparent"
    },
    {
      "address": "0x60DD8baE389DAfD74165D0A927F63e626A88d86C",
      "txHash": "0x2b9029ef5b261a4ad7c86ea095cdeaeb66ca4333d52b1fecf57210298b201e92",
      "kind": "transparent"
    },
    {
      "address": "0x1aD59E05B6d8C6dcDFAd5A8FB01678b7803C660a",
      "txHash": "0xd337eaeca88ffcc08b8462bc0fead524df5d2d0ec53b653fe8b55ba0dbaef739",
      "kind": "transparent"
    },
    {
      "address": "0x8Da87C53FB11e4Ccbb4Ae8CF8453C6048cc7f16f",
      "txHash": "0x5c84a6bc9e93b39098ec36dc33cd9b2126b72227d59910afd284a93f4409f845",
      "kind": "transparent"
    },
    {
      "address": "0xf65A469B580FF7FF83BB8B6E7DD1eB209f6B0c17",
      "txHash": "0xda15b79282d52b69eac31dd6cfd943bc450e21892a89f8d9dbbf3cfdde7c9182",
      "kind": "transparent"
    },
    {
      "address": "0x7D7c330F4F71dA0B5e49B68e308170016b51eD14",
      "txHash": "0xf317458da405515305afbaf3def4de23d979340b1bfa74e0b731c181c4e5ceea",
      "kind": "transparent"
    },
    {
      "address": "0x5a9C0D03A1f89e59dc0C2D16c822EbEEB82C3d7c",
      "txHash": "0x8647a8780068c613c78b0061138f48ce6ebd4b5d4828370393fc176e72bd75b9",
      "kind": "transparent"
    },
    {
      "address": "0xe193Ea5505f4E1F8cb0988A56f2b2cC56779A61D",
      "txHash": "0x112914dd51541c1fd104b31507256b22650a89f56c92c90f52830d251fc9ca00",
      "kind": "transparent"
    },
    {
      "address": "0x986fA9956da04F29031BeAeC9ED5a46c711e91fF",
      "txHash": "0xbb1c5475c7753707303b98de7a1388f9934946e67c45679e1ff7cf1d357cffdd",
      "kind": "transparent"
    },
    {
      "address": "0xC6B17b4C6d8a1040D37232a2CfF4659d78353b02",
      "txHash": "0x09253d7ebf579628426fd8f51177814d8c4812e594180722a0a985bd9f7eee66",
      "kind": "transparent"
    },
    {
      "address": "0x373b5774fBdD976B95bAB752dBdF8904559d2303",
      "txHash": "0xda223c403200d3349cc78410746bbb12f98c5db507b835f409e089132e8bfaf9",
      "kind": "transparent"
    },
    {
      "address": "0x3eBc00a7C99E5f3413f811299ed2F46e6F09A083",
      "txHash": "0xbea3632811390c89cacafa35dcfdd643f0d1e87263cfb353cd854e81989922c2",
      "kind": "transparent"
    },
    {
      "address": "0x97eb4E86Ea05Ab7666fEFFE59eC095C94A4572e2",
      "txHash": "0xda1c0dbc1b11ff958eaf07acf5bb3031e38489d5ab80e85d8666fa76c9e60a48",
      "kind": "transparent"
    },
    {
      "address": "0x41C802da9944CDb16bb52630f6dc7D55e69b17D1",
      "txHash": "0xa4e1b3f12060433956b1ffa47bd2beb7614c4521a6d829f160e0742876f049b0",
      "kind": "transparent"
    },
    {
      "address": "0xA0b4aC4E63Ba8feAA051DF56B20B467e80b57900",
      "txHash": "0xbf103a1ca35dbf6306b1c752146863bd485e57c03dbd443ca3678d5b47882b09",
      "kind": "transparent"
    },
    {
      "address": "0xfAdab3f9b78BAa5Ed6E05185B7D118f240498a53",
      "txHash": "0x3470c344df74acc9a114a64323b30ecf05023ef9c0f375ba69234e462f0ef734",
      "kind": "transparent"
    },
    {
      "address": "0xb99aEeD23B3F925417FF08bEEA9293C6524119f0",
      "txHash": "0xcf0b7b8f79d504017fdd2e2d208712b393bc9408c56f5f53c18d8be890d5c72e",
      "kind": "transparent"
    },
    {
      "address": "0x04452caeB6B48339a4191a228F10D7c93BC36242",
      "txHash": "0x1f464ebe7ea1e2e21dd5bb0b73814e02313128fce7ac801c6212725e7cb299f8",
      "kind": "transparent"
    },
    {
      "address": "0x2331e76D288964722051F3f354Ea5b7A48a1FCBc",
      "txHash": "0xeb17550a9b87a338f0f14db840903460b8383053e9debd5b5dec391edf129d58",
      "kind": "transparent"
    },
    {
      "address": "0x500baC6EA268C387036b0AE0f6D3c683A86Cb3Cd",
      "txHash": "0x1c5c357260d608edfb0b9b8884360ad4138b1c89a5f1c3b97249d5c52c7f6399",
      "kind": "transparent"
    },
    {
      "address": "0x0DbbA0ac24c11Fc07F912d8dF3e6EBFEeEe9b133",
      "txHash": "0xe35e490c8627446eddb35cc6095771ab4e76610cef120954d75c6ba7f4924413",
      "kind": "transparent"
    },
    {
      "address": "0x7eFFA0af2cb1d506b603eab232a661171aBDa444",
      "txHash": "0x8c913f5d6a4a099fbff87dfb01dd2ec0b9b8e98f37f019b208cd3ad1af5b2d0f",
      "kind": "transparent"
    },
    {
      "address": "0x07F23E46AdA857c17B1eA21d8d49F0447C5ad3E7",
      "txHash": "0x152ef0dd4f1f08d1d30b6d971eb2b0835b803043a4c797dbfaaedbb3e7b86516",
      "kind": "transparent"
    },
    {
      "address": "0x1dB6C9Fa56Ec9098da7EF2ADa179E7F717067C75",
      "txHash": "0xe8acfe412a26951ecb1fad0c6012342099e2b91199f2d9953f993cf554720f0b",
      "kind": "transparent"
    },
    {
      "address": "0xa5E0CdD0C4f4d58Ec36C572401414b183264C10F",
      "txHash": "0xc717ee0792bb05af07f2f48da8ea7e4fcb96099d29d81f887612485a2298881c",
      "kind": "transparent"
    },
    {
      "address": "0x4490209a4fdDfEAb2E37e01755Fcd282198b63e5",
      "txHash": "0x267f67686b5d2c28079a1aadd0b786c391b2aec40a739ff16b64d081b2b76ee6",
      "kind": "transparent"
    },
    {
      "address": "0xEaAb5173f71f59ff885f09eF5e32E7cDb1b9FEF8",
      "txHash": "0x95d941d1a749a8fe39bac515f235959235e2ade13758f674827e866c8dae9e0a",
      "kind": "transparent"
    },
    {
      "address": "0xA578A9cA755C19c4B513FE1538eA61f7d06275b5",
      "txHash": "0xf50e24ca8323babde374a20d205cc66aff99badd5a5a1aa5a446f4639678524a",
      "kind": "transparent"
    },
    {
      "address": "0xaf0EfFa3C5f8E503ECAbB475D6CC323D4B875ECE",
      "txHash": "0x9afc651c2898a46e34dc2a35ee4da8c4681b45982fcb5fc06330dd4e776065ab",
      "kind": "transparent"
    },
    {
      "address": "0x7EBb92dA7a5449F1C4aD0EBD6E9741b0C4CDe91b",
      "txHash": "0xba5750d99184c36974de18161903b5705c52a6aaf30c6d2b5b349bd858742598",
      "kind": "transparent"
    },
    {
      "address": "0xA0b981ed75FE8b3B09878D69Cde6F0dE30646056",
      "txHash": "0xb3e319990e25f366d0d85d8ec79ff681bcbe7981ad116d6716875d58387732f5",
      "kind": "transparent"
    },
    {
      "address": "0x14d1ba759C21CeBc220C0FAD402BE066CF765fAB",
      "txHash": "0xc678a7c31056a9174d1d6d3783f6b77ddc59c07d53a2748eaeefca60815d606b",
      "kind": "transparent"
    },
    {
      "address": "0x65b9a5703034f5Cab33098417C34FAA0444523A0",
      "txHash": "0x3819f04c9024cbeef60e5d9f0b918686cf44f827ca90e86065b26f11fef0f2d4",
      "kind": "transparent"
    },
    {
      "address": "0x4A80F7Da1C6770d0237606755b070aaD4577D581",
      "txHash": "0xda6b896cb79af86563398ca609f90e0e354bbb847c279d99c7d300524ffbba3e",
      "kind": "transparent"
    },
    {
      "address": "0x6eaF788f045d9f8774c68ab609fa59a4d27Bb752",
      "txHash": "0xb1194530eef216c1320c26a10113f396339787b3c49329f7e64a1b64daa7103c",
      "kind": "transparent"
    },
    {
      "address": "0xaC4d1822d790a47FDd04E01a8C3003c5Bf33AC2a",
      "txHash": "0x2a3b2d696854941fae1d02bc0208bdc3cdb2e2a92076cd2147eabab92a225e9a",
      "kind": "transparent"
    },
    {
      "address": "0x908a27297fdf2F578b15406de4fcBE8b5644cDe0",
      "txHash": "0xb152e7f65cffd110495f530e9cc59498e08c0dda6364893d50223f07723680a1",
      "kind": "transparent"
    },
    {
      "address": "0x99Bc297D6876d6C363a20648bb6f972Fe895f7Cf",
      "txHash": "0x689efa129ed24209d1c1aa7b21da5a82163800f49a9fe221f8af3c0411c25d35",
      "kind": "transparent"
    },
    {
      "address": "0xff7D917876D4eB1f7E8B238678A361B4D6D2ddcA",
      "txHash": "0x1fd06b2ef5dcbdd2b61a952c7c72a3249422ea35451c4372231b2d7ee012c98d",
      "kind": "transparent"
    },
    {
      "address": "0x40C8B28519BAc218DD134cFa2Cd7BA86a94f9D58",
      "txHash": "0x0de0037d46a82450fe492ef125bbd0ea7b8ae82f71c1a6e3e287d386eac2c894",
      "kind": "transparent"
    },
    {
      "address": "0x6407AC1BD82497a2045c148a522B66134281129d",
      "txHash": "0x1e7c6624124d03ffd9c01cd00c4c04f28590025b312ce020291a6f72455384ca",
      "kind": "transparent"
    },
    {
      "address": "0x76b2447b8Db8dE14FD3453730c3De10aD89Dc476",
      "txHash": "0x1043c7f95698701ce1882554df9a02e1de584e5425e75c1391b5a2b13e4334ee",
      "kind": "transparent"
    },
    {
      "address": "0xDc3A8b0ea236a7035900661Cb07DD4387a9D4e1e",
      "txHash": "0xfbdcbc5ec3d1c900b3cfc5c03c3dcabc5dda1cb8ea74bcd9206fb5ebcf3c2837",
      "kind": "transparent"
    },
    {
      "address": "0x159B94f207b511E603A5277a8aF22909AAa1C7F5",
      "txHash": "0xe3686beabbb81b6dbfa5bcb5edb30e7ddd7d0f1c03944069ac02559384e14554",
      "kind": "transparent"
    },
    {
      "address": "0xeB7DF8bEE7654216Dd39dc861F64aB17865c253C",
      "txHash": "0x2b0f34ac3d7f6284b287e9b3a741da5d32c50c2719c4fd3f053c336aeadff38b",
      "kind": "transparent"
    },
    {
      "address": "0xA2550970Be228eE3Bb2e263e0b285cd63b9Ce975",
      "txHash": "0x09ceda3f579747f7f811debe41625e570198bdd8dbed262dae07eef1165f335b",
      "kind": "transparent"
    },
    {
      "address": "0x3CCE42FE347c6A21B2Ba714332089266913235E9",
      "txHash": "0xea7ab03732269a47c9d89ec379a64614a7718db2b3503608c404318c52748b4f",
      "kind": "transparent"
    },
    {
      "address": "0xaA44cf30100dab12c4985f427D6E6629A1B10517",
      "txHash": "0x0e1a669820a7fcc91e2d35d4658ef2fcd521ce8eb9a095b93e254542e67765aa",
      "kind": "transparent"
    },
    {
      "address": "0x6ba1A2e591c6b0EDeE2F44ba4Ad8EaA03070fE03",
      "txHash": "0x02e4dd2ab945dc1faa1b796c5d72429895c7ff9289bfdce145c291daad1d3802",
      "kind": "transparent"
    },
    {
      "address": "0x226aCc05a5c5d781cb91Ca88E40b01FeaF204640",
      "txHash": "0x53165121742a60390bf84ca0e15a40b790cda8897604afa01737c249e32badf2",
      "kind": "transparent"
    },
    {
      "address": "0xE70e1a44330939d2ca0A55264b37AaB9d3DE825C",
      "txHash": "0x6ab34f1d95d2e3e00ecbb0f832566be937cf1e78ca7c8e8ff23d7ecf99ba3ee2",
      "kind": "transparent"
    },
    {
      "address": "0x22c66FF2e7387739543dC7BEAAdd6E2f1e01670e",
      "txHash": "0xf054482177f989dc91c76d94c7012f47fdd0f66781ff4f54add4031abda89e9e",
      "kind": "transparent"
    },
    {
      "address": "0x8834BB99e59451fB084180bd74C0129337f06B2d",
      "txHash": "0x435098c31b28fc627573fdcab63dade548ab63cbebb9c089ae0ed25d0c96e61d",
      "kind": "transparent"
    },
    {
      "address": "0x1119273eBEa6D1c7f02d9e678Ab952d89C8c0324",
      "txHash": "0x6629b83e1574485f939bd233c36767dcfc4c381948bbba5a53cf1287b9e2275a",
      "kind": "transparent"
    },
    {
      "address": "0xB2a213dcf4a2bEaeEDEcE739F353855e234e02d1",
      "txHash": "0xe1f52e0f48403b569e11d135eb1d5d20b6cd905e1a8664ab085bd7fdcfa256ad",
      "kind": "transparent"
    },
    {
      "address": "0xCCF0ea2797cdA32Dddf2Ff7226067b08306E5899",
      "txHash": "0xfe1e51abc9c77d6ddb0440339b09d0b30edf3be8e6c3bb3bc0de78d4ee20bf20",
      "kind": "transparent"
    },
    {
      "address": "0x5E939E9c5E19162DF06F1CF544f4bC394E51C002",
      "txHash": "0xb514d56aec3ac23955be61ae7062af0cd873d7041af6e72806b0b207d13b7cd6",
      "kind": "transparent"
    },
    {
      "address": "0xa8f8223d66fF3F6f1548b5BA8c962E6d45a02dB4",
      "txHash": "0xb80a09425970b4138d279ca88fbe58bb903dba062ea596260b197756e112fc65",
      "kind": "transparent"
    },
    {
      "address": "0x1a2560938A586A0001732A246fd33c6F0026f230",
      "txHash": "0xddf048a8f69c9fec7787d12e0e579836a735cd3c7d51f2f5f26f7a0fab8985d1",
      "kind": "transparent"
    },
    {
      "address": "0x16D96502400c534E70eDA3bD45A1B314aa2cc53d",
      "txHash": "0x9c5637f0273d3536c995921841a68f208bbcdfc82bf66019410032bf60749f28",
      "kind": "transparent"
    },
    {
      "address": "0x902395Ef7A4A8D99d17C5429eEaeE24C3cE6cd1D",
      "txHash": "0xd2db0c644bccb3c6f8c2c6d2c3bd020c1f4c1c15242d11d676a3da6b415d1e82",
      "kind": "transparent"
    },
    {
      "address": "0x0F4076bC47327B4Acea368CF293b747c69f0162a",
      "txHash": "0xa060dc7e5a96080667bab1dbb8ae99983c535f66c36e2cba5308b535dd5e0008",
      "kind": "transparent"
    },
    {
      "address": "0x49F4726b6Ceb7eeC40b8775B343a2dcda67fE8e4",
      "txHash": "0x1658c91cab4eb0cb89081970698d5bfd5f10408d2703aa8bed108d5e9eaaac51",
      "kind": "transparent"
    },
    {
      "address": "0x932e1b44036896250F800E5446dC36Abd9e966a8",
      "txHash": "0xcdd437a748d368e90aa9fe1ae1923dd9c5d8d4df610fc49f4a90ee4d3d276874",
      "kind": "transparent"
    },
    {
      "address": "0x4768f7388Eb4aCEfEd230Aa99ff4Cf8C7dB8E162",
      "txHash": "0x25e6af7739a92c4837841b5e206fe9ae2d4ddf4ec112f465b78d8cff112a5594",
      "kind": "transparent"
    },
    {
      "address": "0xBcA0FDaeF14dA2f0C8ddB547bccE523775A05dfc",
      "txHash": "0x5c88b652a92a96a86d833e40a26d8819a399c037bb7f5cfb27443191caa06b24",
      "kind": "transparent"
    },
    {
      "address": "0x8c880EC9D8005De401B80D860aaa4BB6A00EF00D",
      "txHash": "0xa1f151864d054d9b20a332ace658cbeec9b2296e0711306264897b91f1141ec8",
      "kind": "transparent"
    },
    {
      "address": "0x797b5738957B84Bd2F89D61849e679BfC95671c7",
      "txHash": "0x33ac54f80ea6bfb3f8ed619d6db570efe52a5331c5db4ea3410e0439578962bf",
      "kind": "transparent"
    },
    {
      "address": "0x2d7767b9393f9c5b592c51DA57607EA41eC7fB6f",
      "txHash": "0xcfc66472c60085ac75fa5fc60eabf3d62c6c79aec90b1ce6fbafdee0b4409797",
      "kind": "transparent"
    },
    {
      "address": "0xb1fFBbED49D3F239Ba0bC64E5e03baad47D7A511",
      "txHash": "0x4432d14f46c9d5c18a3027a53387a2d32e9da15d4bf7c5a15e9fdf68f12ffb02",
      "kind": "transparent"
    },
    {
      "address": "0x651b5CbA7399e00a94bD8536DaD783355073D117",
      "txHash": "0xb134b1b9ba8c65cf7cdf1d93437b9fadedfe4075debcb61ae7449f764fa14b3c",
      "kind": "transparent"
    },
    {
      "address": "0x26bB7Ec221ae072Ab4d91f609Fe164bA962e6AB2",
      "txHash": "0x6cdc8f62fe580d69a343187036c3aecae3afe6a8c6362ec77e61ebdb75083123",
      "kind": "transparent"
    },
    {
      "address": "0x9ba2a8cC7F19d3DC462addCb2439851768B28b13",
      "txHash": "0x592b811af279d9b5f6f6006878dfcdf98f9241f00784187ae1247d41720281f8",
      "kind": "transparent"
    },
    {
      "address": "0x6A79007c45e89E93813b55D70e80785ccBC3D007",
      "txHash": "0x19d16278ca6ca70038a8f1142cd5323cc4621f2e6d418e459a568b5c7d9dd81e",
      "kind": "transparent"
    },
    {
      "address": "0xFCAC237D4C3d7DE6cF25902f66F2aE8E9a21BB7A",
      "txHash": "0x2eaf13b604ade93402244e3286521e4984e0541e728b60a3e67ce8323455e61c",
      "kind": "transparent"
    },
    {
      "address": "0x1A9AEC92a007Cc1Ca5C07623Dc330a3dC99b8E20",
      "txHash": "0x316bec9910fcaf4a5434cd45ac25defe1a201d49691c7a19825646cd02912868",
      "kind": "transparent"
    },
    {
      "address": "0x962Cf18D45E08fb35F493f20eB05e6dAf3C0686F",
      "txHash": "0x3694ca2ac40d53be39eb2255e16c66165330badf1f1653f07b277747423d204e",
      "kind": "transparent"
    },
    {
      "address": "0x2394f814fA2be0F89e561b526428Bb6552a291d0",
      "txHash": "0x783bac824d8df1a390a93d171627c2598567dca3fa18ac2e888453bc5e57999e",
      "kind": "transparent"
    },
    {
      "address": "0xce44D8D916E30a25c4752B29990839A43D3f8f56",
      "txHash": "0xc9283f930de24f6b7e76bed5c27363163109a888d877316a491add328477641c",
      "kind": "transparent"
    },
    {
      "address": "0xdf6266563b34e73D60e8E8446c71E9D1f4De62Bf",
      "txHash": "0xd051622a6bb913c3ec1f82addd1ca8911617f0ae155acdb454e6a0a40a4b411c",
      "kind": "transparent"
    },
    {
      "address": "0x05b021776Dd17Fe75fd14e0BC45EDf7Cf823f6a7",
      "txHash": "0x6050ee3437329f6dcfebd9b940ed4abf312b8c82bf973f3ff17e40f45ff43ee7",
      "kind": "transparent"
    },
    {
      "address": "0x50721Ae401Bb48E9Cf2E86Df455689dE1900A3a8",
      "txHash": "0xb6c060ddb516d3c407ebfc4be28d668d8e3aafda5a944ee8a208f47216c3c4c7",
      "kind": "transparent"
    },
    {
      "address": "0x6CcA218CceEE328F7aC684220E27b29D2a658de2",
      "txHash": "0x762ef881ef213ece9d2c17696ebd75145b6bf5b631adbfa1307034338e069b94",
      "kind": "transparent"
    },
    {
      "address": "0xF820B9c9ebaCA677158Bf495003aD44ebcF944d2",
      "txHash": "0x10c1679f7ebbedc657b24deb74b13aa02baa464f2944ef01314d0879485eed65",
      "kind": "transparent"
    },
    {
      "address": "0xf74e1DC45d1f37207Ff891c8Db7F568925e78e64",
      "txHash": "0xa2097e2e71a40abd1a036998238c5563770866e872fdbbddef735a5049ca5155",
      "kind": "transparent"
    },
    {
      "address": "0xE7c75a4b3FC857CF0D9089F2a9F1769f7090263C",
      "txHash": "0x9612663eb42cb297aac8b5643d18cddef6a3161605c3e11ed709eedb66b054e1",
      "kind": "transparent"
    },
    {
      "address": "0xfBCCA3f4beEc913A5290297E9908794DcC0f7583",
      "txHash": "0xb4ffcaf13a313998508b5825ba3ba4a4179ca51c674c69e70baa94454e3a869a",
      "kind": "transparent"
    },
    {
      "address": "0xc262ea7173a3e68953b34F60bd5e7eca32ba5be3",
      "txHash": "0xfa4227b2cc32a7c593e1da3e6132158f63450ebe3a690cf9d66a2e33a3112bdc",
      "kind": "transparent"
    },
    {
      "address": "0x6e9107387b4825954abcD6ee90e0486Ca7ee4368",
      "txHash": "0x1bd2134142d7e2934f75366695d9355c555d5bf228753888674a90173b546593",
      "kind": "transparent"
    },
    {
      "address": "0x6F91bF4FcA75b67e2B5fad4687581416D242a2A8",
      "txHash": "0x4f36e968a6eaab16265955cf5c5ce77e1e4e575af3a35de4ce0a82fa7105b5af",
      "kind": "transparent"
    },
    {
      "address": "0xcE4Fdbed4046331f3113B8BCbb956Bd55480f803",
      "txHash": "0x4efea859490c0fddaa44f3d462e0ebcebcec5303125bdeb9cf7940be0f20521b",
      "kind": "transparent"
    },
    {
      "address": "0x6f6cc28439972aE3aB456D615a88776E75f107Cd",
      "txHash": "0xd1df99be2a1f1e6fddf427ac1d83f9b17e9bccfc701d2af24b9e31129a53c64c",
      "kind": "transparent"
    },
    {
      "address": "0xAfF42c45Ce061394b147900A5741721d8282dAdB",
      "txHash": "0xdb78ed6b03337cfc254b6f269fe363736f19e4d6c850c564e3eb00fbcdd0715b",
      "kind": "transparent"
    },
    {
      "address": "0x4a29b3e4eb9fF80F6Da2D9a659B683478E776357",
      "txHash": "0x31f1588651fecbc0c3256c3b4061d7ceb5607a3129a7e85425fcb96afebec221",
      "kind": "transparent"
    },
    {
      "address": "0xaa90AF6741E7EB0Fefa6d1a246F9E905cfEF5FA1",
      "txHash": "0xda05d254091e7c85bbf9bf462b7f8085a09fa23815474168475c01c2f36486da",
      "kind": "transparent"
    },
    {
      "address": "0x80e9aaaF1B69d438c5866B981501b6f95f0357bE",
      "txHash": "0xf28468d1f6e713e4bebc724fef0c8bbcd0e3ee52839129f1ea6dee7562a8f644",
      "kind": "transparent"
    },
    {
      "address": "0x0569ADb89e2EcA7024584ececdac63eEe30EBc9C",
      "txHash": "0x882d0c2ce214938a75889abdb38ec0ceac4f8f31ec51ef00b6858cb6b8c3ce89",
      "kind": "transparent"
    },
    {
      "address": "0x270a8b454f1E73e9a86a694418381EfA126a600c",
      "txHash": "0xeead672fe860e592078557f1bd97e4b265dc6d7bf9faba9c38b6da13b3009b16",
      "kind": "transparent"
    },
    {
      "address": "0xF17760EaE537c042EA0523f395FAA2cB2B23A6A4",
      "txHash": "0xb1a3b05defc321d40c6bdb4031d36026a9068c00d41cfea7d2358b7823b11ad5",
      "kind": "transparent"
    },
    {
      "address": "0xfe8A1286f5078d183DdAB5Bb24FD8d785F279684",
      "txHash": "0x163b48e3876578536fa1efba0faff2119ac67d78cbb2cb21f31bd688d1c872b4",
      "kind": "transparent"
    },
    {
      "address": "0xF2BFAA3EA1a2c149Ff3bfA2E2D3B445840425b06",
      "txHash": "0xba93940deafe75aae4d74956147f5aa0446224f78fdb87a5af844250c7d78385",
      "kind": "transparent"
    },
    {
      "address": "0x5c37BD019D9481446E2D84DB4b3e3A8B59bDb328",
      "txHash": "0x44ef4b4c0d7b788ddf0f2c16df558f90e7707df695cfbdccc87c155ade5d401d",
      "kind": "transparent"
    },
    {
      "address": "0x6c35A34afa39e1Da6Ba94784ea1FEdd3FB625f15",
      "txHash": "0xe63324f34ec23a492accd7998eecbfefdb57febbbf3dd5ec02623a2dd3fe5e9e",
      "kind": "transparent"
    },
    {
      "address": "0xb0957d8FBe79f08EBf03fDf25e06f7277665a09F",
      "txHash": "0x276edceaaf65beb419f3ce7bc03ccf344d705e4614a4bf576c2d0597d5a25748",
      "kind": "transparent"
    },
    {
      "address": "0xCB164a413689C5146ce9fd3adB1d6e78f5F236dB",
      "txHash": "0x928a60b611c8dfdbf742448aa2568de9052c4c248d2dcfe120294db988c0581c",
      "kind": "transparent"
    },
    {
      "address": "0xD6f35bDCb16f9186AC7043d2D10C15F26Cf4ab00",
      "txHash": "0xcf774c5a03f50af72279a9f5c32bd82b03ac8bfb57c375eec6214e8c9155fadb",
      "kind": "transparent"
    },
    {
      "address": "0x2e0595b74069500e227392157302F8A902dF2edf",
      "txHash": "0xbe93c6266f2dcf2db0fd02855af38a018f3ab4a7bf19c937013f705f74e80a6b",
      "kind": "transparent"
    },
    {
      "address": "0x927E75D190985C9Dc7Aa76184B9E45AE56DDdD3d",
      "txHash": "0x79764e602bd6a1f6fc454e1034e92a7c649191862fd3edfa4ccd79740edd9cfc",
      "kind": "transparent"
    },
    {
      "address": "0xF74a7DD58b0853154a9B9A2C10eC402787aa6774",
      "txHash": "0x4fb212f9feee7dfaa2d762d20c01feae058a6ab94c95df685441d749f7e1f76c",
      "kind": "transparent"
    },
    {
      "address": "0xB57CE44C7A3a132720d09b40d34B63197f4fb846",
      "txHash": "0xf8636cdfb81256f517bfa3894873912761c6fb09f66a3d62db569f2a96592b8c",
      "kind": "transparent"
    },
    {
      "address": "0xe7714A7D96E965168712EA3463C54BAb49C25ee7",
      "txHash": "0x71e8adba544c48016df6e479da1ce324a2560161759a8b37efae9c015fb204a1",
      "kind": "transparent"
    },
    {
      "address": "0x11C1F193F40b961EDE676711e883B943e7c26c9f",
      "txHash": "0x7cab162db7c4cd2a18277a375a65d5234d1d5915a88bb9c3362b85d551ade2ea",
      "kind": "transparent"
    },
    {
      "address": "0x18693609C56900eFd0415A190d3B31A9727d201D",
      "txHash": "0x8d8e3a2407785cd3801c7e0afd55a4dea0081dc28df71b72a573b5e96a35343d",
      "kind": "transparent"
    },
    {
      "address": "0xAbE1EB275218fd9b88013Cc3FdfD3D7B73146dC1",
      "txHash": "0x80bbd5b3a26e3991d9948ea3eb0990daffeb1e278e9281cf313fb57198d9d5ee",
      "kind": "transparent"
    },
    {
      "address": "0xb7B046145FaE5D49765F8397c5461AB0f48219AA",
      "txHash": "0x0193f73712d6b85c2ab3f9aa9236e328d3746ff315ef24a6236882670b444cb7",
      "kind": "transparent"
    },
    {
      "address": "0x5ff9D06863F1dd84bcFFc64608c9F4b20E2eAE64",
      "txHash": "0x18339717da6415181abc5affeb32527e7917fb40730f9e77106d30bef431ea26",
      "kind": "transparent"
    },
    {
      "address": "0xbA040902f71d7806E0eAf1cD2B244f5208d19621",
      "txHash": "0x5032283f731dd87e2522a41a8a9aee10dd09998e0cfc7acf3a487fec11d6c432",
      "kind": "transparent"
    },
    {
      "address": "0x86f4c389541C0B961A874D6DfA943386445d1d25",
      "txHash": "0x770f7e38b1deda5380b0e8199a85e4d9d46c8234dac8fdbcdb55b6b4a47b39a5",
      "kind": "transparent"
    },
    {
      "address": "0x3fb533B869c7eC3C1Fec993a8d694A0b5B41287a",
      "txHash": "0x8edbce60b13281b16f42b013279a3a5015a4ca00b96da26c68d73ef6876a864b",
      "kind": "transparent"
    },
    {
      "address": "0x080fFd36ee0022fa47d451f4d8630BD1762dD9A1",
      "txHash": "0xd50c16dd1529f863f8f15d21f10574114cb5e547a04826c00dd40b38fcd84ece",
      "kind": "transparent"
    },
    {
      "address": "0x6dd3B81345afCeAda05c32142f81C5A18BC187a8",
      "txHash": "0xfbda9c713c0bb5604bd883960eadd08aebf9711bf348bfcb9e5270c05457f87a",
      "kind": "transparent"
    },
    {
      "address": "0xAd27518D1e23Db6bCD961c6f2c1c06c1b4a2afD4",
      "txHash": "0x2d0b8050f494313439104bbfbed2db781dfa8b7d34d53a12e8578e0e819a5d5c",
      "kind": "transparent"
    },
    {
      "address": "0x8c90DD670124971173eb0bDe9723Ed3Ca581e8dd",
      "txHash": "0x953223bd1dec92616ca80f559ef98e7216e82d10c1966ba78aeb6037f7766c2e",
      "kind": "transparent"
    },
    {
      "address": "0x66Ce930B941b2B06ADB4b66C489c8Be2E982D8Ea",
      "txHash": "0xadeba77917855916d2040661e2856addac8f8d9353f8b41435d1acbd048bb485",
      "kind": "transparent"
    },
    {
      "address": "0x357e3da7D157BF7836f472Cec0B913395895eD68",
      "txHash": "0x45d8ff0e97ee046c88cdc34fee34afe3b0033f60e85d3f98512bf516c978c9c5",
      "kind": "transparent"
    },
    {
      "address": "0xa303819B3b7C1bd3DE8dBf18Cfa9BE61b4a27820",
      "txHash": "0x7d8f25336082c4f6bbc911b7010a559d7440a2b51e748b003e9e4595efc1a809",
      "kind": "transparent"
    },
    {
      "address": "0xCb6E540653194722859527621c9cE06DF7244190",
      "txHash": "0x759af9925133317a010d63c2343ed732c67d44b7314a00e45ad4578dba1618c2",
      "kind": "transparent"
    },
    {
      "address": "0xcf7C59E5EeBAdfA17fC9639c9834aea3e05D3512",
      "txHash": "0xb70298d6b4e61664bd134159e5ffda9ea1c0389303e9fa96003c88270236e0a8",
      "kind": "transparent"
    },
    {
      "address": "0xc02fE7e23bfb9f1db6c48D3a5cc9753b4cA36704",
      "txHash": "0xa3734e1ce32b21eabd673ceaa1e021af8e57ed48cd2bda7b8a04dbc8dcec4962",
      "kind": "transparent"
    },
    {
      "address": "0x88DA8F5d35B50f9D1743588d1AD3765DFC1e75Bf",
      "txHash": "0xf90dffdbf076744a69b0a8655af9f37699315c18cd1204865cc3b0e37bec8b63",
      "kind": "transparent"
    },
    {
      "address": "0xA8c42b94a64e717e34B9e85A536D846ea084Fd9c",
      "txHash": "0x866fb527b920cfb30049757cabb7fc8646c2e8084997db4776ce2d6d1ba7c76e",
      "kind": "transparent"
    },
    {
      "address": "0x940BA9924acfe90025D4519F01d1cC007c622121",
      "txHash": "0x5389dd5bb91919895060d477eda87131cf3c22cf4882800c4774dc732ad0dba7",
      "kind": "transparent"
    },
    {
      "address": "0xF1FF3C80fB69668f6C194B075b5D61846bD9a591",
      "txHash": "0x5a6510af5bb2c69bf5f132d4a24a1b2a657b5ee51acd89ca07b0db5eb04729b7",
      "kind": "transparent"
    },
    {
      "address": "0x86CCa2f3E83Cf9F9E0E8ca8B94e243D8D0782852",
      "txHash": "0x6ad23a860153e20f87627d20a53b08ef3aedcedcd7bae60f320cd944835e5498",
      "kind": "transparent"
    },
    {
      "address": "0xffaeb8982A54Bb45678e40f8D680A587Be3ca801",
      "txHash": "0x887db9e935c1408660916805131874d0e11d5ddbbb9d38e3cccb40f80c7d691a",
      "kind": "transparent"
    },
    {
      "address": "0xD17B250Dfcc0eea1f6595D36075C70Ed90cB0f0e",
      "txHash": "0x94325a58c0c3fa4cc33c0dabea61bd743e9c3c42bee09695bee07e13826203e6",
      "kind": "transparent"
    },
    {
      "address": "0x49577E701adB3FfAdAE1e9D3979169Fed33Ee57b",
      "txHash": "0xeccbaa4c15bf24efd32e829cba5866fb08fd78bb51a926585db906c2d7b92a63",
      "kind": "transparent"
    },
    {
      "address": "0x42C51176DCf0785405198F854232DC507BC19D87",
      "txHash": "0x1b13e535f539feee05c27374f2f4cf8a92c296927f808ffe66a03dcea7250aa7",
      "kind": "transparent"
    },
    {
      "address": "0x62298022c5260C466F019180b23a1fd70d19E82d",
      "txHash": "0x99883c4b4108db4015f32b73f1684eb18f487ad42507205631f964ac332b08f0",
      "kind": "transparent"
    },
    {
      "address": "0xf16cbff7Ba6723db72898631a2227a227ce2392d",
      "txHash": "0x0b64d6e32388f6ceb1df99df8738aefca4571e8ec52b06084f29698baa4a987f",
      "kind": "transparent"
    },
    {
      "address": "0x4875492CdE2faEf1Ad8B792697A2496AeD8448BA",
      "txHash": "0x6e48432225c678d6975c81826b2ecab03ba1103fd383a9815d749664caf1d905",
      "kind": "transparent"
    },
    {
      "address": "0xc6B1EF301bb2aC2d73201a0c0c8C0623280dB86b",
      "txHash": "0x7959ab7899bf0d6ac6494e1c859d2747a501d4011a9aaa1b52eed2d422018d38",
      "kind": "transparent"
    },
    {
      "address": "0x0DA317C646Fef22E6081f1dFbAf9d464d6162DBe",
      "txHash": "0x0b5e56ac9dbb68d5e24304fe5d0cb8de327bbba165ebcccdfb1dce754bb9702f",
      "kind": "transparent"
    },
    {
      "address": "0x28e14B1a1Bc4aAEB9045915f3dDB0C4aAd16E9Cc",
      "txHash": "0xcc445940bc553f022934ae2bb839774e65b3335a9b3e9b3ede1d5d699885d44f",
      "kind": "transparent"
    },
    {
      "address": "0x76E3aaF5e42173f5A6AcDd58Af775911f2a188ce",
      "txHash": "0x42a7e172addbc237390bafbbd65e0689bf3c610585bdd257ccdbfa938cecad30",
      "kind": "transparent"
    },
    {
      "address": "0x0a23cCDA4c39A5fdA36Bc023E50c8Bb13Ad5a33c",
      "txHash": "0xe9e71eff752ee5250f9d55e1073fb3f728806f97d661f4a8a457a1777690ef2d",
      "kind": "transparent"
    },
    {
      "address": "0x8a7A7634944Aa29e78808a02D2F1929fF0A95D8d",
      "txHash": "0x95a362f927e0c23bf49750326758588ad8a90aad0bea855639ed936a249cb5d6",
      "kind": "transparent"
    },
    {
      "address": "0x22B08Bd4C10fE743E47610adb93bcf3C3C371727",
      "txHash": "0x7d5fbe567d23364b261df231a552765432081a4d338cedd978c353be7ba9dd1c",
      "kind": "transparent"
    },
    {
      "address": "0x12841A12561B057FCEC2155657cE6bB24B34c0E6",
      "txHash": "0x65c3a355561db913ce709997f22c269466e6f511110c40ba22d58f769f325e6f",
      "kind": "transparent"
    },
    {
      "address": "0x957404D6CC450048DfEea92C3EcaA6Aa5b1823B1",
      "txHash": "0xad8407871b4eb5c03bf62d62baf65e1c1d02832449a0c65715970796730f03dc",
      "kind": "transparent"
    },
    {
      "address": "0x34BEDeD9A75DE972Ce6eB8BEbb7a79A7C23553f8",
      "txHash": "0x8aece07aaf4eec199ee7349d0728676e80e492e39dcf6eda909ef4df7a07bfe8",
      "kind": "transparent"
    },
    {
      "address": "0x3DAe68504Ba1df643bd646Bc48781614933C8Cde",
      "txHash": "0xecfeac5c31b1f6feb277f62a8f7b85ef4137146ef33bd7217bdc751527408faa",
      "kind": "transparent"
    },
    {
      "address": "0xeF092636FeF588aaB7b4F8B2e2765bD05825263b",
      "txHash": "0xc582378ac792dd0852f2ef406b18bc745a3960529cc41c88fc51e471ff498b28",
      "kind": "transparent"
    },
    {
      "address": "0x4CB8605a551e636Ff1a7373D2fCe443733f57537",
      "txHash": "0x93c0d8655247e12608d99f883b03a3a3b4395497e305c3a7565e21771d24a641",
      "kind": "transparent"
    },
    {
      "address": "0x0Ed5d6820259CAAe1e2b208d04ff8583B8495585",
      "txHash": "0x4f7425b029d11f7577bf738d5cf89862b1ca9f40fbbe2f1129467ee9ed78efcc",
      "kind": "transparent"
    },
    {
      "address": "0x19F328cc17b9B3F36BcBfEfb6F72E1ff12685e06",
      "txHash": "0x6881c1d24acacfcfe2bbb97ca8b8c95e6e840794ec29bc18c314be99374735eb",
      "kind": "transparent"
    },
    {
      "address": "0xcF6E42393864391495d3d46483D5B11a49fe48DF",
      "txHash": "0xdfe1e5682cf84593ec59422519391405e868035b72b3b6cdc1cd3f6ccd9a9435",
      "kind": "transparent"
    },
    {
      "address": "0x534Ea129d2f53e83E9838B7C1b5B92aD22f08cA0",
      "txHash": "0xf56e2401bc22d2831d6002dd28c71fe562dece4a601786210598336748925011",
      "kind": "transparent"
    },
    {
      "address": "0x15F42028C54407bd9F3971e8C4D9665Dd22c31E2",
      "txHash": "0xf0b122b316ad4f4b284ddcb8953da271da29b0e688133a3f3dbbfd25ea7e4176",
      "kind": "transparent"
    },
    {
      "address": "0xE2f2ED965691044142A827A942D3A01007a795AC",
      "txHash": "0x16f7127704b73629369b8aed1ef67c0eb145b3dc5a48915acda7da92d27d093c",
      "kind": "transparent"
    },
    {
      "address": "0xb6BEA47b8355b3E34839322D2c08A2FB764dee2b",
      "txHash": "0x6b06d211a3f3280c43337711a4698d1de443d6e8f094ad49de81e99ba2ef06ab",
      "kind": "transparent"
    },
    {
      "address": "0x8515ce84dFc32CE7741C1F759755C64a116E989c",
      "txHash": "0xde912d9a237448cc95ffdab5e935e9495c7425d8320fe71dc4d1d6592048e156",
      "kind": "transparent"
    },
    {
      "address": "0x5CEf5329aa0d79c1CE33F64cA7463654fa2D7004",
      "txHash": "0x511ed18b961ae615db46692f1c61ee05bc5cf8a1db0d7a41582365c5e3789bca",
      "kind": "transparent"
    },
    {
      "address": "0x5360edC0a2e9af381abBccc451E450C17118624d",
      "txHash": "0x5bf690341954f097e464236af676968f3da3720ba3a3197d5e299c1ded352357",
      "kind": "transparent"
    },
    {
      "address": "0xd34b49F2403233fFEbD1F090F47df860E79608DE",
      "txHash": "0x5af96027fb32bb44cbcfa6d8eda00c3f8494361b1fa8d0f265f21ef7c6729789",
      "kind": "transparent"
    },
    {
      "address": "0x325F0B38bF0fdb021DD3039DCFca5B145BCa37aA",
      "txHash": "0x5dbef447099ce0180e51d3b1367682243d5095fcd74635f4d005312629e2bcfa",
      "kind": "transparent"
    },
    {
      "address": "0x74ed7c1C1A9c8929206CC4d3A627048cB477D3Fd",
      "txHash": "0xa779b3247400e1dea6ed4fad1000ba803fcda92614e3a1255c767312203d56a4",
      "kind": "transparent"
    },
    {
      "address": "0xD76E01a9af8C5E075a5bC96264aef12232Ef4A77",
      "txHash": "0xe30a21e380b7a223d8d56064bfa002c0498344fed9135bc8f8ca9fd4cd6564e4",
      "kind": "transparent"
    },
    {
      "address": "0x5Fc4b21e66bAE23c1e0765dA53d0E5F40236c42a",
      "txHash": "0xc499f21db6ca10794b07514d4762bc99e705f0842552eb38b3b20e0a80485820",
      "kind": "transparent"
    },
    {
      "address": "0xC934ad1E8B85F532b92BAF83b39489183561Cc3b",
      "txHash": "0xf150fe2834b7ed2402ddc2d5935a1110de2119f13d6f5dce7fd50622af423fd3",
      "kind": "transparent"
    },
    {
      "address": "0x1d6F0d4AcF396989f023a2540Dd4d8ae14B0E1a7",
      "txHash": "0x1969c5ed105c55c21b90da88ebc883b2be8e5f94782af70c6cd3d8ca30ab3468",
      "kind": "transparent"
    },
    {
      "address": "0x9323f88F8A14Ec1c2E480fB6D4fed4F516F26D32",
      "txHash": "0x157ea7198871a3725a0f64405e2e3f9dd983c4b12298661b36cbf76e44707b42",
      "kind": "transparent"
    },
    {
      "address": "0x9a282fb67bc94daeC7eE0AAA405925Ff501C784E",
      "txHash": "0x1995b7f973aa168b569926bc51d27605e0680ac7c3f32c4bdeac393706f4c019",
      "kind": "transparent"
    },
    {
      "address": "0xB558177cd4C338C708FB0114CB69800870A81Ed4",
      "txHash": "0x23f5334d22a5f47d4d587e8217e0434b7a782174977d747295f6a785f775f807",
      "kind": "transparent"
    },
    {
      "address": "0xB477d5ccdA1E15456ab0ED1988Ea0cBDd32Cb870",
      "txHash": "0x0c5363048589d4842439099b680cfbe5cd85528eb39b279fedea3fa666c9028a",
      "kind": "transparent"
    },
    {
      "address": "0x27aD81Cabe9134e372C198675588684b3a674025",
      "txHash": "0x18e69ee26f8f8251fbd2c9e32f661ea3770481cc8dfb437fac7e8e65e54ce27d",
      "kind": "transparent"
    },
    {
      "address": "0x6491447C1E73C4B802A49cd15BEda36EB5570C4c",
      "txHash": "0x0130572a6173566706e1681853bf89da9e2dcb46030dab009d7148a3d010643f",
      "kind": "transparent"
    },
    {
      "address": "0xb50b78AA5544e9e83ff2B7825f2b87aF0ca825B1",
      "txHash": "0x3ddf7ddb625cae6b5fb494f0fe4d1f42d58c2da06c95705db656b90f36c2593a",
      "kind": "transparent"
    },
    {
      "address": "0x034235E8a7C795833310Cd80495a25c1DB110bF7",
      "txHash": "0xc647b16dec597462a6f5ce3fdc3fb4e0eae758d6f463ebf4f1188fabd8b79266",
      "kind": "transparent"
    },
    {
      "address": "0x4690E7C4e76b0569ebADb73d1Ce4937b68E80be4",
      "txHash": "0xab1c12834712976976a93ed51f0224f7eb0b0c927b15f16a29d84875a7e35b4e",
      "kind": "transparent"
    },
    {
      "address": "0x286089835A563a5a887fe9b1b6BEf867C41704D4",
      "txHash": "0xb76cb45c13f96258751019128856c8e364d2663c51825ffe4d0bcbf87702af35",
      "kind": "transparent"
    },
    {
      "address": "0x1797416C199978CAddA4b6F42bC6660e3A4697f5",
      "txHash": "0xa783af09fd5cf8e5223ff87f992f146764da218c585af8ceb9358f9a33d88468",
      "kind": "transparent"
    },
    {
      "address": "0x4Af11EA3587F4642528008D9d23e37cd78a2B30E",
      "txHash": "0x9c2f9069a9e21b1e9c0575b9c0e563aa866ca2550db4b142928247795c97eb52",
      "kind": "transparent"
    },
    {
      "address": "0x7A0E5d300647aeB96FCe9C4349Db92413E21fa61",
      "txHash": "0xc085f3af7dd93f70a5b04299b4ec77db2051f38d8b6144520d598be95c67b45f",
      "kind": "transparent"
    },
    {
      "address": "0xE91e39Ce1205AC5D62903f535Fe84cbAC521893A",
      "txHash": "0xbf40e8bc2edf2553d38fa8d51533c90bc186800054bd93053739078b480f7a08",
      "kind": "transparent"
    },
    {
      "address": "0x129B9d6D589F9586aB0830b999438414BD27Cf02",
      "txHash": "0x6baff2a3797b873701ac9081a9de45eaca26bbd9e3ec60a398c55dc77feab8bf",
      "kind": "transparent"
    },
    {
      "address": "0xF7CAE1Ab365C72D5C5273f01C32A9eE7D911Acf1",
      "txHash": "0x1f548068d7f5d9106997d5243d34ab6f76fd205f778e5711424dd60960f83dd4",
      "kind": "transparent"
    },
    {
      "address": "0x9b6C7725Ea7125c93b0209A80759da8951A06464",
      "txHash": "0x54634c9bcdedcb07f9279d80b088523f064798b7a65960dfff4e6d2245e8068b",
      "kind": "transparent"
    },
    {
      "address": "0x534825b1b693AC2445788C025E16357d5F66283d",
      "txHash": "0x54aabd555ad72ca89f9457a0d6864dee273b8d43bf55af6fa44824b5d902d940",
      "kind": "transparent"
    },
    {
      "address": "0x7C0F5cD8df2cAab5360416854412302f83fBab65",
      "txHash": "0x2f5203c037ac650ac007ab9c7f0d0854e2262899b8b770af9534ecb199316887",
      "kind": "transparent"
    },
    {
      "address": "0x79D6483EfA5B4785FBf180e7697bD1B454e5BD27",
      "txHash": "0xca1cb99e2d515d2681c6c78bd6f349e6926105d9f9d01de31fb3f44ee913f668",
      "kind": "transparent"
    },
    {
      "address": "0xE10323860C6cff518Ce08Bf20DD99698010c2a1A",
      "txHash": "0x350d05f2c1dcf8066e3642e2cf4a4307ecdba96935f5f1a19394e6d0d2fe6429",
      "kind": "transparent"
    },
    {
      "address": "0x2d089D33Ece699779fEd77b1F81686f4BA02647e",
      "txHash": "0x4a04f3167f3afb568ea008abfc4b6ea69169a0d9a11f40daf0519c515c546d3a",
      "kind": "transparent"
    },
    {
      "address": "0xCa62Ad99d21585Ff9e7493e5874350a091a17361",
      "txHash": "0x1039e0b50bbe31da34ce3a5f9cabcc531908ff56cf2405cbebbda0e9f49dbf95",
      "kind": "transparent"
    },
    {
      "address": "0xF43d7540818735a0B1D136b381bC5972881e9163",
      "txHash": "0xaf8c342594fc92e31849d20dead4c0133181a8a58ea71148bb72f6e9404cf06c",
      "kind": "transparent"
    },
    {
      "address": "0x2C028E616A4E2263bE697C679A64b068919EcbdA",
      "txHash": "0x64fbb8c31fd897c3da67eb46a6773085c36703bce615d40b499a5a5e09d035e8",
      "kind": "transparent"
    },
    {
      "address": "0xefEBa2bD5E263C516D7401551B4A4770d9301003",
      "txHash": "0x07b746c81a60ff678a3aa40dab77152e92155ed1aac1fcad3d885087e8749e2f",
      "kind": "transparent"
    },
    {
      "address": "0xc8bC7dDf04bd87Fb8dfC5083A22C67EBf4aB123f",
      "txHash": "0x75db960f0c8a24b07b38f145cdc08d9b6ad46eaaeadbecab4ef9530d56449c2e",
      "kind": "transparent"
    },
    {
      "address": "0x496faC742e0Ba2d7bcAd0a8B3c77c088bca71281",
      "txHash": "0x2cbeb12cfada986ff55c1ccedac813bfaab46fa6350b954ce3a5eb33f33bff04",
      "kind": "transparent"
    },
    {
      "address": "0x4Db0a9ddFEd33CfEED654710f022DFAc41AC3280",
      "txHash": "0xb77f082e3f4690df621c36b43a930e847f71eaccd4b7eb89f61236ede6087d65",
      "kind": "transparent"
    },
    {
      "address": "0xa89a9b1d1DA745731D8c36F4230dF70de7850FA9",
      "txHash": "0xd1016d213ce0f7aedf69e54c9d84a49905f89230a5926b871a739c275c8adb79",
      "kind": "transparent"
    },
    {
      "address": "0x03A72FEcb46Cc6dc2B6D5220553e105D92013CC3",
      "txHash": "0x8eb563ecc64d362f46c6d27a3e6c14dcadfec8282fed83167ced33dfda545742",
      "kind": "transparent"
    },
    {
      "address": "0xe83C707e2a082aA30be695e3311dfc9644D775E0",
      "txHash": "0x6f00af8d8a9eac9642f0172f5596a4bf0ccc088dfccf32838376dc7d88f9794e",
      "kind": "transparent"
    },
    {
      "address": "0x359295e15597c5511bbA2C2564e56FFd22B94A2C",
      "txHash": "0xd0b727a4f58e8ed2a16342b6910cdd5a47474e03990000793959acd95cffa93b",
      "kind": "transparent"
    },
    {
      "address": "0x4FC1633A5FBf51208121BcB2080Cd20021CceA5d",
      "txHash": "0xa97625017d0c1c827df6e38b2ef96ef789a7e449b38efcebaabdae0c722f94bc",
      "kind": "transparent"
    },
    {
      "address": "0x05C448Aa67c4f7691611f870a972b9c929e48f5A",
      "txHash": "0x895ad1fdc645174047ea4635f6ffa18230d7e8814277f950cf5e3cca8c45dfde",
      "kind": "transparent"
    },
    {
      "address": "0xB74Eb2175a4A214dA7cD134025fe75657870DfAB",
      "txHash": "0xcc3bb152d45c243dbe85a177b528d3c878c54579af2e062553ed853c19fbcdc1",
      "kind": "transparent"
    },
    {
      "address": "0x16C2827795114FeF498A82A842b576FfE11bc647",
      "txHash": "0x4274e317066b1ae18700a22b73f682676bb30a1fab636a6be4856aab9c345e64",
      "kind": "transparent"
    },
    {
      "address": "0x2b8B229b9FfFfE5De8D88B2b91DEEE94852b0aF6",
      "txHash": "0x6f977b2a485fcbd23a9cdca690a979aede1aff328384b7e366069368b0e9572a",
      "kind": "transparent"
    },
    {
      "address": "0x2A6EAc579307FC8E342c55D2fdb9930BEc6C1301",
      "txHash": "0xc4e1be730bef663400b2f4e671f1c3dc9ac207f991574500fde6a8dd84831ed5",
      "kind": "transparent"
    },
    {
      "address": "0x91aeA5D87B451fCB5838c867840bB2eE545CDa9f",
      "txHash": "0xabdcc32dd34d1dd8dd5fdf5eb6a32008fe70651df1237d7ecea7fc5e1d6e0dc5",
      "kind": "transparent"
    },
    {
      "address": "0x345180E868BaF715362986b8f709aa2d2E3c93a2",
      "txHash": "0x62b62ae4c5a2c7ef74a07511155c0900cc39f803995378c992280e8e7b116ffd",
      "kind": "transparent"
    },
    {
      "address": "0xB49a77d1e88E8220B4520B3635ED1efb0c678325",
      "txHash": "0xe1a49f40d77a7ee833573893b0709dcc09d335793fd41e6641fd9d7b5e4f6b7d",
      "kind": "transparent"
    },
    {
      "address": "0xb8DbE142C9C1B32C0CaD73C11575d44a0512c153",
      "txHash": "0x2fe590ef66d7a88060900b6e29ad1c784a3918addf7a26f3c398e9444f64f232",
      "kind": "transparent"
    },
    {
      "address": "0x4E698Cb3825c7b93123EBCDde99eCfdB72D4a0F5",
      "txHash": "0xa86bc3387e2ec9cdbe893cf85f52303bcd33c593a909161c669c1ee8d30acbdd",
      "kind": "transparent"
    },
    {
      "address": "0x6Ce8027b16d2e749a05F3273Ad3204fa87647C04",
      "txHash": "0x352f2bbfb1021bfc56386508f58e89950f765af4a22adf9b777cc0f70fb6c93e",
      "kind": "transparent"
    },
    {
      "address": "0xe59ce9DF3b2F3F4e2A503503c049164D1730F0D5",
      "txHash": "0x4b3d01d51756efebce975a11e40d1924c14407aba94e101462b875eaed349e2a",
      "kind": "transparent"
    },
    {
      "address": "0xe464c44c454f66e48f7dA4572611ED716968E1Da",
      "txHash": "0xe8efda470d62fcfe5b7eb26e45a574478338f20c9811a42f5befe3dc51fe3de0",
      "kind": "transparent"
    },
    {
      "address": "0xCCA60A1d32b8C66d582E32FAF96d057003F7477C",
      "txHash": "0x59a25c5a0a978dbf9a5b765a195c1aaa8deecd79ea60c90d4a6b4c41078b5692",
      "kind": "transparent"
    },
    {
      "address": "0xE27ca04E39D93fFbD473B80BE41773Cd0930cE24",
      "txHash": "0x341a08238d692e97f2e3f3eefadc2c72d25a2b73fb65f6bd2abb9243c5ae66ac",
      "kind": "transparent"
    },
    {
      "address": "0x97AF35eE6E3D5af9d262bdBcaAADEfa4Ae942c15",
      "txHash": "0xfb232b746efbbb56130410e28d78af8d13239df974d0364e16ac20de1633c011",
      "kind": "transparent"
    },
    {
      "address": "0x3eF29350b3a4B0FE17aD272cd1DB5bcE9d6e4f7B",
      "txHash": "0xcbf658695e804659b219e06fd0223378a8e734d976127c109bd3d6c0270c20bc",
      "kind": "transparent"
    },
    {
      "address": "0x7cC181117c315cB07fD9A12D40aef7abf7edf403",
      "txHash": "0xaf485ceb38b6010bce678fed08a262135e21c6559554cd0ffbee2d53f85e7ec1",
      "kind": "transparent"
    },
    {
      "address": "0xa63b24cCDDadEC8308F907fC091C92F6f31Ca7C3",
      "txHash": "0xd95150279e37dfe4c9e85a8defe2dbec58ad3d5382bea05e1236549f86dbab31",
      "kind": "transparent"
    },
    {
      "address": "0xD6aa3217405Ef223D134985fAc0451398758B38B",
      "txHash": "0xadd789f5393adfedb0f5bf3cd7f90b2bb01a2e3a82685c2ef8d5e1dce4e74172",
      "kind": "transparent"
    },
    {
      "address": "0xF32D2452726156994f5537fD3D7235ee4596923A",
      "txHash": "0xb40df3f7d578d3451693d5192bcab7bfac51316f83c0ae05133764e28d5963e0",
      "kind": "transparent"
    },
    {
      "address": "0x7f4bad50f51f59080ef4A9992A120cCD512948c8",
      "txHash": "0xee6693a3275f7007088fd6b22ac86766c52efd428ad49422b71a3db3497c6f58",
      "kind": "transparent"
    },
    {
      "address": "0x95F215DbCa151DA92E2304c5f11de6C25c64A5CB",
      "txHash": "0xa3a4c3c59622bb0c5db6f97cec9af153bab01db35d0859f06af9acf409b633a3",
      "kind": "transparent"
    },
    {
      "address": "0x7641aBDE030673dA8E6e926800aFD06419157Ef2",
      "txHash": "0xe4dfcf5bfff5e992d667c92160ffee83dce5664e28f34ffb13ebe5f1d9a393f2",
      "kind": "transparent"
    },
    {
      "address": "0xcC45812F9F52255E48414F9cE16eab35d086b4c6",
      "txHash": "0x8847e94bb838820720014f18950b2810d4aa6de405e437d318af4a0ea6ff691a",
      "kind": "transparent"
    },
    {
      "address": "0xCc22b8C026E95c9C929C81F2f75769945Ba5c354",
      "txHash": "0x325ac10f9427af44b5c01c9d678f7830dde79b4e8ec336a012cc61eabaf6113e",
      "kind": "transparent"
    },
    {
      "address": "0x635BD6D8713561991d9948d6c8b69E2422c90d2B",
      "txHash": "0x26213d71342ccb50e30ba6a9d5ad12e887a3ae80562678ead04bbd8b2d85c9dc",
      "kind": "transparent"
    },
    {
      "address": "0xb3bb5Ce561104BbDDf1B0732e84E007F6253F759",
      "txHash": "0x4ddf9ddc52843acc86596aac558bd7b2e747a25c92a4331255b9778c48cb4f5c",
      "kind": "transparent"
    },
    {
      "address": "0x8eac1E8C9E30Ce737aE4533B492C7348F5a36c5F",
      "txHash": "0x06831ae62c020f779353c405bc391fe760822fd712b7d6fb1cc193326f22d8aa",
      "kind": "transparent"
    },
    {
      "address": "0xf25bDCFf92FAe195c091afd4047Bf8CA43052aE4",
      "txHash": "0xae0fe4f5b2043bd0f4b0d77d6a9e61ac269f97ae69473ab49029bd55179871cb",
      "kind": "transparent"
    },
    {
      "address": "0xc1E44A9f9A0D2665A3cE647FB9DB1B0DcF487B1B",
      "txHash": "0x2e5fc67d65fabbe25957b653185b95c7c36d76f90ce3c7652e1b2fdc7efb2159",
      "kind": "transparent"
    },
    {
      "address": "0x17c086798287B10d94A03F6aF90ea5a0A3fb2dDf",
      "txHash": "0x901e44836f607485f5439b62f6ba481efa99a0d9ebfbc12541ba50c645159e92",
      "kind": "transparent"
    },
    {
      "address": "0xf154712dBCC2a91f9DD8785a455A466E8F686976",
      "txHash": "0x1b9282989e95ec9779e81c4ca305ea1daa87ceb5a6b9e10f59d062abdf77b938",
      "kind": "transparent"
    },
    {
      "address": "0x681e9657Af36313b16e071A84B1B579197766f7b",
      "txHash": "0x73b1cbbd91869b8b856e3f6fd1788eea7c7cc17839ed3370585bd9396b1733da",
      "kind": "transparent"
    },
    {
      "address": "0x458F2851011A289bc44296314ec41b7eEf4972b4",
      "txHash": "0x18b7d5e5d6ab52d29b8fb81c620dc6a18d3cbcf1fce6be94746029ae6a00c34e",
      "kind": "transparent"
    },
    {
      "address": "0x51bd1a8eA9d9Fad1C5eEc617364127674629bB7F",
      "txHash": "0x0bf6a676a587720f3384b68664d9292c487cf19c6b5d6cde463ebd6747d76f04",
      "kind": "transparent"
    },
    {
      "address": "0x54b603E321046C53b67f4D0aCB6cc2f7d3a7c617",
      "txHash": "0xb7fe6669cd75ec4af444a46892c602507f4604faa6c3588655f206e9e8cd715d",
      "kind": "transparent"
    },
    {
      "address": "0xd64cB9b783804304E6C01fB800FF9E339e6edDa4",
      "txHash": "0x071d84b3b27b9037fc125ea2aca9e222e23aa0a4355e1856ea52eacb250f040e",
      "kind": "transparent"
    },
    {
      "address": "0xce2F7836BA41A1a83c7b84E0B9A9fA48C8b40E13",
      "txHash": "0xb40d22cd149b4d390de65a13153eb3686e0cce226dd0d2b7546cc80a4367d236",
      "kind": "transparent"
    },
    {
      "address": "0xceF906B5929D8ea0B30fa3279f78715A7981d19A",
      "txHash": "0x1ec1026c932df08ecb3367b978e64d36e20b4847813ae43695d32ebf384ea9a6",
      "kind": "transparent"
    },
    {
      "address": "0xcAcD988Ba5e42779F1b9f8dA7f6B4D113d297339",
      "txHash": "0x2168072bbecb39d6177c87f0f75320c834b14797d48ca497772ebb139f51f46c",
      "kind": "transparent"
    },
    {
      "address": "0x9955B1BC5253a74c11a56222a96D3E599c17132b",
      "txHash": "0x938637ee63e0e3366325efb8e231f1598a8c4f4521560ea5dd01de43cf17eb2f",
      "kind": "transparent"
    },
    {
      "address": "0xE485fe3F7023a4B667dD17BA2676B6F1047ed3A1",
      "txHash": "0xa364c67b8790ca0e0237ba1f19bf8e1832c379a43f3fbf8189d586cd19740a58",
      "kind": "transparent"
    },
    {
      "address": "0x5311B92fE2b2E79F066a8903279C7a20dA766b80",
      "txHash": "0x997061af9a07d91878930ce14b208f621364e88d08c594edeb00c5c2d87eb9b7",
      "kind": "transparent"
    },
    {
      "address": "0x805548C5a8d70A5B5b2aC1829Cd1DC05C37773c4",
      "txHash": "0x50ef8dcaf4291de1f154a1f5fb49c5c29aeb947ebfb3b83e922e6ca50a227123",
      "kind": "transparent"
    },
    {
      "address": "0xf86E4f70D7f85933a5827af1D334C08DFF74A791",
      "txHash": "0x0235e3c0b4d43e81d4cfa6e11118f780c9b131fbadcb251eb7695c75db1394ae",
      "kind": "transparent"
    },
    {
      "address": "0x369bB9027C632Ca7aEF6C75D7CBCfCbb965060aF",
      "txHash": "0xab9b3431fce9767fd8b99eab2bf413e572b565d95f5d93b098381194247338c5",
      "kind": "transparent"
    },
    {
      "address": "0xABc7F6C9dB031585F153Ee5C4C9d9Bf8d63ab8DD",
      "txHash": "0xfda0db67c6bc663cce2880ffcc121d5980dbfb2ef07be366ea6384a8163582d3",
      "kind": "transparent"
    },
    {
      "address": "0x89D68dD0F14A020ed209Ef77BC9C826D08195Ca7",
      "txHash": "0x00d0959a76685fe2f8c1a2f5b9bea0b90d6bdc9412b04e80a0e0fb2742b34298",
      "kind": "transparent"
    },
    {
      "address": "0x050976292DD9253bA7CD3Af3993883cCC9eE1EB5",
      "txHash": "0x7aa532107c9e3318510090be74e5688651f1d50dd3d290fcbd146d1d4e546ac0",
      "kind": "transparent"
    },
    {
      "address": "0xd3DF5d22Dc89989348C75B667a129A13aa20E55B",
      "txHash": "0xc1e58e67930d21a77cbc897a11547957e80a5eb091f8fdd65599f9a9985bbd44",
      "kind": "transparent"
    },
    {
      "address": "0x133F0ED97cfA0644EcB2cDbC957a4a82eab7DfA6",
      "txHash": "0x2489e71fe1a4ed307895bed6371fa5436b3d1bd0ec8bad9a34e0075867a03720",
      "kind": "transparent"
    },
    {
      "address": "0xD63626D26682374764a1E36615bd9230fEFd3b9D",
      "txHash": "0xd1d20207c30d715b8150532e9d858d7fe2ff5c76a076a95f48902cdacd8b924c",
      "kind": "transparent"
    },
    {
      "address": "0x75CA8b780E76057091163EB5cB778F48c0147Cec",
      "txHash": "0x2c95c627c6b3d70313a4f615d47f34b568987c1cdb9fdc53c10a561c83b25324",
      "kind": "transparent"
    },
    {
      "address": "0x198c4a33dfE023877d089e0371a9f7E2839bC89F",
      "txHash": "0xf0b8af31da9fb405b7680af3c5b40b411880e41882e567ce9ea430943758f579",
      "kind": "transparent"
    },
    {
      "address": "0x4Dfbb122f40921680823E7a5A265a6716806Cac2",
      "txHash": "0xd42bf0f74b25d7ba7b21571d6d4fb7ac8554bccb32b20c6c3a8329b2795daa90",
      "kind": "transparent"
    },
    {
      "address": "0x3Adc68F283496A34fEe6Bc9933E5e9256D3c0141",
      "txHash": "0xf869e890efb35bb0b3915f896786abcb8f68e1d30276f691398941e4bb534783",
      "kind": "transparent"
    },
    {
      "address": "0x68d623937f0B08b49D1f8d9D132e900d7867B458",
      "txHash": "0xf20265f943911a6cc2a049d9be3a731b9d18ce7818b44603a931867782c47de9",
      "kind": "transparent"
    },
    {
      "address": "0x51Cd3ee6f62A4b1312D891E960082B9bF914A937",
      "txHash": "0x3cd9f9507c4f73961d4d476000e76a180d35b7dc47524970a4a3b52b30e802a8",
      "kind": "transparent"
    },
    {
      "address": "0xA2612E83AbeCdF6B221eF3f63Ce0FD88aC163565",
      "txHash": "0x3972f27be359116a3d9b10c08da878236484bc83e0414f632375e75f5d46966b",
      "kind": "transparent"
    },
    {
      "address": "0xcE7d5b4Adcc64A75d0Ab263950FB32C56459F8cf",
      "txHash": "0x3225b1baf05133963b23a9bc7d623b050ec3fdfb50087777e9cfbc28bb42e37e",
      "kind": "transparent"
    },
    {
      "address": "0x435629E4CE942E06D639330a7932766D65Ec6144",
      "txHash": "0xd83febe733d5cc47ec23894238bfbadef7df6ce33c3debcb4785c0e19c21cb25",
      "kind": "transparent"
    },
    {
      "address": "0x943aD49B7bBc586f1E434f2Ab40E158CBcaAd356",
      "txHash": "0xab62c8204732926722df95758b8d363af785021d8a03876571c9c06972dd56b7",
      "kind": "transparent"
    },
    {
      "address": "0x171657985d5aD91b6858D68BE337C90B189C2196",
      "txHash": "0x02c6bda85827fdcf5bc8c851dce5a6bac9a185e62326dd586eebc3029693215c",
      "kind": "transparent"
    },
    {
      "address": "0x9c5Ca8d78502bb9251Af882fcc424b020f0243b2",
      "txHash": "0x62fc73fe14c83a9c3b217e4dd98c784e68988fb3277e9218fbb40e349ca55234",
      "kind": "transparent"
    },
    {
      "address": "0xb051b2435Ee7430071006b18D585ff318918C6a0",
      "txHash": "0x1ce4ba853120e026ad77cc7f50b41c6572435efc6c8b946d412ef9d076be7420",
      "kind": "transparent"
    },
    {
      "address": "0xcacCB171F3084a22a2df38e00f663e88c25D3a00",
      "txHash": "0x1cdcae48f4abdfbf09f2a1d63e8ffce35484c749c58f0f3a6a2205305503eefb",
      "kind": "transparent"
    },
    {
      "address": "0xE485375974a8Bb05958d20D617de2279e2e5Cf76",
      "txHash": "0x9eff91fe64e491af972c72583c9e0e61487df82a8a64887e7292dc9ecc86be56",
      "kind": "transparent"
    },
    {
      "address": "0x7827aeFd634008D660b8b134a4b7e7893184F510",
      "txHash": "0x5502106f7dfd72530bf963e812a6928b9e594d4cc810b5be03957cc1bbc7aed9",
      "kind": "transparent"
    },
    {
      "address": "0x1ec5D09F0e92a516E522871fe5Bb989ea3dC40B2",
      "txHash": "0x6d43edd031e413354fef5916e84331648e16b0fce67db0918a279f24df3ef15b",
      "kind": "transparent"
    },
    {
      "address": "0xe6f59970240E78A052bf6b56578612c82Abe7E14",
      "txHash": "0x9013a15fa339e2162b3c2db7e2c8debda899d52e5a7692756b0e71929efbc457",
      "kind": "transparent"
    },
    {
      "address": "0xA3457d7778Be88950575679e6664fbF22D48a04A",
      "txHash": "0x471902f63db3b5ce7cac53ca237732c807ae60124c81bb479a3fbcfb437679a8",
      "kind": "transparent"
    },
    {
      "address": "0xb3e75658F4C30b376Adc6F695eCBdeea1Ab30b48",
      "txHash": "0x26cd8ebee3cf277f4d213da1c09699a8cfc83cd1cd6148c9a71b27d94239f43b",
      "kind": "transparent"
    },
    {
      "address": "0x49eaae7ed5d2B64d4839c8DaA31f3e8b6A488cf8",
      "txHash": "0xe25e944a38e37de8e8e2c51a464a1c93fb7866b48335a116d61c05baf310e022",
      "kind": "transparent"
    },
    {
      "address": "0x567650aB55a2D83F8BC181A60492e91A7D05BF3c",
      "txHash": "0xd3e7e6801da66b73e3d8e6530a1a8646961dfc122cbf6676dc622e524c211c52",
      "kind": "transparent"
    },
    {
      "address": "0x1FCC7Cab406ab64e618b347767A18f4bA363811e",
      "txHash": "0x4fd65db592313c4dccc1d64b37e483c808ea9002614b6aee868ccbfc6c3adfcd",
      "kind": "transparent"
    },
    {
      "address": "0xa36387f7731af3eEC7459F0d4AA627f952768236",
      "txHash": "0x26737cc5eb6a224023a4a20b725b405d09c18b07e41b5c85f48b19700f09d72c",
      "kind": "transparent"
    },
    {
      "address": "0x1991968bc950708121521009C82c681BD190EBB2",
      "txHash": "0xe7a67d47a3e711da89cd76acd23cb7bca216cfd1be4a70c494bde2f86115653a",
      "kind": "transparent"
    },
    {
      "address": "0x4953F9Ef3C39F9Ea3807d0B6E04d5DFe5E359D9F",
      "txHash": "0x3e877eaaf1f8bf09f8bcb2f83ede0cbc0493b99a26aa5c9eff1b0f72b178e2cf",
      "kind": "transparent"
    },
    {
      "address": "0x765440b663797acC5CB714D94117Dd8A3EB69fc4",
      "txHash": "0x99816620445e92f814aba0765b2d2865dfd58525549677426f1699ed6528ad75",
      "kind": "transparent"
    },
    {
      "address": "0x0f8E05FDA170df9D1332cAFd49442CC8b137963c",
      "txHash": "0x3d17d320987ac55872ca78470d082a54f34c5496880dd5cae4766dec26bedec9",
      "kind": "transparent"
    },
    {
      "address": "0x2a7168F36b2c6074dEdD5D38B237Bf568ae819CA",
      "txHash": "0xf269909740561fec8116713e1e40f26406a88fdd90308ad491108272131ef3b5",
      "kind": "transparent"
    },
    {
      "address": "0xB650d98Fee71D3cFCB9559906122c8DF9C615F21",
      "txHash": "0x2db17f8a8caeabe884a55f623e65f7f4df0f2f826d91174ff228fc0004152ff7",
      "kind": "transparent"
    },
    {
      "address": "0xA6a0dbCaB013f2A1A9E479b4b47a1a7aCc7906Ec",
      "txHash": "0xd0f3cba60f9aaa84a839581d560f5f4ae047772f3994f0a0994e8225db81a804",
      "kind": "transparent"
    },
    {
      "address": "0xe5fE7Ac8E3714958b90bc6A05687bE5E08531BdA",
      "txHash": "0xc08ddd7f0020898b2159fd11b02c787f7fb06bb91e69fc85512f226972529864",
      "kind": "transparent"
    },
    {
      "address": "0x59ECD987542d9a8fD19Fd88cf0a9B3407f9EaA07",
      "txHash": "0xc4212f675115af49bcb747cc4855b38764b2b1d937e0e8f1a586f0f2f33c0489",
      "kind": "transparent"
    },
    {
      "address": "0x8a47A9B68210DaF05d898e2e013A9D59AD8EC0B1",
      "txHash": "0x2fa3f28c565d995a4ba82224d0a1a57b51e63b5b1598b7f26131741cfee31914",
      "kind": "transparent"
    },
    {
      "address": "0xf00f1E00A3230FDd357Df575fb6DDEdE79C0E99D",
      "txHash": "0xc41ca929fb725c20e40772227595ccd23bc0f46a35538e82216de7ea4fb6a053",
      "kind": "transparent"
    },
    {
      "address": "0xAfeb93Fd9AbD24FC174433615772792581a8039d",
      "txHash": "0x334f2d071521164367554fb828cf9cf9ff9d2b09bd390a3c6386f95ab164c9d8",
      "kind": "transparent"
    },
    {
      "address": "0xb32500218e3dC6993e6aAc6fB341035AC9A2892F",
      "txHash": "0x9f9f08132703e8823b08e09167c5ceb9a9b23856ade7609352a2edd12210c697",
      "kind": "transparent"
    },
    {
      "address": "0x235835458F3B1B54fE4483fa999d001754fd883b",
      "txHash": "0x3b19bfbec1097fee87ea457e53634bb8f28e9cf7263748a23935ea0c1874b17d",
      "kind": "transparent"
    },
    {
      "address": "0xe5f009892A932B5ee8ee298Db4EBA8E7a2493F79",
      "txHash": "0xed6625008c661be10df9e2bea37088f17a1732adb1812e26812e21f1ce3ac977",
      "kind": "transparent"
    },
    {
      "address": "0x262F2c4Dc33bBc30E104Cd11214D7a6F9FC5bDd1",
      "txHash": "0xddf38bab7be0704a01c33d1789d142ce4d4bdaf493557bec862cb52f127184f9",
      "kind": "transparent"
    },
    {
      "address": "0x16D14AB85F8a02BE2c9F1F55d6993332ef9a0c2C",
      "txHash": "0xf0a492a62b3d39ca07f79c39ad5ba3183eb936d193b003e5ac655aec9689b37c",
      "kind": "transparent"
    },
    {
      "address": "0x503C6D9a0050F8042C2Bfd7BB5a0360A8f320B30",
      "txHash": "0xef12b0d82eb31b761d1e47f16bd0dbed0f87cdb35827dc9fb64a064486719e36",
      "kind": "transparent"
    },
    {
      "address": "0xCfEcA43D8fc41248F9d74b479c64ea8EE30391cc",
      "txHash": "0x3c1157bf0c07257e8fa0da9ae6459ae221e290b3c6722f8f6e4f511a41c4715d",
      "kind": "transparent"
    },
    {
      "address": "0xB9741029d0e18450B7b2FD2887cB619A09a0E3e0",
      "txHash": "0x7eea4faa2a397ea41b9037dc7ec6aa74074a650905317f54776056a6b7ca9264",
      "kind": "transparent"
    },
    {
      "address": "0xfc2FAcf995c08a23C174EAF28756991C5025fA0c",
      "txHash": "0xa921beba692cac6c4bcb60c9b16093f01ce3b09abaad7ec0d2ddaa4e4d562555",
      "kind": "transparent"
    },
    {
      "address": "0xfF098DA4b9fcb6cEf7B3C26De25e2769B014622d",
      "txHash": "0x5ede92c459f2f48f553e59fa204d3fee997360eb8fd796d83da18501b241b7a0",
      "kind": "transparent"
    },
    {
      "address": "0x8efeaA4733ae3BaA7eEF66e3A88026DFC03c8751",
      "txHash": "0x076110c56e89c1343eff160dcdefb865b8978c9a6015a0aa7e441e79be26bd73",
      "kind": "transparent"
    },
    {
      "address": "0x992487Cf50239A850C0F53cB2ff8aA99aa0B1B61",
      "txHash": "0x64298d79e0fe8d59021bc375c44ea96b69426160a304b3cddd8a399e6abf1b55",
      "kind": "transparent"
    },
    {
      "address": "0x2bD8D3F004faa6c84c5e1aAd85ef6aAb9a6d01f5",
      "txHash": "0x41fbedc70ab1f888c8061d0d78ecb88d405904a8fee9847a1c4f4b3cdfaae956",
      "kind": "transparent"
    },
    {
      "address": "0xE2c4F9DbD656ac12eAB7A47D5884fd94a754aCb4",
      "txHash": "0x7ec23c831a65bd6547427f18efafa8f7321ae8cbf10f99837f14d500ea763788",
      "kind": "transparent"
    },
    {
      "address": "0x91A092DAe26e1475F5d0CcCD15eb2fCB2CaE154f",
      "txHash": "0x38825287a3a995bc97a76b8b42948a114539e629334ca3b98b2834acd3a108ba",
      "kind": "transparent"
    },
    {
      "address": "0x82B1585844fBF620C3312dE9dcD9460104c6f39C",
      "txHash": "0x4cb1a6cf74b191a37c55e7af0ed63c295dd785fc68337c7fc7234ed4a2cffb7d",
      "kind": "transparent"
    },
    {
      "address": "0x0B732DA14C43076C2A9383cE64e7299dC71Bff1A",
      "txHash": "0x3a8ac98e3cc89c8dfa93b0dd2a1824b02e4d51c2285a490041230dba58bbd139",
      "kind": "transparent"
    },
    {
      "address": "0xeF48A6e9060b83C192B3af8a3BD96fc9d4Af8D37",
      "txHash": "0x28e7a59d6293b79255d7fd5d70d670f47ea69d5efd8e74d41de8b6718422d563",
      "kind": "transparent"
    },
    {
      "address": "0x19FA27f710A4EC459bF4194cA96438b730fCC7E8",
      "txHash": "0x1f19414dee949895b27416eac409b1678fe09bc1c3bbf00463a7dafbfd3771c9",
      "kind": "transparent"
    },
    {
      "address": "0xC56b150B4921e9D27639a76E7997f04256fcdB47",
      "txHash": "0x1aa027b9ec6c2a5a2c55930ba8a708f3e0356272c9bba791f1f6f441e600483a",
      "kind": "transparent"
    },
    {
      "address": "0x319D48FeDd6cd57a63A0D6BE72200fCA2391CDe8",
      "txHash": "0xbb0bfd08711a5d1bc67e7e6b95fa7e2dd447f065730acac2fc0d758337e7c5a1",
      "kind": "transparent"
    },
    {
      "address": "0x6cA302a76F3BC5ec8a0aE176C05027b72182f0D4",
      "txHash": "0xba8d46a47f52edd7ffed8fa3bbc85f0728bfdf9bb84c6ff85615a0e516eb8021",
      "kind": "transparent"
    },
    {
      "address": "0x28E83F23E94f523008E6282ab2EC3327d95839E4",
      "txHash": "0x58041be805eb6ad71da80f15dfa97aaf09f781d28a3cf9e2c24249638513f0ff",
      "kind": "transparent"
    },
    {
      "address": "0x4bDD8e9c0321De44eBfC923FdD2022963439836c",
      "txHash": "0xbe297743d89b9e5b5eaf0d21f58c4e37ff74e56620ba5932fb1860ee5a362385",
      "kind": "transparent"
    },
    {
      "address": "0x031e672173CcB62990d83Bb3fabda44Ea33E216f",
      "txHash": "0x87ad0c3de639236ba5d5ad03559aa60f1eac4e5ca24ed6bb3d261a4cb9d8e9cb",
      "kind": "transparent"
    },
    {
      "address": "0x4edecF7b47f285191DA5d420E5994423eE64C7Df",
      "txHash": "0x9bc23965dd31d663e32b87ebb5df4a1fcf89325b8af7e88b4361789c7957fc08",
      "kind": "transparent"
    },
    {
      "address": "0xbE1aD5F01fcD189Ad22F8F7E5c9038172281652a",
      "txHash": "0xff6e3d092b0189c9ca55ecc1dadc06df5db0a4442ed198debf40dc0b7e4352c3",
      "kind": "transparent"
    },
    {
      "address": "0x7171BD1877e3E6aEE58DB793Ab9cdaa92D99A88b",
      "txHash": "0xb4aafa295c9051a75ccbdcac1d229419250c99753ce1df6e6a5bf92567d6be21",
      "kind": "transparent"
    },
    {
      "address": "0xBd0471FBCeA924CE6F8677A977B1Ea3b2B453f3b",
      "txHash": "0x1ee60d3b5780d5af98003bba89be1655365f036ba644bfafa4dbb7aa4322ad9c",
      "kind": "transparent"
    },
    {
      "address": "0xACB868a57AB1739aDFf802104C659a9305b0Fe82",
      "txHash": "0x993b079fb9217ac762598b3bdc4b5677833b44c6f25f79c8701e96de361de155",
      "kind": "transparent"
    },
    {
      "address": "0x9DaA30DD89D6C7574bE6FEBCB656A6ADd4c97655",
      "txHash": "0xab235d97bd4ccfe72f2b29a8c2ecf39938c1d113644ae596bcbc8e52e87d4111",
      "kind": "transparent"
    },
    {
      "address": "0x28a96D870109F12c4b1B548875547B6A2A8A2441",
      "txHash": "0x257054fada85d4b613a953ff811e1945e48d08842c0bfdc181e6062e59d8ad8c",
      "kind": "transparent"
    },
    {
      "address": "0xfeCe6129A4d8aCf7DEf4870bDBC09BdA6366cFE6",
      "txHash": "0x42d469db0245a9e78da5076ba3d5ec2ac8fb9e0294d0329c8162b2fdf8567063",
      "kind": "transparent"
    },
    {
      "address": "0x95C33630b84E64149d112F24F4882150F12d96e0",
      "txHash": "0x94294c01896f4ff55c809ca8d4830968bfad9e6cb152cdbcb5d782bff610a8c4",
      "kind": "transparent"
    },
    {
      "address": "0x0548CCC56A38cA158193c37567cBed41426Fb2E3",
      "txHash": "0x7904c95922a680dbc09784539d07549f00acbc989dbcd4ab5fe7604c330b1a36",
      "kind": "transparent"
    },
    {
      "address": "0x846f8b732355c0E790B97f4B16c894C6151Ab86B",
      "txHash": "0xea5067a858c684a6a25cde62ae4bb7fee659f685208aff6657505ec6ba4011ed",
      "kind": "transparent"
    },
    {
      "address": "0x5a9fe61FE404FC0CEc15C1EE62Dd14d1f64A9c74",
      "txHash": "0x52a927338d65429cc61b487f0f60f4f107b7c0ffc55077479c41ced96c28058e",
      "kind": "transparent"
    },
    {
      "address": "0xB7296465dD488c09Cd965938fd8c73Dcb3cA5f3e",
      "txHash": "0x506ed013dec9f13bd2507a90603a674be0a00231844b6e42fc493ecff1946844",
      "kind": "transparent"
    },
    {
      "address": "0xD81C069a9e4CEE6b6ADae29fe2e18B5225D2b7C4",
      "txHash": "0x56782cb73614a07e8ce9cc30a97d73b657f9c654e808bba843316b2669109289",
      "kind": "transparent"
    },
    {
      "address": "0x46f2542A9c2bD6e1588E5F8e939A42b8170bD56d",
      "txHash": "0xc1616b979a80fde35d4e84c79d88c97c7f6549e66900fe5bc82cd011d2500419",
      "kind": "transparent"
    },
    {
      "address": "0xeb793cf628a9cE57a858506e60B785b83CB306FD",
      "txHash": "0x7685b0b44f82880ad373fee3857760148ed2bc0b91356dc168593c7418c38a80",
      "kind": "transparent"
    },
    {
      "address": "0xD77644d13492BE2217a12F06a245755885F2e5e1",
      "txHash": "0x8e66157f6ed19018e2e324e3a327b50d0384bd18c6f93dfb1e66ac69d7d6303b",
      "kind": "transparent"
    },
    {
      "address": "0x9035027a9ca46F2E9e49E794816cae7D52Ab1b32",
      "txHash": "0x840dc3b45c1bc7587cff9d0eed9119862793f728ea62b26d6b3b6e9263e66b68",
      "kind": "transparent"
    },
    {
      "address": "0x2BC55EE3BA74Ff918B71161dc2eE7808D49bc4bA",
      "txHash": "0x42bf00713bc374efdd3a717171489f573ff811d0574168211d638537616e8cb2",
      "kind": "transparent"
    },
    {
      "address": "0xb9F8D478a693035dFC3d734D4a2EF64158CE7cF9",
      "txHash": "0xdf3394937dff2cc5db35e5d84022237e7bc674243409784d67894a7eb55fbbad",
      "kind": "transparent"
    },
    {
      "address": "0x6b857926293C904762dd88B19d86a93cD5DB3122",
      "txHash": "0xef5c131aa2e39e9ee0934d63cc9bfd72f94db60a8c7c6b8f8b575c271a63259e",
      "kind": "transparent"
    },
    {
      "address": "0x76d441ac059f3eD4e56187E9E211d42CAA6f41F6",
      "txHash": "0x40e1cafc218fe5d59d653939b168dfc3e46a8f31e606abb4036090dc5fa8821c",
      "kind": "transparent"
    },
    {
      "address": "0x836F1960eE8F30b3E5D28F0Db4C53E61122b9D41",
      "txHash": "0xc562feaf191504aa42e38792ba13d1cc51f14ca366aedb4e592905bb76cf5ab3",
      "kind": "transparent"
    },
    {
      "address": "0x81889491E4d046E1f31ea6da7E7aDC0780153f64",
      "txHash": "0xb65ac0e1a6994477c9333eeb123ac876342dc3a188ff0dea067df735096691f0",
      "kind": "transparent"
    },
    {
      "address": "0xA8372200e35B8338F04cf77d57fBe1Fa48EAa6E4",
      "txHash": "0xf4c732c6416c760023d5015483511f43a75ebf9782af2e72e42ce6f8960e572e",
      "kind": "transparent"
    },
    {
      "address": "0x86731b8137DCaA13c3942fB73afAc0132886Ecb5",
      "txHash": "0x0cac993af470e3c652e25614de8bfce82dbb60ab9280fc4105fcfbd754be10bd",
      "kind": "transparent"
    },
    {
      "address": "0xa8F7C7B9526658A33FaE8B98eFfeC9840438f6b8",
      "txHash": "0x24b66a82266c3025aa2058fbb43cd19c8dcf8924826a3b716395dc7a591cba44",
      "kind": "transparent"
    },
    {
      "address": "0xbd7ab4ab064EE7c1a7D791A0E9EFdDAc934c3Fa2",
      "txHash": "0x96c226380095525ff21aa9ecbfb436882a4149d10dbaa3393bd30e7ef470affb",
      "kind": "transparent"
    },
    {
      "address": "0x8c750342f44d4Ff1bd46Fa1f7364747AcB1BaB80",
      "txHash": "0xa7ba57aa0c5e328c72c2c455065a8b0c3b007a27188e62c84b75d5a575fd3a00",
      "kind": "transparent"
    },
    {
      "address": "0xDc48078255d50B098E8818E637630b59FBd3C140",
      "txHash": "0x959c845df253dd5bce07caa08cc8f3cff25e822cb33826eb0b4d13703c494c57",
      "kind": "transparent"
    },
    {
      "address": "0xad3417AFE2923FE0E1F2542Efd40E94533672059",
      "txHash": "0x292d12edab36f39fa05c0a0aaac8cc29541d634861876f501db5c0752549885e",
      "kind": "transparent"
    },
    {
      "address": "0xbfa553486D931367d3A3d1F2558Ed00058afaebf",
      "txHash": "0xd8bd21e698068bce0704731708af5a42f8456285213785d3cf4f88a55c8742d4",
      "kind": "transparent"
    },
    {
      "address": "0xbeaB1dfA5519c44fB5C73432536E5a3D169CC6aF",
      "txHash": "0xf14f60cb4d2767add931e354aaf9aca4f1730312de65774c52fd21e2f04f7eed",
      "kind": "transparent"
    },
    {
      "address": "0x8734d269F0554CfD5a4243AEc573046B2E7E5bb6",
      "txHash": "0x6c4b70aa03bd41bf2ca3bb01169bb4ce669593d451f78003afaa70097b90e13b",
      "kind": "transparent"
    },
    {
      "address": "0xBA5B225Bdb10fFe7405a8b387D3A521BDa4a77ad",
      "txHash": "0xc91f3dcc1ef0644b0510ed634b502e59b538715309915dc96f73b0f0a7bc138a",
      "kind": "transparent"
    },
    {
      "address": "0x6EC15eFc6e6ceF2B17fEE9cc8b4B0aF8dEFA9442",
      "txHash": "0x53ac6fcf212670caae7c3aa8be43df28f90b84119b9c19c9d4b5c87de7a2f701",
      "kind": "transparent"
    },
    {
      "address": "0x7C2B64Db84Aa6A0Ce9fa51bF1a9b30f27A05A560",
      "txHash": "0x596d6ac9d1064df95bd6de08561fa74044b8731f5e68ed868e4b8d3fb63fa153",
      "kind": "transparent"
    },
    {
      "address": "0x852dFbd1aA790119364d179Ad48bB67de260FDfb",
      "txHash": "0xadd1ca309f108875cbd7f9764ee68ad7a97f1b1fb931186190f09927d91d28b2",
      "kind": "transparent"
    },
    {
      "address": "0xF307299dd4880358Cb794bdB548B0e681F305510",
      "txHash": "0x3825650c91ae467aa3d0686862678b1048f6c39dfabb30c2aa4aae40f1788e05",
      "kind": "transparent"
    },
    {
      "address": "0x197B9A0e6A0d4A2F8D7C84E3fb384EA086Ec817A",
      "txHash": "0x1d249797fdef8b1c14152564218c01d212460b1bbf7fe9f4d5a5041063a6a514",
      "kind": "transparent"
    },
    {
      "address": "0x6Ad855e6a1B68E094D100f1E1526c708bB0abA14",
      "txHash": "0xfcc00b22ae1cba2a2182afef0a949da61b378e9ac2d084a7e4c7f1153b10d742",
      "kind": "transparent"
    },
    {
      "address": "0x0a0f57F43ebb26Cc400A9c8C873d25937216fC60",
      "txHash": "0xaaf991055cc0f312cb537b49891902aac475b811d423ab63f8ce550e92b2faa2",
      "kind": "transparent"
    },
    {
      "address": "0x3f2cFD91B1A787F2Bcd46a04f64F386b725FC359",
      "txHash": "0x854d059b9d637487390b0391efd22bf190165382519fa229bb9a738a05fd8ab2",
      "kind": "transparent"
    },
    {
      "address": "0x28e4A4dA55572B87654CbE973C3396f0a8D9469f",
      "txHash": "0xccc9668b7421a9513606ca790c91364dd060cdee563b91ba4c0315940e3e1d8b",
      "kind": "transparent"
    },
    {
      "address": "0xe93Af30a25f2edB105A27E172bc5b5ed68E6380E",
      "txHash": "0xf1271749434790cf8390b018b793e22034d574bdaec940b3d519f15f987f2717",
      "kind": "transparent"
    },
    {
      "address": "0x260217dE49449183FD74aE183E8E8170D8895b3a",
      "txHash": "0xca43551e50913e2b12c71851ae80d442391583a62ee456f21a714413f853c1e6",
      "kind": "transparent"
    },
    {
      "address": "0x70396Ed326F577ae68479e541bAA8c8199524c6D",
      "txHash": "0x9f0576e255f8e684d52390369890a686a54e7759dde249ce9f78e246a454581d",
      "kind": "transparent"
    },
    {
      "address": "0x26534d50a1980dfb7CfE564A584676dc830B2A0E",
      "txHash": "0x2e4914fb3ee8e9ffd0422c52546ae574bd9472b8d70b01cc7af889b7efb5864f",
      "kind": "transparent"
    },
    {
      "address": "0xc1a78b986F276EAE75c94b1a4308fFCe28033e0a",
      "txHash": "0xeb42c0616d229174d12ebe7716c54797a4d383dd5da65b13b099f2ff062cbd12",
      "kind": "transparent"
    },
    {
      "address": "0x32ec5B2C1F17E6b9b446CcB91a07C0EF5f27f3cC",
      "txHash": "0x1fd38626992c56d6aa93703f5e8d85c9fe5fb99e45a6b17dc1b7f5c868653f84",
      "kind": "transparent"
    },
    {
      "address": "0x8f72c9937ef75fA44346EbEE567AE70885e62BA4",
      "txHash": "0x184e007c1bbffdabc0deec8b471e326f3e34e43f8633c2bc4b8e6cb7b4673167",
      "kind": "transparent"
    },
    {
      "address": "0x85135B355ba82bEdC68C5f05Fa0073f4Ec525525",
      "txHash": "0xff62b6058e5ce07d1a02e8fa47dc0c92ada6a05e45e83d2494fb954a7af0fd36",
      "kind": "transparent"
    },
    {
      "address": "0x9Af1fD01F5f623142323a164632Ac19Ce7513EFf",
      "txHash": "0xb1317f18a1e3e7448bb2a5d47e0e2a7780b239f4cf73657bb737805a82011fb2",
      "kind": "transparent"
    },
    {
      "address": "0x6E48Df25c026929ce94AAc286bCFCAFce0Cdd99B",
      "txHash": "0x5a3339e0674e0ef4b0ea0042a42a461f91f26bb517b1122cdd3eb72ee09df26a",
      "kind": "transparent"
    },
    {
      "address": "0xE614De9Fd53145Dd647be5f26B35c0EBc266C7d1",
      "txHash": "0x765953f6bc897ad1cd07275d870397a35282ed5c2d080ec671f5516cdfc8ab52",
      "kind": "transparent"
    },
    {
      "address": "0xd5d282Fdf79EC5E376309F3502780409e0aCF37c",
      "txHash": "0xf4a4b779a254e1a8170945869b6647e300744e06dd2c4a5ce7c19fbc78644cf5",
      "kind": "transparent"
    },
    {
      "address": "0x7A72840305663A41227161C71197754156A03220",
      "txHash": "0x86d51c12a7e749d630955b8eee1e45c63ba58311f4c1a36ffc571a6759eae615",
      "kind": "transparent"
    },
    {
      "address": "0x011E5736cEa07350BdE7c3f801e692E041072f14",
      "txHash": "0xe4b9b6428a4307931efdfc81cdb5caefe65fcdc2658a66b3e2c559bc32bcc5fe",
      "kind": "transparent"
    },
    {
      "address": "0x5Ffe592267419650F1d495634B2e2f25C46a22B7",
      "txHash": "0x0fe51f5f549b07a92c1e50f2048373c0c031530b519840ae1a09c4f929b2bf26",
      "kind": "transparent"
    },
    {
      "address": "0x7A88994EdbC8eb39E4B7884d777B931c3744F4CF",
      "txHash": "0x68cb1f3659dcff513b229da09be8c7e0e7e87f3e42d59cb33677e38b5fb3879c",
      "kind": "transparent"
    },
    {
      "address": "0x2B4EaA9A475A136f6f9D5c3b999024d9110C7F92",
      "txHash": "0xeb46b0e7914fa3280ad6d38c9cbd1d786904457c43f4a133d925d5deec193110",
      "kind": "transparent"
    },
    {
      "address": "0xf769dfe0F567C77FD76923152f1829118d2E5c2C",
      "txHash": "0xe513fadc7f7512e22f693ce9bea9d421916c1152033ea2b9a565981b5e8792f1",
      "kind": "transparent"
    },
    {
      "address": "0x9648C1BAC579f944Bfac13Db90312D2aAc6397DA",
      "txHash": "0x80882e310a67e9f36b054904b15a3cdd8148c69c424dfc7b930addbdd81441a3",
      "kind": "transparent"
    },
    {
      "address": "0x53Babb622cd13382F13e02b5ccbA4935B0686D57",
      "txHash": "0xecdb74bdf3697cd60ba3ff83927bdf5f5744f5a6c4438774b0b9b5e788c5451b",
      "kind": "transparent"
    },
    {
      "address": "0x6Ab63FC884a3A90D8E9D32cD0885c12b1DEa71be",
      "txHash": "0x2a16b354580afd6c4b4df14dcc90b9befc0f6e0d64b2e1ca61b2840d7ce7a340",
      "kind": "transparent"
    },
    {
      "address": "0xC18B6fd91fB79Df4221b65bF94b1fd1F9c160341",
      "txHash": "0xef1edc76a353fc854dbfc3750cbafcc7f322e932d79840817637ae5e40e8cce6",
      "kind": "transparent"
    },
    {
      "address": "0xc8850D67AFF8D68f3d11783383CDdB0D7Eb04a8F",
      "txHash": "0x640b5d4e0050eff8c4d41e26e4aa52654a7aba738e44eaa5be7a6ea7dbf2e982",
      "kind": "transparent"
    },
    {
      "address": "0x3a76D54500c275867C4243B627E1b082836d2a4d",
      "txHash": "0x32ee1a7a6def9a74a490b308aaf97883a170831d261f5e46a37dd4a2ae20e4c9",
      "kind": "transparent"
    },
    {
      "address": "0xE57cE8344038A87C343dE219b779DedEe99948d0",
      "txHash": "0xb2ccea0d88cb649181bfdfb71714820156247e68be2d9d9cd926f186ef926a74",
      "kind": "transparent"
    },
    {
      "address": "0xc3973c7a17a80DcdbD5BE47127ACf7226f6a2E09",
      "txHash": "0x737756a5ffc223487e5348a6eedfcff31284576833dc9ca489ab45a6ac1662a1",
      "kind": "transparent"
    },
    {
      "address": "0x16142736D963e85A118fc0B88eEbC986E276cE5b",
      "txHash": "0x46b223dcb1403966807bd9903d72c25f41a3019a24cddd68fddf3c5402486360",
      "kind": "transparent"
    },
    {
      "address": "0x7Bd853343a907385246acEe990850b4a6175cC05",
      "txHash": "0xb41af8cafee7ac5cd5f2b87c0bd12c8af58e3e5099724325051d1295dd221232",
      "kind": "transparent"
    },
    {
      "address": "0xDCa9A3235dD4B7B62fBbc614093f9332f82ABf33",
      "txHash": "0x8c74a14c74c0ac052fe7df0888d8c70b0a2c91b77d79641a61e176f91a7f9d70",
      "kind": "transparent"
    },
    {
      "address": "0x3A610F05c4DF7D0e72949d01c751680C1ce7B5F6",
      "txHash": "0xce12e8ea7284b46b02341207937c94a5ab3b765586fc29fa229ac4b64c890e74",
      "kind": "transparent"
    },
    {
      "address": "0x33f65c82d671d73a9e4F6D9A7BCb993e80031444",
      "txHash": "0xb3c153fd26e795f87d10faa879db4f9bf9f6dd4e0c007b911f25842e3d7ef644",
      "kind": "transparent"
    },
    {
      "address": "0x90F833E9FB9C8710C236cF314B579046740F9B39",
      "txHash": "0x54d903a375442f72abff31d277efa9aa97a95aa2b0df7472a25abd005934dc2a",
      "kind": "transparent"
    },
    {
      "address": "0x8d45B1E96d07f5e95Be73c05D447EA50e3b3d8f8",
      "txHash": "0x7bed5739c40a94a552cbbebd99220984941991f93667bb7b0f306ee3bf86c58d",
      "kind": "transparent"
    },
    {
      "address": "0x507B7F8dF5B147beEc08b107F9b17168c664D597",
      "txHash": "0x25c95d3de8914069eab21723aea7a2821190496dc7838a4a27539372910ba455",
      "kind": "transparent"
    },
    {
      "address": "0xea96c30bcb40D31226e9d0Cc0bC532c09c5D60b7",
      "txHash": "0xd7bad1a60e0f1f8b7ffb0620694fc9d75c2f86d7358e4ec96f4d62d6a580ca25",
      "kind": "transparent"
    },
    {
      "address": "0xe659c179a1d95840a7745e1fcBf04FC48B9cf915",
      "txHash": "0x8a675da18c2fb894d32ab12962987d853491781d2aeaf180cef3077e575de3cc",
      "kind": "transparent"
    },
    {
      "address": "0x354d7B685fC638a149c28A03E0d3A445A1dC066a",
      "txHash": "0x3ec8592983e3bc6391e71bcb813a29609f9ff5d8efcbb1342647a6aa0c7b4494",
      "kind": "transparent"
    },
    {
      "address": "0x40b1b7eD6Cfe7dA848DB5D17cb49ECeb1BB25Fc9",
      "txHash": "0xef30ac551e521f34c02ae557d7703d6644b87cd615b3c54414acc75988c41ced",
      "kind": "transparent"
    },
    {
      "address": "0xA7386D663f0f6F32ec79693Ee3A39fd01d954b5f",
      "txHash": "0xd0834a1a9abaa193f1c1583b8d4da9d61a80b9cfcddfe87c8c77ac19450fa1f9",
      "kind": "transparent"
    },
    {
      "address": "0x023A84d07c642E13A0d82Cc280a5eC3Bd2af6a7e",
      "txHash": "0xb8e240293b686ec423014986cbb52b3a1411aed8bd0a563e3b5989edca54b262",
      "kind": "transparent"
    },
    {
      "address": "0x8b9Da836A5b788227C6bcaBB7ad7b3A1ffA30115",
      "txHash": "0x8d1e3d658ab40da34ea0554696e52fced050bafb6b55dc1fb7d9721c8ed1bde0",
      "kind": "transparent"
    },
    {
      "address": "0x6715CF9EBF0B320d2FA1307aEe39b0f108273A02",
      "txHash": "0xba17fa7dd842931d8cafb37c3d393509eeabf89db73b398681afad83fceddbc9",
      "kind": "transparent"
    },
    {
      "address": "0xc4B8E7fa31Ae5A929A181A72eeeC4b686045Ed99",
      "txHash": "0x2e13be0644cfcde362cb75a9800c678a70329efcdc57d27f32752d483c9b4f49",
      "kind": "transparent"
    },
    {
      "address": "0x927881126D45ccA8bdf1288AC8560E0a9179645f",
      "txHash": "0x87b30c087dfb3a4e261cec7c1714d9b95bb23b046a6fd377b255acea6b796c67",
      "kind": "transparent"
    },
    {
      "address": "0xe270693Bd7e48b9B18d42145E82bF6D96ced47d4",
      "txHash": "0xfb0597306d0ed9eb4a072232a58831567d255879ab4856036bc5bf491b048575",
      "kind": "transparent"
    },
    {
      "address": "0x45F7418D7E413B91544b146c1C52aB775e02DEC0",
      "txHash": "0xc62630ab115b4e45a263fa04c458e33ef9a97020a9cacab00d14f4a882d0a454",
      "kind": "transparent"
    },
    {
      "address": "0x641FAc1970960D644C4521fA0b1023F21451135c",
      "txHash": "0xbd05e32e86d2dab60a605663616a32d3441cdb8911fab76e9db1bb14aee8ca44",
      "kind": "transparent"
    },
    {
      "address": "0x1c898822dd300945489169559adB3aAEEE626986",
      "txHash": "0x4775d837f517b77878e72b719c90d00590f957481b4f90c0dba38bbd934f22f6",
      "kind": "transparent"
    },
    {
      "address": "0xEC86240a4b25B0A89e73bfD50E227FA51Dd9B023",
      "txHash": "0x3f874fc4cc8c0319eab04f39ca777cbc81ff9e17519895067a3c0361b0c52115",
      "kind": "transparent"
    },
    {
      "address": "0x68bf74069Ffef5408bdb4Eb6Ef4EF099c913c090",
      "txHash": "0x3f384efe1344a630900d36246447ffa38d9e367402ee02684e73e6cb49952783",
      "kind": "transparent"
    },
    {
      "address": "0x85A742491f4e922c266362345Fe0d96616977026",
      "txHash": "0x5105354f1f1d59ecc407546ff3bf2a05324a8e90937d3f8e94fb5c7073c2876e",
      "kind": "transparent"
    },
    {
      "address": "0xaf499B9E5922f54a0951c2b3faBE49927E326f90",
      "txHash": "0x1a30985fe466648ab265b86713d9b8400022a6c85ae6acebc5f5accb79135434",
      "kind": "transparent"
    },
    {
      "address": "0x12aCC5Ee06643d741A26B85FeE55a81C3fCf5f8d",
      "txHash": "0x7c63b57a76dba4db98749f3844d45af1501935902ab5eef5b78ac63de70efb33",
      "kind": "transparent"
    },
    {
      "address": "0x0328244127139D7C4B34C4D836B0ed24cd4d94Cc",
      "txHash": "0xa2d3e153cf7110fd8eff4ae301d6bfc7a8fb1826327c9cd23dc2c0e08e052f95",
      "kind": "transparent"
    },
    {
      "address": "0xCDC858f68A3461846c87774f4A804e4624A0a48a",
      "txHash": "0x5182f392f5056bfd4feaf0740f71f6443d9a321c6e18a847d1b4b0cb29e45ebb",
      "kind": "transparent"
    },
    {
      "address": "0xD112A6b098Cd4e8d91a5936091a9aFA51784F0fa",
      "txHash": "0xa04aeafcb866830e494cd0425b303a5ae4b8f78454ae6bc8ae94965f2d0b4262",
      "kind": "transparent"
    },
    {
      "address": "0xA39F2e5eB317876DE892A6Deb2e60a17a0eAeA7A",
      "txHash": "0x8e5ca15f6b355803799cc5853dbb96f115b24d41a300f1fec92b12f3622e5417",
      "kind": "transparent"
    },
    {
      "address": "0x74D896E2F79b305C95564Ab1Cd39f8f3B24B343e",
      "txHash": "0xef923aef50b016b0dc38521114037a34fa72d384ded74db25429abfdf087a249",
      "kind": "transparent"
    },
    {
      "address": "0x5C86D0A019A83EF40D0DF6a778aA175F616e791f",
      "txHash": "0x6bd4fe11e3c0d8fa4b32b19e1302eef66585f219de0bf90647b833a802eebb00",
      "kind": "transparent"
    },
    {
      "address": "0xba57f0187fad9c1183243a74716aDde972e2f634",
      "txHash": "0x327f3349ac43ed94b5e4faeeef2d86a069fbf0cbb847cc1a503a28cce9b0acde",
      "kind": "transparent"
    },
    {
      "address": "0xa8f1Fc652d87710BbfBf1F338930356939229348",
      "txHash": "0x89bf60702771e22b6974f48946fcbc72ac2268cd6dfb10f68571e5f0d13474ad",
      "kind": "transparent"
    },
    {
      "address": "0x7e8Fa273A5000803217842c233E280C37a456De4",
      "txHash": "0x6653b9114990d4ff0817b4559b44fa1266bf5610262fa55537cd2f51321471a5",
      "kind": "transparent"
    },
    {
      "address": "0x25fd82a982eB4417C51b3b42Ac46501393C012Ff",
      "txHash": "0xbf055660cffa77e5ea1358ec5d51ec1ce2c6f2430f60169f08b685efba73085a",
      "kind": "transparent"
    },
    {
      "address": "0x4C1b11914Cc06345484528A9aeaCc2797D041fA4",
      "txHash": "0x282d46e689b007eaea7c4995c31ff4729205a275050a2485049328457b490bfc",
      "kind": "transparent"
    },
    {
      "address": "0xBbd1d14DF9D4a639629c54D581be49bfD22Fe625",
      "txHash": "0xb2efb325704f6168c11d0e6574ae778107b0bf76cad1b81480497081deb7fcb2",
      "kind": "transparent"
    },
    {
      "address": "0x3782F6369cDCB77f2D872b4B5B9b19e4363a6BEc",
      "txHash": "0x9f10a05ba357a3790444197310479af1e25172a935c60f816d5b26ee6b2d5c38",
      "kind": "transparent"
    },
    {
      "address": "0x0E8e12f27Cc6778417057F433A174A35c937F720",
      "txHash": "0x8412bba49e533628a480122b57dc7727d26d6eb9e00683eb88cce633b7cc10b6",
      "kind": "transparent"
    },
    {
      "address": "0xA4488D664878FB87609eDbaaCd1BA0744C9Aebfc",
      "txHash": "0x51e00e77f717ad88b47a2602c951de172c6e85bfbdd341ee62bb9d1be21464f2",
      "kind": "transparent"
    },
    {
      "address": "0x9Fe98B669D3cC7D1aAaC39d096F3f00342D0fa5e",
      "txHash": "0x95d062514ef7b471a8f6ce58f46bc5055a409cf430a3cd7605c3db670b60a0d6",
      "kind": "transparent"
    },
    {
      "address": "0xA29d88b83B6043665E73eE65e5427aaDcE5D0695",
      "txHash": "0x094dd270841b03631a3557ffdffecde0e8ef48e50a5f3494a4d7cbe2c0fa09af",
      "kind": "transparent"
    },
    {
      "address": "0x44de28238b79bf74692a297ac0f363f9E8B15b8F",
      "txHash": "0x3f9d6e5037800f171a0b5a67cc5d4a5a31f5f0dd07ec4563016027fa65b29e4e",
      "kind": "transparent"
    },
    {
      "address": "0xFC987BA6Ff81A8788e673F32b2B93deB0B487F60",
      "txHash": "0x3c4a67d2d1f63ba480da626c8714608236f486aa8f3a6f82c90777515ccdab1d",
      "kind": "transparent"
    },
    {
      "address": "0x94Abe28a07099f68A57aBBc42f56bD981dD9F36f",
      "txHash": "0x7580c0dde16a4a7604605b8de8f0858772c5c60eea66e0d34a1ab200dfa3503a",
      "kind": "transparent"
    },
    {
      "address": "0xA4dDB969AfF0B17e6376A4D0c23BB40cfF0BfCdB",
      "txHash": "0xffede831185ad1c67ab521dd0bbe88aa8b9c161564102e02c49d3aabcaf91664",
      "kind": "transparent"
    },
    {
      "address": "0x9Afaaa79C72c61a9ac070f2A4DA4C2115Ba3d9f8",
      "txHash": "0x56cac256d08238e38a229f6725347029baa00d4ad3e5adfa1a7ff3827405d6cc",
      "kind": "transparent"
    },
    {
      "address": "0x77914cf00a383d1fF04B921cbd9c226C2341e768",
      "txHash": "0x5bcddf84ef8f54508b564131a9d979e62fc956b048b7861fe3758a36431268d1",
      "kind": "transparent"
    },
    {
      "address": "0xB2E3C2679D6b933cB1F672763d7122599DB4F059",
      "txHash": "0x60ea88f0d52777e5e6ad5e7526a633b93f529dfc0ca6f200aa1eceed165569e7",
      "kind": "transparent"
    },
    {
      "address": "0x0eE2278ec4ecDAF998Bd4ed6669eF5a9D71B2F8b",
      "txHash": "0x12ced7c9ea2e1e57fb84479c8e14fad6f26b43f58f2f007b81808f3e6aeda73b",
      "kind": "transparent"
    },
    {
      "address": "0x196245E8341d8e716B6A6F2d6A9fC8a7453524D4",
      "txHash": "0xbeb8ca88e221553381dd3dc60fee1f4b9b9395faec727965d0b472f160e364b5",
      "kind": "transparent"
    },
    {
      "address": "0x19cbD1eDDA02B29514f7eC5d6d2Cf25d7b88e21E",
      "txHash": "0xa3b6d5884db1b026cb9e622c88d56efa5bd92e28da337ac1d1421452308bcbdc",
      "kind": "transparent"
    },
    {
      "address": "0x4f4d0e2c8c4129bc41D8D92e5Cdcb40F5392F812",
      "txHash": "0x935283e5faeb825d52983cdc7d90bfb70da05add54487d6350531cdee5129572",
      "kind": "transparent"
    },
    {
      "address": "0xC1C7104bDab40F5EEED6eF1319F669c643d4fe1C",
      "txHash": "0xdbfb1a5301d68cf3858a68246f626e80865fe5fdcc29a52f3fe575b0f244f0bf",
      "kind": "transparent"
    },
    {
      "address": "0xF9e7cDD80C18f4eC193E061759AAafB21Bf5B94A",
      "txHash": "0xc7d91893210e9172b1d81e4cc72009ec5f0dee7e542ec8066efea84a10deeb27",
      "kind": "transparent"
    },
    {
      "address": "0x32DC1ffe57A5a143f44FcfF6cFd530349f7E76Af",
      "txHash": "0x03b0459f7f72628358534c15d726a29008ed707a60188941370272c380192655",
      "kind": "transparent"
    },
    {
      "address": "0x9186AC0d751B093FbC593A4A64107086D78F394B",
      "txHash": "0xd11de9ff72773ad8bb92b43b3c3477ef2234eefa40cbca198dc267838f9fd01e",
      "kind": "transparent"
    },
    {
      "address": "0x3Df5B8fFe8Bcc9DBd55231BEcC889d25bFaF7607",
      "txHash": "0xe1d7b6641ef7c7fd0cef6d904383e737b4089425567ad2b0cbbbaa157d0c36a9",
      "kind": "transparent"
    },
    {
      "address": "0x85B1632d4d7e69B1C57bdB10ECd0Cb9FcF5C3aa0",
      "txHash": "0xf9889895bb7d09be9eaf707e7900029300dd7ef20211f8bea8e7c1ac23fcd1e1",
      "kind": "transparent"
    },
    {
      "address": "0x209D69994c804546D30644ceE59A1B62b25cC6ee",
      "txHash": "0xd12414289d1d4f423ea0789f096e9f358d554bb947695e0193a852a645e3b0f3",
      "kind": "transparent"
    },
    {
      "address": "0xeC0B0A18F29dea64bAee2E1213A2c184B264360F",
      "txHash": "0x7fccde3713276ba0ce429a84a13d871c0f34f99b720fbb3eeb07ec68074d13f0",
      "kind": "transparent"
    },
    {
      "address": "0xe3e6F753206FAf9D0dE1606301F36D88283d76af",
      "txHash": "0xf0a12665b956899b69d2078c84e940ab52c0950b900553b51c9400d1de61683a",
      "kind": "transparent"
    },
    {
      "address": "0x073236a31a463330130d155C629372493674A5B5",
      "txHash": "0x0a55ebe6dcdf0d4f0eb9e4bfe23445241ef2dd0b91195b2cd85b5a7068e89fac",
      "kind": "transparent"
    },
    {
      "address": "0x03083746c02e96A234F830A71013b06f14765354",
      "txHash": "0xd2280414fd9b4c245a25bc8d13c07b52bdac0738eb2dff93e539718a5ea29c9e",
      "kind": "transparent"
    },
    {
      "address": "0xDe340d292805c02cCcfA03C2f78727a40cE049ca",
      "txHash": "0x4bbaa83d37845129195e4ee78d886193d93499cc844ff6ea05dfb711fd3db94f",
      "kind": "transparent"
    },
    {
      "address": "0xD598f68efaE08916C278e1C36bEE1d2ad143F765",
      "txHash": "0xa7a97350b533a9f53e909200dafc98fa06202f485a11dc864a8cecc2601a0278",
      "kind": "transparent"
    },
    {
      "address": "0xe7D6ec818e2322AF303DDe61471d91405723480f",
      "txHash": "0xa841e01f02fb5eac4c32094ecac689806a60c648bcc63eb75357b7d51e78b645",
      "kind": "transparent"
    },
    {
      "address": "0x7fdE579e117699EF6BDF7A6bEa9446801F7Fd23a",
      "txHash": "0xa4c3bc7b529f64d27be7242a0c60117c360631e1f0dc35ed9b2b3a2971885cd7",
      "kind": "transparent"
    },
    {
      "address": "0x3e72807F07227F619A368a67FD39FAbB7a839cCe",
      "txHash": "0xad81c506319686dee52c1790f3ec4a9b0d58a1dea2e330cf97c707ffe02b086f",
      "kind": "transparent"
    },
    {
      "address": "0x64c97F27B4DF4A158e379953B8C7dD3c46F1aA9F",
      "txHash": "0xed80068277273c20b2a11c73d6693358c3287f10a68946129a6226ada4cc435b",
      "kind": "transparent"
    },
    {
      "address": "0xc0367da175Bb814073d5e0970D5b3a31eC63927a",
      "txHash": "0x6c7a3ff28c276fcad00736dac9b0275a9fb0f68ff399fbc86ff974b9900a098a",
      "kind": "transparent"
    },
    {
      "address": "0x244049626D24f4440a567f084C09eC8de973Fd35",
      "txHash": "0xff67d615b3fb597c31b6cdceaffe07d563be87c704f83bae94d89332f81879c6",
      "kind": "transparent"
    },
    {
      "address": "0xFf0E74af6A0f6f2f4D82690754165f5505586729",
      "txHash": "0xd0130645bfc4c73940d55cb401cf883934ef5257d301b3f1be354f71f0ba51b1",
      "kind": "transparent"
    },
    {
      "address": "0xa965E78d68DbC52Cf6a850decF8d7AD7e16Da93d",
      "txHash": "0x5955749c134e1f6ed075763f5ac4c55a469b1531d91798bfc2f958ccd4512d82",
      "kind": "transparent"
    },
    {
      "address": "0xF15f532E9AfEFF5F23c22668e59c06F94754214A",
      "txHash": "0xa521e54f872a12ad8c199193a80c8278c64a97786bac83c4bd517733fcd3977b",
      "kind": "transparent"
    },
    {
      "address": "0xC251171DD30e4d6Faf7BbF1eFB84Ddbd939Aa6C7",
      "txHash": "0xe321c53d5becd0bd3a1f303e42df94a110aafbd36094141d873cb83a3a3b1289",
      "kind": "transparent"
    },
    {
      "address": "0x0BFe9cB9eB8F46f22Ba642C801F3389956bfD1CC",
      "txHash": "0x62c67348a6d2026fe794267efdb2983c31c56417d6205e17d040b968abf6e84e",
      "kind": "transparent"
    },
    {
      "address": "0xDe72c8B0eB85ABB8A305D102177f043f9f8f2375",
      "txHash": "0xc9eb92eb8cd04d7cc7c933617febe655af22ebf7a895c51d8e62ef5173667636",
      "kind": "transparent"
    },
    {
      "address": "0x515fA8291bb145C65ac67855D7ba898De4E6Eedd",
      "txHash": "0xdda5897badb7914d45f24bed8d0fcfec331e135bc0f5272d2c968db705ed088d",
      "kind": "transparent"
    },
    {
      "address": "0x523bb6b4CA605075D4069cB37D9D1304875dde39",
      "txHash": "0x5f4ddc4faf0b8b38b1d307d183fbac4b260583a26dac3bbb14a9947723b60f1e",
      "kind": "transparent"
    },
    {
      "address": "0xE00d50A283C2086EFf1Ec8BfDf1785f6D69800C6",
      "txHash": "0x90aa2d74f12979e53c64dd7faec74e3b8193775a73de8ee6e78141d689db4984",
      "kind": "transparent"
    },
    {
      "address": "0xabc0846334D911fB57Ea2f37AB584BD0cf3734A6",
      "txHash": "0x4df88256a0a4ef47a8c7b5c5b8062a5c570b9da163d6f572cbdb5f2424c61e0a",
      "kind": "transparent"
    },
    {
      "address": "0x64c71d1aEb53049602059CaB2093C6012d52564e",
      "txHash": "0xac250a9b1de84cd26302be0beda137b1becad303c830add2acaea38a7f30a347",
      "kind": "transparent"
    },
    {
      "address": "0xFB1Cc5Bf61bF0ea2F8b18cE843909C4A3f849fa2",
      "txHash": "0xfbe7c95657485b96c0252289632d370723e1cab7377a93c4b33f890a843ebe92",
      "kind": "transparent"
    },
    {
      "address": "0xe45d3619d1BC94f2B0Dc107109C07E0813dB1965",
      "txHash": "0x47345e3a58702e0007eea9d7e4b41f3f7c5d317c24823bad5d177532ab9a3a50",
      "kind": "transparent"
    },
    {
      "address": "0xd5C245C35138492d2aba1C7E1cfa5457b66B9e2B",
      "txHash": "0x6be62a45982b86360a5a440ee56ba25daac734f373a239bb3ba2cb4bce93f0a1",
      "kind": "transparent"
    },
    {
      "address": "0x37Ec744f9D9f6C8D5BF0f1Bc9802e5b4e98f5752",
      "txHash": "0xe70e44ed8880003fe9b6c1821a83e54947fd12a2abc4a6259d038b986fcc2e62",
      "kind": "transparent"
    },
    {
      "address": "0x32160D0e5B78b50104a07E40a20e674aeb3FEef9",
      "txHash": "0xebd716ff3ae1efa9c2d01c244cfa3f324a8ccb2190951855ff95e445f22ac089",
      "kind": "transparent"
    },
    {
      "address": "0x039bEF783839f93838F53E595C24c85ad41dF8A0",
      "txHash": "0x32bfad77c3aef4f7de5de11c98f5cd69eae6284780775794d58b1072e9e29ea5",
      "kind": "transparent"
    },
    {
      "address": "0x2Af2E3965d53F02c6A20f942836F35991D25eF8e",
      "txHash": "0x991b47167371362161ad5aaffa110eae5344483509556bb2f74c9d0204fe181b",
      "kind": "transparent"
    },
    {
      "address": "0x30781f03F2b42faE8B5631ffea67aAc4C728ae9C",
      "txHash": "0xc946883832d314408f85795b2c5646c5266e256d2a21d555187bd2816c36145a",
      "kind": "transparent"
    },
    {
      "address": "0xa1EB5cF494da54a19530f56043B05911748E2018",
      "txHash": "0xefbe3355318864c1eda535f24ce4dd958f5a8278d48db1821642bea1133748cf",
      "kind": "transparent"
    },
    {
      "address": "0x736B8eFed9E691D190DF1d8808141A5594F79b6A",
      "txHash": "0x021a70d5b50ab4e10052fab82c5c3fae72aa839152329031f0c371609957f14e",
      "kind": "transparent"
    },
    {
      "address": "0xcb256a644be5f1279Bb557a67fC462f3B66d6d7E",
      "txHash": "0xefa261d9f1ac64aad0826eaba1c24825721eb19b43440627365736441241aee3",
      "kind": "transparent"
    },
    {
      "address": "0x11db5F9118925f32983937b2CB36c310cfE0DcBD",
      "txHash": "0x3173a5befc1fc39c0f54c9e667749547b7ad1d9fd4b471215c3d5663539aaa5f",
      "kind": "transparent"
    },
    {
      "address": "0x42286e6DEBCe06f51d4E638bB46bCcc37a3eA3E4",
      "txHash": "0xa2b89519a1289e51ec1605e61a5554f69115a37f8511e01428339483a7d41e70",
      "kind": "transparent"
    },
    {
      "address": "0x7Fa0Db9F6735271DE3eaebFE72C20fED89a38512",
      "txHash": "0x751b951ee1031eab92cc6fd0985d46866f877656b52aac5265084ac9a8252b3e",
      "kind": "transparent"
    },
    {
      "address": "0xD26F29404D88224bC5228f2676e0eC354f398f14",
      "txHash": "0x1cec2da00fa734531b96d072a7712774bb833659e7e9474617fb290eadd2eaad",
      "kind": "transparent"
    },
    {
      "address": "0x569ccCB855B8ba663522180637F59322e775FD5B",
      "txHash": "0x289e3a9029d8faabe9625a54eecf2cff695c83b6fcb6871e7cea9ee42e2f7552",
      "kind": "transparent"
    },
    {
      "address": "0x5b36Dd4BfF6c19956595F738cEc03aB352751eBE",
      "txHash": "0x866dc6eb648e52f51242e2bd1891a4918db80d0dcb6d15a520878bafef9eecfc",
      "kind": "transparent"
    },
    {
      "address": "0xc5c24D44aA13713E0b63De800880216953260D81",
      "txHash": "0x271b2b8e8e5130b30000775fd771ef396cc8857c50b6cab92fc92d27fabbf581",
      "kind": "transparent"
    },
    {
      "address": "0x4484Ab8EA5e1E34Eb6b027DC81Cc39a5D3dB6757",
      "txHash": "0x1f590f0d5bb0a7a6e43154ceef736c69ac2057b7c69a3c90d24d57cd6103254e",
      "kind": "transparent"
    },
    {
      "address": "0x96Bd1E4D9E8DC56cD66669097008312D359b8484",
      "txHash": "0x8f521ecfe846f007fc62f4a6a2c65e9ba2f51f84b92259cba18d980ed2b97967",
      "kind": "transparent"
    },
    {
      "address": "0x02C5f84Bea62ff3722D3A306bDf7D2d986304629",
      "txHash": "0x6cca173f47b6a84d3c349c4350c9ee0104cc138169958e72210fa21d07e56eb8",
      "kind": "transparent"
    },
    {
      "address": "0x04FD5588a998C782A870D5a792fa2E5d1FF831F1",
      "txHash": "0x6ab4998af3aef1606f209b64f9c4032f712b2332ef455e300755214c3aae07e6",
      "kind": "transparent"
    },
    {
      "address": "0x76fed53ED7E3FFf4327342055B6a8418329E0dd2",
      "txHash": "0x841f48fd6219560a49bc57fecc80e7bf681c8f6075b88d5a483701cc1a4a910c",
      "kind": "transparent"
    },
    {
      "address": "0xB21dDaCf569609E525a6a9Ce2c329016E0563264",
      "txHash": "0x61c371aebaf2742dbb1d3b02c100bbee34e07648163ab84e956c5a7c759a2fa9",
      "kind": "transparent"
    },
    {
      "address": "0x742E161ab9A711D95D3892c1F4De1f0C94D684bD",
      "txHash": "0xec7cc00b5af27148f6241bbfbee85fa9ea18714951d5f4cb22731ffedc88d881",
      "kind": "transparent"
    },
    {
      "address": "0xdFe3B76096ED4D44b6F1e82B5fa5565A7291be5e",
      "txHash": "0x350b73a5f5b843952ab1141c671bb5c39038a2ed95017ba66177ddc7ca5869ab",
      "kind": "transparent"
    },
    {
      "address": "0x1b06Ad925f22105443d60cCdCEdE989Ab8f44a72",
      "txHash": "0x32e03e76ae41dc787c3c3adc85476f2ffd43244d940a3f20fad0f3d11d90d492",
      "kind": "transparent"
    },
    {
      "address": "0x7F47B2d323e1EE4Ff73D987a07Db5A6de4A4EDD4",
      "txHash": "0x6073377134947f2b5bc780f8964f79dae4e6834b1668ed73b7d33e1708978dc2",
      "kind": "transparent"
    },
    {
      "address": "0xC0Dcdcc13ac2557402cBEdfE8f01C33b6B70033B",
      "txHash": "0xb50b99be3153118484562681c7a2c21d09fadf42240e6b7aa45b89a317f83c71",
      "kind": "transparent"
    },
    {
      "address": "0x137EdAb876626D490Faa34f9346cB1e7421df617",
      "txHash": "0xed4ed3771c17bc347bb7a02baa09bffb8034caa33c5c01d05c30bd29da06ef79",
      "kind": "transparent"
    },
    {
      "address": "0x4870b91bD580383FC789022D243DA7ba246f7a57",
      "txHash": "0xff21de18dd0318b1558a9a9eb536e17d49850d1aed3072376dcb035c0855fc26",
      "kind": "transparent"
    },
    {
      "address": "0xd0EfDE07d23727Ac3346F940C2d85DA4981C5486",
      "txHash": "0xa638a3d6f35e9bb2edccef33b891ec0b79bbe20f922be898ce5321fec1156406",
      "kind": "transparent"
    },
    {
      "address": "0x11a2c52b395A9529858BcC5b47cf557bF0861bB1",
      "txHash": "0x66375731fbbff6167a404c7113ad2f4d51af5fee2c910be2f2fd06cf7b9671d3",
      "kind": "transparent"
    },
    {
      "address": "0x448c5559a6c02EFFd00BD36d119AD3dBaD6620E0",
      "txHash": "0x88d0cf5c0e688b7468ee759eecf1ebcda6462fe2335898049d025d6dd0412f23",
      "kind": "transparent"
    },
    {
      "address": "0x9bb6247F541078025ACcFBea21972E19B1494526",
      "txHash": "0x55cc421b6c816c769bcf291a882bf5d08effe77c49c1e0c31dd0fc628ffed09c",
      "kind": "transparent"
    },
    {
      "address": "0x112B60bD4CadC8ddE89a5529805331b8f193C8D6",
      "txHash": "0x2858c70487a253aed2cafbb4d348ae6beb1fdcfb2a4bb6aa2943ef9c3ed443c7",
      "kind": "transparent"
    },
    {
      "address": "0x7a1dAf121C9190b4eC6afbD46C9759Ca0257789d",
      "txHash": "0x63dab67ba65422c7cd71975505084469379788744043a4f530641342c40b3ab7",
      "kind": "transparent"
    },
    {
      "address": "0x889cDe1213723BB6A4C9991aa3bc0119B52EfC41",
      "txHash": "0xc38e1bab8f47af6682eb6e045f0945aae4d444d87e89f1d5ef4a0819b26e7ee4",
      "kind": "transparent"
    },
    {
      "address": "0xFA2eCB62Bf7b1769E88a7A3210bbeBbB80387d51",
      "txHash": "0x666aca0de738304c4607cdc058c13592c143c5d48e1c4bdf450ac26a15071d6b",
      "kind": "transparent"
    },
    {
      "address": "0x950ab1a6185F6B3C6808E5Cf2C9a8E11312CD59C",
      "txHash": "0xaf6f2354939148d18d6dd8a1ca400568dfccd278c8856fb612d522e885bd9350",
      "kind": "transparent"
    },
    {
      "address": "0xc781db042B6F0d7E2Dc59644Bbe8162142360A65",
      "txHash": "0x3af8d0f198d30f76b7f53ea42847c6f9e6d5861a6bb2fdb6aa54e0fc11af4747",
      "kind": "transparent"
    },
    {
      "address": "0xd3b817661B5aE125629e26e80870bE6b46b62E6b",
      "txHash": "0x47119d55cc6e4d5d0ddc29937647a3f37188909fea71c4043b7f3c0a2dda1061",
      "kind": "transparent"
    },
    {
      "address": "0x6EFe32d2cCb14E6b309D532C03e072DB34EF367B",
      "txHash": "0x892390858595e5bf38d3b5a4e6e5c1086a60af8c9802e980385ae7586d8a82d1",
      "kind": "transparent"
    },
    {
      "address": "0x50f67ca5cF28ac0ff3aE1D10db23d9F8B56baF9A",
      "txHash": "0x345a52c7847e1bbf68ce1428552c5eab80647175c9b350a18de285291467700d",
      "kind": "transparent"
    },
    {
      "address": "0x042725adB6fe837aE3771e331776136c9bb4c3FB",
      "txHash": "0xba2d2cab38f915dfd5e69af57acd1813c8932713745f915f6beafca678cb69f9",
      "kind": "transparent"
    },
    {
      "address": "0x49266Ef0E22D4735b6aa962E819257b27fF550cE",
      "txHash": "0x3187ecad0dbec23371d75531c3f775b7017bee46bfa2673f674bc94bce34cfc9",
      "kind": "transparent"
    },
    {
      "address": "0x8F13117CeE46359b27e47ab1B2815Ba344f3d69d",
      "txHash": "0xe1b305e5e4889a2f6636178d2214a958c8e9f9739fb79f19edae607b30939ea2",
      "kind": "transparent"
    },
    {
      "address": "0x869C462d054044dB60d2afe382699e3A1aB15Fef",
      "txHash": "0x43dc4ca9fd935fe26a19e55fd22141b8609a1b6275e2f4dd019ce8cde79b200f",
      "kind": "transparent"
    },
    {
      "address": "0x85830d951514182b9654A76DbC66647A052d1122",
      "txHash": "0x086db794881e2b5cb32ea6d85e800aadc70483c00dde11e2bb42a7947cf2c252",
      "kind": "transparent"
    },
    {
      "address": "0x2f242c638680c3046415459227d645233f2b3b45",
      "txHash": "0x2a9a4c2c145b90cbf1c454c1b967396c31bcbd65a5fd2d4fb622c203725b2316",
      "kind": "transparent"
    },
    {
      "address": "0x16f374a5874c3AF16AdE37EeEE5112ba11dee4BC",
      "txHash": "0x6e670b85bb767a1f614a0cd6d3e8699b9bcf6d25db15129857c51f5f65eae2de",
      "kind": "transparent"
    },
    {
      "address": "0xa5fa35d52f682ef818A90290A67B43485302e38c",
      "txHash": "0x30aeabee4d89f352a92dd1c25a2006908f984513fc1bd05e2a93cf631dc57a39",
      "kind": "transparent"
    },
    {
      "address": "0x2244CA1De0F6795A54aC63f9ac8805134A1C0131",
      "txHash": "0xb1237a4e1c84ae05e66e630872612f1b096ed9d23e2a8f4cd403cefd96bb4cee",
      "kind": "transparent"
    },
    {
      "address": "0xf08afA5479637fb162d708Fe027a45C614B8583E",
      "txHash": "0x7bbdf7ab5796e110dca549f18762b6a44230aa42cc9406c1c4f7c86d90db9d06",
      "kind": "transparent"
    },
    {
      "address": "0xBF2E85b487059f95bdB5254801d0e86F905A23d8",
      "txHash": "0x30609b825450524b478e906f0eb5fb36809b0d06d65d1228eba1c41185d25f3d",
      "kind": "transparent"
    },
    {
      "address": "0x0051D3E9Fa215fCDadD6a242B28c7dC8C0553E6E",
      "txHash": "0x3bd7750f34c8c06a470c6414cd584da257eb29c10a13744b2b7c83bb0a62c480",
      "kind": "transparent"
    },
    {
      "address": "0xd84950E3d145d184e1aEC60B67eE1EE271bb1D7A",
      "txHash": "0x1bd9081e43f9ad6d803b7de10ddbf164623c1c58b1bb40061a4c2a803ab2959e",
      "kind": "transparent"
    },
    {
      "address": "0xfCA13329d3672180B2Ac726E50b41A69dbCccfa6",
      "txHash": "0x7b13a7db4d0e72f1efd85f2ccd908364875aa7e21cdd273f45355bbac1e6435f",
      "kind": "transparent"
    },
    {
      "address": "0xDe7B7e9B4De9592F9FEe19feb054055972CD2384",
      "txHash": "0x6feb397a12315c833d7d7942e51cb2b4800d1da4852c6938865e2c0abecad3c5",
      "kind": "transparent"
    },
    {
      "address": "0x6a73996815A68CD98Cc317B1A57c13289E764804",
      "txHash": "0x3c63e9ae6951a493e1962b2be1c5dab60de389b723114e40c78cf238ea07e8b2",
      "kind": "transparent"
    },
    {
      "address": "0x76a9498578b3cF0Fd703ca4602E8Bb862B15640A",
      "txHash": "0x77907ed271ce3b09320e8fb2ddb38406f909ecddb65904824f943d8662ac926b",
      "kind": "transparent"
    },
    {
      "address": "0x9Ca37d069EFCb796585D18038088A190430E5e2E",
      "txHash": "0x406b4b2e35329e2689f298fc8c838fcc147bccab7d84b10b33e3d32c7d5f0478",
      "kind": "transparent"
    },
    {
      "address": "0x3889180945ff01E87bE5EF0319e9037C0f81D2B5",
      "txHash": "0xb5fb3094f612e7e49de1eaf0d1bec18e7bbb5740f9308edf5ccbbc66b7db83fe",
      "kind": "transparent"
    },
    {
      "address": "0x748B9EE9c7C64492dD8005c502bB6648B34AD8f6",
      "txHash": "0x09550e0e750116c57a85b93b80dac9061030df8f87d91636ccfd3e9cc9e78b16",
      "kind": "transparent"
    },
    {
      "address": "0x8b5c249743F68146F65AFBd30723a57439158d64",
      "txHash": "0x6c051eaa16244cb299b1b82f5d2df21490e400c36737019f191c6bd691f6440c",
      "kind": "transparent"
    },
    {
      "address": "0x3a6ADECEDd22e52bfE7Dbcc100bAf586135D88b6",
      "txHash": "0x913e3efad955725bc5281af54eb62b70e8b9e86c5011d1f1be6d2e90ba54d938",
      "kind": "transparent"
    },
    {
      "address": "0x0043D687E13C01B528A8889275949e19A1DBd845",
      "txHash": "0xe1c3446a9378bd0fa784082528d2a4dea05c9a96afcef44bd9d2af7d5202d6d2",
      "kind": "transparent"
    },
    {
      "address": "0x3D75FaddBEd6C0c888888330aa7B3668D7eAA26e",
      "txHash": "0x09b490250613df246167237dc5ed76a845603a609ef8f44f6e42cc967b0038eb",
      "kind": "transparent"
    },
    {
      "address": "0xB82533ec26060Fba177112E7d2a0560Dc9339787",
      "txHash": "0x87547ded1f649adb9999dc7f4a14adedcb348928398124dc5eaf74fd3da70fad",
      "kind": "transparent"
    },
    {
      "address": "0xDC2b65B8C9D8E7D6c47cA3FEBcc87B40876a317A",
      "txHash": "0x50f8ef243a9813c216c6d22ccdacbe59684e41c688b3283937c0018e5e4f81b0",
      "kind": "transparent"
    },
    {
      "address": "0xB0fEc3F65367438F6bbA9291E0eF10726c8c0B8a",
      "txHash": "0xbd0fdae694c689e36005c0fc147fea774831c9e892f7f80d8d9f68eac4f20a59",
      "kind": "transparent"
    },
    {
      "address": "0xc7a6F53FfE6163887b6A4026e0A374623C1381eD",
      "txHash": "0x33891ca9564f9dfe1c14ce2ee3ec5214542c534a59e96cc028f4a14697b390bf",
      "kind": "transparent"
    },
    {
      "address": "0x1b38dA3612BD77B398FF56F07859Be6Ac2f13CF6",
      "txHash": "0x067ac76c1b954ba0172cd0d4a7a13b25a661667d5ac8d6288c7d5b3f2ad305ae",
      "kind": "transparent"
    },
    {
      "address": "0x1b6b39f600C4D8e07BCc2343FBDe8F95413b1a1e",
      "txHash": "0x98dfc9be474e0e54a6142584de932355ff24c0eaf11e03181e2480a88774c4e2",
      "kind": "transparent"
    },
    {
      "address": "0xe61a7fDa5B3Fb173d5Df9fDAEc74633366FC01a0",
      "txHash": "0x7b2e66c6aaaf02c191ec39a95fd84d2a80c975e482620d7dff2d32671674e042",
      "kind": "transparent"
    },
    {
      "address": "0x15D7665f60BCfe02B884B192F0ea8861FECb354c",
      "txHash": "0xdf5389ea62a98e2d00a4ca27652e6e6d7d6c83730526c33c7e4165863e568742",
      "kind": "transparent"
    },
    {
      "address": "0xe78141630f7AbAf76E68d767297206fdA26Ee607",
      "txHash": "0x598177fd6f539b3029ba838e64189f11ffb984a7e7d2b2a85fc1be28d1609eb5",
      "kind": "transparent"
    },
    {
      "address": "0xF70603B258D313F01Dd4aE201Ca5fb8A110D4c77",
      "txHash": "0xb272ef44e13cc305fc92a912a6b94f0dadb707c4d401062c2357c17413c31e98",
      "kind": "transparent"
    },
    {
      "address": "0x1Ec81E914A97f51797D656880DF0455b2e889780",
      "txHash": "0x603883eb618761b1452d40bd14fbef8e395f2ad9d3802334e0b46520e995f550",
      "kind": "transparent"
    },
    {
      "address": "0x74BB5f7F1527Ea936933DFb0ec32992D01bc8868",
      "txHash": "0xb7440f06964e3cfe6ef74efa3ea6f0862c0b38fd622a5fb43ff258e63cef073d",
      "kind": "transparent"
    },
    {
      "address": "0x89F81Bd7b5676bCE14e304590F3DE0575396bAC7",
      "txHash": "0xd3a8ce04afc0b25db75c68a81c5060ed9c92bf4fb23a344e2d57771691820b68",
      "kind": "transparent"
    },
    {
      "address": "0x60365E94dDF6A01910f17DfBdb79a9dbb333cf04",
      "txHash": "0xf36df38a23d2c159029f731557daf3942b9f06db81a3ade0ba7b21358bab295a",
      "kind": "transparent"
    },
    {
      "address": "0xB4dB482cC264B556B2B2a969340F3f208704D171",
      "txHash": "0xec67ba16aa3a8aa32644b397e192ebb47203709443e5cc3e21b89cc6f91d0b99",
      "kind": "transparent"
    },
    {
      "address": "0xd7D4017ccB7157460c5Db1e678e1978fBeE3F7dE",
      "txHash": "0x272d523696fb77f847632dab53d9616cffc6f2ad916af354161d1f70527af1d2",
      "kind": "transparent"
    },
    {
      "address": "0x727423237a7718614480455cC17BA35DfAf89175",
      "txHash": "0x4252881872e90cb19b3c2c3aa8707fc6b463240988eaf35140b27c9b7f3e027d",
      "kind": "transparent"
    },
    {
      "address": "0x43C3A995be1912b57B0C7A7354Db682c8b5Ff282",
      "txHash": "0xf632194a6f5c70fed3d42b467398f7bb097d6335d3b7cba3725dc1442985d563",
      "kind": "transparent"
    },
    {
      "address": "0xB69AE58E9bE4a8ab5f7B2005d5E4b6374967bE04",
      "txHash": "0x469f45c18d8c083d343bc3845c8ae0fa66850096451a933682004ef205a27627",
      "kind": "transparent"
    },
    {
      "address": "0xc0b1969Ba07B85188b34EbB46e3337A3412ea0e7",
      "txHash": "0x1c9859b49bee71e5ac23065f003eb80d704649ada1c60326c9f13c254d029537",
      "kind": "transparent"
    },
    {
      "address": "0x1E86A3025a06d511c9389191E4F410CE6c07475d",
      "txHash": "0x394eec031346a06c82c049934b510ee5cae3eda0ac158923ba1454e972084e89",
      "kind": "transparent"
    },
    {
      "address": "0xD3717b34160168539c3c088438f31388a993d9CB",
      "txHash": "0x433b5d1af17209b3b5950b212bd7562ff896e94dfba7c631c8db0b45b40bd26e",
      "kind": "transparent"
    },
    {
      "address": "0x23081B0Ff19C820635BDF7Bc225Ab46790F9C109",
      "txHash": "0x3f11ae22e16978facdf19d3c497f0f92bfc909111a2a50e0504ee299bda71cda",
      "kind": "transparent"
    },
    {
      "address": "0xB7b8cf191897aaCce3C23450cf789a9c4FF94F78",
      "txHash": "0x2255312623512698514b740fa19ea96e37f115d94518d444d3d2f1c93b7815c8",
      "kind": "transparent"
    },
    {
      "address": "0x9c8dE06a6fB2571367F1082c397e9a4E2e4Ca409",
      "txHash": "0xb3937407a927e686b2cd7ba3bac388593bdae5e36af6ac8b8a8c0f83d0a65fb9",
      "kind": "transparent"
    },
    {
      "address": "0xE82D38C257c3F0ABf51f4EEfa7985CAB408335Cd",
      "txHash": "0x9b7e4a7573fd9dcdacc75e3816a034e1d83862166c252879dd7b941995668cff",
      "kind": "transparent"
    },
    {
      "address": "0x2c85107f5B8B1DA0D6C00e22Cab715411a7238bA",
      "txHash": "0x51c59b8b1707bff565dea4b63a6cfcb5feeb44fb53906852414f7b4d79d166e4",
      "kind": "transparent"
    },
    {
      "address": "0xA8d95556f79Ec6580bE18DfE16ae5de17Afbe3f1",
      "txHash": "0xf18845d2e17f89dc19cebfde723b404314d5a4941ff88d262a2e72a370576c58",
      "kind": "transparent"
    },
    {
      "address": "0xa3084Dd6a73a033964B67FBBcD853151fBfE251D",
      "txHash": "0xa79f817bad464715827c3f46aea3eff770e6315212ef552c424692c713dd78d0",
      "kind": "transparent"
    },
    {
      "address": "0x963AC7EFbc1E271F16CeC4a90c1c7C8A4aa80C5f",
      "txHash": "0xacf29fad7655cb2cb2ea31cfdc815d062ced002aa41d0a4a8865cce324698da3",
      "kind": "transparent"
    },
    {
      "address": "0x0Fa8D7292664e801331f55ee050E8d23Fae7b9dE",
      "txHash": "0x18ed4fcd52519977c66fbf3b0680679e544521e0d900e55ae64c70c0891fbaaa",
      "kind": "transparent"
    },
    {
      "address": "0x462f277C9Ed848Ab2c5A4532b427d2EE23f4f4c1",
      "txHash": "0x30888996d34a33a293398e13ecbd7e4212c1734d300d193f2b9a2a73bb224702",
      "kind": "transparent"
    },
    {
      "address": "0x137bFb3F8824B329069ad33dBA6Ed142229B791e",
      "txHash": "0x55057b2639a216faf9aa2403ab8b62bee29909c77950f5f3381d80f625f175c7",
      "kind": "transparent"
    },
    {
      "address": "0x12354074889A75E870D3eDE4a7a7290adBee5737",
      "txHash": "0x28363c153a7626c99fd61eef8f818c86b403d57507f1ca8ea1cdcd86df711f59",
      "kind": "transparent"
    },
    {
      "address": "0x9342B176f4Adb49d1bEc531DA10ce74731F737AE",
      "txHash": "0x9073b92e0b0b7e8959743179058975b11569e2561c3ee09f6d2465cf71d7dd00",
      "kind": "transparent"
    },
    {
      "address": "0x77E2D1F452CbC290ef0079a50e488FF8C8b6eCfC",
      "txHash": "0xaac124cea470d9a9e82a8691888701a2654eda5cc45307db92f408591a59059e",
      "kind": "transparent"
    },
    {
      "address": "0xF9dEcFfc754058697752cc7874F9bd1Dbc1c9e48",
      "txHash": "0x59686f6712562bd1d7a65f4c406e4cab6247fffb0d874a8ecb8016f2b02ff392",
      "kind": "transparent"
    },
    {
      "address": "0xf083ae56a9bb67DEf750402447F258Ad1D01dd85",
      "txHash": "0x06b494cca7efab84a4d4317cb29d672a8acedf99ea6cb4328bd7647cb89dc8ab",
      "kind": "transparent"
    },
    {
      "address": "0x25A82369C2F0bE19b43D93012ABA9Fee28d1154F",
      "txHash": "0x821c7d420a1cdaacad26184097b654d79627a3ddf1f6b3006b31ce044f498af9",
      "kind": "transparent"
    },
    {
      "address": "0x2D24727203a2cAe1EC8B9Af3606a5Ec2C8031c7e",
      "txHash": "0xcfc12c300a9b8fd83482f9ccd789ab0de8e5d5a82a10f7619c79b9324cd58c83",
      "kind": "transparent"
    },
    {
      "address": "0x0BB3878c24DEEe408E85afB0098D151a5b10E7B2",
      "txHash": "0x7c3094b945a2225d64a3b785dd2029fe5fd3d03aae67db1a895bdb9ce7913736",
      "kind": "transparent"
    },
    {
      "address": "0x63e713738Ff71d1123c695Daa356Abda0D7321Eb",
      "txHash": "0xddb0fdf5dd7bbe00ab5402ec64cbb87a0f45b1168e9541d204102f32c4acd4af",
      "kind": "transparent"
    },
    {
      "address": "0x0A5256ccF4e8044cD57D909A15C6FD7847F159cA",
      "txHash": "0x84e74452d88a020ebb23773d563aa1d0697b502c0a0c7d25ded6363f241356d0",
      "kind": "transparent"
    },
    {
      "address": "0x8e58744EC9B73E29E963C2227c4F3843860eda0a",
      "txHash": "0x2a19ea45bb831d7681f911896f6c4abc8b41516376463390c6c304232cf102c2",
      "kind": "transparent"
    },
    {
      "address": "0x4CFf359931d7Ade01B2EEe5BE480D4D39443E389",
      "txHash": "0xec9093c5786a85188db2d09085aa176ceaf875b7e62e74b4a33e5d707cedaaf4",
      "kind": "transparent"
    },
    {
      "address": "0xf4fFC1b4DF79fAD92fA1CFB4B8Bd48E86afb53D6",
      "txHash": "0xce194a2649494553bc3faadf9d3c09fbf5de39820d32b7dc4c505ef6757f66ef",
      "kind": "transparent"
    },
    {
      "address": "0xba5Ef69C5f89b25Ff8DC535e362A4490F80f4789",
      "txHash": "0xcec8b584bdde92c79df7b7b7dd47cc020b75384977250ebd2cae7b275c564696",
      "kind": "transparent"
    },
    {
      "address": "0x43803BB70cf33123d459f76A88Ab0524001786bf",
      "txHash": "0xeb585a771049e942528d3f5bdacfcaed10fccc56a2329dae77b054299085b6f5",
      "kind": "transparent"
    },
    {
      "address": "0x55Cc502E9ce7Ad4BAEfFfF1efDB0D619fB46aFD4",
      "txHash": "0xc9a3825f18bd4e47d998a048fd078c108863a88d72d98baed25f142097443ad4",
      "kind": "transparent"
    },
    {
      "address": "0xcE0FbE0DfE42EF9989029E7aa54A0148faEB1630",
      "txHash": "0xe596d11194b772a946bdc3ba2c7f88a4071eb24bdc8e99ee1be231fa01900c9c",
      "kind": "transparent"
    },
    {
      "address": "0x09dFF8B600CA867b6356DC58026cfcdF248C4be9",
      "txHash": "0x7060b5a1ddedf73343d149e39c0e8684455bd1019835a6c6a7f70353f0bf57c0",
      "kind": "transparent"
    },
    {
      "address": "0x30c417C4404F0481EE02cE3F1397c6229EE616F3",
      "txHash": "0x2efb69314ec13fe7eecf9957fa42cdd1f38d0b2c2116979b14263b2e190d24e1",
      "kind": "transparent"
    },
    {
      "address": "0xa6B753855Ca5C7478BB5a7ff7EFb1c6C66eAe1a1",
      "txHash": "0x84b545238e97abdd6952322dd80e8d3afc513e7783f77979d5bc0b1e871e6081",
      "kind": "transparent"
    },
    {
      "address": "0x7C01A781F96DD97BF6A092509Bd2E4cC580dBE3e",
      "txHash": "0x9779b34b98996b33385eb13cff27c25b41b48bd7ff90eb140783e2bc356bfeb7",
      "kind": "transparent"
    },
    {
      "address": "0xF85A4894372f023ca0b32A34efCfAb889Eab6886",
      "txHash": "0x878294f28cf489668049807eba5299d005d4bfde2683f7db013201a2214c6156",
      "kind": "transparent"
    },
    {
      "address": "0x11b88cF19044D792277c5216AaAC0aA6dEa615eB",
      "txHash": "0x5cd50f339a9704f17fe0828fafa9ad821ef2abda6f5f3ceb268f8dabcc058f21",
      "kind": "transparent"
    },
    {
      "address": "0x9d2BA19121D87fd9eD1eC66F1d6dc94fae24F465",
      "txHash": "0xfee307bdaad9590d8f10181c4dacd4389d08ebf3c24aea9165659f1f02239124",
      "kind": "transparent"
    },
    {
      "address": "0xc9Cb8cbD2a90cFae3175138A3aAcc63882287a85",
      "txHash": "0xadce5b83daabc09f488a7389fcb6be3ec1b99fca2b453e7a9ce76a726dbf3ceb",
      "kind": "transparent"
    },
    {
      "address": "0xAafe3365C5C82aDC55DaD50560869c7a82986572",
      "txHash": "0xc73ceccf4d5f6af33210d0dcb64c190a57ce45c2981d55bf1b92bbca807688a3",
      "kind": "transparent"
    },
    {
      "address": "0xbD6c2b85a4A536A989497a605fE2E38aA60Da61B",
      "txHash": "0x3af5c5878ad86f833475f9a9d0f6926239e2cf07da6d2079320960b3dfccafa0",
      "kind": "transparent"
    },
    {
      "address": "0x3E60BC33b9c1b8693F1F5Bf62792eEaa018337FA",
      "txHash": "0x1aa4b47e7aef226c27d00846e6d86b31d611e4b86c3506346836a4bca49084ad",
      "kind": "transparent"
    },
    {
      "address": "0x068BEeC17b3EF86712129dBd94AC093f4946C4e5",
      "txHash": "0xeae1570f273b855d1284d5dba82ac16938b4dbaa7e08de77e89d5fef9093e5be",
      "kind": "transparent"
    },
    {
      "address": "0x50709Cbce6c320Ad0B199efA0573cE3b73c234D8",
      "txHash": "0xc75db8842a8c7092401e5863b3a8dffb5a1eaddfac536c98894b7750ccb7382b",
      "kind": "transparent"
    },
    {
      "address": "0x6BD867d4701c5aB2484a69aa45Ac90353275aF77",
      "txHash": "0x6130bc0e2c945385d7cc36e1cd3ee621a4d73a97c0fe458442c9dc0df3ee97e3",
      "kind": "transparent"
    },
    {
      "address": "0x4524e1d0880702BFF1e52118FEc2828d1a0eaCE3",
      "txHash": "0x40be0572cc341b0305d6dfe229ff72328bd4ee16fae95c4a906376bea7e951c0",
      "kind": "transparent"
    },
    {
      "address": "0x89C39a6243D3B4BA408cf480eD4f6a32Ebe5FE6c",
      "txHash": "0x000b7b337738b5f19c4b1ff1bc799e2c18b501e24b5dae71d77b42ab92439b74",
      "kind": "transparent"
    },
    {
      "address": "0xCfe05c260b2500d580ECe6355D752802A88b2c79",
      "txHash": "0x855a2243be2deae84b543b2cb0768fadc381b3b631cbb8b85baac74bdd8c4052",
      "kind": "transparent"
    },
    {
      "address": "0x1Ccf3E4eaa77086181DA734734daE1cED3E1442e",
      "txHash": "0xb5279b238297a0628a02ed3ac7332a57fe4f3c1f33667285596f893f6e0effb2",
      "kind": "transparent"
    },
    {
      "address": "0x4646ceB8B5b9aD518B84088AD7812d4dc6dacB4B",
      "txHash": "0xacebf48472bd3c00440aadeb520d5da08f85379dae4daabb4daf26ab5c79af99",
      "kind": "transparent"
    },
    {
      "address": "0xdCcd08c65f1Dd9183CdF5488C1d89d79FB874971",
      "txHash": "0x7256f150f056a054ae6a43fade51c0779daf95d72fbce5e268ae31fa86f62342",
      "kind": "transparent"
    },
    {
      "address": "0x02945372Dd3BA18376a345c388D063bAeA628254",
      "txHash": "0x780653d0bee0b234d9fc3ae2d54dfbf84d9a89a8a4c0e09f8e130a510da43099",
      "kind": "transparent"
    },
    {
      "address": "0x49d21E2857cfa52070912c0D7F77797DB405EBbC",
      "txHash": "0x93e68222a95c45d2188dbc1cafb8505ab4ed3e39a72715b3086917eb23c7fe98",
      "kind": "transparent"
    },
    {
      "address": "0x9d0A338097AFb72fF72e21A85132831adAA2C5aE",
      "txHash": "0xa6c64b4f1a911b890155e07bdafa087ef4a7ba71f97da7c9d75216ca2eb4e882",
      "kind": "transparent"
    },
    {
      "address": "0x1a032C1195DE5abD38a23aB11665923b8D7c441F",
      "txHash": "0xb4d5755475f624cacf0f3283e25d1c2cca2e1bff720981cdead8fb3dceb17e6e",
      "kind": "transparent"
    },
    {
      "address": "0x5633498f08F6b19d543Cb68153A7727e046BDe97",
      "txHash": "0x13c50af51815021124efb8c7e9462fa3775825caa30182355c16774045cc926d",
      "kind": "transparent"
    },
    {
      "address": "0xa2F45fa96971C0Fe8d5A161848A4F271EC8338cC",
      "txHash": "0x82e5eb1150c3527c550b5cf11122fb7672e78f747f1c551382ac1c93ae7a8f29",
      "kind": "transparent"
    },
    {
      "address": "0xAa20E2e4e8Fd8a729d5D24487Fc12D6B6a8d63D7",
      "txHash": "0xbbe5720c83e79c11a5ccec508927548af29f4709cb72b368ac3cddfe23289e29",
      "kind": "transparent"
    },
    {
      "address": "0xf27320b38a103ed7268F4f803a5BfA6618612F91",
      "txHash": "0x4845232e03bbb2456d0d808febd4bc5e8d4f303d1cc2577480c651d12955e5af",
      "kind": "transparent"
    },
    {
      "address": "0xf8822FbcE54bD3FaEe7262F96Ab02483c950DbF0",
      "txHash": "0xe7783a896c71e3aabc914eab172fee74979dbfbc8eed801d1caae91d3e6e668e",
      "kind": "transparent"
    },
    {
      "address": "0x38E2FB3ac086ed5921b8e255120f5764bDf105c8",
      "txHash": "0x03f1d3ab200c64fb98007a4c56fcda90018136379e392bc48afd4c8c5f37b05e",
      "kind": "transparent"
    },
    {
      "address": "0x7837739D391659AA32c98Ed49FB47963820766b9",
      "txHash": "0x7d4a2f5bc50af70fd2dd62cd069faff8da7168e997435f8db56e9581c1e60b76",
      "kind": "transparent"
    },
    {
      "address": "0xf8D792D597887B638bACaf53fDd5494319DB9438",
      "txHash": "0xcc8a730aa909c036f8ce726aabd2dab687cca41ea7236bac65da5dcdabc8bfc8",
      "kind": "transparent"
    },
    {
      "address": "0x4df6e655183f3E02222F0f6b367798A7873dDA6f",
      "txHash": "0xc8921e53ab53487216f76faff347b759ae5f46a9b58705093b2a7c356ce46d3c",
      "kind": "transparent"
    },
    {
      "address": "0xc3c222D544A3660f46465B7BFe8Fc3A1e2d6a526",
      "txHash": "0x1435e97ccd7d99d953a8918f0f8a56a0ff44f1e37aad7aea2fc8cdd81e798215",
      "kind": "transparent"
    },
    {
      "address": "0x6CFE2bd358ce976009a95B462B5B2496972e4cB7",
      "txHash": "0x430972705f959787dd4795c085d134a673bb881e9791ff43d589cfe845fc16bd",
      "kind": "transparent"
    },
    {
      "address": "0x33A37A735318d3Aa4D80D2990Fff2DBbBa8035ad",
      "txHash": "0x4a2569f7fe18200135526fa09919fa7fbf5039e17a3df85cfe33b9f015d6629e",
      "kind": "transparent"
    },
    {
      "address": "0xbfb62a52dE1c94609153d6Cb67238Ba39638F3A7",
      "txHash": "0xf534948062af21c5e49d45ba2838cdaf64ed0adb5434403e7f6f80af309ee23d",
      "kind": "transparent"
    },
    {
      "address": "0xe5ed1e30b1Ba7C1c7B814f1eA8EF04Eccf2149B4",
      "txHash": "0xc4a035e815329c1287f221982c1b596cc25a4ebb756315aef6faff32d47b76e8",
      "kind": "transparent"
    },
    {
      "address": "0xD31813c9db1F94E37dC7eBaeE71B989718aB23Fa",
      "txHash": "0xa4db4cc2b74f36c742643eaf33e95a7b017019400cd1801e1c90911001c864c0",
      "kind": "transparent"
    },
    {
      "address": "0x0e30A7Ba3eBFF3eE5E9c57C40D5Eec0386a09566",
      "txHash": "0x363b1c484cbc344ca73b7cf1c8d9fa60dffd6b6b7378b637639de6d2cf66062f",
      "kind": "transparent"
    },
    {
      "address": "0x75a2Ab600CDdd9f6bD89fe7A7F71F5994c1E2F24",
      "txHash": "0x179e65c5c05c8431f30d3f78b54da9e9d18e14f40e50333b6076cea27fcdb75d",
      "kind": "transparent"
    },
    {
      "address": "0xE35AB34dE3f3a2043c87664673F75EBF0Dfb6D93",
      "txHash": "0xf98b8eda2c70a46bdd0ab01b1f409e6a0e476955ed8fb1cf9bc7fd4f3b15732a",
      "kind": "transparent"
    },
    {
      "address": "0xA4F56568F4338C8f766876c0388b3fd5043362C3",
      "txHash": "0xee8ba82bd6c8bc5b4ed82c65c4695d670d2310c60968df9b781659ee6b3fa1ab",
      "kind": "transparent"
    },
    {
      "address": "0x80Acc9Ff93C5b80A9C4e59a7BA8D6861d6fA104c",
      "txHash": "0xee32ac5a5f219fdfa134830b85ee97238e01f1f962c83426adc348fe01052651",
      "kind": "transparent"
    },
    {
      "address": "0xDE172d6d24EF8fd04b858102Fae996e70a992567",
      "txHash": "0x85ce08a233b4546c26f8a0ffe2aee4a7c9f5eee8c2412908eae8cc8a4d894807",
      "kind": "transparent"
    },
    {
      "address": "0xb5C427e0276505EAb1475429c9Ba0b8da8456707",
      "txHash": "0x96679b49797449a3ff811314ab4f96b91dc6c722371f3bac4de2d4c2f44571fc",
      "kind": "transparent"
    },
    {
      "address": "0xde58f49a3aca6D802559f85D832C50F84ae3a98f",
      "txHash": "0x4db98e2360c87d7d7c017b81c88ca4bf9ca864fc7f8d0708e2a9dd52ae1ce22a",
      "kind": "transparent"
    },
    {
      "address": "0x85Da5BEaA62741c3aCabBE67F5e8dC1fe46663ED",
      "txHash": "0xae68260f3b5d96f41e48434ebca3f761cd068aead99dfb690ee91dc2253abeeb",
      "kind": "transparent"
    },
    {
      "address": "0x913c9fc25944155F04BCDBCE02356974Ff92d31A",
      "txHash": "0xd8f448c2070392286e01941de7409859a77764d5952ead034fa38568c00a53ee",
      "kind": "transparent"
    },
    {
      "address": "0xa2524C5C7e88118A383a011a76C9b9E7626D768B",
      "txHash": "0x82b4bce2fb8e39b468e40a22a0bcdf3e825f12fe421658477e39897cbc3cea70",
      "kind": "transparent"
    },
    {
      "address": "0x4dfe457189867556Ecd8B052d198cf4Ea39FB51c",
      "txHash": "0x931ba059734c8db460bae049ff4bb71ef4c75d3b641d347b31bde265b66cd0b2",
      "kind": "transparent"
    },
    {
      "address": "0xF5f4Ec13996F6d27510fDE98187fe0B820Dcb144",
      "txHash": "0xbedc9ae39929ae23ca9138dadf0de97fa46b4b8ac77e892cf4fe433b4ad6e916",
      "kind": "transparent"
    },
    {
      "address": "0xcBfDeD17502f1c4B4CD4ce78A2f72Ecd4c73A0dE",
      "txHash": "0x817bff839d506f5654ed50ff5b8d803cc9c3e343928c59e25a74f9af89885559",
      "kind": "transparent"
    },
    {
      "address": "0x185Bbf425FBBBC197A13Ac636a981D40d06cE359",
      "txHash": "0x6b7c4f88a5610816ecd99384a966f6a609ae23ad5c6e9553a91c0bbbc804ba3f",
      "kind": "transparent"
    },
    {
      "address": "0xbC84b6c22428d72Cd69DEbFBa2b0B66F4274479D",
      "txHash": "0xb6141c658d829338d977c681f29f383b636b933787d59d6598a9c18a08e11824",
      "kind": "transparent"
    },
    {
      "address": "0x24595C02c0d22108fF808F069349e1d36a614887",
      "txHash": "0x72c3d2090f1d32869796edc4b0fd17682569a5b49d9cf4c2cc105693b4c370ec",
      "kind": "transparent"
    },
    {
      "address": "0xfb663B149F7702640e877834f4870a397f0eE56e",
      "txHash": "0xd6f9f84098798b530b7fd1d9efd94da3434e3954051aa90d809061d64c91ec21",
      "kind": "transparent"
    },
    {
      "address": "0x7298F2A77b94343413A1ff61B9b42d57C19d0078",
      "txHash": "0x6b6d37b0d09513e4192affd3435186d4d8ea012840fa226de21cda372423630d",
      "kind": "transparent"
    },
    {
      "address": "0x1D51FCCd618819402b5986754825fBE5FDe8A2c3",
      "txHash": "0x174e7b225320781bea649a83dd5510a0c66a533ff24c2d2a2fee1094d809710e",
      "kind": "transparent"
    },
    {
      "address": "0x420b934a6290683209641e0C71D96194E1b59B6b",
      "txHash": "0x917b7c85805ad6320a6a22c764e81695a6f0ba9638ac6f68a712fabf5fd733b1",
      "kind": "transparent"
    },
    {
      "address": "0xE910733B2eDf9F25F23984F6Da0C3eeD98b3831F",
      "txHash": "0xf211328ad687149299f8a6a43560ab25db5fb3f22a79995ef1c1fcb370eab61c",
      "kind": "transparent"
    },
    {
      "address": "0xcD16CCC2F94FC5066AC3bea7dF78C36Ba44dA100",
      "txHash": "0xe61f0ca1bde591249073f4cef17a05a52c21487ac93fdb6eceadb36d2b675fef",
      "kind": "transparent"
    },
    {
      "address": "0x3A74E28B48540f71c94e7A3f314fBd596f3515E6",
      "txHash": "0x3a4b77935992da93cae9b3d19b7a6399547aefa6b45342589eb8ab531733ea81",
      "kind": "transparent"
    },
    {
      "address": "0xDb3B00D22AD0a5fd10168AE276D5Fe511f140106",
      "txHash": "0x5210362311fac49abde32d50d4b14379ad1d906742dbe24375722aa55de26ea5",
      "kind": "transparent"
    },
    {
      "address": "0xB0FC9B857Dbc1ab6ceB39643497deEe80b58180E",
      "txHash": "0x819c0524d031ed2339c9244a878e143bd26e4a3fd219e25eb8ef148aa9d8b4be",
      "kind": "transparent"
    },
    {
      "address": "0x045C16C692633dD05cE0116D052A96Aa7B72EbFE",
      "txHash": "0x5a5236b7ad3ad79e101dc658e3b0ab214ce82ad472e609221f408bf18627897b",
      "kind": "transparent"
    },
    {
      "address": "0xe9C56E70A2A02627e099ca7fccc8D64EF489e450",
      "txHash": "0xdab54190bc4e6b51deda3a70a11bb41c41f3e26918c8dd6d284c7f32b177fef1",
      "kind": "transparent"
    },
    {
      "address": "0xa48802C2bA0f6659d5B4711D6233bd12a73D47A7",
      "txHash": "0x77209050d45f8d94e60d18dc77d3556923b42c1fea0f1a9d5066ef89bd7ba892",
      "kind": "transparent"
    },
    {
      "address": "0xD4045e81b69e7C947F8aBFb24a371376CC95411b",
      "txHash": "0x3ae342c8c92ced5e294a611a7c265737093b30064afdd2bcd4ed51b7fd86c77e",
      "kind": "transparent"
    },
    {
      "address": "0x58BBa6EaA7eab7D6729f6F8247040155a4D616A0",
      "txHash": "0x69ff206dc84f9b8d0a116c82d9c4b57e5888cca556fa159d98054e9bfde0e756",
      "kind": "transparent"
    },
    {
      "address": "0xA685319a3798b9E9A0440487fF99A13080103Ea4",
      "txHash": "0xfab34a7f9e64b20782133ab7b27fdd79daff6d0fb4fac6d36023e050fc8eefcc",
      "kind": "transparent"
    },
    {
      "address": "0x7B756D0a0d30eAc18D359b6936ccCBA35EAC603c",
      "txHash": "0x42f38bb5837e203fcf36ba95cdbf75fc711bb6ad0154a5aa0b4d7ff0066a975f",
      "kind": "transparent"
    },
    {
      "address": "0x3a9003224be339D91ee9af79e96b295B1935d75E",
      "txHash": "0xcf430c70ede0d2d1c710ca439aaffabdf188cf12acdf1f8006c0783e37601fa0",
      "kind": "transparent"
    },
    {
      "address": "0x8E3dFe6f134b256227225E73c5684936A7CC0b00",
      "txHash": "0xf2ea4e60fb6de2cba27417aaacb2fe0a2f6cbc3e5718315316608d86119321cf",
      "kind": "transparent"
    },
    {
      "address": "0x0eF000E5c7cCceb175D958A027864F8BCbf59F35",
      "txHash": "0x258c7b46af9279b35698a7600aeee4b176fed0f4715d94e28cb1f43b5dc951c0",
      "kind": "transparent"
    },
    {
      "address": "0xBaC42AC56D8ad1D001634d3c3311005058D4e3c5",
      "txHash": "0xf19dc7447ef358808f690f5cf331f44d4c176e99c545425324686302f4343b0c",
      "kind": "transparent"
    },
    {
      "address": "0xcDC172141D5Dbb8d422C233637A7D6cae12b41cb",
      "txHash": "0x909b5a4a72f4814bba04851df256e12fa8519a352a14550e25efeb9dc281636d",
      "kind": "transparent"
    },
    {
      "address": "0xC0096E8cF7DD9bD8558Ea220e0a8ED6B45F05237",
      "txHash": "0x4ff019146353c643fbffe75786965b6b6e01335711ec3abcccef5d66fabea84f",
      "kind": "transparent"
    },
    {
      "address": "0xB46E0C5b845704b90b00AFf91B55d8ccDFb431F3",
      "txHash": "0x59d817b399e90c92a741bf8004ff4f1433aa5ccf72435a99cdae3c80b7f732a0",
      "kind": "transparent"
    },
    {
      "address": "0x1D0Ddfa520e065dBBd354bf999B86afCE754E775",
      "txHash": "0xdfe7d2ab0ffbccdba54f3b48c83cc0ba20f86cb098c2b324e1ef29420a1e7996",
      "kind": "transparent"
    },
    {
      "address": "0x3f32f943fEF6B9f1DCa9F51c3040aDeA1875cdb1",
      "txHash": "0x0a4e1e50b786191ae1d97577a763298ebb0ec1c60def847b833e0de082093349",
      "kind": "transparent"
    },
    {
      "address": "0xe50f7F5B93EB05e171c8203A2108aA035B58E0dE",
      "txHash": "0x053a8456c3c3243524b81ffd873c09f5bcb9585886af3eb17dda344d180dfae1",
      "kind": "transparent"
    },
    {
      "address": "0x4555144dCc730933Ca96Fa1C13c4886182125235",
      "txHash": "0x734a1cbbaaa56c7cbce59476dfeccfed124cc703d520be2168edf0c484644ce2",
      "kind": "transparent"
    },
    {
      "address": "0x20dBbcc89718a9da082de08032Fd44F5615c1445",
      "txHash": "0x43fdd61420ad338088bc58179af2473c3f4753b5adcf83abf29c9067cb1f4617",
      "kind": "transparent"
    },
    {
      "address": "0xA25851531947CaE74dC7eD07C73bFEc0c5a1Eaa6",
      "txHash": "0x69595b05c1d5d1f65e35d3cefec746e4b2a3fd2337e582a8ddef6bbe31414c0c",
      "kind": "transparent"
    },
    {
      "address": "0x2AC22c2250588e4077775b674082a56366846644",
      "txHash": "0xde70a28e64838b9728237c2f67c70be4d622d288aa488ed6de616100436ae695",
      "kind": "transparent"
    },
    {
      "address": "0xb90AcD2c8C41A6B6Db57530e441EF26f53c99657",
      "txHash": "0xb0ce91c81c154f0d3ca0a4f51fde3f699d15f7ae2dddb338953900eecacbf0ed",
      "kind": "transparent"
    },
    {
      "address": "0xADba19Ae00E88F878723B28Ac07B3f7f7133af87",
      "txHash": "0xba5c78295c5aff6c9ab298c157f00dc793ac3469aa666e54b5aee18b1786ec7f",
      "kind": "transparent"
    },
    {
      "address": "0xcD77BaA21b17115eB732e72EE4C3C094996891E4",
      "txHash": "0x42a8dde02b921ca7cab830103e5dd759e833830687dc7e5842700c9f2a468b80",
      "kind": "transparent"
    },
    {
      "address": "0x727b74C1BD89D2443e63072Af0d34a7e315B098d",
      "txHash": "0x6390322a86523113b2bdec88f572cea1ff08e48fa01470940c122a194e6a768a",
      "kind": "transparent"
    },
    {
      "address": "0x095220B510AF4d7787a9d345D9cbD785Cb7153cE",
      "txHash": "0x07d52c5a3ed6a864e51970f8b6dffd8de137605cd6dfd237d6f2a21439b12208",
      "kind": "transparent"
    },
    {
      "address": "0xaB4F5aE21987303F6f564D14b5e20f5c5e40A0Cc",
      "txHash": "0xeb26f9a6c97b2af1ae30a87327265bff16eab9b864cc6ead3fc5fb564a0b8d3b",
      "kind": "transparent"
    },
    {
      "address": "0x475c9c721F7F03396a2730037814e2e37Dea1FB8",
      "txHash": "0x571a237b33f50f9792c043e7b7f9449263e32b9b9cbf3163def12baa99b2760b",
      "kind": "transparent"
    },
    {
      "address": "0x53ec8595a5927FeB9FCe9B37a566f032a542f0b7",
      "txHash": "0x25f8d0b29c223cb6b418fd6ae49bc1f864e0214ac24b7eb8290da0947b47ba04",
      "kind": "transparent"
    },
    {
      "address": "0x435ffD2cedA265c7115E068A5408838533163A87",
      "txHash": "0x5989c18d27c151e7be06a9b2a110ee9a8e01ac7928bd7534382abfdd126615f6",
      "kind": "transparent"
    },
    {
      "address": "0x754ee68e0E19b44f8D3d14CDBbbfA99f97EFa01a",
      "txHash": "0x5b8c6b0df475f6766ad7eff8e22dbf456c44c2d5185e2cdf1bba8e700c18f6e2",
      "kind": "transparent"
    },
    {
      "address": "0xAed90FC793A3C28b07E81646d1B6f8278F71be61",
      "txHash": "0x75601ed539702150cd68266ad24a174323e58fb715137293361378c0d5f2df2e",
      "kind": "transparent"
    },
    {
      "address": "0x318037564Cb4f66C0810e304ca5cb10a0FDbe98B",
      "txHash": "0x43779c70d94af187875ff70db53913457318f05166aeb1c803830cd11bf407a7",
      "kind": "transparent"
    },
    {
      "address": "0xcE0Ba6c3e8629f59C47b0fef67a5F795E6BcCfca",
      "txHash": "0x9854163fdc6ec1c07c550108fdd6ae8c17130789d6b67af7ea70c2278cc5b534",
      "kind": "transparent"
    },
    {
      "address": "0xaa9Eee63bE81bA33DA9286542c3D58bC05C5b379",
      "txHash": "0x29d68c46ce81eb19efa02ec6f7d155c5d55e3a5f4d10735bd4bedaad4edbe612",
      "kind": "transparent"
    },
    {
      "address": "0x20aAC12dddAE9E3b4F69f5D171ee055C0Cd49E1F",
      "txHash": "0xbb99a6071ea0521f233618632867e6d452a78016ad7a9e2d47e5fbb9fb168328",
      "kind": "transparent"
    },
    {
      "address": "0xf97F19DA6D8a405E63ed08024604e2Ec94062023",
      "txHash": "0x72a2ae2b9823f3abe1e0e5588322010e7ca001d28028281cf600f5d81ce714d1",
      "kind": "transparent"
    },
    {
      "address": "0xb6c19A91535f3DB87410479EaFafA8935E9d5ca0",
      "txHash": "0xbceb63945dc7b6cfb6ca2d492faec99364a22756e1d1fc3f5823224af9dbbe2c",
      "kind": "transparent"
    },
    {
      "address": "0xb5930565602437B5bdb4f1386301980c8bee0cA2",
      "txHash": "0x704ca38a585ba5aa592b97269325349f13f9a2dad9d7afde7994210fb16e9ee3",
      "kind": "transparent"
    },
    {
      "address": "0x1b8Bf489B1BbA2593a87f8Dc145Bef61001E9322",
      "txHash": "0xb01a2a00cc64aacf914f6c598f2aa0a0f39acfd5a5f484b4158850b7cf446394",
      "kind": "transparent"
    },
    {
      "address": "0xEC97aA20Fd083633830D0EBaB70c2b93030997bc",
      "txHash": "0x690f1c1da6d2cb0fdb8762bda4e37507174fc5d8e7f029059659c4932c1cc2db",
      "kind": "transparent"
    },
    {
      "address": "0x98ff27694aF5975b3De574EF499348BC6129d428",
      "txHash": "0x3db9d541cc03c7ca6f85622a32c4ebfdf61692eaafb5a31e22d4a227d3e81840",
      "kind": "transparent"
    },
    {
      "address": "0x6180EC79D7294EfdBf709d87D892a2b54Fb96530",
      "txHash": "0x47942ad74159fea6eb1e07f18d2d0b0603b36d4ea365b2d5a61cd5fa93ecd3d3",
      "kind": "transparent"
    },
    {
      "address": "0x3Cc497A370849b283F9cddAC7a665d6C6598d276",
      "txHash": "0x4602b9d5b3130adf319fd683d59f146d61b39b6c862ff6752bc5e32bf9134833",
      "kind": "transparent"
    },
    {
      "address": "0x4D9d3406F56742B91E843a0F0228B18664C90d03",
      "txHash": "0x811886b08d8688edbe1a67a10c296276cfa0d2b2e93819b119d1c886f60d0562",
      "kind": "transparent"
    },
    {
      "address": "0xC18F33026a3357B099E09482E55dF7F1Cc11afc2",
      "txHash": "0x85c07f71f8504c3a66be60e0d2190e0452ddc7cca1157ebd024495aef40a8bca",
      "kind": "transparent"
    },
    {
      "address": "0x691bd4D1Ce5C20971669D8F64197fE4B40B64D7c",
      "txHash": "0x8403be168f6224fff6e2fa0f8d3a3717274fb9ab620979824811a01491865a06",
      "kind": "transparent"
    },
    {
      "address": "0xd8b82B774ACE6C014be0856691846796E19dC73d",
      "txHash": "0x24c9870075a7db587098a9fcd1865528babab050efb0a769ef558b803f04acd6",
      "kind": "transparent"
    },
    {
      "address": "0x48b79e81252682Ca7c4c37e89b10f1d40e8c249d",
      "txHash": "0x4b8a966ce735e8b3f38cc27a20988aedb20160581c211b8a279a81f55430cd25",
      "kind": "transparent"
    },
    {
      "address": "0x03f25Da5C242DF1a0b386c7E5415821AF46D7586",
      "txHash": "0x97bdd720feef11cc119ad8430154a1106441e4bcb660d0c3becfd30abce2c85c",
      "kind": "transparent"
    },
    {
      "address": "0x67E110644da0D020f8A40F82a8b41B9f7afd0044",
      "txHash": "0x702d8d0fdd31fd140cd6d374455c14c6f2b421db1eb4bef14f025d9ef1077d53",
      "kind": "transparent"
    },
    {
      "address": "0x75F9A435b94f47015BFCF3F22C258CDe59770b85",
      "txHash": "0xb42178472694b90bca9acbf39203ef143f1fe1de2e9bd58ed390367db0cf88ed",
      "kind": "transparent"
    },
    {
      "address": "0x4cC90a18f30b79B8600290cD65085A3D9A2620cA",
      "txHash": "0xfa505adacbaa072e3ea01ab89f03a40f92f57fc99d2029dc1176341d214a0eb4",
      "kind": "transparent"
    },
    {
      "address": "0x386C5c6b0d3Ac2064D6a8d54Df0603E4B78A9a24",
      "txHash": "0xc397f228bcd312da0a20185b644bfc895cc9aeb5152f36d225a3a2cd8b0e1bb8",
      "kind": "transparent"
    },
    {
      "address": "0x59030B871c9a33ab259Caa638d440366DE597d84",
      "txHash": "0xee81997eb34d2642a1956df98af2f7ce2b869f32deb006afc0c7a6c413b2921f",
      "kind": "transparent"
    },
    {
      "address": "0x9216c4f6cfE379931Ad82d55fCFd76d9336DE790",
      "txHash": "0x0149f299d0629c06dd98290ea6604dc09780301f3238a5ba49ebf99d39d853b7",
      "kind": "transparent"
    },
    {
      "address": "0xc5DC272E24387cCe77f99823918759f162eEdA6D",
      "txHash": "0xc3b37714fbb3b9188e769e41c7a34f8e2e133f60af2b9749384752487ac7573b",
      "kind": "transparent"
    },
    {
      "address": "0xa03F594E25935EF8e5026Efd12d16ef45fc0c6FE",
      "txHash": "0x87f48ec7345128e37c1e4472ea8ed532c69564928c7cd97b439ee94192099762",
      "kind": "transparent"
    },
    {
      "address": "0x661709D4ABa84A6055e7199ba16D593EcA408561",
      "txHash": "0x8f838e54b15d14257775f5713ea1a5922ec6d4fafd4854676b400e2138ff3c57",
      "kind": "transparent"
    },
    {
      "address": "0xcaE056D559c326BD3c45812261077a13f4DC628b",
      "txHash": "0x8cfe21fb8bccdafbe0ff79966212c26625cad7d737a948098128738dbef24022",
      "kind": "transparent"
    },
    {
      "address": "0xDd0ea7B9F029072088DfE6388A884edFd975195a",
      "txHash": "0xe53f24afabd529c4562f4392f50e50ea5f352550ca51090ed5dfcaee32333a1d",
      "kind": "transparent"
    },
    {
      "address": "0x5Ec1E399D8CE05ee74c294B34004B4b50C352895",
      "txHash": "0x98dc1a2cd4595ead0ee37e881f2a7833d1ebca47caff50971f7c4fb8bc0436ff",
      "kind": "transparent"
    },
    {
      "address": "0xb4867fc267Fd62Fd6C3288F683d971Bf5B63A112",
      "txHash": "0x6ff43007127c6129a5eb1d71a34dc462e14b5f9e439e86d8f5a2358d84624921",
      "kind": "transparent"
    },
    {
      "address": "0x3A18e4E7A89Cbc9D9148b3b55b022D9e624459AD",
      "txHash": "0x2dc2a34e1a23dd908f7010b9e18739e6509291edba031df756f3896477ec65dc",
      "kind": "transparent"
    },
    {
      "address": "0x98CE31054Aa301158CcB9580F556c07F4Cf360E1",
      "txHash": "0xe38dc5decd5863f954d5f5947492e84e30c7d5d162e8c931ebf06f54a35ca7c4",
      "kind": "transparent"
    },
    {
      "address": "0xD2befC5a5fec96d821bC6905cA510d26e215E6a0",
      "txHash": "0x91bdeb5079b6e38f93be691536662e08122fa7224019b89491762687f4cb0cdb",
      "kind": "transparent"
    },
    {
      "address": "0x209534cAFFEe12f6F66F4Eb865d21AD00e6b0247",
      "txHash": "0xd900e3babb08a867a127ef2523a3528304724bd3d5b2177e1f6394c8fe89024a",
      "kind": "transparent"
    },
    {
      "address": "0xbe652fCADb9FCD655141b471E561D896e37488f5",
      "txHash": "0x64868fe847848c6a00a2d3be944db5198007c85fbec8424a0dd81433b8567b49",
      "kind": "transparent"
    },
    {
      "address": "0x2C24df197Cc02d6ced29Ee99baC4A62e9e3c212a",
      "txHash": "0x286af38b8fc4b95a3332cb6f21de91cabe744c57bd9e00466771a7981c196a8e",
      "kind": "transparent"
    },
    {
      "address": "0xe877b3d7925Cb1d3f083931b567Bd89a5d582348",
      "txHash": "0x723b4b21b3d2f60eda7c9b2e51cf28babf85a0845e6d6b8985d4b1b662f27b1a",
      "kind": "transparent"
    },
    {
      "address": "0x9fbc67aF09eD20887e9aAa95DBA1eb81e607a14a",
      "txHash": "0xa1f5699c1ddf9eb8c7e60672282c1be08c7a75db6828487616088a376df9d9d4",
      "kind": "transparent"
    },
    {
      "address": "0x4d3689c7D6774C6F99606FC308e3a48E1CD2cA93",
      "txHash": "0xc030890e8e2667194a64a480aff9d484bd83b3b154c83fe0833476db648e154f",
      "kind": "transparent"
    },
    {
      "address": "0xDA98F90BC60AD7a75CC65ec663b77b2c049B1F55",
      "txHash": "0x7e9bcd467d17d79a793b8a8d201b0c4e8be5f72a7ca5ea3a9195945774a6297d",
      "kind": "transparent"
    },
    {
      "address": "0x084b3537c73b7c00DEAb5F58e9ee7e84266B92F0",
      "txHash": "0x9d15e671a9849ac22ab6eb02b0b1407b3796ae5b01659c01b5d4ad32e307e44d",
      "kind": "transparent"
    },
    {
      "address": "0x5322a9c4D788da3A1176C2ea656FD40401F23fd1",
      "txHash": "0x1db430dddfa122461aad9177f64aa768aaf01a91518485d8af020d3d345c2692",
      "kind": "transparent"
    },
    {
      "address": "0x785186BC60d92d6A99b3a92C01D963D3C6C2E664",
      "txHash": "0x3facb4071b2335fde6869596b19b8a5404a973a80a8a671c39c098685a6ebb00",
      "kind": "transparent"
    },
    {
      "address": "0xB026455cFc15b319106F271CAe214015fC042337",
      "txHash": "0x04f91b834f008b142e8d2e0b23dc6846c7cf6482d6ea263597d37fd7a3b8be11",
      "kind": "transparent"
    },
    {
      "address": "0x82B0D51505fF5342CF936cc6ED0ec875a0eCc8B3",
      "txHash": "0xf2a8c41a86765f0b928edb424b1c89d8f52b59b74c80bf4fd399e41eec8922bc",
      "kind": "transparent"
    },
    {
      "address": "0x66382C93d1FA9719D92787BD343b249a5bab52Cc",
      "txHash": "0x47d7817e92e1b4aaf7c72aad0486a9fe8d183163eea934262bd72a362df33de2",
      "kind": "transparent"
    },
    {
      "address": "0x6CE1D6c944f4487da1e156bB5a224d234AB156b5",
      "txHash": "0xfe1694144f2b7428e826c613828a309be7328a4128188a629c31da9d389d3696",
      "kind": "transparent"
    },
    {
      "address": "0x7bFcac24dD5e37A08cCbe5eD747fCEB2d26091f2",
      "txHash": "0x0b2c9d9341c4b3ba6b8e0988d20cf7ab941c38cfa54f7d9a4652e08e3be0589c",
      "kind": "transparent"
    },
    {
      "address": "0x049a042C7610Ce39ebf086b448306fF67Cfd3ee8",
      "txHash": "0x6b6fe731d25cd820f6e7cded75f27bbce5f856ffc88171f6c5a5ce81685d3d75",
      "kind": "transparent"
    },
    {
      "address": "0x8e56DAD3AFa2682bC9F58ABa18e98095cd73B7c6",
      "txHash": "0xfd7a04e730fa8ff104e8deb2f5e8e45011e2ba87532df86c9e23f312de0c888e",
      "kind": "transparent"
    },
    {
      "address": "0x509dfa38e1D28663345982135Ff35e2427f11834",
      "txHash": "0xcf2d40f9a3f0dcea505f934c8cccabad1103957ffae2d0e7b50244a21c852d73",
      "kind": "transparent"
    },
    {
      "address": "0x2E662f0Cc6fF80D3c631582d8391feE48872f96D",
      "txHash": "0xd01d442c130d9203ed6a9011516a2b3c7ed02f46a8b6ec2e915249b544c79b19",
      "kind": "transparent"
    },
    {
      "address": "0x243089e3E87b337311d461977B8b52C7289893C6",
      "txHash": "0xd9d225020701d0d1315b22094ccd52da4220678952dc483705a3f3d0533acf83",
      "kind": "transparent"
    },
    {
      "address": "0xc28356DC9CeBD5d0b8fb29B80813338E743dD106",
      "txHash": "0xdb4c148cd30261b5d2d97d55d0431850457c881e64d06866de555bce4b811314",
      "kind": "transparent"
    },
    {
      "address": "0xe6D514Ca15B45f912804D557f0d7772455df0453",
      "txHash": "0xf723271f52cb5275d3a0ef1ce585ca4b260cf87f4a0614087c98a77e35dc9001",
      "kind": "transparent"
    },
    {
      "address": "0xd246B51ECf93C95B7a998D7e3F60C67D7C5Bcf8c",
      "txHash": "0x31cde1c0d39d507932e31bca2280dcfe54827f9e5eee5665e83399cdd1032097",
      "kind": "transparent"
    },
    {
      "address": "0x5C3D69FB8282d5e1Af605949CbBA407918b30570",
      "txHash": "0x09e4462628405328e2da1d7a5a342a0edbc7f8b5f4958471a80b326bade34a39",
      "kind": "transparent"
    },
    {
      "address": "0xB7c37Cfd4C25E80f42359A57F6AdbA650104fB42",
      "txHash": "0x50f54120b838413411ed67d1183d3d230efcf755d71d24102e5410d714393a4c",
      "kind": "transparent"
    },
    {
      "address": "0x4065d17fD6D073f50B64100cD584FAcAe5391E7D",
      "txHash": "0xba869ec3b0e0e2a54055ee8b0aae1c5974a71e584d7b1ef32298de195125275a",
      "kind": "transparent"
    },
    {
      "address": "0x35e0F26614b96339fEcb539Eec69Ef77d2c64dBf",
      "txHash": "0x2de9fd537be7accac4f8b65a2da42f8d85c75f8663f61b4d89a6fc1ea42a31b5",
      "kind": "transparent"
    },
    {
      "address": "0xE3DA516FB0E62A62982E1ED68BBd35726Af76C66",
      "txHash": "0xf571ed79e1d12d2c63349e546f84f8b7f4996251319a58a0ad894b0a3340aeba",
      "kind": "transparent"
    },
    {
      "address": "0x2B52B95b84EC6652f3ec3918d9E540e94A9aDe3D",
      "txHash": "0x34b1ff600fe2b51cf5c6bfc181e44997c07703c425f04b60782f3e056d30d7ed",
      "kind": "transparent"
    },
    {
      "address": "0x881ACF45418042e42469fEbF27c86b90A53Ee720",
      "txHash": "0x267b9b398372aefad8e9e6f997891ced7dd765d4a035318cdcb2c6fe05f61e0e",
      "kind": "transparent"
    },
    {
      "address": "0x6e1007Cb0c897F77b04dc7EC59cF418c558B0157",
      "txHash": "0xf6772734a830551f2c7e0b504a9701dc4d7ee3ce9fe2df45a2896666f6950972",
      "kind": "transparent"
    },
    {
      "address": "0x8e1ab21284DFD1510CC33B8ccbF6e985ccd86DD4",
      "txHash": "0x5ec55ec816f216279ba480f392ea321fc001220fd72b7430590d00e98a6cdf21",
      "kind": "transparent"
    },
    {
      "address": "0xBae7db7c609C378383c12d70200F2590b2bFb450",
      "txHash": "0x41a061b2319692428a20bbec74acb55622fae3ef15cbdae39fffd86518ff3003",
      "kind": "transparent"
    },
    {
      "address": "0x6dc958940cdD0c81167A6DFc03B8E0fedB020642",
      "txHash": "0xc393c1b3d92f007500687863a32c3f3ee2f118029f060e5414f8b816d2b98e00",
      "kind": "transparent"
    },
    {
      "address": "0xd30079d3770eE3fe1c0DAA3F3e069B6667B2B880",
      "txHash": "0x77e2a8550c9d9c892b4987f37a2d230b986127716c8b1297158bd9c4744d8f61",
      "kind": "transparent"
    },
    {
      "address": "0xa918E6d7223fB3170350922506FcCfE7b364e3c0",
      "txHash": "0x135f9b842af148ff39d18ed162049dc46a2fcf78c86ae105f8ed22dcc80b8d66",
      "kind": "transparent"
    },
    {
      "address": "0x35cad5E03c1b39D4B1999292F042Bfb5e2aBBa1C",
      "txHash": "0x51fb44698bb3623b7d72abf4877a1c3bd0365556e7dc57a3e603a776acf4e499",
      "kind": "transparent"
    },
    {
      "address": "0xd64ED1886F08B030B8909268Dbb8d270D5f7f974",
      "txHash": "0x8534067264c8da202ce3dcec0c6077789cf7b4fd3050424639db063d6b60354e",
      "kind": "transparent"
    },
    {
      "address": "0x645DBD7e537A056a599710eB3290c100dc56495b",
      "txHash": "0x149015eca5e9c97f0de1ec4934f6e6af8774d8e8061576e64d7daa1a4379eb1c",
      "kind": "transparent"
    },
    {
      "address": "0xE404Ba6457eF02a4d03F1D61478b4F42F5159B5d",
      "txHash": "0xe0b7064f4a0f126b9ec2b002f436d4e1b85e7f45b44668565b87dd6cf361ec12",
      "kind": "transparent"
    },
    {
      "address": "0x8357d90DF617285B46c0d557eAE4062b9Efe9E4A",
      "txHash": "0x1c57ac55bec267d77a00553e898500a5831c997322bc03cdace48f2a44f109fa",
      "kind": "transparent"
    },
    {
      "address": "0xB6dAe18cF8cb240Ea8a2578f949C758ecC513f0B",
      "txHash": "0x70cb80ee60f588c6d452b812abd4b244c8dacf24c8639b60d81c590c3df885fc",
      "kind": "transparent"
    },
    {
      "address": "0xF2828b4f0482BdE893982aC1e5dDdb877878315E",
      "txHash": "0xc56a9c329abf7688aaf0b031c0a977961bc259b38b46453413f0bcebf05c9e7b",
      "kind": "transparent"
    },
    {
      "address": "0x828d5dB8a999E1030a9d6b3A9D89bc4801057786",
      "txHash": "0x7905d8947de3bf7426421e15983223acc5d0b878a536f2848d19e42d269274e9",
      "kind": "transparent"
    },
    {
      "address": "0xc41c9Dc541142C13186b6F5afffdd795624bFc56",
      "txHash": "0x8fc1c290f03ada0bb0451e4a30a0a2c903af280fcd116d9e38a3009c14b95eb2",
      "kind": "transparent"
    },
    {
      "address": "0x78036d41cAFD32Fb0B473F66F904a09eB9e8Ecde",
      "txHash": "0x5ea9a36006c6bf81388b8827da9f9c912cd8cef6c6bf9cf95491fe86bf4bcc00",
      "kind": "transparent"
    },
    {
      "address": "0xc927fdD767Ab76dEf6aA621EED4172250f4eF3e1",
      "txHash": "0xdb2ee5b58eeb45ec85148d07c6ff9541212b291930442cb20e92d5347390abe3",
      "kind": "transparent"
    },
    {
      "address": "0x76B42c8dF0145a0792dbA98ea7717664334aBdb3",
      "txHash": "0xfa315a362745c5a8028aec847639583223dfbdc8c7f349bbac36716895561ed8",
      "kind": "transparent"
    },
    {
      "address": "0xd07C54013FB97906983890b46295C35427CC72cb",
      "txHash": "0x68d82ae38a0b6f84e0a533e12a9d6247f2f19e2d565ee159f714863c484016d8",
      "kind": "transparent"
    },
    {
      "address": "0xBC0970043320223Dd11fee3656037DC8Cd82a7C5",
      "txHash": "0x881ecbbc5095aef362cd8d4e3196a867c8fcbb0686870b8f7cd9f88dbc5dcb26",
      "kind": "transparent"
    },
    {
      "address": "0x97A904ad9F105DE0f3e94a46d0ABa74C0d1c3F05",
      "txHash": "0x849f8b097126f96702c6f928321969132e76218774a6a02d5794746614f34f3e",
      "kind": "transparent"
    },
    {
      "address": "0xDCFD030Ae189067E8eAdB6CBd2C8e506E2D07adB",
      "txHash": "0x270f37ee47aaa6f0ddf07bdee20d2661783c35c6dc0ffffaf89a61ccdddb65bf",
      "kind": "transparent"
    },
    {
      "address": "0x3c07De54E6bD9D9E9e0fC81C723089Ab0d363088",
      "txHash": "0xe47a085e0183de21211af19ab1414bbf5e50c115cf7a5cec2928f476e8ca6df3",
      "kind": "transparent"
    },
    {
      "address": "0x9C52cc835ba2E959716687977E5e94FE41c84498",
      "txHash": "0x95d75ef40d421093340dc3f5528b6d6c3ec9c0e3673e1a279b01871170332c7e",
      "kind": "transparent"
    },
    {
      "address": "0x162B57cE33A85FC1830B497ebDEf9f6ebF34FB48",
      "txHash": "0xff54535cce298f9887c7462c502a5e2a3ecef8665fe849fa81684c7817660222",
      "kind": "transparent"
    },
    {
      "address": "0x413cA5e246AD0D3B36b431608Ec6ACbEb9F24FBF",
      "txHash": "0x5d19c7b95408a71298348b44ec59626287d3a4340f6c13005797eb2ce68dcb51",
      "kind": "transparent"
    },
    {
      "address": "0xaE911171989dAFaf3980a368b3804CC226F219A5",
      "txHash": "0xd5811b38e4784fb3b58da368add66e93c5f52fbc5c1ad5ab984131fcd2a4152c",
      "kind": "transparent"
    },
    {
      "address": "0xa245e3cc3559cca5aBBC7a3a2ea28cbf77152cb7",
      "txHash": "0x2a77a8b372887b5a7e6a58ad0aefc8f5c72bcc45caae1003c24fabf271462c19",
      "kind": "transparent"
    },
    {
      "address": "0x06cEf1b9D9f87D6B6A77Cbc510407Ad8E11a4836",
      "txHash": "0x9dc97aa1bcbab8acc0c0353c1c431d81918a8b73ed934a8fb1afb97525e4ee9a",
      "kind": "transparent"
    },
    {
      "address": "0x8147A2fCdD4DC3cca4118e9555C2F7351a769881",
      "txHash": "0x5412d7f7b20f3d1ebd6375cf99869afd600779619331de1a40460bf94f7cfe50",
      "kind": "transparent"
    },
    {
      "address": "0xdD98350730f5E9aC36d906d20523d2091e84667e",
      "txHash": "0x572ccc41a9d39f30db2bbc36078ecd34225655ff9be6f0a9fda9c4d10186eaba",
      "kind": "transparent"
    },
    {
      "address": "0xAdf624335960f940A6A05B976bbf88f34A9B65cE",
      "txHash": "0xfd04b7958483292558501e11b371b7f05e8257a3886b1cc3f4c0d9238b8fdf5a",
      "kind": "transparent"
    },
    {
      "address": "0xFeAD74883Da5217056A7da19aacDbEdeEa3c63f1",
      "txHash": "0x3b3279a66ad11475d5e6eff40fa634df2b8d378a1f104666779618629c21140e",
      "kind": "transparent"
    },
    {
      "address": "0xE3D4CAf0227457B49Af6A8c2cD18eF7B6dD6cd81",
      "txHash": "0x9f0c3d71cab050864a5906d0e2e7f068d3169f0896668d9c92b2351e369f4bc8",
      "kind": "transparent"
    },
    {
      "address": "0x4Dad8a8B253949d5B7cBa970B4CB6693044fd859",
      "txHash": "0x3629636fee5d0d35097e2ebe708ef67f9b2b6ab125b2f0582226215aec1008a8",
      "kind": "transparent"
    },
    {
      "address": "0x0Ed03642f616bA231F51F3F4c7A15ae84225fFa8",
      "txHash": "0xa5c69c225341e85a98e5347c410ed43e24914103c3dd935eba6a09b57fe431ef",
      "kind": "transparent"
    },
    {
      "address": "0xe27dCe3efdb5b0090C591B81B70cd4f7e74F91b7",
      "txHash": "0xbc239695f2604a3cf02051a3c0464ede3fcf21b262515e22480fa078fd0b1e16",
      "kind": "transparent"
    },
    {
      "address": "0xbA12397a4CD9cA51521967cAd35086984b649C35",
      "txHash": "0x93c1e9c3fc6179cca14f921fe6d02ec6127d1b8134c99f5a0c62d668286a1c49",
      "kind": "transparent"
    },
    {
      "address": "0x72802F2194e6c12f80724eDa4fBbADee6d47516e",
      "txHash": "0xbea78825208bcca3dde5101681ac06f8390b68de0d072297c52ff0c82a8cd537",
      "kind": "transparent"
    },
    {
      "address": "0xbd07c22D3CaeA47A0A065e8B9Ce16af6d4572ECd",
      "txHash": "0xdc86e94290e259ec90a6a97701dfec21abe4a8039e523399ca08470dea8d28c3",
      "kind": "transparent"
    },
    {
      "address": "0x1C8ce49e7ea24Fcd8A5062b05C37b5F9fEAc998f",
      "txHash": "0xeb0ff8a2e48024255c33d7b91ea102ca7a5fea5623432d8e47e0ec354256a263",
      "kind": "transparent"
    },
    {
      "address": "0x839EFC5BDefE142a5dbA71c5407C3E42F2cFC9D7",
      "txHash": "0x0a24568a1e0b539909297f8a170e5580a66f51a4190fa5e1e14bceae0b4b53d0",
      "kind": "transparent"
    },
    {
      "address": "0x6f236426714D7522F4cFDE3A81D48D0A4fbf34Cd",
      "txHash": "0xc711c4d792057d2c6200dada7da21e0999d9943093ebe2505308ca9760ba3a0a",
      "kind": "transparent"
    },
    {
      "address": "0x5f7E8e96e6A2f5b478841bbFD36a43Fcb1EfA070",
      "txHash": "0x1ca68d4be73b6438139992523ab55d1b905a40b7a8ec20a153c0fc25bfaea8ba",
      "kind": "transparent"
    },
    {
      "address": "0x56705e06C7c5d3A195a469972EaA3E7159954F5a",
      "txHash": "0x2e61022fbc28b7be29b41f22846e9cfa2b89908896fafaebfd17589cf3c5a6b1",
      "kind": "transparent"
    },
    {
      "address": "0x42F81baa229223a6fC8409Ae7B4733f09d32e005",
      "txHash": "0x5100ab2d9051a169e674fdc333b930c7eb809372f81402f4f1c10a80ddb7cf0d",
      "kind": "transparent"
    },
    {
      "address": "0x5d5DDa61d6161Cc66A827202fcB814bf318b5A8D",
      "txHash": "0x97aebfedb350cf95bab50bfbfbc8672115f0d7f7d5c8b436a29f817ec86d6228",
      "kind": "transparent"
    },
    {
      "address": "0xC9CE210Da7bFC999D2A9EA04101c8e3C5Bfa5bbF",
      "txHash": "0x35e776dd581a91611eea9850ec4227fcbd86e9a490d249ddf37f465c29a04d6c",
      "kind": "transparent"
    },
    {
      "address": "0x734d6CE2D9f9B2ec6A7315008B662473EEbe9cEb",
      "txHash": "0x6e4bc514b2fa663fe75b7a9719ea1ee388ec1077db326eb2efba6e7a04e32560",
      "kind": "transparent"
    },
    {
      "address": "0x3F56C78CAb3A7dD7D06aA6e51e71B942b80aed02",
      "txHash": "0x65befe330425f2dbcd984dfdaa28615915e96b5edfd3089dbce6e8cce4838735",
      "kind": "transparent"
    },
    {
      "address": "0xDA9EC5D47994811c041063F5D55AfbB49a1B9E88",
      "txHash": "0x6da96ebf5066cddb2f886d1d40205893f8db659eee049f4f1b8f9f49e9b21b82",
      "kind": "transparent"
    },
    {
      "address": "0x8a6ba8a8a0b2eF3450041C7F8d9682658b91e79D",
      "txHash": "0x58ca91a2861b0cb67a889928d9ac07aa6c09d0e449c8d01e4304e1dac6a994e3",
      "kind": "transparent"
    },
    {
      "address": "0x33F7af9829264a96Cf78f49aa807858fD84F0f01",
      "txHash": "0xf0c1d43daad57d3c5184cc28cda6aa3d2caba5b92966cd6c1ab4000c208ff109",
      "kind": "transparent"
    },
    {
      "address": "0x9b98b532c6efC5F3a23653c40A25842687733bd3",
      "txHash": "0x0d228b2cf594fb2fac7f66fe4f25ea03b52ad3a266d8853ec0c8166093fc6f6f",
      "kind": "transparent"
    },
    {
      "address": "0x82d332D90b6B384c3cd440cf35389E764C2aA3aa",
      "txHash": "0xf173c27889b1d3eebe8110ed571e3dec68d59d1c54dc35ef82190123eca9ce49",
      "kind": "transparent"
    },
    {
      "address": "0x92B0B5d30B936e4e3E1EE70B9E43E09D9e240501",
      "txHash": "0x398066cc66a9c39be2e221a36e3389dbfdc33ba436600e1669d63bd8399bb10b",
      "kind": "transparent"
    },
    {
      "address": "0x68057Be760899CBf2e21448cc1b7c3bBBeCFEB2A",
      "txHash": "0xe110a4f16b1fcc7957dc3a5fb64a570cac02dbdf584168c9726147034684c86e",
      "kind": "transparent"
    },
    {
      "address": "0x594D0304920EB0B494d1b0F920e78d6302Da3d91",
      "txHash": "0x9c36dfd315846a30335e4cfa36a156e52c5442ef799662f752a1b57c2a7b21ce",
      "kind": "transparent"
    },
    {
      "address": "0x28cC6471C368B15545427F64c85efa6b26352D1f",
      "txHash": "0x6a5e3af051bfe51c56b38e08120157bba638a0b6edc8e43734f6533835f45e68",
      "kind": "transparent"
    },
    {
      "address": "0xdD83baf6908925b207A1dd04Ca6571eDEfc373F8",
      "txHash": "0xcb6cc6759a9010206e140a8acc13087552bd952bfde5d751f3d43a1f22d3704f",
      "kind": "transparent"
    },
    {
      "address": "0xbD606073722f1457F56C1a35F2EeD98abDC56BC9",
      "txHash": "0x7227e38bf84de2ac1866f09fb8d6f7710e93fc080b25981d2b31c2d69c516ad4",
      "kind": "transparent"
    },
    {
      "address": "0x010aDA5A295bEC7124A9367B04e503d1336DcCD5",
      "txHash": "0x0f8eb2fa2b29ff1357b9a92973b6091256d8a3b2f1285793e62e64e3a93cc961",
      "kind": "transparent"
    },
    {
      "address": "0x04a2DE7c29A3ab29D0ea78b5Aa992447fcC6EfdC",
      "txHash": "0x9bad0baf75bf7951e14b81fc8fd342c47d81915ffcd3ad3429b82f66c560af59",
      "kind": "transparent"
    },
    {
      "address": "0xd807953d0a9E8F254B12a9Fa4d5627C64a735a0f",
      "txHash": "0x9063d120a17995d092c3cb295008af1139c253759573f05f9872c34090539a2e",
      "kind": "transparent"
    },
    {
      "address": "0xd180aA8D5DCA50bbb352F82aab8E972D548ABE6E",
      "txHash": "0x790f956a16340846af8550613e6e7cec9484c641b4019463c7eb12d4f4b974c9",
      "kind": "transparent"
    },
    {
      "address": "0xf56b2e6B99db568831Bbe16848EEd4226EF2F2d2",
      "txHash": "0x21e08940d1b6d995468900ae24556c010fed3f959c5c3971309c8f01d9f33510",
      "kind": "transparent"
    },
    {
      "address": "0xF931A3Ace36b5EE351C1A88e5CEe570A431AdF17",
      "txHash": "0x6656fa7f9afb93c171b38d4c8e4cd8885370ea923fe603ac9ed7f357028f6085",
      "kind": "transparent"
    },
    {
      "address": "0x43666Cd44478525e469f3C7D8349f6d504699da1",
      "txHash": "0xd1ed3be5e8e3f3624709c32a76ac9e29ae8466064c8aca7148392dcd891ca309",
      "kind": "transparent"
    },
    {
      "address": "0x521491a85aE5dc6cE10533ca541164DE83CdeEf9",
      "txHash": "0xf0e5b41c0dbd1be31807205224b36f907359247662b73908128b6e6d22d7b143",
      "kind": "transparent"
    },
    {
      "address": "0x599a3555da587914262D07b8dFE93Ea0f0aeA216",
      "txHash": "0xbf27d6fd3541ce4b70d2cb79099c8a624267281d00a5e1db952bae94226284c0",
      "kind": "transparent"
    },
    {
      "address": "0x48BB9Ac5144bAb5b919247B64532D1C4b6631e8e",
      "txHash": "0xab54ca89a42085e8ff9ad8af1d3928986385e8604c257bfd7cdf17cb9fd9185e",
      "kind": "transparent"
    },
    {
      "address": "0x9330c9c82eABcdD4dD2158F5cB74C401De63d973",
      "txHash": "0x4703db401a8b6fec15e4cf7bb2644f3372256460d25fbb7d40a2a4b08e8b23a0",
      "kind": "transparent"
    },
    {
      "address": "0xc996c30D2823882D87b7CdBdf81be6DFa8637605",
      "txHash": "0x84f82acb819ff96e34c9a115464de11bd98ea6b3ab9848cc4ed6e70de52fd5ee",
      "kind": "transparent"
    },
    {
      "address": "0x6dA38994F056Da3834e86A5Fca10B450E257df65",
      "txHash": "0xecb43f0916bcf762812949699e9f6dc7ebae762fb082be2b83bb7b2b67afede3",
      "kind": "transparent"
    },
    {
      "address": "0x693a854569E6Bd3F5D8Be364d017AbF913c7b16a",
      "txHash": "0xe74838d4078fb595cb0c63c670cd22316ecafdd7b4307b4561fbd915db4b6d3c",
      "kind": "transparent"
    },
    {
      "address": "0x03E78DB7B7828ed5913f06b46632A6db1dd35394",
      "txHash": "0xb08d257f8275af4d4cfbe99cccb936c26df24448f9b7e7353410da1d62c9c32b",
      "kind": "transparent"
    },
    {
      "address": "0xa942C0D9C3d261e667ec9109ab2b3b365dE5Bcb6",
      "txHash": "0xc7a376498e4f11907000edf33a6243a5aa1c1957e0b801df159790061ea40f36",
      "kind": "transparent"
    },
    {
      "address": "0x994403831796Cd3b558A60Ed13bd4742ACE9545d",
      "txHash": "0x95c86666f1c23ab49f74147e8cd48b0f178ff3ed5862b1ee9dfbe7540aece95f",
      "kind": "transparent"
    },
    {
      "address": "0x854E0Fa8a583aD8Ca8F904956A8f58fc8E41F5Ef",
      "txHash": "0x83b2c4a938838e8e570050f8d0211c815ef77d1cfbf2e62e02e1c2c3302974cc",
      "kind": "transparent"
    },
    {
      "address": "0xF5BAfbdDd801610f7bd21879782aD0a935cca588",
      "txHash": "0xe94878fe09a4361312bb50fb5c79556fc715d198eac189e24d3f3487424633a1",
      "kind": "transparent"
    },
    {
      "address": "0x9589C56E70fd17526f1Dbe699C999a61441a58f6",
      "txHash": "0xb0e10c672b55016841ee862d2554b33e9113fd4855f1c15bd8707c15d5c73baf",
      "kind": "transparent"
    },
    {
      "address": "0x4Cb07276C1E9D75f2780be6058307684890DC73E",
      "txHash": "0xa76e0456582f35083d01ee75dc405ebec95462185b63c4e91a8ed661228cad69",
      "kind": "transparent"
    },
    {
      "address": "0xDe96cf56424183e5aF3cABfB95F136aC0704ebDE",
      "txHash": "0xaf1bac5efca369e30c80e72ece2bdb4950b40e5478f69f5bd51fd46044005cdc",
      "kind": "transparent"
    },
    {
      "address": "0xb7623e5AB700732c426Eb8CC3344eFcA91EBE006",
      "txHash": "0x3ab14b84eb6abc3999b7de85b5f17d1382046d9ba9497fd7824504bb1b3e4829",
      "kind": "transparent"
    },
    {
      "address": "0xF513E621580Ca67C431B9787DDdBF73391FabdBA",
      "txHash": "0x4d1e4a9a476cebedf5d8f6e527a353a05036ecb8a7db935452dfefebaa073abf",
      "kind": "transparent"
    },
    {
      "address": "0xadeBdED993105282d6Bcc0077BF67528320Dd127",
      "txHash": "0xc7e200e72c0369a341a8540e830a713d90faf80932d0cb04e36f93bf67fe506f",
      "kind": "transparent"
    },
    {
      "address": "0xfd2920FFBdb8682d4340C90c5492100070dD35bE",
      "txHash": "0x80d9cd771f7990b08364fbd847eae1aa4aa6274f58858284b309d37a6026afe9",
      "kind": "transparent"
    },
    {
      "address": "0x403d57be37F55fd23Ea2F16dA0087Acd44c4dAE2",
      "txHash": "0xc5761da89ec54fe05f61e36a38bdfaf069c2e8df864b7d4e409308103cf3f83a",
      "kind": "transparent"
    },
    {
      "address": "0x666475700d2527cE37dB94011E0EcBA55fe0439C",
      "txHash": "0xa31e1d8680f15c0436eb85d7a9c5d71f2ecdf9dece5ae7590287db232bf1382d",
      "kind": "transparent"
    },
    {
      "address": "0xf6f13fbACc6662649cBbA080A1261c30eCaf6FEE",
      "txHash": "0x153c5b4f929a876073e2667285f20abfa45e9161d080cd8f684c040b3c30f385",
      "kind": "transparent"
    },
    {
      "address": "0xd125f04D24C6C542Cc08c504E1D29d6c0811Bd23",
      "txHash": "0x7048cd110409ae0c81d3708e5232989e60e54d899acda9571d7d1b6c25983553",
      "kind": "transparent"
    },
    {
      "address": "0xdE2C0690C2cceC8737470b2b196597C9b84df0bF",
      "txHash": "0x1c8333319216a8693ac7e58ffc1975d985a17f398ae37b70c90f6700cc06a84e",
      "kind": "transparent"
    },
    {
      "address": "0xC48634A29b2db9934257A2249e8FB8Cf432bfadf",
      "txHash": "0x8d47b39ae4c86c620dc07d36a1b2dd35e282cdde9e97dd68f891a5ae28493699",
      "kind": "transparent"
    },
    {
      "address": "0x05D8D4F67C79dc48257B3ff9aAE2840a0f6a2717",
      "txHash": "0xac104931d34a34b8b0ce78547a356ef9a8d43e85a77957001c952c7c48af1f68",
      "kind": "transparent"
    },
    {
      "address": "0xB10AF6D3532C53619228Cbb0B3BdF1DF3F70c22A",
      "txHash": "0xf06b15d77bfe593ffca6606ee3343365c32bf4e8227b6f0293ea7eb288945ace",
      "kind": "transparent"
    },
    {
      "address": "0x395AaDDA91e5447a7422133a60A8C54f4F2e03a1",
      "txHash": "0xc3edf344c3ac8fbe4bdc3901e783de4fea9923c876f34e9c52c6275eeac807d9",
      "kind": "transparent"
    },
    {
      "address": "0x85f604f11D88BEA783484Dd447e416E310157e2C",
      "txHash": "0x4f5e5b18ba91730426b54008462fd32a0bd7afd6840d44db09c17c6a5f770570",
      "kind": "transparent"
    },
    {
      "address": "0xF0aD98Fd4Fa95F3574a49F98adF37C9B7E8c5517",
      "txHash": "0x076a41ab3f1e6e7a1a3b34707225c9099e7f0686006347fe5d6761a5fd8514f8",
      "kind": "transparent"
    },
    {
      "address": "0xE4Ec8f3986Acd7fE5E2aBB4b2964E230d176cB7E",
      "txHash": "0xa4760b1466a17a821ea01976f792bfeba436372154d5c0d8fe08c1a56196e8df",
      "kind": "transparent"
    },
    {
      "address": "0x5fdebE7C86EC774219CaC3ED6222b8090D89c11E",
      "txHash": "0x1c540f561c874fa1602469cd96e610a9669c64fceb4a6e1fc186bd04e96b37de",
      "kind": "transparent"
    },
    {
      "address": "0x9aAD2A9526ed86a176Da45A804d87bA6CEf8fAf2",
      "txHash": "0x50a15473e3fdeda6a646c86d49d8a52274f0ce762f165ea0d24a241994571bab",
      "kind": "transparent"
    },
    {
      "address": "0x99de2F43473eFf209636021645aeeB6972A775bf",
      "txHash": "0xe782a29e33dcf6897e532aec2b0828ec17676195441981a90951535692d2c2b2",
      "kind": "transparent"
    },
    {
      "address": "0x6D7BecF4847447967738489b09bAdd205211E709",
      "txHash": "0xcdef655cee384c59d320f027c857b30bd6c58776b5aaaded9237d116d82428e1",
      "kind": "transparent"
    },
    {
      "address": "0xf36E3f9aD69FF2bc3868707B564E00374E94e76B",
      "txHash": "0x3e012d26c397d8693605ae73762c3f7bebbbe02ae10f225b0be93767c67ed3c8",
      "kind": "transparent"
    },
    {
      "address": "0xE579624CC224D16971D7111aCdbdCF9824379fd0",
      "txHash": "0xf18c4d6971d26216aee97cc1033758a9d7734c33c41f84d3563d3d87434b7348",
      "kind": "transparent"
    },
    {
      "address": "0x0C2AFAF5e53bd233639d73b2DbcFC0c51355FbC4",
      "txHash": "0x843ca3417151566bfaa8fc954b523559d593ce4c5dbc10920db6556fc62c4fee",
      "kind": "transparent"
    },
    {
      "address": "0xf4eA9aB0701BfeE9aEAdB0b6fEE41C85C3aFA732",
      "txHash": "0xe18a290ad76de4c3b2a07c69f04118344e6b708d81d928acc5cbda631ab88e1b",
      "kind": "transparent"
    },
    {
      "address": "0xc3eD073Bf898305491F0dAd25b52ec636c03380A",
      "txHash": "0x6e9e6d30e050df26944a3705173f98cec3529ba1c419af98f9d660295e99bf96",
      "kind": "transparent"
    },
    {
      "address": "0xAAd5beD98dfbB0929f33f962FfD5aF5C546fF180",
      "txHash": "0x8ad8e49531b29c794d5a675bc0693ab20bdb82db8694f38f12d3c749a3f04f12",
      "kind": "transparent"
    },
    {
      "address": "0x326F444a4ebdeE83381abDc9C9b28fE05e469Fb9",
      "txHash": "0x11127c18f9779fb258a412ea1c17d4c1a1754d46fe6b1870d51404e44bbb3976",
      "kind": "transparent"
    },
    {
      "address": "0xE7e342550E6b6cD66a9aA7759303176A86795dCa",
      "txHash": "0x1a6162c74134ca4451a72d6074ea3af6634274a15cc7ee8723908eec5690e96c",
      "kind": "transparent"
    },
    {
      "address": "0xAe3A851F88f6B4ba81a2dd7937CaDF03CBA64087",
      "txHash": "0xcbb9c1c68f72ee494b3f38ca77c8c70d7d00da9e5ccf33f24bb6f8575cbad118",
      "kind": "transparent"
    },
    {
      "address": "0xF0d2f27655ea58DD28810D3bCdee652B0A3F9Fd7",
      "txHash": "0xe9ba838575d6994d6aefcf04271dc80855cd10c526e6a2c25e3dc9a2b57efaac",
      "kind": "transparent"
    },
    {
      "address": "0x739eb1778C95D26ABe636Faf68Ce2EB153C7EdA8",
      "txHash": "0xc48d4cedda6f33845dc6ea7c6b585c67d68e1b743c3625934f881391521061d7",
      "kind": "transparent"
    },
    {
      "address": "0x738869bF88F780aC97316036C2734e2fc20c4AEb",
      "txHash": "0x76937c4e3bed3e02f4439c1f95e607d76284470f815d38368bd9731ab7d8ed95",
      "kind": "transparent"
    },
    {
      "address": "0x32FBcFafff3eA128089a307DeEDEc599c9d7F04c",
      "txHash": "0xf14cd86b925502a2e8900c0875c81ab6cefe6c2ee786cd13a0e38eabf53cd9fe",
      "kind": "transparent"
    },
    {
      "address": "0xe3b6ff0D0BEF963EE2FC37e54bFE84edc9Cbe5eF",
      "txHash": "0x615620b34da716ce2735cf7503dca40cff2039c9b9262ff7cb5d5c7a97d755c7",
      "kind": "transparent"
    },
    {
      "address": "0xE0a02f56d491A0DE2892f9Ad834FB8C5803e7096",
      "txHash": "0x1b7d5c7ac4a8fe96e046a4ab6b7362d62f1dac0b4c107ba64fe92cbe0703d024",
      "kind": "transparent"
    },
    {
      "address": "0x9Fdd0Ee6d8685eb1796A1B64EDd04050c96b6C1F",
      "txHash": "0x5e6002afbff359a684358e50701656c632356ad8d18ac7c49ec12b09a70655c6",
      "kind": "transparent"
    },
    {
      "address": "0xB9eA56AFdcD06e9fA4B30DD5fEFB580d7DC4b291",
      "txHash": "0xbe310bd37332fcfc5fb89bbb4cc14bbdbd81a962dd8dc5e9eeff965f8a874f46",
      "kind": "transparent"
    },
    {
      "address": "0x81cecBa8749be8620b842AC5Fed747C4931ce8b4",
      "txHash": "0x22b72917cbe6b44ed9941b75041db6571c084a29970ad91fcb582417f76b3b93",
      "kind": "transparent"
    },
    {
      "address": "0xF5B42E31AeFCdFaAb46eA385A1cF682AaD4759F8",
      "txHash": "0x7d8b43b5eee237669f86203c6c94e31d598a5c3ebce1acd5288089e7eeb01c53",
      "kind": "transparent"
    },
    {
      "address": "0x42B0878b70F1124D709Ed8f6D81F7228147fE697",
      "txHash": "0x271e10ce9bed72d7fdd0e467f85fb80230451afca40a69cde36d38460ee89a9a",
      "kind": "transparent"
    },
    {
      "address": "0xFA30E222fd8Bf05852F7f599fD79249A1ef0Dac4",
      "txHash": "0xbf817ec7d826a5e964e054dcbbf3ca22a7890bc22fa9694babe3f1ed4a8bb3e0",
      "kind": "transparent"
    },
    {
      "address": "0x56415ab832B75965072D8B3e9Cb655d0d52EEf60",
      "txHash": "0x033baaa5724b32f17f81952dd2550e7848c89661a34f772f740d5e15b93be3cf",
      "kind": "transparent"
    },
    {
      "address": "0x2a90772be9C8aac951b37033F2a79282ba9Af6cF",
      "txHash": "0x082ee77b063a91b9d6051145c66b846815b53feb6ef337cec22adabec419fa5e",
      "kind": "transparent"
    },
    {
      "address": "0x72DB03F9f1400AF29f810b8cF81D5b696e2B967b",
      "txHash": "0x0250a9f6864a9d3e361a94ff67cb6a354a19a3efd1b7da964dde8145fa045dc8",
      "kind": "transparent"
    },
    {
      "address": "0xdB2dFb9969E7aaE8DC4eEf0CeC8d830644Dad3D2",
      "txHash": "0x94c6ca89266cbfdaa9eb1dda5933ff43190377ba5b79faf85bef114a1be6e10c",
      "kind": "transparent"
    },
    {
      "address": "0x78535Ca93142774A641Dc1EedB0dBE686FA7a627",
      "txHash": "0xfee6fbe877418bafa997c708ab79df56eae1f4cdf928ca9fbe9b2361765b95f1",
      "kind": "transparent"
    },
    {
      "address": "0xAD4C4a632b4F6F255Df9c8f904b86AB87d979C6c",
      "txHash": "0xc7a42cf48c3f720c5f531e3e1bfd1ed3e89e12be85d06c3f5f0f6cb349683ea6",
      "kind": "transparent"
    },
    {
      "address": "0xe1845cEDA3a77Af7DD70c88cD25702467640B632",
      "txHash": "0x600a169fbc9cb7fc1fc2a2cdc4f323ef4dfe1943ec075f8d48918b843fdea2a4",
      "kind": "transparent"
    },
    {
      "address": "0x0a06c196196E078c87c0f58337252374A8261C9C",
      "txHash": "0xc431a651b62e91267ced362c7129b3b252aebace8eb2640fd3d3e1360b37d32a",
      "kind": "transparent"
    },
    {
      "address": "0xA35Cf5b91757a5192F842eAA0FF91CFB4716752A",
      "txHash": "0x32d0cfa42a9e1738a402c58d11fc13b96a3eca3cff619c49e6f9ac4138f195d4",
      "kind": "transparent"
    },
    {
      "address": "0xe2A2A8C44b0a03132b441e3D895CBc6771E3864C",
      "txHash": "0x3dc9fc8d7b9ab59f1b5bb706d564bde0eb4acabe4a46139d59a979a8b8b26597",
      "kind": "transparent"
    },
    {
      "address": "0x584d515d960829901cF8CB61016D84A856Ac5362",
      "txHash": "0xb1bb6aaa4b518a78d06b52664112969a1dfc45ca307d2aa178f46ab284dd73da",
      "kind": "transparent"
    },
    {
      "address": "0xb31d676f033C254267127C6fE00E511B0B85e6B1",
      "txHash": "0xd942175f4926e2b6f35db6a251a479b2594d29c37cca89ba3ad0fa1f60439ebd",
      "kind": "transparent"
    },
    {
      "address": "0x8828420a7C9925cE7333e68daEad3CFA9f506c20",
      "txHash": "0xb5f9fa921102c39daf71200d237b9e32486cdb690c0e5091ea1a3d1f75d9357e",
      "kind": "transparent"
    },
    {
      "address": "0xc88da5eAaaE2c17932824CFaE2A7C0aE5771cFda",
      "txHash": "0x50c0291c890212bc28fba6c2faa7b540bae91862b71e6ed81d5e692d24a61a98",
      "kind": "transparent"
    },
    {
      "address": "0x0C9ABB3220581D49637B50008514d0e9068D334e",
      "txHash": "0x501ef783a48c5e77f32966f68f8b9309c94c3b269631f76bdd6361f6e24a62bb",
      "kind": "transparent"
    },
    {
      "address": "0x95C11818A27d36f6fE41109EBE1E6f77a4Ddf3dd",
      "txHash": "0x2bbf0bc2965f98e707f617e9fc50c1e28694f1dfa68ba50302ae89545a3b79ae",
      "kind": "transparent"
    },
    {
      "address": "0xAc320cBE6356142De4E28d36E84a32a0cD933F77",
      "txHash": "0x8c29352f8cffee1183d0c64079f356b794c13a1a9103dac27cd8970b169cec2b",
      "kind": "transparent"
    },
    {
      "address": "0x4126B946493AdfDeDFbB7698Bc73301f8d50dB74",
      "txHash": "0x5ef7856441ab131305a6c400cccb1466c97ccbbdfa65a85ff5481022c4f5cc5a",
      "kind": "transparent"
    },
    {
      "address": "0xa6BC00edfDFD8596086aaDAa6F158DDB9fDcCC89",
      "txHash": "0xc569e0c0519a17c5e4d885b0d80c4b9681817359d31eebc8c9eca1780ddfbcf6",
      "kind": "transparent"
    },
    {
      "address": "0xEc1E98FB3394c90B34672bFa8f47588E2c640a40",
      "txHash": "0x7d7f9f41189c1f4601b4c74e7adfe9e5bccc63c4925c407ca1c221ca1aaacb94",
      "kind": "transparent"
    },
    {
      "address": "0x2f10f6f00fb13486A1bda7321b6B5e2434C455B1",
      "txHash": "0x020b9ce9ee3613d8402eb9db24a9c23cd35b99f997f10cc097c3f0a64bbfa136",
      "kind": "transparent"
    },
    {
      "address": "0xcd8578Aa6376235C8E73229098a4a78D03CA40f2",
      "txHash": "0x6d5cc01cac07b567058988ac8dbc98e74637694963aaae463c25b037d8b8c829",
      "kind": "transparent"
    },
    {
      "address": "0x052eb6C0fCb4e3c372fa1a2E2358c6316E249578",
      "txHash": "0xf8ee1a437eb2d2db92b58242b842e95b014e44f70dd2213faec0f238867ae58f",
      "kind": "transparent"
    },
    {
      "address": "0xD7eCc7D3c1f319ea5645FE4c726B7FA0e4dC754A",
      "txHash": "0x1742fb9344cf7b06e325c14a9d188078cf6c78e5344668da170923687580f14e",
      "kind": "transparent"
    },
    {
      "address": "0x0c4E82d62fd55703355cfb1dAccEAAE21DB7a1fF",
      "txHash": "0xef5074df3839cf856fdffd1d0db3c27e1f29d568cc3a5265d734ef71b5f3ffee",
      "kind": "transparent"
    },
    {
      "address": "0xCE050Ebc014348CC135ab294625969378e43FA51",
      "txHash": "0xf0bf442d5492699f6b37a04c854e5944ab87d61e1da70b0d4b00f6a27a9892da",
      "kind": "transparent"
    },
    {
      "address": "0x4835b78649C8d1CD1350ce212FCDf1Bf5F32BC51",
      "txHash": "0x68adc2e59b5a184d489a6d29f966b60464c68f63f7374cd4a52a75480326f5dd",
      "kind": "transparent"
    },
    {
      "address": "0x77Bb398aEe240041a9A0860b377a900565A13AaC",
      "txHash": "0xe0d7771d267db5566f8e30ca57e9202fb96ef03c294662cb670749ae00ee43cb",
      "kind": "transparent"
    },
    {
      "address": "0xaAb7181b78E849801387dcF14b6d5693D0Ba4CeF",
      "txHash": "0x74c1ecd85f78c4607f9582e02c51c23371dc97dfe343ebf28a2f82112534d8fe",
      "kind": "transparent"
    },
    {
      "address": "0xe3b32cC33f68A8EdEc301F8A87feE859eb114f3B",
      "txHash": "0xf2afdb1ae313165e13d8cc9ad43fce8125a39469c4f7693bce4dc970947ee330",
      "kind": "transparent"
    },
    {
      "address": "0x6Fc3Cd02144AdE85492943D10FDbaE77b24094a3",
      "txHash": "0x58f236cf035ee121a3d87dc360c4220db503b6d56193efe2a67c96ed7f15abd1",
      "kind": "transparent"
    },
    {
      "address": "0x678cd2E6E5B420a724Bd32b6AD04ca440466c71e",
      "txHash": "0x1315890aa665448f082f7273ef3be910788b4656d60114d3b566d45a451cfae2",
      "kind": "transparent"
    },
    {
      "address": "0x4f5f377FEd4314a484a16a6B140F36B079276187",
      "txHash": "0xdb18fe91194448b67f723f559cdd44006200d59c30ce50bea9ea46fa12fe57af",
      "kind": "transparent"
    },
    {
      "address": "0xEd0A0BF70B3F04e81fB708d07d1361B61514933A",
      "txHash": "0x1c6f7cd9bc7a1e7755603e55b12aba3367255d3fb2a7eebd790eb03b445f2bce",
      "kind": "transparent"
    },
    {
      "address": "0x98666f2eE02bd570a735d3e6879C9Ae4D8a4e850",
      "txHash": "0x585d25350d6bd4e3944fdbce0bdd4836be2cf168a8c3bc61118bd4ab78604b02",
      "kind": "transparent"
    },
    {
      "address": "0xe224397002bA017abbeFA0AFb6be71e29692036d",
      "txHash": "0x67ca55adc21560cae0e5612d3dbfe0dc7e7f2b9ffc129160e05c38ad1de799fe",
      "kind": "transparent"
    },
    {
      "address": "0x7e20b5808a83633584BC96Bbd39A16A043697156",
      "txHash": "0xfe97099a231dbc7726709bb650438827a5814a8d26cb8949e7f48c09b0814e14",
      "kind": "transparent"
    },
    {
      "address": "0x369a20Ba6D659aF719fd40E515DC3d9cC70280E4",
      "txHash": "0xd41de2dbff55d116f49ce3ae7b1710569ab8b302af8dce2caaf1af05edcac3db",
      "kind": "transparent"
    },
    {
      "address": "0x71d233d7656d903b6768Db07a259b5c032039e1d",
      "txHash": "0xd8639c25f005daa9214c8cc357c9e5a1bec990d3117db6578df30bd44359c24e",
      "kind": "transparent"
    },
    {
      "address": "0xa8daFea9C02f57031ef213F17471E84EBC5D82F1",
      "txHash": "0x8e713f4df83a0a22d4c565810b672d914f5952ec49c90719fe162bcaa659c8ec",
      "kind": "transparent"
    },
    {
      "address": "0x68423FA448289d2Ad4148aeE75662668A0A872E1",
      "txHash": "0x378409ebf47b302ff9df0ea564c869f284966a1c7bc473f2d3e48b25f2da9778",
      "kind": "transparent"
    },
    {
      "address": "0x0585910417d039f72318Ae71ac0b5fc56738E5b4",
      "txHash": "0xc7135fcc16c3c3ceec7829908a1fd9a4401b8efe8197204fdd0609e3338b3182",
      "kind": "transparent"
    },
    {
      "address": "0xb70d3cf744e65F54876f1cF9Bc676408777fBD60",
      "txHash": "0xd7866a891f444788c7c8c36de7bde58edc22be9549e39f3ebf89fa875e3ac2b2",
      "kind": "transparent"
    },
    {
      "address": "0x08EcD46A7F9c6a81116C24f704687B94530b0D77",
      "txHash": "0xbe29f9c87b528451eb27c29f0fbbec551eef21e311cab95878fb07e85ca2b661",
      "kind": "transparent"
    },
    {
      "address": "0x68507a5EcF5Bff6B166B90008E466AceC4F9C105",
      "txHash": "0x1796629c0f6b7858ec4f6585a71be153d3b8c84bf4440891627d28976011e911",
      "kind": "transparent"
    },
    {
      "address": "0x3885BC14d6F850635F1bdB131eb39B13d2cEcaEa",
      "txHash": "0xc6b0443cfad4abd3eb657fdf20269d4bd5ffd2ec2393d03cdb74234dcffeb1ac",
      "kind": "transparent"
    },
    {
      "address": "0x32e59816bf2DCBd9a299f4c10025f418D588F1Ac",
      "txHash": "0xf500581e4a2c4d8c07d3fe189e4a1053dbbcd3f41ddf9dabe65c25a6fd742c70",
      "kind": "transparent"
    },
    {
      "address": "0xc729e194C50E4639b4CaF81808e1abbF80f125A6",
      "txHash": "0x5c8e5734441331010f0992e5ed277023091941ea6bc54ffac3b5b733a297ac85",
      "kind": "transparent"
    },
    {
      "address": "0x79aBA52F7a557c47d3d41D355aa7Af1BA76742EA",
      "txHash": "0x77afcee0c1e2278284b377fda702f5494b9d93f5ad64c5df58655146ed475685",
      "kind": "transparent"
    },
    {
      "address": "0xc52a161bfE3C22d88089c0d38D8C170ee6849C2c",
      "txHash": "0x542a57e758584ffd22c0536448b9b179203922077c440b295e1bc54f6edbfae5",
      "kind": "transparent"
    },
    {
      "address": "0x9dD33E968389688d95E06F75924F2097cfC03a95",
      "txHash": "0xf3b52c2f9f4f882ddf9317ca89937010068d31d82bb02113f92847b5c009cf6c",
      "kind": "transparent"
    },
    {
      "address": "0x79A662ddCC833655195830C5D3664D1de3a23323",
      "txHash": "0x149cd4457b1867406f83936fc58399f626c658c3ad01d1d02a5cd30c684ade0b",
      "kind": "transparent"
    },
    {
      "address": "0xC1d97b11E93d8AA0275bF421fB99ffAD1eEADaDC",
      "txHash": "0x87a68ce6974bb3065484f80842c780e7477dea078222e0102588cc7e37f31e65",
      "kind": "transparent"
    },
    {
      "address": "0x2EEF2a26cB26813cfDeC39f5C715489a7861AbEa",
      "txHash": "0x307429f0d29265702e76c081999380092d99f53a8fe774f0763e9293b3f7cd3b",
      "kind": "transparent"
    },
    {
      "address": "0x258e0e65338940D9aF0EDc398C78c59f30894fa7",
      "txHash": "0xad99098b6a0f86067ff7e07feee09227fe9c5ec2e21df6a48b701cde53e6f78b",
      "kind": "transparent"
    },
    {
      "address": "0x3683d94D14816C04e24B18c2322D6629d2600901",
      "txHash": "0xbc12560cbb02fc7350a4ae6e8a8646c16a5420e4ea0002545d8918700b7cf14a",
      "kind": "transparent"
    },
    {
      "address": "0x87c03CFf41A6982a1a890a9371E8274f485FbFDc",
      "txHash": "0xc5194cb4fb0f45dac46b70e10ca315c88f0b3c84b9f2b46c1a16c584242475c6",
      "kind": "transparent"
    },
    {
      "address": "0x4917c39301226Abe379a9573827fBB96d5272aAf",
      "txHash": "0x318e0bc8e1264b993f835a0732be9e0c15e6fe100e78d991a6930e24bc617dd9",
      "kind": "transparent"
    },
    {
      "address": "0x4dE75083667D88226CFc1904Ac305C0061227983",
      "txHash": "0xcc8259b39df3b4d0a46b9bcfce3cf290f6192094e3ebcf034c574f4428a1e45d",
      "kind": "transparent"
    },
    {
      "address": "0x409671F5Bca73bfB8Bf679D338d077f429ead66d",
      "txHash": "0x53fe1aaa9bc76205c81d8d18a4bf5e33c931f4d443967486ab45a996896c97ca",
      "kind": "transparent"
    },
    {
      "address": "0x8e084a7fEd0B63367Cff1980737E07B20898064D",
      "txHash": "0xa69984c5dfcf96865cd78014388e3b9f5aed104029277b24d44bf76edf1a1600",
      "kind": "transparent"
    },
    {
      "address": "0xa220018b407dAF80820A7eF4CD65076349DEac8B",
      "txHash": "0xcf9295deb78dcd0650aad7c96e12783326c6bdf2c242c91474567ba4779ff570",
      "kind": "transparent"
    },
    {
      "address": "0x1fcbe92E0D4A29E989d53AcdD2920b1807a45a58",
      "txHash": "0x9e6304721c03761c83701a2a03f6d7a00810f96f41739d5f07913aaaa5df4a29",
      "kind": "transparent"
    },
    {
      "address": "0x21853ceb69D0B1eCc2a29F0fde875616E273245C",
      "txHash": "0x899494b8246c9afe2fb4f1a4b9c7a8c9dac35a77ef6145c2d5f45efc260418ea",
      "kind": "transparent"
    },
    {
      "address": "0xe910984E243d22695B01369dc38EA265b0613b4d",
      "txHash": "0xe7e90d33e930731ea99d079b94a12d1ae5ac0a9fa1262928a2cdfb4a1a34ac66",
      "kind": "transparent"
    },
    {
      "address": "0x02F4a5d5510F1F92A578b0aE974A27385f1a306e",
      "txHash": "0xe7a9336cc0df55e83cbcb3ec72922729c16c742077a0a8340e3a4052d94ffa5b",
      "kind": "transparent"
    },
    {
      "address": "0xa31F23A378bb235C663B370930D5270AA202BC76",
      "txHash": "0x7a1865cd131dee3c1b68b7d106f597800e3d559623e1f204c74edd3ce6fd8ddf",
      "kind": "transparent"
    },
    {
      "address": "0x18008BE06964dC1558FDB84F3964af1329779b0A",
      "txHash": "0x6aadcde199ecc48dbeb29fc2c68c687531154bd8f2f9eb34c5bfd0aa1b07377a",
      "kind": "transparent"
    },
    {
      "address": "0x3a7094ABfB8eE73C5DB3fb7474ff67C6d1f48af1",
      "txHash": "0x0bc94a9ec445005a81856832ed1d5287087286f897658835544436150c05c376",
      "kind": "transparent"
    },
    {
      "address": "0x287a4Bf0C142C839F0ad0E1481e73D45d1dd231F",
      "txHash": "0x7764dfd7337c0d93312fcddc5a5d12bd8da5ac4155fbf1e86bdd375d978194a5",
      "kind": "transparent"
    },
    {
      "address": "0x2b7C392b0368178B08d6bC7645eEd8Be6d2C8253",
      "txHash": "0xe65d2abb3aedacfd2189567f4b8eb43936120d46d902f0d5fc2165a7a125effa",
      "kind": "transparent"
    },
    {
      "address": "0x734bf6f35cF7FE6510E960CBe4A5955aFd9fB42d",
      "txHash": "0xe80edc5006df12f9b7085bb3b17e61c2c7dd15b9b16f330816d2b7cccd730797",
      "kind": "transparent"
    },
    {
      "address": "0x391A7eCcaB75ba48404997fe71A4EEceC709A2DA",
      "txHash": "0xff01ecc7fd0c889eb645c69c4ba2d86733f9e2e88459b6594124f6397c00c553",
      "kind": "transparent"
    },
    {
      "address": "0x7F6De103440B7d1A65B58Fa0b67e263001E2fbAF",
      "txHash": "0x2294d77e5f7e3c02cabb802733a928a3078b73a7e0845993b733ba8f544d3b78",
      "kind": "transparent"
    },
    {
      "address": "0x4aA0C5de375ff8Ad2c85bc98003c16695d9694F6",
      "txHash": "0xfd6aa3de79661d5b6badf8cb06305954a759784f6f543e90b67b7505c36dea91",
      "kind": "transparent"
    },
    {
      "address": "0xDC6fDB4C8c38A56aE7Aa7D457703fbA6B466c725",
      "txHash": "0x040c074309b8a3473ff00df80adf084af9708cc3c4a27593d10c6e168caf6adb",
      "kind": "transparent"
    },
    {
      "address": "0xcED199FEa218C3f3Ef1Bb880e6BFC5764a1FD225",
      "txHash": "0x392105d9824389db24d9302c579bfc4bdfc55596fd1f5185c6acd77b28ea730f",
      "kind": "transparent"
    },
    {
      "address": "0xc5E05fFE11B8148A3888392F947a0a3268357263",
      "txHash": "0x2c3169b8d009929bc82cb4f187f1a59bfb949912ed86af667e55ae46472579f4",
      "kind": "transparent"
    },
    {
      "address": "0xB00AC5B2eE52BB8792A60B547a0bBfB291182290",
      "txHash": "0x23ff5cca7d13bab8ddb7b1ad1e2cc44339f31753761cdc82044983250352bd41",
      "kind": "transparent"
    },
    {
      "address": "0x68934762cA25497602520F01C312E0c10186621c",
      "txHash": "0x87e139685f6a81969d3364dc85f3430009acd2cca7075ce48dc860482f77f575",
      "kind": "transparent"
    },
    {
      "address": "0xbe7Ad024937B2b2c9E54820E46795e414A9f0a87",
      "txHash": "0x821b628f21eab387b61a1f1beb479cc4201b84cbce669cb42b5d3a7dfcf16f4e",
      "kind": "transparent"
    },
    {
      "address": "0x10beB991B826Db88d0BA59544DF40A11609eF515",
      "txHash": "0xf998078cb71aad48f0e70e4288295e27f066317d0a1b531d38e10434138b15b1",
      "kind": "transparent"
    },
    {
      "address": "0xae12530f5330A5b2373Cf163742BE9D3F5865c01",
      "txHash": "0x2041a3a60c69646dcfb0acfcf629cd5632a2d515d4290fa811d7c7f5c131ba50",
      "kind": "transparent"
    },
    {
      "address": "0xa292dE16CD80d40bf6162dEe019b56F1211ad9D9",
      "txHash": "0x0675cac03b03f50eb2fc4de78b4f0ecfaa7b562007d55065f4793822a907de26",
      "kind": "transparent"
    },
    {
      "address": "0x34529EF86FE8f7D67aEbf7FC2Ba29706d6e86005",
      "txHash": "0xf9189384c7ed3f0386a95912996a38b7d1c4da47c2c18b4d8b124bedf7ce87c0",
      "kind": "transparent"
    },
    {
      "address": "0x89e8d46a20CB8f5e038efc0b096096d7EfC87A01",
      "txHash": "0xc6a7aed0282491da6ccb4d246761967a95014493fccb18e2da1347515aa843d3",
      "kind": "transparent"
    },
    {
      "address": "0xd39754Aaf59Ae735CD99bDc3b6a0B1718d6aB489",
      "txHash": "0x64683905e9c712e9f7057b21b1513d99db85317c4c1f714534cc6cc92bad1979",
      "kind": "transparent"
    },
    {
      "address": "0x17eC0616420899E4387443f7fBF63259a0cE3F35",
      "txHash": "0xfa462c4b08a94c1617ad7f3f12cf3251e6ab1e42125ca121c68e4079bf330a18",
      "kind": "transparent"
    },
    {
      "address": "0x3D5D82208d6e42B463FCbC79149D7A5d43d6A6D8",
      "txHash": "0x044c6f020d4adbb32ff311d805163f2afe3fc6edc2150f1bf2334d27e39865d9",
      "kind": "transparent"
    },
    {
      "address": "0xe5aDFcEbD132082861A7E8fa0680A4130dA2C2F6",
      "txHash": "0x0df679368c3a844263dec2a13c163948c6fa8ec841a16ada72e8fc2c0f93d0a6",
      "kind": "transparent"
    },
    {
      "address": "0x7840Aa92706563a3dD55cDaD5cf646B4F1BDEC31",
      "txHash": "0xc715625e5318dfb2959891fd1c804f0396b4a29b6ef435bd1fdb65eb619b7afa",
      "kind": "transparent"
    },
    {
      "address": "0xeD1Fc145E15b168fC88C881c54B8fb524cba08CE",
      "txHash": "0xe5d13f4467ae89a91ac0f2d52b1b6944ea0f33757c6a99887b34b7dfc4781a4a",
      "kind": "transparent"
    },
    {
      "address": "0x7a2e8BE891aF2d25377f2f4DB5aBcBEfABA006F1",
      "txHash": "0x698b74c4bf864423e3998338a74eb98545af658520e3efaded6c01233665b981",
      "kind": "transparent"
    },
    {
      "address": "0x0bcAa9b7cEB615560E6f8A71e0562fa881A9D176",
      "txHash": "0x17ba05078d30c6c7fb8e8d3d6cfda31d22e32ffb85566eca6593510ddf900246",
      "kind": "transparent"
    },
    {
      "address": "0x37b649d1c583EC13F61e197A393b5Cfbd1ac912B",
      "txHash": "0xf34982f4a56a1bed462476406b6711a25974f5aa850af09c077bb924d5a2799e",
      "kind": "transparent"
    },
    {
      "address": "0x9369BbC405bc4aAdb8Aa40513db4Be1458770E54",
      "txHash": "0x7621885fed158d5b61e2b926e1ed2852a1473b3e00bb71115837cbb8a326a31c",
      "kind": "transparent"
    },
    {
      "address": "0x01323ef442fE35DE5AED4c999fB65BB1D1697F36",
      "txHash": "0x25869f795ff3198a31ba75a5a6af1b940f434f4dd150f200cdb4777e8dd811ba",
      "kind": "transparent"
    },
    {
      "address": "0x4885E2620A45DBfB839EE44c29f64E62384539ad",
      "txHash": "0x8d62ea8c8957b3bd315abb94e278e31714f6d33107934a181986562d7016b30c",
      "kind": "transparent"
    },
    {
      "address": "0x37db70eFad44e27eC3FaB48E1DE1d8AD757d81dE",
      "txHash": "0x0539327ae10e9dce23d92bef9991f6d88aa5e94cbf3d28fd162a0dd34189d700",
      "kind": "transparent"
    },
    {
      "address": "0xE24cEaBc5d2D4cD986d77751cdF21941ECCc6aFd",
      "txHash": "0x0305da163b59cd70c76420905de8f2dfa7ef711d87b644886918f3e37c3fe845",
      "kind": "transparent"
    },
    {
      "address": "0xEE5CC3f2e9423FB1226535a71A71b17f67d382b6",
      "txHash": "0xc1ee36e7f2e809501b8df65226f09e21ba2d9f65227afb0586a5c31385ea7246",
      "kind": "transparent"
    },
    {
      "address": "0x7Ef119D95718bA9eA67f2acdE7B729c912D8d46a",
      "txHash": "0xac66108608ffa300f115e72da1eb5b7a34b0ffb2ea0e6540ac1d0039231a1730",
      "kind": "transparent"
    },
    {
      "address": "0xEFACbD900C55aF9aec6705DCEBDa87BDaa6C0090",
      "txHash": "0xc0d45afb254e3233bc702dc7ef37f719829fd40f5183958280a1dfc26185c8c7",
      "kind": "transparent"
    },
    {
      "address": "0xB2ED8f1fE5d28199a21C1D5fd77C6af5aA7F227f",
      "txHash": "0xd7fb1da87d23d30265f8cffc54690a3c5e91ab6a0d7a00abc8953633b0b620bd",
      "kind": "transparent"
    },
    {
      "address": "0x455760757114F790e5f2EaDa1C7357b4FAfBbB03",
      "txHash": "0xea37ae88538d3522b274f9cf8f9db4c6c61c238f3e1bd58469c74c8f6c1bfd8a",
      "kind": "transparent"
    },
    {
      "address": "0x15319CE698Ae5880eE5Fe870ED25D58Ba7303978",
      "txHash": "0x777cef6ef52b44e820ae337e2a730f3a194bddff2f8998b275d7c337a5c27009",
      "kind": "transparent"
    },
    {
      "address": "0xcD964516a05b4064DA990Bcc5b90191029AC1914",
      "txHash": "0xfb50a3ae8f600cfebd68a1f6f6227fa60132a853ba6aba716c175be6dcb34a09",
      "kind": "transparent"
    },
    {
      "address": "0xf40353748cEf12eD3dCc9bB6FDFcA945136a3b1f",
      "txHash": "0xe56cb01485134d57cffaec392ce11b04ae2fc34063557715c6acfa69243aa19a",
      "kind": "transparent"
    },
    {
      "address": "0xd4EF49FD9CcF221D6DF8fC28B79de9ae74FAd299",
      "txHash": "0x935e7b8a205116baf396aff0bcbdadb052e066724cdd47a08c05cb44384214e8",
      "kind": "transparent"
    },
    {
      "address": "0x6b41F64E2b96Aa2D47Fc54fD3099b5B263217B4B",
      "txHash": "0xa73fe5ea3a6ae25f8b8a6d9d51f8d5f2ccae86b5a5f491de4de0283f5b665717",
      "kind": "transparent"
    },
    {
      "address": "0x6a91F4427dd2f930462Be278eBE907b4717Aa5b7",
      "txHash": "0x8aa910fdf346a3fd2721a41079b880358d37f95e1d3525fa6420e99199ef0c23",
      "kind": "transparent"
    },
    {
      "address": "0x84Cdd8a7A49cA2bD4001EEe303a601831f1C6d69",
      "txHash": "0xa9cc406809ee5b9ecbe383afcc0b4e6f09ef8765db3e5c7e0bedbc86edc47879",
      "kind": "transparent"
    },
    {
      "address": "0x44f9795422006e42c0334E85d40Cd5f5F9124077",
      "txHash": "0x83fd8878e0d9b0626343b08df577f52362b221878ecd5e4b70b55c1f6f398d7d",
      "kind": "transparent"
    },
    {
      "address": "0xeBEc50B59B58e36a03164674BB888E60015d3f9B",
      "txHash": "0xe0afef462ec2efce0ccb7ef1bd3757fdcf1a91034b810b941b50c7b0b1ee0052",
      "kind": "transparent"
    },
    {
      "address": "0xacAE5d79610F5F607F34B0F7a9ae7F2F93472d74",
      "txHash": "0x8f10ea32d8d7bce49b2700845140522249071a1ad67dcdbfa7ea4bc00cf0be32",
      "kind": "transparent"
    },
    {
      "address": "0x884c6e7301Ad821781e1eF80FE505A8EdaD2ecC9",
      "txHash": "0x82ecbf447b3b9e35c034e9ac8328fe32b3da574e68505f34bef37a77abef04c4",
      "kind": "transparent"
    },
    {
      "address": "0xd395Fb16F3965540C6F99FEAb3534cD7030b61d4",
      "txHash": "0x50dbd4547c117dd2c96fa34cb78ef120a19422d505a49da461b49976816ed819",
      "kind": "transparent"
    },
    {
      "address": "0x88e752AA43c05d90b6d8E43c7c95165265646782",
      "txHash": "0xf35043c8f5cfa30716b08c005400f7dd20c1d03edb33c9a94f23ac9f7f3cff35",
      "kind": "transparent"
    },
    {
      "address": "0x09a226a79c9436304Df00B0fCb4d864aa7c3b7b9",
      "txHash": "0x33b128cf1ff724f9ade7e0fc6b3c1c16be764bd51d5fdc0c02e03b6adbd13543",
      "kind": "transparent"
    },
    {
      "address": "0xB49c012F542537620118484d2a7063b3Aab8012c",
      "txHash": "0x3c7c7029143ecc63ee4ee71543eab35f8db7dd0bcbfd8db5e9f76eea5a735f21",
      "kind": "transparent"
    },
    {
      "address": "0x3d81d96f4077d18BF04D52aE4d6B5e1df5D5d727",
      "txHash": "0xf8ae515617fd16539d3aa0bf3fb851d9660f9f1596530d0c904008d3d4b2515f",
      "kind": "transparent"
    },
    {
      "address": "0x39306666f1145fb4b06d063BD019369bf7faC755",
      "txHash": "0x97f614f145ac1a197bb9aae67dc66b84d46fd003ecb833f390f543249fa79b63",
      "kind": "transparent"
    },
    {
      "address": "0x5Dab8cD3F504D192eaB71F855de1De61197d4524",
      "txHash": "0x8a157aefc3ab0a25f7f922e316656f06d06699ca1f9a45fe04d1d0824242f82d",
      "kind": "transparent"
    },
    {
      "address": "0x70da03067af2235B65924c84F360673A6dd080f2",
      "txHash": "0xe8e72bbc04ac7b292d67743cce6c95d467e05950a64e73768cb0e3f0ae2ec592",
      "kind": "transparent"
    },
    {
      "address": "0x2C0f59E9e6B257f627396BE2D342AAF4eaBc8fDC",
      "txHash": "0x03dc22d432dd6569da6a4254f80af2f63991b67b7857756d36ee01434055a5d3",
      "kind": "transparent"
    },
    {
      "address": "0xA6898BC188C34BB7fEE29b86D8Ab522F6D01daD7",
      "txHash": "0x776942ffa299d2a96cc9bb5c4fd9dfd12b730f0b84706765edb046e25872ff96",
      "kind": "transparent"
    },
    {
      "address": "0xd021b23FFa269E4449983C173424A2705a9e2B41",
      "txHash": "0x5e583870e097069afb3bb728de7a8ad6343cef7ed65179b9bdc4e9862c527372",
      "kind": "transparent"
    },
    {
      "address": "0x93Be531E10FbeB24ACA1e7Ce7274367d88e1CF4d",
      "txHash": "0xbafb15cb67a167298ed5268b79f9c4fef3e4de41fbaf85a8dc3c365e9cd1fcbf",
      "kind": "transparent"
    },
    {
      "address": "0x751b7Ab6c5c8aa3D7Df17F3449f1b7731DB7826d",
      "txHash": "0x49b6797bf6bf5a36d0a3afdce86ba861b329505db1230c1540b0df72690b380e",
      "kind": "transparent"
    },
    {
      "address": "0xfd0BA02bbe607Da041798FA1c50F2E6695404768",
      "txHash": "0xbf6ddbb0fae34778c2d73888b7c040f65bf3b2645eab9404babc7b1a99f6d4c2",
      "kind": "transparent"
    },
    {
      "address": "0xe61F515aF388AD940C5E53e822629B20a6043806",
      "txHash": "0x607ae977bb87200fe961f2282770ac64e8f87200adb38d2ca5f8c4db638e540e",
      "kind": "transparent"
    },
    {
      "address": "0xC492655A8e0a5878AEF1c0ed42126231c4B0785A",
      "txHash": "0x03ed1ab2b61043fc55b6c1c0c8d6b37eaf924e1a91c76ff819ab6afd04f4d20b",
      "kind": "transparent"
    },
    {
      "address": "0xa1e42464d4AE931D3e36e323ef87f25806bc6F8a",
      "txHash": "0x39adaaa690937104715d7a49d0c60ddb108c028a7fa474ed7b43f3444e95f7f2",
      "kind": "transparent"
    },
    {
      "address": "0xdC8d5b60030C1b387Ba87Ac9E5EcA8bb20277688",
      "txHash": "0x04d23f87e791a79904d18b99944ebc329b1ffafb598b461cda7cf84cfeb08f93",
      "kind": "transparent"
    },
    {
      "address": "0xF7feAb57387F22d3819f8029d60ff4f32e364dbF",
      "txHash": "0x9840e88238158f17183fc6046d44a2da33e3975ca83becd46205594d71286e99",
      "kind": "transparent"
    },
    {
      "address": "0xB135f5fdF5F8FA7f66D33Bd112a8Ea19F6cF3aE3",
      "txHash": "0x711bbb847937ba9a1b92ffe92b9af06175382ee6821fa6745628e21bb747ae50",
      "kind": "transparent"
    },
    {
      "address": "0x935f02DE2a888A383A132A02b631f8578a5ee524",
      "txHash": "0x9e61644a890d9d3697cc3e81c2fd7f3c61a9e2a2612feab96f0ce71870531446",
      "kind": "transparent"
    },
    {
      "address": "0x8eE12a7Bb09F7F2a37d7bC796ea7d9560a5079c1",
      "txHash": "0xe68bfcca6994affbd98f6c70054bd643f20c2a756f74ba6ed4a36eddfcb45047",
      "kind": "transparent"
    },
    {
      "address": "0xf5F29D27018f1Ab87f339E27CD035121D4D1035b",
      "txHash": "0xfff6f2aa2f1723d4a12d18a467eba742435bdf6faab08560855254055bbd2489",
      "kind": "transparent"
    },
    {
      "address": "0xfA56B5920d5b58396D5523a5B22E39f0A74Cc9b0",
      "txHash": "0x85732d928a55ba7577d130d874ab6f4e0d087c892ffd30a4a9c913f089aac243",
      "kind": "transparent"
    },
    {
      "address": "0xBb16D220066732c4F489DffC70C9aAaE4a204352",
      "txHash": "0xce056128f633aa0b32e401cd6817a95444042c997bf7ae4de95ae9aadf8999ce",
      "kind": "transparent"
    },
    {
      "address": "0xfdB62bc9E71d8543861E722E38A6B97aBE159aAc",
      "txHash": "0x7e3770620179214a382ef318b98ac6407d5b6b2334474b6864ce44d8f5b9c04b",
      "kind": "transparent"
    },
    {
      "address": "0x9f7A8eB01B77616Fa45327455d78dE0a0323164c",
      "txHash": "0xfae20fa7ce7a8a081cc4855eabf695f4cfc74f3763adefb3f6fec5a1f4757de8",
      "kind": "transparent"
    },
    {
      "address": "0xf3b6957c869bF36296963f4499BCd39A11f817e4",
      "txHash": "0x78a7d1b4726d7ed448e7c8bf01acf3337f7291319c37070937e92447f59a4a44",
      "kind": "transparent"
    },
    {
      "address": "0xeB89c89E3156b7F2cCe09249D7913C462Afd1607",
      "txHash": "0xb53fbb8c38aabf0440440be2a35de6bb75a229bcf9c91354689d0d7e85cc20d9",
      "kind": "transparent"
    },
    {
      "address": "0xcBD518B3201b4bC5d6E64137939062644D4665DB",
      "txHash": "0xa0e56ef6291b28c30995354ef2691532c51ba7bf0e678405649e71ffcbbd1de7",
      "kind": "transparent"
    },
    {
      "address": "0xCc575c0Dc70969251e4eFEf35472ea141Bf22Bda",
      "txHash": "0x919cf998841a588ece9a3c6c539b2b27c96a5413f035c41c397ee5353ff8d006",
      "kind": "transparent"
    },
    {
      "address": "0xB43aC68DCEaf78F1924242fDd0cBB402693CB624",
      "txHash": "0x9e759ac3cb1d0f4a2456360e2b6e5acee3440db8947efb1642d32c96e4ed464e",
      "kind": "transparent"
    },
    {
      "address": "0xdeb70DA5094913b9499Dc20245567fef6A215B54",
      "txHash": "0x273a72cda6777358d43f2851a973228f68e288274c2de6914b1a0c10e1a6e5bc",
      "kind": "transparent"
    },
    {
      "address": "0x99E63e6c68E8356894DD0D01cEC663B5BDf479C1",
      "txHash": "0x7a0095f1ea7ad81e5c7ea9a19502dec33d7d31035fd6d990ee8ad8fc40b5f455",
      "kind": "transparent"
    },
    {
      "address": "0x97B7C3DdA517E95631183f3B61248a4C234Bd3d8",
      "txHash": "0xae938f1dc0eb7d4f39419c5d710d9e73a6338074c154ddb8cf7ccd7fa3858bed",
      "kind": "transparent"
    },
    {
      "address": "0x73e3f7f85FC096aA42Be4d989fE3D0701F194CCf",
      "txHash": "0x12627f6f5bb3670a3bc0b7e3f7a19fcc8c648d32522fef7cf39276f7a9c89b27",
      "kind": "transparent"
    },
    {
      "address": "0x571db7A8f81f43751c246587e4e738120D8dD9D3",
      "txHash": "0x65a3e784af8b851a5e2cf6e65dc908d435677bf85017109be73b8d9c3acdd45b",
      "kind": "transparent"
    },
    {
      "address": "0xBe848598C695923a7c374F27d64B7CcC55b937E0",
      "txHash": "0x5075d7ea6491f9d5af33372ea5fc08d0e83e6fb7e2f9e24c5710f90c93bbe99a",
      "kind": "transparent"
    },
    {
      "address": "0xe7961D5A0B76AaCd22F19AE2a89cD927Dc906F29",
      "txHash": "0x0a290848de60a59eb182d18c0f6fe1c92440895fa5bdb13550e2021beaaaf681",
      "kind": "transparent"
    },
    {
      "address": "0x00857aD32E2C98DAc56dCE01E4b54E13c4dFA6e7",
      "txHash": "0x3862be1c112d5bf838076d07076f6d39cd4f53c1af1d777c9d3d864649f4f702",
      "kind": "transparent"
    },
    {
      "address": "0xa15895E8798004BCba27e5B1BB990671c19dcA79",
      "txHash": "0xcb92f994946e8e4227ca554498cb9e18710f23ccd73cdaa651c1306a55bea29f",
      "kind": "transparent"
    },
    {
      "address": "0x660E35117fB1fAF11630B65248cBdAf81374098B",
      "txHash": "0xd1d62d202c1cede743d8845684405afea97e687a1f54155858c7f8339d0e04f1",
      "kind": "transparent"
    },
    {
      "address": "0xcf77a35775e610189d0A47679c97fDDB9BeFE5c5",
      "txHash": "0x834a8ce9114a881f1e62180b2fc40647d7ba73eb83fa9b9ae2845cc084db04b5",
      "kind": "transparent"
    },
    {
      "address": "0xD84fB48E79b2A048d72Ac3c49d415aFD1179EF5F",
      "txHash": "0xf6ad43ab7e2db468907dce5d63e8d84407e6e454b2207b81b3518bd432ed9051",
      "kind": "transparent"
    },
    {
      "address": "0xAaD4c5dc2517170126dea709Ba82107023e2abC7",
      "txHash": "0x78d1a2791c3e843186bf2040a3899944e2705676caaa777f4cece4b30b3447d2",
      "kind": "transparent"
    },
    {
      "address": "0x9C900e0CBDF7835B66C37a2ba7eeb85937020c95",
      "txHash": "0x25b3bcc30770a7e985e33f29cd4b3a471e5994832b9c5a9f5a0f1aeb528e787d",
      "kind": "transparent"
    },
    {
      "address": "0x92E7d99B3C224b5ad765A73b8AC075372710A8eB",
      "txHash": "0xd6f8990cb45526557940047f7d8e03f0debd8f9dbb08ca076747107995ace2d2",
      "kind": "transparent"
    },
    {
      "address": "0x3DC3f6f9f19CC0A36df8234AF49bfEc6A329798c",
      "txHash": "0x18e79309e2c9fa6450f18dff52875722c2557de56c81bbab9354d0071ee15210",
      "kind": "transparent"
    },
    {
      "address": "0xE2d4A25dC20ceA13a543eAEa674ff2D843480E1B",
      "txHash": "0x5e157ace684a24de7dc2559ab31f03a9e28eef7210187ad3b68b97fd784d5a9f",
      "kind": "transparent"
    },
    {
      "address": "0xb1a52D39FEab36799c1eDb4F30e537074F6Fd30b",
      "txHash": "0x134ad58f96a34484969b30e184ed1aa4884ad0bcda1baf8c355ddf548754d958",
      "kind": "transparent"
    },
    {
      "address": "0x598916452B15De247f04eb6F6cc8DC2C1A90b4c3",
      "txHash": "0x240d12dab28a86544d50a1b9e2e97c1fb5ba3945dfdc3afa2cd5d7590d8b9f1a",
      "kind": "transparent"
    },
    {
      "address": "0x25cCAad92446C1d725Ab081d9C99bF2a7b6D4b97",
      "txHash": "0xc69a314b9cb7343f8db86c27ddbd9312089d630003953557f60d16f52252f268",
      "kind": "transparent"
    },
    {
      "address": "0xEF9C691B069701B9445c224f82c36791217B1ac8",
      "txHash": "0x0c6d5f4637224b151d363c6a05e1ffae06e2a49463b673318c858967a0a4f052",
      "kind": "transparent"
    },
    {
      "address": "0xEb1177F52eCF26A1856b07fd9058eBc06aF9429E",
      "txHash": "0x0d5f5a941a8fdd34e0f082d757854a60be575cac31629b2fc16acae1e0de2e7d",
      "kind": "transparent"
    },
    {
      "address": "0x2dC911D1269a78393B60DE588d77Af0F8efBaB03",
      "txHash": "0xcd5b3d3353958ab4fe749dd62f8770d5e6ae8e784d1f55ca22c58d20c88dd920",
      "kind": "transparent"
    },
    {
      "address": "0xBf34F3465151C320CF3B704055580C320EC39552",
      "txHash": "0xb6c097e0ccff77dd9f6ff089932f9b36260f4fbcffaa1a95a77f7b2b84011d4e",
      "kind": "transparent"
    },
    {
      "address": "0xAA4370A8281B468C5D546108f821F473FD226804",
      "txHash": "0xedae404b927cd233a747b01031cb8e81f13d4699dadd734a84b356f770f6ecc5",
      "kind": "transparent"
    },
    {
      "address": "0x02Abe76F2F8969F43c9a87e7E683D0c5a2b5b254",
      "txHash": "0x9ee164edb733cb805ad4ad3734bd2ac3071398e3503cb7958d2c0c38d5427d8b",
      "kind": "transparent"
    },
    {
      "address": "0x75F2C60819e30316A333C658D54D93209AE6Dafe",
      "txHash": "0xf448d7409d1afcb355b8b3c087615cf1d7358776b4e30af078072376b3b62765",
      "kind": "transparent"
    },
    {
      "address": "0xf3390AB2c4515754F17b5a976475bAc48039d6e7",
      "txHash": "0x47e3632e8f28187da496d51ef24d09737fcbdd91bdcefc588f68e67f8c3b5381",
      "kind": "transparent"
    },
    {
      "address": "0x07ca57c4555c1d56923C7Aa078c0862eb7780199",
      "txHash": "0x7a86daaf9b63af95a222f46b17c4374261946e6e3d6d2d3604bb1ebb160f3668",
      "kind": "transparent"
    },
    {
      "address": "0xD3A4C3b41e4d995f2Accb6a458cB15f01A3d04F5",
      "txHash": "0xd68390a50dcc52d2a996b30878fefaf9a3929dc1b4fbef4fd22608b73520f3f9",
      "kind": "transparent"
    },
    {
      "address": "0xedB64F79C9F3e5b0835e7424D7897E10B9ccfA79",
      "txHash": "0xd777f0dcd2d78b682e245c69f00b8fd6a872e0f164ecabcd25f539dc4e0b3a75",
      "kind": "transparent"
    },
    {
      "address": "0x50b921812D358CF8CaF91b1b3C2DadC0F7c5CC7e",
      "txHash": "0x85ab3ada96033053c3d61886edbc345c5af157ae1492ecfa76df58eba0410ed2",
      "kind": "transparent"
    },
    {
      "address": "0x827332154F6Dce5eDc9E3Da715B339146809a412",
      "txHash": "0x6547d3ad8b45d643193c6b5e476cf19a75bfc1b478eafdda9433074f363fb708",
      "kind": "transparent"
    },
    {
      "address": "0xc92aaCFc7073cFE6c17F445fD90B3A33Fc448aEB",
      "txHash": "0x3a08b167d8190a164eb568462008da8df2b3ac12044150286b7fcbe0606b5779",
      "kind": "transparent"
    },
    {
      "address": "0x4B29ad3bd9cdD3156BcC3fd1dd3309bfBF1D1A8C",
      "txHash": "0xf9caaae88fd7a55f7ff2fb7844edcac8f619807e736514bf982987adde75235a",
      "kind": "transparent"
    },
    {
      "address": "0x1FA87E38d0840c943954e96dCF97C8c3DFfDbD73",
      "txHash": "0x49cbf897f111dbb911aa91934aed0a8da0a6dc464af721f3c3d8fd7c9d04dd6b",
      "kind": "transparent"
    },
    {
      "address": "0x6557ebecC8188eFcb42c6aea6379cb38E01C07D8",
      "txHash": "0xe62e88c3e6f98e22c927a366f177d2a301d9c3839aadbfa4cb953891283b531a",
      "kind": "transparent"
    },
    {
      "address": "0x9E6900766536F14523a8a3Dd710aBdA11f10f6b4",
      "txHash": "0xf793cf4140f27e5e7352e8f5696fd738cec20ddd4c94666cd7902dd24a20d0cf",
      "kind": "transparent"
    },
    {
      "address": "0x4FBA5e90C941a9768419b5F6BCa773c07565a69a",
      "txHash": "0x0d000790f125908416275095f8cb741aee7fcf1ae2627bf7d52aa05e3a8badd4",
      "kind": "transparent"
    },
    {
      "address": "0xE32415E26271baF8CB1a4099bd1A697859bA90A9",
      "txHash": "0x0dee6482905e839b2876df93665526cae0038cb25b30dc99ba76db600ab588c2",
      "kind": "transparent"
    },
    {
      "address": "0x9c27C2c793E88159D67aDe28696cD265b9F1864F",
      "txHash": "0x52c58ee9fa36ff580571c14e31d6aea3dac421d669eaff6bbf84d035f2c2ad29",
      "kind": "transparent"
    },
    {
      "address": "0x65c4690cc135ce2F251360c5BB9D1c8398D7E51f",
      "txHash": "0x6ecc983bdd91171d25f3d4a98edfc513fd788a7ff1e160779e3cb9d1481e6084",
      "kind": "transparent"
    },
    {
      "address": "0x61447a886F7134d91AaA4012f36da0c3717B1ae4",
      "txHash": "0x3d269d495c91f2dedce328624b1b9154c4bcd6bafd0421995232000d154f6cba",
      "kind": "transparent"
    },
    {
      "address": "0x1e607CE877AfAb74D3C72363D931e9f190b498b8",
      "txHash": "0xce93f8dccd878193ad78045f539ca1da12e63548d43addafa103e7350903eccd",
      "kind": "transparent"
    },
    {
      "address": "0xE3041fddEAd3CB8E4E04aA63d4B32eB5182A3fF6",
      "txHash": "0xdad8855c6944ae860cba9c3b1e28d7f142316e482d56f1122a9e073c0fa505f9",
      "kind": "transparent"
    },
    {
      "address": "0x85F0216db6015dE5E72F69ef6808578b60104550",
      "txHash": "0xead57d565c26888a77e8b0d32bd77406266451a08c4bb13c2eb07f94df2103c5",
      "kind": "transparent"
    },
    {
      "address": "0xB8aeD4052030B101e3Ba9B9052fbD538CaFEf2E9",
      "txHash": "0x86a6e478a07af1baa9a2bb5c95ebf03771a2f1b3d7ddbd0f7b5f635b0e8f8ae1",
      "kind": "transparent"
    },
    {
      "address": "0x9f8202a03B642516bae96AceB327AfA32efa6dF8",
      "txHash": "0x30e375b792f8558d17dedc2c482140708c10e81570212fecab0b05c8e28469cc",
      "kind": "transparent"
    },
    {
      "address": "0x2689374b457A0A16Dc25ae0c29B9EFB555cFcd31",
      "txHash": "0x70b3a7817cf140193b1ecef598d36d235642ef9374388d667962f8fa04c8e402",
      "kind": "transparent"
    },
    {
      "address": "0x7324B6962d8047D359608664606DCEC12395a9E1",
      "txHash": "0xfc7cb9ee4897ab4576172b52c3b3f8e5151bbfaaf3095f5d8e7520feb72159f5",
      "kind": "transparent"
    },
    {
      "address": "0x247Fd2C6c16cD05d73e7a908065809A8E8a14d94",
      "txHash": "0x4e2bcc2f037ae7a095a1b7ddc71ca85fee504ac51b7748997448014c016cdb8d",
      "kind": "transparent"
    },
    {
      "address": "0xDB0771d44906E5406e0a91Aa6451aAd00aD911C0",
      "txHash": "0xa11375eea1cd1e381085999f5015c6f970f33fbb07df053054c6083caede8e4b",
      "kind": "transparent"
    },
    {
      "address": "0x5C258c784363502227b28479a22D257E924e5C2d",
      "txHash": "0xf9f07388deece2db7623093e6ad3f5a4796281d6fbdc31e3eb27517042558af8",
      "kind": "transparent"
    },
    {
      "address": "0x8241A84f50925D98B1a8385d0fA7E1d523A26C24",
      "txHash": "0xf68b86e797e2673030df66505b4dd38d4ee3b36e645ca6612884172a5d060e6c",
      "kind": "transparent"
    },
    {
      "address": "0x02243b7c7818D0b9ccb57625182800ce2a116101",
      "txHash": "0x09de212f54560000d3a935bd78388025dc8118d8bc8d9bbbd6a4e6883c1987b8",
      "kind": "transparent"
    },
    {
      "address": "0x473B5CA3C51FE5FE746fFaD257B0ee35f6A690A9",
      "txHash": "0xb74eabc5c6a220cca0ce08969cb17699bddc9ce569df6c1a21c8320bf17f4fa1",
      "kind": "transparent"
    },
    {
      "address": "0xcdC5f898966Eff938Fda0A4642d8F8E171a08835",
      "txHash": "0x43470c1de2dea74657ca07f4f7206c802e8eeafcdfc52b97f2c020c337145d63",
      "kind": "transparent"
    },
    {
      "address": "0x0aE8381Dd4950577427Db5a1411d163ABD17d9bE",
      "txHash": "0xbfcf1f0d6a7e96d12e4bcfce47bdb44a006409e8a171579258ef79e40fe8249f",
      "kind": "transparent"
    },
    {
      "address": "0x81255Fc56b3a4773BC5a2cD71b0D97fE0Ed758A9",
      "txHash": "0x04408e54bd8ba6a5bbd6bd4bf09feef29a4b4385bd832b90ec6d8723b425d84d",
      "kind": "transparent"
    },
    {
      "address": "0x81A174F9943D3B3904b54bAA2c1DE6063b3cedA8",
      "txHash": "0x97908bf81c34455c1f28469475975e7b49c6299c24cf94a9e032527afb834719",
      "kind": "transparent"
    },
    {
      "address": "0x682C3bf7a0F3DE0c93ceA40825511f2b43aB3165",
      "txHash": "0x2c13b7aef75b4bfaa348f90f70da2cbe0e6a3fb0600d097f6643a211f99fa163",
      "kind": "transparent"
    },
    {
      "address": "0x7e1fE00D71d6Cb24AAE020C471421fAd6EAC9F0C",
      "txHash": "0x7d7a674b1fffb86bffe3ed7007eb9e7c188ef42829d302d9879f8d57cdc19da7",
      "kind": "transparent"
    },
    {
      "address": "0x603473AbeFEDDbFd9579379B85F8b01853CC3947",
      "txHash": "0x4acc9919d6288aae7073af6b52e3d83764da8a3fbc657a4f7d168d6e99e0e323",
      "kind": "transparent"
    },
    {
      "address": "0xC96963aA9dC8d9cb0455F2E14015629e4C79d524",
      "txHash": "0xca57b89655ea40bc8821f114b6bc1e29745e355443398a4e39a1b2d0360387c5",
      "kind": "transparent"
    },
    {
      "address": "0xeB5e5cFbFB4eA12fC8866E9446B547B048c0063e",
      "txHash": "0xb966724284fde5ac134e51082186f7f20b4a89e565a0fb738fca8a1cf22cd2ab",
      "kind": "transparent"
    },
    {
      "address": "0xb39F2605861232ee0aEE3a245c557A623808453E",
      "txHash": "0xaee425f16ff79335ef3bb39d09dc9df0e13d17c94aaed26b356b117b405e2200",
      "kind": "transparent"
    },
    {
      "address": "0x29D0199d62977B6d5757828dB4B831975044a66D",
      "txHash": "0x7748774f45bbe95ea837a369821a5e072579995b82e0106d52bb795490eeeba7",
      "kind": "transparent"
    },
    {
      "address": "0x09edA18471Cfa1F073575c715BD724a70809A418",
      "txHash": "0x9e2d338b86148ccf14356abed6d29ed87962164171dbfc5df1c4cb44bc6c3f31",
      "kind": "transparent"
    },
    {
      "address": "0xd06f2628C6EE321E2dCA9aA461243d5C5Cda91b6",
      "txHash": "0xa85330354f5c10193a04dc6993f7e05117a153a03da69d2c7fc2c4a337e92612",
      "kind": "transparent"
    },
    {
      "address": "0xf9F4D84d2fCad6718B2278D07Dd0A75976d0983B",
      "txHash": "0xf445f390c52e29fb6a866c331c4c945693d6bca1780e1aa9a2b949707c194a91",
      "kind": "transparent"
    },
    {
      "address": "0xc66Aee957d6A1fC42b5B828c2d985BB8660632a4",
      "txHash": "0x30da7fbd2f5a99aa8011165f14a42119313fb55df4e988b205f602953ee4bd2f",
      "kind": "transparent"
    },
    {
      "address": "0x9DABCEA40a3C0fAE89d2A3305aBC0FB196917689",
      "txHash": "0x462344a8f67a93ca8167197652439003749384789de688a3dedc9ab2e4e0e1ed",
      "kind": "transparent"
    },
    {
      "address": "0x7Ed8BF38232F44550f2e699FF7735C14d87b851e",
      "txHash": "0x1158a03d09c1162ebf83a81e525c441cbf4081c391e572ad454b189d3f19ae8a",
      "kind": "transparent"
    },
    {
      "address": "0x86C7597bB07DdF8994D94688102FDAd48616030d",
      "txHash": "0x30564113a629c531257f9f489ffb7dde355de0e080f4eddd6297576a81043db6",
      "kind": "transparent"
    },
    {
      "address": "0x3cfd0Da971347f4143887D9892cc403a98B97d4a",
      "txHash": "0x303dce37fe991107b2ed4681b6cc4ec83b6eb81ec4d7b5ae1776a871a170dc5b",
      "kind": "transparent"
    },
    {
      "address": "0x6695488c611C1EcD38afF5409316F55e99661cCd",
      "txHash": "0x3aab5af5458deb5960f6c595e169c08233ebd1c2f3175988d7381f1c40a65533",
      "kind": "transparent"
    },
    {
      "address": "0x2CA8A5d242937B07a859eF53e1e644dDAa69C0FB",
      "txHash": "0xc77423f642a36bce191e104ca5468f9dcc6fd8ebb02a006f64599f321c4e3c0a",
      "kind": "transparent"
    },
    {
      "address": "0x8FE0e2549E5ff234Ad776a296320D8b02e375D89",
      "txHash": "0xc628916db46989a8c987d39182fd425145842fdb969018662d125d6a338d005c",
      "kind": "transparent"
    },
    {
      "address": "0x80ddC0af089fEAF95FC54011b504623cecF0fECa",
      "txHash": "0xab94d3eddbc8d088472843f90bc73c103496ac14f32c1dbaea4673a335393510",
      "kind": "transparent"
    },
    {
      "address": "0xA9BD53b924A4C8e4fBC6FFBf5e3EAc49795D4383",
      "txHash": "0xfcf2c67b3d82f02a2169faa14a6c441966e1db48e69954eebafe775be6128ef0",
      "kind": "transparent"
    },
    {
      "address": "0xBa601e80E0D8522d70BE1e21b183534C79aA6FC8",
      "txHash": "0xce999848686e23de244663739f10b67ad98e94ca259b8962caf9f26dce7378e2",
      "kind": "transparent"
    },
    {
      "address": "0x321fb5088699C62d5dc10478d7b7cD7368e49180",
      "txHash": "0x6a64e15c6843efb212507fe6624a0a404cd87a2fa7a29fd60a27f14f2a20cc73",
      "kind": "transparent"
    },
    {
      "address": "0x7c19d42f6DAD61BbCeaC6351622d6E686DE59f87",
      "txHash": "0x0ef6203e52d0650e653c98d2de8f5b689e50718ef7c5d9159fb4905bc636cf14",
      "kind": "transparent"
    },
    {
      "address": "0xeA92FCE587f3Aabb48D6C4f98756A6F6eC44F109",
      "txHash": "0x2588629c5dfd04034c2eb71a8aed82f3cb372a633cc3e7a547d6f00198224e28",
      "kind": "transparent"
    },
    {
      "address": "0x2bCF6C8a2F807fD034182b5c79017E454c7eFA36",
      "txHash": "0x6749d9f8f0724d36d0b5b9787d1f973603df8d9bd7878fff4ea3a48418716866",
      "kind": "transparent"
    },
    {
      "address": "0x4827b9CA8F56bF78c0D33189c42255607D972f19",
      "txHash": "0x530b09b9e833c0e925ec3395afc8f3d127fc35e38c79c62332fab96f6c49f837",
      "kind": "transparent"
    },
    {
      "address": "0x783C0DCe90896eE6785AbB753e35f75535227fF4",
      "txHash": "0x7299b7c70c85648bb54a658b86c94165b129a4bfe64445e3ca3c674e95efd11f",
      "kind": "transparent"
    },
    {
      "address": "0x77a7F4cCA535f1cD9ae1c44DF7121d297d2C0A0d",
      "txHash": "0x9068d17c2b01641d6e81e937184e79a668313eee15e6690ff5fcd0adc8de3e32",
      "kind": "transparent"
    },
    {
      "address": "0x70Ef5B6688068D266F5CB64704f52cB3a10c7DB0",
      "txHash": "0x07c26122ccfc4d897dfb87860afa655606149d2180cda1450910d70f0b349fac",
      "kind": "transparent"
    },
    {
      "address": "0xF680D32017e63e7eE302e603560Df5c9B2A538E8",
      "txHash": "0x1fd2b4110db2fde2b0e6299f9546965ca46a3367d4773025fe6eb789b0a34907",
      "kind": "transparent"
    },
    {
      "address": "0x4Cf957A52DC3177877fCCcf164632a1c904587D3",
      "txHash": "0x5b78f3ed32fb81b152eec9c78a429050ae98b95c6b6d795ba701b3aff36b9420",
      "kind": "transparent"
    },
    {
      "address": "0x450c02B64b45B9d54D46bd527088B80De4108e6d",
      "txHash": "0xf565e286ca16b41227cdb3ed8037365f66c0a3e51bbc8f2158b4286a2e632cd9",
      "kind": "transparent"
    },
    {
      "address": "0x36Ec40440642A30eC70EE0f42765e926E3191aA1",
      "txHash": "0xa112e294dee9bac9009c919329209e950a8a71a267846aef8a26133a36f3fda6",
      "kind": "transparent"
    },
    {
      "address": "0x8b5a913a7344bADA79f39c542d2E22a7d845626D",
      "txHash": "0xef5a1f0154c28647bbde318ae2a580ef2a6c2a11217dc00bd38f2491cc7fa5d2",
      "kind": "transparent"
    },
    {
      "address": "0xB7d8BcD58d97981e7f6Bb1A10C4391A1aA45c217",
      "txHash": "0xd15a5fb8797feb9e393d841f08cd84d2f9e2e310268ac7881a629d69ee605d38",
      "kind": "transparent"
    },
    {
      "address": "0x4c6a70C903C64e3d4dC442D650c7DC3a78BE7272",
      "txHash": "0xa95405b42265a1124407e4388709d901065b0719e13285bc5d12bc3b1bb88353",
      "kind": "transparent"
    },
    {
      "address": "0x75be5A31a682AD1075eE57db22B8D03231F6783C",
      "txHash": "0x075c3d85990aa931dbac60ecfb106b77cbb7bb22ecfb23e4d571cd7cf88fa548",
      "kind": "transparent"
    },
    {
      "address": "0x668fE3cC775F489f96E39Cf44da039Bb0B8809c3",
      "txHash": "0x73a29d4db69841a7804775f05763fbdcb87e0692ef7807395216d031b0854543",
      "kind": "transparent"
    },
    {
      "address": "0x79a64Af007Ad733BfaB5a781c547c2d267D9211F",
      "txHash": "0x4c51d65f0f85dc716f95651a20c362ce160784f5d82d53bef63f27b334fa3f33",
      "kind": "transparent"
    },
    {
      "address": "0x7839Ab61C6ABDbaC2D8c674ACfC053417A102b31",
      "txHash": "0x7f0267f09f3b07323725281f91f1e2ffd2816b9975806ef0947a5c2e5fedbfcf",
      "kind": "transparent"
    },
    {
      "address": "0x8674D96bC53b667Be1B079E8c2B1398e2bb55048",
      "txHash": "0x5b3ce0c0e5bd8d6c42a37185b3295d2815323b8005aa1b21465b419efc544b4e",
      "kind": "transparent"
    },
    {
      "address": "0xdAFA2778c3eC407DF93B14037aC40c0839EEbFd1",
      "txHash": "0xd51729ccf237bc38b57924a3d5ef3a72baaae3267bf711b9f369e3939e842824",
      "kind": "transparent"
    },
    {
      "address": "0xa4bF177AfeC20e4C58Aa011AF13775240c2E3402",
      "txHash": "0x66a5dc4259259359db1dc331c0dcc1a5209fa0069a436c532859b05da7fd7487",
      "kind": "transparent"
    },
    {
      "address": "0x737C9312bB98Cd7fd9DFddA2Ac4F28375A384F00",
      "txHash": "0x959b3ad7cbdec3d666f4926459162231ada453da385509dbb22b7ded9790ddd1",
      "kind": "transparent"
    },
    {
      "address": "0xBAB826380EDa59a01895310287A77f618DaA9b57",
      "txHash": "0xf3e5e302f7aa76fce92d13f76d6998caf28e7238bf186a72fac04d667d7fa15d",
      "kind": "transparent"
    },
    {
      "address": "0xE1418393AfccD3Db928103C16770684ee5BE17a9",
      "txHash": "0x1fc4a48c5f968df1edfad341897dee4b26960edb9caeeeba20000d9addedf9e3",
      "kind": "transparent"
    },
    {
      "address": "0x82e58158Fc9bb6aa8510d80708d504C8e96ac7ad",
      "txHash": "0x1100e20b5817b922bd0bc954bb1fc75ebc24ae96ff8846aae17200e83f9b74b2",
      "kind": "transparent"
    },
    {
      "address": "0x403b049362426dfD587A066d1e64f403dFa68fbc",
      "txHash": "0x057c54daa028d3a3a2b403aa38fec5b104dfbcdb1d2bc616467604c5d43704e7",
      "kind": "transparent"
    },
    {
      "address": "0x3B412326aF96B44230A3b990521F21811D3F5552",
      "txHash": "0xad65184a94b4cf12ff04744b59293d745b3fdfcf32290d91fe067afdfc084215",
      "kind": "transparent"
    },
    {
      "address": "0xC9a7B8678cC7484A5c421eAc982B22CfCcaB79C1",
      "txHash": "0x794aa3bcf3ed8cb2a646f1b50b3a32f82b3d43655e0407701257076f57f2786c",
      "kind": "transparent"
    },
    {
      "address": "0x97Fa5D2657be3BBEE8B869dc3362F4478A019d36",
      "txHash": "0xf2b06d41e1196ab5a98e46ee1c1eb777b1c489e7e43f0fc18a7978c3b9400cfd",
      "kind": "transparent"
    },
    {
      "address": "0x5537Ac0580b7389EB2B974AF96C3521c227c70f6",
      "txHash": "0x60912ea65d982afb7bca73dad99ab529b7472e2315ea55fe3dd93ecf7479eb47",
      "kind": "transparent"
    },
    {
      "address": "0xf4557d91c6a44E1a65e562780bAB3396DA25bC7f",
      "txHash": "0x957dc09f5939c6e9c45226ac8adfe4e92e9a2323bd1a4083678d3826e7b07df5",
      "kind": "transparent"
    },
    {
      "address": "0x0e2A539854584430E58221d302245E32F51d96f5",
      "txHash": "0xa42a028a0f0c1d6a7a0680a29ac4691557d82feb0ef8f465f6e2b270e61d0180",
      "kind": "transparent"
    },
    {
      "address": "0x5fFBf3C58C3E2dE3EAC0C84aF43D4d5C1F6467Ec",
      "txHash": "0x7d017d5ed68a10463060929d139c4288256576b03e821e908aca420118265533",
      "kind": "transparent"
    },
    {
      "address": "0x697DBE9976F3cD199a218144e752DbAD28e69dD5",
      "txHash": "0x13ece35bfe13bdc71f55ff7b3477a5b431526978b36d1a96916aec4051b34637",
      "kind": "transparent"
    },
    {
      "address": "0xd0A22681fdD6b840EFB3432976737e71C58d2E28",
      "txHash": "0x3b56fa7fc6435cfd2b12280ea9bb44280d9c4c7f588df446353ab5f7e04a4c52",
      "kind": "transparent"
    },
    {
      "address": "0x1A2B3d9b8D1B991c97f526DB3B3c921f8513802d",
      "txHash": "0x1e127cbab81980c1680de71f8e3855d901156845cd6eb58be8f0e86a86163e27",
      "kind": "transparent"
    },
    {
      "address": "0x53eF876183872f6A0A87F33207824c6f7D57f51D",
      "txHash": "0x9e687b12282ffecb02aba107754220c5b40349417ba66b2db04af88425c2a2af",
      "kind": "transparent"
    },
    {
      "address": "0x201fD62D472Ed64274aDDa35B045a4bD8663EEa8",
      "txHash": "0x162d46318344c6e1048bd7264e943d65a557d84b9c03c1e644cd8b790aee6580",
      "kind": "transparent"
    },
    {
      "address": "0xd169ADD43a26CA522AcbFB55A57AeCa719309F09",
      "txHash": "0xc07a42706410e7d31ab78645117788992d72403b24084587b2e4cff1d9d3f1dc",
      "kind": "transparent"
    },
    {
      "address": "0xee612c361CDbCa83fF416da2EC159402E1A9fc05",
      "txHash": "0x388b9644e7ae82502a4125f7745dd347d93bf9821f037aa439fa5c90553788b8",
      "kind": "transparent"
    },
    {
      "address": "0x9B72875a2096B5F45e6292cb22E7D3ed7F72d76d",
      "txHash": "0x4b9c4b0212dd48d83ae7f20bcccdb5db4f4cd744e6746022a11eb70cd5ed0c6a",
      "kind": "transparent"
    },
    {
      "address": "0xb5B7D70CE131c9A24D30C16636E849c08E7E4d9b",
      "txHash": "0x6801d88785b2fa7762f16070c0efd3c85232c84e50b0d16e69be78e6a038bd77",
      "kind": "transparent"
    },
    {
      "address": "0xBd39e9505a61c36F4BD2f7E76306Df2991AF8019",
      "txHash": "0x06abf5f2d6c2e92864d1d51db32c3c5bf88de12d8616c0e2e2756e6875ad660a",
      "kind": "transparent"
    },
    {
      "address": "0x5C402Bf362f1B7f7f47fe0ccd96060141ca971fA",
      "txHash": "0x6df4a7872974732f7b788a84c7db130f03801f907794b10c4f4225d2b0a3c8d4",
      "kind": "transparent"
    },
    {
      "address": "0x4CcDA3F92049c40B5891cF09098DCbA2d5B64b40",
      "txHash": "0xd96ee25d4ed28036cf945d80d6cda797e6159fd59a6e2d0e5e4dfd5c6204da9d",
      "kind": "transparent"
    },
    {
      "address": "0xfd70998A58660d6C9E4199aE32A3779e860f8131",
      "txHash": "0x7a455830761c02f6cdf86726c7fb8614ce927db4198ae4a07cc3a0ef43456658",
      "kind": "transparent"
    },
    {
      "address": "0xd893aE324Ed5FFEE98Fe1FdED847473ec25458c7",
      "txHash": "0xbc0cf0b77ef92cadd0f7d2e57e70273fcebf21f12e7ba713efe2b1ce656cd07e",
      "kind": "transparent"
    },
    {
      "address": "0x7A09aE96f13e21bd2fd1F2d0eAb787E87055f7EF",
      "txHash": "0xdde886ad773f14c18ff0b23db0117903c5055be73bebb830db8ea20af82a4ba5",
      "kind": "transparent"
    },
    {
      "address": "0x0Ae01DE5fF80b615483836130dF943DF43C59515",
      "txHash": "0x43d4b381760b3f2d9b41dfa2d1685a281361c8f0e145904dc0ca4de269580bd8",
      "kind": "transparent"
    },
    {
      "address": "0x168d715468CE36890BdaA76088279A3D64504b8E",
      "txHash": "0x7e20a6e12665765a6f8559036b114325d8b610c585ef8089c5544c716d496725",
      "kind": "transparent"
    },
    {
      "address": "0x7D5fc9000Dbb81A1Ccbc09199f28f2ae57c22e50",
      "txHash": "0xdcb504a91c9fd08699f2944146984181824edd497adf717abab91826bfac0403",
      "kind": "transparent"
    },
    {
      "address": "0xaF635953a014c0b3645c96077a69fb8fbed634d8",
      "txHash": "0x8a40728f814b1eb27091998e28b3f9321cbdf0cd02f132d92545f930fecbc4fe",
      "kind": "transparent"
    },
    {
      "address": "0x7123f7BC4c0fa7F182BD6709e9dbC5841e2A127c",
      "txHash": "0x67ba211b156ccad9fe34658bb3b02ba423fb34fe7872ba784f8c78b4f3f7bc48",
      "kind": "transparent"
    },
    {
      "address": "0x88D5A1fC93c70c2098235913B9aE526cf34a9771",
      "txHash": "0x3cb3b492f4b0a86579f7b1c2b150f2b3ea3fd0a97b2f8377c1bb267067b9fe24",
      "kind": "transparent"
    },
    {
      "address": "0x739C47d05324F23eB24Cf7E4EC5F4a5592ae1946",
      "txHash": "0x331cac5efff72c17407a127ef431defa494797978c693abcba1134b186142362",
      "kind": "transparent"
    },
    {
      "address": "0xE1842DA46D5D0fD6Ce88F729E7Bb2CeFb4f7d89B",
      "txHash": "0x66ebfffffd997f68c8c36250c77cb5c2b3ebd08501262f5c2cba1ef62aee807e",
      "kind": "transparent"
    },
    {
      "address": "0x6b4E5DAbF3C15F05940DfE2c50143ffC24cb7444",
      "txHash": "0x203c79609d95600148d2c923b15d940ba7660a35c3371606e21fc0d0c3f049a7",
      "kind": "transparent"
    },
    {
      "address": "0x692E7296677031F196c9C3c8F9138cA665aeF324",
      "txHash": "0x5af3ee23ce7c9b2ca3b1ac766fff2d30c76fed454fb2bab3bcb702cbe2205654",
      "kind": "transparent"
    },
    {
      "address": "0xc55134352Bcb2896fACB46DF35f131EF3C45DAD6",
      "txHash": "0xa3d58f2231316d1982c905671b082116c09099bd0979c6d8dc6174e4937b1b5a",
      "kind": "transparent"
    },
    {
      "address": "0xaa77D70Ac12e297810C6C0F894A2c93B4fF327F7",
      "txHash": "0xb6f2e1a3567b38af568fa878d30c37f1b624e596ecbcfa65507054881a7dde54",
      "kind": "transparent"
    },
    {
      "address": "0x0Ff80A37a8b669c33d54210A4BaeC000Bb03f6D7",
      "txHash": "0xf7cd5afde83ef5618aee52bb2a27cbcc14ec2f3b1000305e52ad530361c8728c",
      "kind": "transparent"
    },
    {
      "address": "0xB0E9a6e1B77515Cef456671F19aAf3769e2f4D94",
      "txHash": "0xebbcb981991c6d9aa79740885866ee36a15d7f75b7aa545e803e402fccff3a40",
      "kind": "transparent"
    },
    {
      "address": "0x557e64a92603E1bd71A88B849318b79dcBd8981A",
      "txHash": "0x2cf1cd85dfab84d67425c9dba7af34d1a24c89385b44e08f420bc177c2a2e617",
      "kind": "transparent"
    },
    {
      "address": "0x1FD5201a7c57a11c527690DD1030e851C91534F0",
      "txHash": "0xdcb0b7d77216dbea32d42b7e9c41bd5667afbeb4da314152a102a80a66855203",
      "kind": "transparent"
    },
    {
      "address": "0xab601EdEF0756Aae66A5CFECe5233Ac390D10Fb1",
      "txHash": "0x4dfab67c914937bbdf8f9328c1756aec92771f7ff4e68b07e96663ed2edd63b4",
      "kind": "transparent"
    },
    {
      "address": "0x626A8e474569CB05C3E93Daa7D61F48579c6e22e",
      "txHash": "0x0b583ada51b7a9a4aa288638fe225e64846467a8b37693cedd1aeb655116a369",
      "kind": "transparent"
    },
    {
      "address": "0x6957F4361C0a1F7c960A563A09E4D5Fa8A87d198",
      "txHash": "0xf50506c519f90660ac3e78db7d212ed89d0f08e8a60194b66e60b97627f372a2",
      "kind": "transparent"
    },
    {
      "address": "0x557b8241A46F02483419d57F5a4E2c9687fF1a62",
      "txHash": "0xdbe339fe8378bf834df2aa4873983cae0c091e7977209d767a324f1f5b331574",
      "kind": "transparent"
    },
    {
      "address": "0x180f4432777a500126719642Ae14F4a56B35BdD3",
      "txHash": "0xb8dd8a43e979c31114b519c1489d1dae542b28313d7327005955af5f929d4109",
      "kind": "transparent"
    },
    {
      "address": "0xcd307062990F742152525807Beab7b08fa7893D1",
      "txHash": "0x7d70c1107b09ba94e10709e6d41345f6b42dcf793717234486bee9594cfe7dfb",
      "kind": "transparent"
    },
    {
      "address": "0x2b32b7A87fc10d8157AaCe6513b20F5BCae4d38B",
      "txHash": "0x85a99c6008ebc643548828d812b7f73ce7cf3b094cc13630571678ba6dadbf4b",
      "kind": "transparent"
    },
    {
      "address": "0xa01ffaF7bc77201C9601E1894aefA9Ae80344ccb",
      "txHash": "0x8d3eacb1c98c7556cc85a56f4415c92415d5f462640f72cc802ae2d9a3a02f5e",
      "kind": "transparent"
    },
    {
      "address": "0x035bae9A817014cd8FbC3DABcf1fC1E2A804111d",
      "txHash": "0x6ffc749f40f3f212e5dc7be63e887f3128617151095bdeaa0e0d010311aecc72",
      "kind": "transparent"
    },
    {
      "address": "0x934BCA43Ee1733d82829c339575c37D26026C19C",
      "txHash": "0xecb68b43cd9828725797cdf121c7fbfcdc818f595cbe7f4c28ed5c778afa6073",
      "kind": "transparent"
    },
    {
      "address": "0x8bdE27386D4CaE5B7eE64890Fa51D57D6aF00d25",
      "txHash": "0x526a9a6b9f764d36de8df999b77bd3a1b1d0565dadc2851d51e184f7e6fc6c3d",
      "kind": "transparent"
    },
    {
      "address": "0xbAFd565895A0aD04A11582D193f07eddE25a07CB",
      "txHash": "0x96f73105b35dcf78c411ccee4c8976631dbdbb01e7cf96b66106773556b77c9f",
      "kind": "transparent"
    },
    {
      "address": "0xf898f6EB3790C3b1049f6A663A111F1C268D9b9b",
      "txHash": "0xd5f0e048645a6c956eefe96bd9400449efb878cbd7e3666dc6eabd7a03f0addf",
      "kind": "transparent"
    },
    {
      "address": "0x534b8F8Fa4b89c64eC55220D8b67AdecFDa51Ce3",
      "txHash": "0xbb78c79c3912828db1bef806ab9eca46b4350f65564c9e8dbb2c1a47c9e4a5f2",
      "kind": "transparent"
    },
    {
      "address": "0xC51BDd11dB76992c36d84C71574E2Fa2001Cf923",
      "txHash": "0xaabf0885501a8b4e9389821d9b50b68b2ebda786b33d0f10d6bd597dcb8abba3",
      "kind": "transparent"
    },
    {
      "address": "0xC6886ee86CFDa6A7125E3B8c295d2123c3A08E63",
      "txHash": "0x40cce0b1d9498f4ac803dd0f77227bf3ef8dbed144fdf24f77dcc3409b78db93",
      "kind": "transparent"
    },
    {
      "address": "0x4b96Ae657033e0c2464ccbBFDbAc3516fF13A804",
      "txHash": "0xf750ad863dd69dddafd9049581bf775d86700029371818d4c130ff31eeb5aca5",
      "kind": "transparent"
    },
    {
      "address": "0x926adc8A3dD6F49AE4d5a04FF44D9Fa9A897C2a2",
      "txHash": "0xf621755a7fe315c597d573bd6727d48f1fc84051cd75c87799d947eba2068311",
      "kind": "transparent"
    },
    {
      "address": "0x37CBC508a28b06AEf4E14A141787e7AEEEe34bB4",
      "txHash": "0x272514460067edb128c6a2a2c03d42cb2be02c7fdd49660c80231ebadef18607",
      "kind": "transparent"
    },
    {
      "address": "0x5fA70d6Aea04125E3ddAAAdBEA25c48d6A34C69a",
      "txHash": "0xb35476adc1dae805846ac13ee34f98d4f13184f8b6b4ba1592605e3f90b3cdae",
      "kind": "transparent"
    },
    {
      "address": "0xAda37F8e3B6F5977Ad7AA156d1FAa318EB3D0293",
      "txHash": "0xe31184584bddcf8fbe741f31acd9c8d23a50fa62b0b9625c9eac5ce6e495e938",
      "kind": "transparent"
    },
    {
      "address": "0x02a0157dd2938A48337C805300f32D1B91aD0D1D",
      "txHash": "0x0f4bcc5bf33096bfdbe85f177fe51d6c53ebe955c03a3ef61ba882972060e6de",
      "kind": "transparent"
    },
    {
      "address": "0x42141B60B6075aB2c45395b13B7f53E92a88BCe7",
      "txHash": "0xf5bb283ab0359c990965f21f5e086cef5cdb0c1f81f26ef6ae7909a2cd0aa431",
      "kind": "transparent"
    },
    {
      "address": "0xE384EA3fCdA250B0a5930C5A45eDE72EC3596903",
      "txHash": "0xa25f0b2fde623a604f6e6a9b25e11a77ade13087b11147d334374198f5dbdff7",
      "kind": "transparent"
    },
    {
      "address": "0x0F70ae03554520527161aD9b9168b9E79a3E65c8",
      "txHash": "0xa0e01186e8e1db23b88922805a9375969e96baf2eaadef6a954bd9cdc91855be",
      "kind": "transparent"
    },
    {
      "address": "0xda060A88cee72ceF63D508f70fF2b15D29A5b293",
      "txHash": "0x0bc6b5030c636c7bedf0114ae5530aef13a57bd66369a866d6eeb35fab1da16f",
      "kind": "transparent"
    },
    {
      "address": "0x20ea305E330E27502ceA37c66fc49581Ac3AE20E",
      "txHash": "0x042d7dac97372fa0a75fc15ce574bf06adfae9155f9fa2d479af7f68720fcf7a",
      "kind": "transparent"
    },
    {
      "address": "0xB2E14B702315536cE42FfD6BF59ebcf051Ef7bFa",
      "txHash": "0xe36ac9c668a6c28c52c9b94111cad061d03b393f1563c93551aaa902d333ca56",
      "kind": "transparent"
    },
    {
      "address": "0x9dd59445F47175347736C2490d4F8a6d1E76a5Da",
      "txHash": "0xd2b2c0517fee4eb1972fb09123d9fdc2b41f5af93053d743d77c5a2d61e12ecd",
      "kind": "transparent"
    },
    {
      "address": "0x12c77be2cD0103aa41d3A05a027Ed48aa6582f7A",
      "txHash": "0xbf671f04ed9b430d25db4ef085e571bd34a1c0782894c97605bcae9a19413813",
      "kind": "transparent"
    },
    {
      "address": "0xA3913B0afE00a94f5d1f3290b2570ba11c659Ff9",
      "txHash": "0xd9feb36d62b15fb427d3ce6c492895e342783fc5297d194c6ecd08801c3002ba",
      "kind": "transparent"
    },
    {
      "address": "0x58d3bFCF248f5c39BdE5C54f3B243D58A9442ED4",
      "txHash": "0x97303609eadbbac39ee141f487168082532c8113f7929dd2a4ff5cf5347ed325",
      "kind": "transparent"
    },
    {
      "address": "0x3c05478ffd9dDc83869E856B90f181B8D098f2cc",
      "txHash": "0x761235aa1695f1914a4a1f4cfeab6b4fef0dd5731ad9ab8205de3e99e45b6730",
      "kind": "transparent"
    },
    {
      "address": "0xbE48847c914FbF3fb0A8064467046a96FEb919E6",
      "txHash": "0x36f17b12eda2a400933c2049b8918916fdcd9ae105013d06a31f4a24cf00300a",
      "kind": "transparent"
    },
    {
      "address": "0x7F9a0b5Cb895D4A0e41Ce579164304F1Db6264ab",
      "txHash": "0xb565ed70aa0225d1998a69e2abcd8caa8d82e3958cc216a5ac57f96fffd0181f",
      "kind": "transparent"
    },
    {
      "address": "0xE9181555e248dAf3007562fe19f8c8449897fa6C",
      "txHash": "0x790fc64eb58be156b2f5930eabbde3aff69e256907c74df6d3f1f68d65fba8e7",
      "kind": "transparent"
    },
    {
      "address": "0x0A3C91608a32569AA48488a0085983776F4Cf125",
      "txHash": "0xaa1c48d91429b24e3df3f34c4d6d6c7b8427086026ed510c4111e82fc5e46f7c",
      "kind": "transparent"
    },
    {
      "address": "0x24338ea634098AcA94bD294fe209820153135B04",
      "txHash": "0x6c8b0fa68a0af77f3b79e8f224b36fb03ac6060229e2dfcee4596b75b284a59e",
      "kind": "transparent"
    },
    {
      "address": "0x7Ac578FDC6F6046Ed833D0EB5C746a76Ad6250F1",
      "txHash": "0x216784f2c6c42c51237f61ad57ca317be50a9c16d0aefeb6c38baa77b62cf22d",
      "kind": "transparent"
    },
    {
      "address": "0x51863179f0f22130c57315798478DEaB5952F2F9",
      "txHash": "0x7936a19f6c7b30b4face8457100b65b6449eb691178a3292edf643a4236b392e",
      "kind": "transparent"
    },
    {
      "address": "0xefA33312517d6815D6dc8DeDD36F63E059f50bf8",
      "txHash": "0x5675c05c771fbd5b2e80a6bb5c35308304e8ddac52a62119a107b1c0549c4b59",
      "kind": "transparent"
    },
    {
      "address": "0x001e0397486DAd6Bd345630162973728A4F00C1d",
      "txHash": "0xbfc255afa351114da13874da22f3df45dcef4897593809b67b6f8bcd34d99bea",
      "kind": "transparent"
    },
    {
      "address": "0x6E46ddcCBfe89F60600884a02AFA4d37cd2cc427",
      "txHash": "0xb54c90c3269b15803b1086131516e1102821bd19e163cad47f4a8bf3e4fae7e9",
      "kind": "transparent"
    },
    {
      "address": "0x8046fBdb41cd7f3DDA5BEa4D35811293Aba151ad",
      "txHash": "0xacdfe1a77a32850365f5cc25c3862b27af09e53ece21c7c3b32156681db135d9",
      "kind": "transparent"
    },
    {
      "address": "0x242c159cEA084C404Fa083D7DA29a7BBCbe16FEe",
      "txHash": "0xa3a3d01b947dde0009c8a214f717e14c0745f886903dfde23cfb7da368d30838",
      "kind": "transparent"
    },
    {
      "address": "0x8006541e8181fb1C2b9FC348726fD52c3C382eeF",
      "txHash": "0xe11196b4ee7786530653ec206efb594848930989aa54cbc8f39290d394d5052a",
      "kind": "transparent"
    },
    {
      "address": "0x4AB7ECF8836922DB2d03FFf2098d9Ebc9eBAC1d2",
      "txHash": "0xe0e1ba3b5c5ec4766a27b3f85a8f5955c51adf3c9031571c54404041e7251a62",
      "kind": "transparent"
    },
    {
      "address": "0x98F1a6DB6c5E4b93fF405907E9fE689A602219BA",
      "txHash": "0x75465eb99f87ff7ee36fe804523917e3dbe612850d208fb9a65e15126a437e86",
      "kind": "transparent"
    },
    {
      "address": "0xbc941d0dA31bea1c00E0b86C9452A0A37c51ED5f",
      "txHash": "0x2a2eb0c63a4d84de18b1b6a942fb381ddd0712cb56f81bd89fcd45d8ff44d84e",
      "kind": "transparent"
    },
    {
      "address": "0xCdf7e46090655BA598Fa1562005B4fa186e97c3A",
      "txHash": "0x8f6450cc213564ce08c7425c4a99aeb3eeff05d88036aab87384edb820cfc855",
      "kind": "transparent"
    },
    {
      "address": "0x1b1Bca75f0024648Eb1dEe18Dd4a1480CEB5bCb6",
      "txHash": "0x0c3ede87233c7c5ce77e70e61be74268b5e322f638ea4313aa296b19194366ef",
      "kind": "transparent"
    },
    {
      "address": "0xEBc577defFb054cf9B6a3242C9cFA81Ab79a902B",
      "txHash": "0x5f780a4cc480de88096131b9a9a09d752f4d03dab3e4051d4a186535d3c0d923",
      "kind": "transparent"
    },
    {
      "address": "0x6A1e23C6b33B31a3E610e6361f9Ea7B5aB104b8c",
      "txHash": "0xe473d6d0cbc924ae5a1508ae4d6aa47bf63c06460c757f18fc37c4e409b25676",
      "kind": "transparent"
    },
    {
      "address": "0x5D88FD0f67EbBB617726DcBDCF9Bc48214Ff7A6E",
      "txHash": "0x9d7b36f2df27bf14e0ff492a2ba96990a8a47c20e800dddc6eab7500169f19a9",
      "kind": "transparent"
    },
    {
      "address": "0x7bcEa62AbA791e116BFC624A87CE005e1239083a",
      "txHash": "0x55d1e429c292b152642de5b330d09c14fea430a038022e52a7ea300683f29f0b",
      "kind": "transparent"
    },
    {
      "address": "0xA564439E41E49028B2557A944c22fc673E2A9652",
      "txHash": "0x0c2b48f0b7c773668b15e39d2397e540518575473d8e64a4921d8cdbaa34962d",
      "kind": "transparent"
    },
    {
      "address": "0x7584528290f92569579E261c0bD981e13A336e03",
      "txHash": "0x02f2ad0aac6eed7e47494285d754f7b9ed526dc47f112312158f8a719a3cd190",
      "kind": "transparent"
    },
    {
      "address": "0x259830564633092717373e5A800b4248B37df368",
      "txHash": "0x770ba840b1c0259695a70cb533ccc13ccf62ca92ed3e994739fd79cb9583ac8a",
      "kind": "transparent"
    },
    {
      "address": "0x74A5E5a7dA510bEc9D04d8211Ac1829406B7de71",
      "txHash": "0x170ea1d62712ba59eea54b1bcf5268c837a13e144128eab52ce29ca4f2e9442e",
      "kind": "transparent"
    },
    {
      "address": "0xB98ca8cD5487294BE76b8d515Ee13f32D59e9066",
      "txHash": "0x8c116bf597e7f42f98448a98e8882f7272d6f1e58eb9558eee2a935f96f29192",
      "kind": "transparent"
    },
    {
      "address": "0xe0DeCC4989c4f831a70DCf025E0D5A3947363FEC",
      "txHash": "0x2d4972481ab7d0cce4a87de1fc9910d21cb084f3043e42d9964699a6a0169aef",
      "kind": "transparent"
    },
    {
      "address": "0x77f4b69e87B277bFb77E90637bEd66a054655Be1",
      "txHash": "0x60e3f301c70316fd4142e795ae8eaf4ab135ccb38a814a6c6441de13feaa5d0e",
      "kind": "transparent"
    },
    {
      "address": "0xf290A4CC29FfeCb191FD98482F32a1f48A23c122",
      "txHash": "0x11a897fafb20b3840743a40d8be114d2ec1dbea1f459fcd2c1cb495829ca8170",
      "kind": "transparent"
    },
    {
      "address": "0x22C7655AEB77552353372d89A7DdCCA505be7c09",
      "txHash": "0x54ddc2b9dedc46c856719b3a115ed4c26392cf007e75516852cfe72969cffe2b",
      "kind": "transparent"
    },
    {
      "address": "0x68665A68c6D009A6D0b99b420953D9D3320b9B4e",
      "txHash": "0x9cd9b04e4c48d52f37a10d883f8afb78fba101b0b3ef791a7da32f7db0961ad7",
      "kind": "transparent"
    },
    {
      "address": "0x3714A4774F7E08409d4F89678d001507245F5169",
      "txHash": "0x1ba90837243373fd3ab822baec591072b7f2b00b4579e178d0ea16db8f4c8ca3",
      "kind": "transparent"
    },
    {
      "address": "0xEAAADe5522E6678fd9EaB481b1549c0B48EE3248",
      "txHash": "0xc5a91b82d8a0c4cfaa7b650668ed5b3447824092215a124c9d1a98bec336a2b6",
      "kind": "transparent"
    },
    {
      "address": "0xCF2d1f4aaC1625B3E93b69d545979748Cff2983D",
      "txHash": "0xf918c4bc6c70530b7861fdc3e98a9646b0feb9d67b523dd60d5ae2f785aecb22",
      "kind": "transparent"
    },
    {
      "address": "0x14c8002d4f3b77D91981E046C851a83aF8fD4387",
      "txHash": "0x8d722ab0822826d816bf8f6825ad4bf0d7a6b4111169f37312bdb203a419a971",
      "kind": "transparent"
    },
    {
      "address": "0x07CEebdcc0A0A7e964CE85c97578e057539d43C1",
      "txHash": "0x58969f545a1812f77f76187d5997b56a9921bb71ff7f7e7f155873c479178cd0",
      "kind": "transparent"
    },
    {
      "address": "0xF4aa989771B4Fd761a0A5cE03f08DE09aD70f464",
      "txHash": "0x8e317de400bfd185193732011007bd0ff2f22f3d330de71e5b765c9a3fa49d46",
      "kind": "transparent"
    },
    {
      "address": "0xAdD67f3AFec03EA9dF3a02d91674eF03784af5b5",
      "txHash": "0xd4a6a2fb365241d71fcf84db97ce9ccfe47c1da44a4da2dc4618539634bc1f70",
      "kind": "transparent"
    },
    {
      "address": "0x4047cE199029Ac507692760641e9B8c7D9BeBba2",
      "txHash": "0x293cb3ebbb8b63fed2f6c39589cc7a6a68391904f0b9db34d1a8fbb47dc7cedd",
      "kind": "transparent"
    },
    {
      "address": "0x7e875Bd1a4CFDe445EcF8b5c09cD557DA863D6EE",
      "txHash": "0x8eb90ec9d17ea738e6b6213962b94fa63f3874c92f8bd2a2485e30d5043c77dc",
      "kind": "transparent"
    },
    {
      "address": "0x46668435F311C88824Df6306c0286525FE63DfE1",
      "txHash": "0x36c0f0c26492a119bfa604b34618afeecfcde2b0bf36ac7da72964482e3c0a94",
      "kind": "transparent"
    },
    {
      "address": "0x4Dab44e487cb568dD594e577134492167f07f19E",
      "txHash": "0x6afb000ed9043fed56b32100ba8e49b27366b706650a1bfb78d0a19eaec06cf7",
      "kind": "transparent"
    },
    {
      "address": "0x87A049b55c7A2a5A2b4a4185AD62B38379A9317c",
      "txHash": "0x703a2a8529b8b5b2d04fcb461ceb9d22bfa2a139f7b1abb5ae1158701cf9173d",
      "kind": "transparent"
    },
    {
      "address": "0xC83770F88C7C1CB56fDa005809Ff87ee37a9DBaa",
      "txHash": "0xd4976341c9caf3d8abd24cdc7895e43763f281211fc7367de04030202a349e06",
      "kind": "transparent"
    },
    {
      "address": "0xFdfEc3a0657fDADd9368212E5a88c0F926546ed5",
      "txHash": "0xbbd98927126be87a4bc8b07b9e2c17f57152a99e1972da2bec0668c1a23740fb",
      "kind": "transparent"
    },
    {
      "address": "0x94c7dBb447D65e03926539aF04c482B630E43D3A",
      "txHash": "0x261aa97f7ae379991ec1aafb40604cb274062c62cc23055c7ac681990893eeb5",
      "kind": "transparent"
    },
    {
      "address": "0xe496a90D228FC3675EF5619a9AdA7bA5DD209bf5",
      "txHash": "0x6656e893e8ed52519dc42c5b84ef8329cb979a902776223248539bee69c4c629",
      "kind": "transparent"
    },
    {
      "address": "0xC14359D881F00Eb406277bA3E00834f1B07190a8",
      "txHash": "0x118cd67440e2cefa31610add3de436a1f7f573bb46fea0a85dd069173eb196ba",
      "kind": "transparent"
    },
    {
      "address": "0xD5F6411F720160c2C2b27ef8489F4Fd836754023",
      "txHash": "0x9c5d415211210a9bb78be56d32a07dd0cefc3cb1c454b15283964d0912b34bba",
      "kind": "transparent"
    },
    {
      "address": "0x25990e66d8d342e5707cb6dfC4451B931762518D",
      "txHash": "0x388476aba715bb8e00465f0d872dce5bf1a4fd37f2f70a6a5f9232bde086b56c",
      "kind": "transparent"
    },
    {
      "address": "0xd12AEAE63B85DC2a17831430E34A5ab799545f79",
      "txHash": "0x8b026679c68bc240743e32b119324ad6cce3ee4b3d4295dd1fcbbd152fd6c1eb",
      "kind": "transparent"
    },
    {
      "address": "0x4e74463790eBC233582fcbFd01E65162e93BD315",
      "txHash": "0x4388f0e10d283d7f0c6e421f7bd9c767125095a163ad09f8fcc3221531414692",
      "kind": "transparent"
    },
    {
      "address": "0x292D2E0596f4D147981C6D5159e9588F9E60CEC7",
      "txHash": "0xdc791a05b754177811183956a9aaf80d5f5c702cf48bea0314f013a5e0f5d818",
      "kind": "transparent"
    },
    {
      "address": "0xb651c975c23D53eE4259881F35311dD877E668f1",
      "txHash": "0x9cc517b52fc2bdb539976d24f43e314c2886a8958914f92e26938d0d49a73077",
      "kind": "transparent"
    },
    {
      "address": "0x97297Cf01fB135E7F9440745Bdf2e4902Cd7E76D",
      "txHash": "0xd067748b0d73bb5a8109d1c700242954b230986096664bc5655e832461ac62ab",
      "kind": "transparent"
    },
    {
      "address": "0x6CE71E4D081C4ca4216499Fc735D6b85d379Fc94",
      "txHash": "0x5b40084712188f1bfe604ceba887de0a858372b0c66c4379f955294bcd272884",
      "kind": "transparent"
    },
    {
      "address": "0xACff27C9f4D9f4B6819c767217e8ea4D5044CB78",
      "txHash": "0x35a35c8bb1edd72787af1466946f878a9c58790a45011da2012c6dd0aeb885a2",
      "kind": "transparent"
    },
    {
      "address": "0x3BcA7Ba10a42c815f98163d433BD8e095395f6f5",
      "txHash": "0x3d647cb396e3e4578d3fd60ec3c22d8a22467f14a00769d9f1cfb26578b0c84d",
      "kind": "transparent"
    },
    {
      "address": "0xEe25c88299db9b705475405846bd3303745Bacb0",
      "txHash": "0xc67bf82d2e9ce1cc26a407023e37dc439999d921bd24e061007c084085fa0361",
      "kind": "transparent"
    },
    {
      "address": "0xfE125C9cA26F05Abe70dD49461FF2eE1236eF9Eb",
      "txHash": "0x4330d3daeb21741171cf3c81d80faeccdce692d81c440ccfac3bbe0aee5dcab6",
      "kind": "transparent"
    },
    {
      "address": "0x567Cd4776063bce0E7064EF2220ab0aA740787B8",
      "txHash": "0xdff3a23c112bb650bac958150c2977e44aa269bc5e144598c19156a9c680c12a",
      "kind": "transparent"
    },
    {
      "address": "0x78D84f11916090252C9B521B126C264D4dA08616",
      "txHash": "0x81b0542a01085a96286142f5c98b51cbfce66bb50330ac3605c663afa9a45929",
      "kind": "transparent"
    },
    {
      "address": "0x63B86FFD17319f2c49BF0a1C964ad9Ca53487fFe",
      "txHash": "0x63644b302f35272d2b2c91311b7f83e2b741d7f28288e1fcddac46c0412d9146",
      "kind": "transparent"
    },
    {
      "address": "0x639e6E7B3C5927C045a0229880317dC2B53A05C5",
      "txHash": "0xcff42318336d5de45cc3d31236d056ac988ab86a2956921a421733e2cb37755f",
      "kind": "transparent"
    },
    {
      "address": "0x5EF4eb3E4684C04ec8e08daBF1B1225F0e292cB9",
      "txHash": "0x8e7512db2a9f56f020fd9911142d41ee4585ec53dfc759f71c648e5bd59533fd",
      "kind": "transparent"
    },
    {
      "address": "0x7e75F5218693Ae502a0024c9eC7C1355f734c12A",
      "txHash": "0x98eacf811229d3c65c25bec24a87bf37e51714a59645688cc97923147eb61030",
      "kind": "transparent"
    },
    {
      "address": "0x52D99aa10d14EE24b92551Cb7d1eC3F3A3F748A3",
      "txHash": "0x1f7319a18cf518e5958313a54e98089a52378785ac50f9f564a86e12663c8da5",
      "kind": "transparent"
    },
    {
      "address": "0x41042Ae01004B089B1e4c277E510544883CC64a8",
      "txHash": "0x75ed7257fa220bb202ec5b955210250298df230d515d869ab135d41367000e72",
      "kind": "transparent"
    },
    {
      "address": "0x7F6f94765f6623f511793035B9f1eA56573f58CB",
      "txHash": "0xb2e563343f16bbe0249883ec4c7f68460336c394b19f952af3e65739a3851a00",
      "kind": "transparent"
    },
    {
      "address": "0x0623B4351E94420c319C7d92cdfE31E636c63dCf",
      "txHash": "0xe975d28db5740ea207c8a1b239cb6bc7d7c008b6f63b6e038c7b33ade62cbf04",
      "kind": "transparent"
    },
    {
      "address": "0x0cEbaf78dDf33C1c38a5570466EB509cc8332A0D",
      "txHash": "0x0be8327943c4b67ccd3d77574bf3c31cbe5a4dc8a105234e430d9c37af5b018e",
      "kind": "transparent"
    },
    {
      "address": "0x4Cb178c0308764d2b5Ab1D9bC78Eee4972B22F9e",
      "txHash": "0x4351bc18606ba87768fbbb5e34e3941852ab926454321e9ff60135695c5e34ae",
      "kind": "transparent"
    },
    {
      "address": "0x76Ae3cC3D90D55cF0A9ae00fBdDfc63951A90D69",
      "txHash": "0xd83f8a6a0fa0da7c011665890893d499d0cdcd5fcdf14f23ca70dbccea933238",
      "kind": "transparent"
    },
    {
      "address": "0xD96D6579fEBEcEFa07bf364ed730493D8C86cD6b",
      "txHash": "0x59e3466ed4452edc82611397a5162b6df32f8f0a9745f2cb5509a947bb9a5c52",
      "kind": "transparent"
    },
    {
      "address": "0xf28D8690f216ddeacb2330D0A53F48c342007DC9",
      "txHash": "0x96fcf75559974bb0f6a4c9eafff1ddc1ff40a5fa785a09539e95374ae28efb34",
      "kind": "transparent"
    },
    {
      "address": "0xa6e8274BD8CcEa78ec6c6E4040afab6d133B93F9",
      "txHash": "0x4f10f98ab06bbed8d1267c794c8ee5d049177c0ef6bf2a9f282727c2567a5c9a",
      "kind": "transparent"
    },
    {
      "address": "0x9a460cE859F75FBC4E59eAC7a5f1F317E5611959",
      "txHash": "0x34285520635a74fa5fe1d0dd2fed02d87ad4b0f28691cfab259e2a9abb335fe9",
      "kind": "transparent"
    },
    {
      "address": "0x3bE462c4CE301D3ad2fc98f4224cb022C2A926CD",
      "txHash": "0x5f0636140fb24d5d5295d634f612e913752453f7a953596b439929f78c5cefce",
      "kind": "transparent"
    },
    {
      "address": "0xF32Fe2E2ed8C4e3109E5dd0Dc7f4a92767AA6274",
      "txHash": "0xc5b2ccc38ec3845c3f0a3cc0404d6401a264d88e801449d35c52cffff66eacc2",
      "kind": "transparent"
    },
    {
      "address": "0xc8bdA9f1aecFc7a4175e2f6fF98D283b0657620F",
      "txHash": "0x20e0d11c84773a1f0c0c97b7d32b19dd27b77857c0135e76c2c33e7b263cc08f",
      "kind": "transparent"
    },
    {
      "address": "0x287B1CFe69aED02a7Dd77F218A81354189F3e296",
      "txHash": "0x7c31ada4eb15eae1da2d3ac9cde5679e634bab48d15b104d283f4efce0f5b9f1",
      "kind": "transparent"
    },
    {
      "address": "0x687de0F851B3f19e7A6DD93E42F2cEd1299eAC05",
      "txHash": "0xc1c8ec13e800c41dfdc08501b7e36f6309132e239888c01df20a249600f76c04",
      "kind": "transparent"
    },
    {
      "address": "0x41dAd456E4a477C5D130E9EF8aEc6Bc94170a815",
      "txHash": "0x37fbcef1f0afb6cb8c78ee7526f465cfb8cfd584413a74b2774aa31ad211ebb3",
      "kind": "transparent"
    },
    {
      "address": "0x85A8B82B81980FB5ABF4061b2fee2799b9832592",
      "txHash": "0x32e9e076428fc7f97407740f6a2728ff7178a762a9bc2a60012c9e6688233cb3",
      "kind": "transparent"
    },
    {
      "address": "0x09dF94E4DeA08eE951aaE62644C9Ea11768342Bd",
      "txHash": "0xd119ad8efb5697664b4e8a420a2b0c6df127d6ba71bf31fd732f18b86f9a6e24",
      "kind": "transparent"
    },
    {
      "address": "0x709199d9652A75733e0ABd0AeC802dc060647F84",
      "txHash": "0xe1e738fd8d08f13a2f1877e5b531159bc6830e3f51dbd2aeb986718892a8941a",
      "kind": "transparent"
    },
    {
      "address": "0x929598D48E51eE3B1ED98a83Ce0A1Bf1E509b448",
      "txHash": "0xda4ef07530e78bcee213087e065a6f8a1bf126b2868a981459c27c59dd09d483",
      "kind": "transparent"
    },
    {
      "address": "0xa3bF173C629D39B35C154DC75b76AbCB486d4681",
      "txHash": "0xd5ed4fa5803d3261d735596f7490da0485f62e2ce8d9ec99b1711dcac77ce5e9",
      "kind": "transparent"
    },
    {
      "address": "0xfA4DCf5af3415Fa449De6EDc056A0c4BBaC3E1F9",
      "txHash": "0x2d109ed8cc84d861a8682c7e0ef948e32b1c7e780fc60675cc85ad60e5edc8b6",
      "kind": "transparent"
    },
    {
      "address": "0xb2Fa315d1f2e1Af2E52b68b067Ee36D646Cdad5a",
      "txHash": "0x6501dbfd14ef6c14f70410fcd08a9ed637247a703c6b5aa0d91c8625478b7e93",
      "kind": "transparent"
    },
    {
      "address": "0xfb7A451E81ba8B1d36B482738Db443045D9d72E0",
      "txHash": "0x0bc6c2f7e3d153c3803701f902e91a9e3a679d91522991525d324b087dd02829",
      "kind": "transparent"
    },
    {
      "address": "0x1824e2cF8aAfe41a14f95305B00dc35EffAcE09a",
      "txHash": "0x5125a47650893adfed9350937ebb4cf44b3d7fb676c92f6938998dc98f4146e0",
      "kind": "transparent"
    },
    {
      "address": "0x3547BD916C19a6A3E5137AcFc3cb8571C5142f2F",
      "txHash": "0x09f76ba6374f5fe5f945c767beb00dfc90f1cf84d435cf327c40c39ea83d08db",
      "kind": "transparent"
    },
    {
      "address": "0x79AA308DE24Fb00EF8B27998FB3ee73F4D5d4C36",
      "txHash": "0x73853b61c76736b9f1794610e3d97e475c743406dc8939090d69276a531f8245",
      "kind": "transparent"
    },
    {
      "address": "0x2AEDd873148468024ED57E86E11E0733C000Ea0b",
      "txHash": "0x0cd845f666c6570e6ff79192eeb8e63b3efc989103350ee98d60307a6676322c",
      "kind": "transparent"
    },
    {
      "address": "0x968660cA7180927DDb60728409D5eA77521550A6",
      "txHash": "0x2e849ffda4e8a1d8a54a88d2449d43cdc1d4135412fd5e10ab72719386162721",
      "kind": "transparent"
    },
    {
      "address": "0x60CC0e5954A41b7cA89ac535F7c29746Bc6BaE8b",
      "txHash": "0x8dfca1cb3660b6e818d5d4fdea91494b64b3ce00b13db3640a831491a49403dc",
      "kind": "transparent"
    },
    {
      "address": "0xD3454E7efe456De72100fFf9167D872Bcceaab4a",
      "txHash": "0xc78afe5294e84ab3c8c3949abd66c76ec0505700af522af88a6c13910ae6eb29",
      "kind": "transparent"
    },
    {
      "address": "0x7B099dbf5eE39B47540eF18942562Dd5287417af",
      "txHash": "0x825c1862584e396536be12d3f566f5361357b3ced456bea2cb26c7d7bd1813c9",
      "kind": "transparent"
    },
    {
      "address": "0x344e4C16559cCFa16419E7ed0c2CceA483aB8a98",
      "txHash": "0xc39d583c73982d6caae3ca78148eb24f4b1b759d3dd48db23caf1091300d2d5b",
      "kind": "transparent"
    },
    {
      "address": "0xDc53BD2d493f269A9EcE49CcfDC422F0Ae17526B",
      "txHash": "0x669e27884ef8b875ca2ae7375b8df2b86aed483cad56f9359d9ab6ee98e62ff8",
      "kind": "transparent"
    },
    {
      "address": "0xDc8c4CB6e53bF5D081E04d706F7eEF63eAA24f60",
      "txHash": "0x640dce507d704db65993585161ce74d32f1924dba9b0c0e0b4228fc12698da82",
      "kind": "transparent"
    },
    {
      "address": "0x1bdB1490b6f51DB32d2B7fd1cd77586a33C23862",
      "txHash": "0xd0e2c9b47c3c8774a2c9b8da1d735f7bfcc8d8fb7d38af2495d4d4faaa3dce50",
      "kind": "transparent"
    },
    {
      "address": "0x68B7cD00f1Dc2457E4D27448b2B9d771C41DF1C0",
      "txHash": "0x33fe0080c6134c731e29ea10847f24b2aca59b76889b192b54ecf2fdc82a59e8",
      "kind": "transparent"
    },
    {
      "address": "0x027705EdB43E9c37f29E5b5BBD5ae8029bAbDc67",
      "txHash": "0xa00ff4b332b10fd03be146c1255aa878f94b8e3274f04317657416069cbfcc7b",
      "kind": "transparent"
    },
    {
      "address": "0x4dc5D168c6a3fB0dFDD63F2b80593a9F0FD324CB",
      "txHash": "0xf0595b335bd68ffcd1b3af19117d16eeccd36a7c4045123061973efbad357d88",
      "kind": "transparent"
    },
    {
      "address": "0xAE537f46b3081922b9b7a3f10169987A6b44d8f6",
      "txHash": "0x58eb6b17b5f0c5ef6c972ab2f3687ab7941deb5f7802a64e91ea033607009c8d",
      "kind": "transparent"
    },
    {
      "address": "0x7f81B101a43ABe637dF5c658a52403DeF5E7D0CC",
      "txHash": "0xbe2295c878fd89903984bd38cdc16cf26885f7de1b26e5f896109e49827c73dd",
      "kind": "transparent"
    },
    {
      "address": "0xc9d829035b49C1E41003a86452eA7CD0FbCfbA9D",
      "txHash": "0x9252aba0f3f696422f8359316ce05b7227f101f0df20c0178921e3005571cc86",
      "kind": "transparent"
    },
    {
      "address": "0x728093467282c42494025b0ed260f96a90888661",
      "txHash": "0x621df18ff855a23700f77beecc78f1a022d4d2a22c6c1d6bf764cfe587cbad5b",
      "kind": "transparent"
    },
    {
      "address": "0x5001a9468C86A4933EFc2892f79215A0d9e1f4c7",
      "txHash": "0x04253f1bdf7f3b93b4e9a64e7a288857dc7d7010473314ec6520322cfd588bd3",
      "kind": "transparent"
    },
    {
      "address": "0x0a90A0A83FBE2F743b595b56A90624f3941CeC14",
      "txHash": "0x395ef316ffae3ee7208091eb91c3fa0ab02a3e5628ba3d87d59e0713adacf274",
      "kind": "transparent"
    },
    {
      "address": "0x7a4358F4879ebb3ccA49f7C6bD6b27B61D194141",
      "txHash": "0x4c6641ba0064980ad867ef9edc11091a36220024fd2c92768f557f872715501b",
      "kind": "transparent"
    },
    {
      "address": "0x4e3dcE397b45B9C14E7dEDA0ec836f7373332cFb",
      "txHash": "0xca70c0635a64ba6230734897468082935ca625ab785c6c2e45c15a48f07e7cd7",
      "kind": "transparent"
    },
    {
      "address": "0x9811Faa6aDBf081dEa73c5E658Bd7b9DE44E4175",
      "txHash": "0x947e06ca3fb77061d5de9fa5358be4795405e20377e740c32ee11da14a8a23b8",
      "kind": "transparent"
    },
    {
      "address": "0x8c7d9951b5C93Cb15D412c5FeDB7024F970533CF",
      "txHash": "0x37b01b5d325b36fab67ed0923dcf4100ed4683270d7afcc71728bf414735cded",
      "kind": "transparent"
    },
    {
      "address": "0xf8814F6d03BBa793A9e34A2F893253f87c277afD",
      "txHash": "0x2fcaa368a755165414832e3595dcb9f7d7083a6a842f2d027dba7d76b6d6ee74",
      "kind": "transparent"
    },
    {
      "address": "0x71dC9Ac80FBDB7422F10771aE73784F39cf92ddF",
      "txHash": "0x181b6fd5312689dabf867b90e17ea54a0064da7532169eb429710eb1062c69cf",
      "kind": "transparent"
    },
    {
      "address": "0xBBEfD34423ad7520D8e57E89ea742ED50B246D02",
      "txHash": "0x0e515b9f12a41dfcbc867d55436a096bfd4bcc77244b8dabdfcad9501da14f22",
      "kind": "transparent"
    },
    {
      "address": "0xd28e1E8370E09Aa9DC7526D9C59167A484C8Daff",
      "txHash": "0x84f99eaa00e3f6c201587a8eab24c62051542e9d2292d09cb2081aa1d4f541dd",
      "kind": "transparent"
    },
    {
      "address": "0xbC7260C890166F84F588B6A7019DFC4D322425Ea",
      "txHash": "0xe47c213570bc654a0d23c9d5151a1a748a8fc9d2c83c789f2a396d7662ac3755",
      "kind": "transparent"
    },
    {
      "address": "0x3FBA2B38D5Cc5a0b4d693cA474fAf5C43EC3cc3A",
      "txHash": "0x682e76bf4822a4eb10fca3a8ebbafd3a8d6d53a23f7996af55e9eae0bddd190a",
      "kind": "transparent"
    },
    {
      "address": "0x3C4D67AB00C7991E799C2a301A066215563c79d0",
      "txHash": "0xb79232d085343d0d5eed1a36bbbdc8a954990adc81dcf25d32de9a5339405c5c",
      "kind": "transparent"
    },
    {
      "address": "0x7dfA85e3d516f023cCDa42BD3A4115BC681cb5c5",
      "txHash": "0xe08be086af5fb3ee45c4eba6432e40577649145f3b92f079d42b671c2a187172",
      "kind": "transparent"
    },
    {
      "address": "0xA4A12ec3232f1e899199273a3905B2e2d8afe28f",
      "txHash": "0xe2227d3000f2094b4e1a710fb02cae649439a36598ca79d53d5229dbb1e2efb4",
      "kind": "transparent"
    },
    {
      "address": "0x2eAC181587CC44Ca4D459b6bE818A3d2f1205423",
      "txHash": "0x7bab7baaeb5aa874889193a9d0e157dc8d076184863b1fd7f8e6f1330e4eb60e",
      "kind": "transparent"
    },
    {
      "address": "0xab4F04e694e4bA9bF65e4DA9d87D902F15503444",
      "txHash": "0x72f988c6c54de7fffd1b440c683ce31388a9cc3b1000313985bf410ad64d2414",
      "kind": "transparent"
    },
    {
      "address": "0x2E85543343126766d1888A19854d265a5C51117A",
      "txHash": "0x75f910b768e52b5d7b85a1f5bc7958c50297da90e53b87b2d2f681a91f2a4e72",
      "kind": "transparent"
    },
    {
      "address": "0xafb5787F58aabA42A93cE05DEb882C53AE133985",
      "txHash": "0x901b9cf6399d8254ae21c41202c2f03b22566003bee2eae98c0c2abbf4781fd9",
      "kind": "transparent"
    },
    {
      "address": "0x32b10cdfA6D01DF9dAEE8FFdc1b2C97AA8602561",
      "txHash": "0x36eaf84f7cdc4af09371cba22eb68e2b9d20d3f1b4b496b1bd7cbd2ecb41ecde",
      "kind": "transparent"
    },
    {
      "address": "0x20b706A7342CC46B59FF803b15948c3Baf70ea96",
      "txHash": "0x721d847afe1a5d110740b50c3a2f8d4ddaa416ef9ed684db85a8561cd2c7ad1b",
      "kind": "transparent"
    },
    {
      "address": "0x7A89301802dEEed03659EB45e448756BC74Df96B",
      "txHash": "0xb9eada86265c084a4c95e3018f611722a48bfbb75ae6d0fa47bed2d0e6f4d14c",
      "kind": "transparent"
    },
    {
      "address": "0xA59Bb98Cebb786226F6B4333c98E42557bd272D5",
      "txHash": "0xc602f4a062ace3e32b853a0d3c1d6a56340c17a9413757e2edb7098b0f7afc9f",
      "kind": "transparent"
    },
    {
      "address": "0xB36812d4829580743A1C208d512a9543f6CD776e",
      "txHash": "0xb5f75c070a255f481b902126134ef3f8d4a3962d3c26ab7f2b9f2a2362eb713c",
      "kind": "transparent"
    },
    {
      "address": "0xB6ca45c1530506519430415A917C6eb9A1193840",
      "txHash": "0xef7b3b0145d921d74d71d03ecfba44e18bc2b044510f40a7d86a5be368fd8578",
      "kind": "transparent"
    },
    {
      "address": "0xb3803ABC19484E72867E22B378AFcdac16b517bB",
      "txHash": "0x82354b751669f7983bacb2272b1cfeaf337794c24a6aabdc64d26dcf8f3a5e2a",
      "kind": "transparent"
    },
    {
      "address": "0xd227d40b08Fa62E14B444c5d206c63088073aa60",
      "txHash": "0x7ba56e286deec5697c7d5878407729d31ff6186b92dba85c01da5182e1ac0885",
      "kind": "transparent"
    },
    {
      "address": "0x5f6A4c7E544E447c1Df1D1B87caD0dC9d02b87A6",
      "txHash": "0xe09fc3e1cc75d9b8e2523f0fe8caf2a0a1067cd815071e76a0863c9a290d713b",
      "kind": "transparent"
    },
    {
      "address": "0x04B66b30E965DAf25ab3c2650B78e461F47fFd21",
      "txHash": "0x8cd31e53f1bc5a57f0ff5142fbb406f123c7a66508c0d30f2b98a78eaf004977",
      "kind": "transparent"
    },
    {
      "address": "0x8718332E9256D2Ff9a4B75B19ef1155a99D16a23",
      "txHash": "0x278a02318e66936339814030bb2c1efa929b27dc23d3d528c38b0d95959cebc3",
      "kind": "transparent"
    },
    {
      "address": "0x5f4a1488BCBfbFd055feb08DDCD6B9b15D122Dea",
      "txHash": "0x3bfbd61d3185cfde575306518c3989e6c7ee83bf75bf191c7212da7d531cae22",
      "kind": "transparent"
    },
    {
      "address": "0xDAC9bFad9e18ae0b6d16f5821C43a63511d19b29",
      "txHash": "0x1a11ec0c7c13947573eb46e49ac7c66972ab2bac2123718e6354f67a199be968",
      "kind": "transparent"
    },
    {
      "address": "0xDea0221AF2f62747F355Dd9B5851c765d62C4D8E",
      "txHash": "0xa657f0673c5f48403fa7bcf619afd0e4ee016b93e827e444c7937910ebed1090",
      "kind": "transparent"
    },
    {
      "address": "0x5e55d6eDF583526A46f7C535b37Ab3c9212F8C93",
      "txHash": "0x45257a5e329a9f875a0877dd69bb68ad6aa17ae6d1a837bdeb0149196ce52cf0",
      "kind": "transparent"
    },
    {
      "address": "0x4aEB77ac4d9C03Cf5eFeCfAC1A73e845eE91f40c",
      "txHash": "0x38288e6d0590eb953f87dc51d229f0e27a74ed4b0dc72ce4661a1842ab5111ef",
      "kind": "transparent"
    },
    {
      "address": "0x0bf8Be7395D01b7C6C6E14D19DEDBC262eb5F5e9",
      "txHash": "0x59e814d9a9bd9693718c55c04c09bcca88ef944b85ed851351fc807fc412b2d8",
      "kind": "transparent"
    },
    {
      "address": "0x2aFacc669c1819479753CCeac52230920e28146A",
      "txHash": "0xefe0f359e9f8fdb4a08e249f8ca9bd575017ea1369d86b2ac7ab39b8456d6d8b",
      "kind": "transparent"
    },
    {
      "address": "0x0c75Fa7f3e372053b8548968684c7b5EE87588ff",
      "txHash": "0x271e15f97563d43f492d11875e5ddeee90abfcadfd28bad72458e2b5e5c8deec",
      "kind": "transparent"
    },
    {
      "address": "0x25c745191e72BB5C45830aCc4D4a546CCD51Cc6C",
      "txHash": "0xaff0768f09b8efaf666250739ed7d671e8f9844b9fc86753d538a512901e71c8",
      "kind": "transparent"
    },
    {
      "address": "0x9171854F4B3b675947b692e169b3B3b4AA36F034",
      "txHash": "0xde7ad2af4fd03ee5c19fd22cca5b4827c17bf3e32c9b49532784becb89cb8c9c",
      "kind": "transparent"
    },
    {
      "address": "0xa3e30081b497C3Ff2A8685AEE33B268F5f8F906B",
      "txHash": "0xeebb07962be500d06e66c244799ca0dbea7a9e5d2ed0d62d9a49b621faa9df58",
      "kind": "transparent"
    },
    {
      "address": "0xCb0a8a86d21f82c89f8aB943A7Ed148e270bD297",
      "txHash": "0x21c92eb302bf23205ca53fa002fc2ed8c409e86fffd85523003e4f2921a679fb",
      "kind": "transparent"
    },
    {
      "address": "0x6A0E8e7b77ccBDdBB37625CE4c4c1ff030f46CdE",
      "txHash": "0x149a5f07e743318d9bcf3e56296dc0ff96fe6a50609efeabd025f7217232a05f",
      "kind": "transparent"
    },
    {
      "address": "0xF133720F6eB40eF1A2dB24a575b8eF37b2494437",
      "txHash": "0xc201e3b43fea3618f24b9df97d6c82b7c55b8a5cca8ffbc21ceca1b55ab732ff",
      "kind": "transparent"
    },
    {
      "address": "0x7709253771BDE755D311442905C0bA1BBa6AA626",
      "txHash": "0xeec6a00a98662377156ee692a88696374fe7022830adc37c0af609ccbd670eef",
      "kind": "transparent"
    },
    {
      "address": "0xC621b2D922841395109c6130C6C7C1b316e4adAE",
      "txHash": "0x76dd3ff217bad793e18c110cb0ece6bc811f45b33eac7b1f670c12518c536eb4",
      "kind": "transparent"
    },
    {
      "address": "0xc2f4969396B0044DDeD03167CA463fd771a100F2",
      "txHash": "0xdcacecfce39342558d8457d375a180c1c9e62f94e447bb8c07e255545a88dc4f",
      "kind": "transparent"
    },
    {
      "address": "0xC0B6EEC91Bb040E13c23BeeA1aafC171cd76Eae8",
      "txHash": "0x0a14ae11ec8781d4fccf248bd11a4ca9b3870fe0a9f99cc5800c6a7e6cc99147",
      "kind": "transparent"
    },
    {
      "address": "0xc0e751faccC5E4BaC53f30Ce0E280A0071B3dbDB",
      "txHash": "0x13323a2f5af36c9e491ecbb29af6ce193cd633940ee4a8556537f74b3f2febc4",
      "kind": "transparent"
    },
    {
      "address": "0x46b7cD23c616580f52D82730B2E4d6389413c9dB",
      "txHash": "0xbcd72e82275363ef6a15e668df1ab152070028481113f33068be7327400b02c7",
      "kind": "transparent"
    },
    {
      "address": "0xd1a8571762CA5DCbE4df9063677001e09400fd1b",
      "txHash": "0x4b8cca74e74c16a2aec10a40b6c091ad0d12a22a8c338e43f9ca3253dfd418fc",
      "kind": "transparent"
    },
    {
      "address": "0x93a14d319DcC83415523bf3aBAB24261AdE1e050",
      "txHash": "0x8745d727d25555080dff3318781937b86ca6f6eb4676cdeaba2ceace1c62824d",
      "kind": "transparent"
    },
    {
      "address": "0x4F467776450b28a767109542a94D7705c51cB74B",
      "txHash": "0xf3e71df00649aa6cd93acd051298aaa50ee109bddffa9a213d725c026bf368cd",
      "kind": "transparent"
    },
    {
      "address": "0xE77A0C4499440917184bAC4d3986488e0CBA4b48",
      "txHash": "0x4d0a202feb6b5622480824f8ac9186f5f141c8e91519f78d28dfb87c161a34fa",
      "kind": "transparent"
    },
    {
      "address": "0x5eCe35C808623c1EE5EbF369fFFE0DDCbE444f8A",
      "txHash": "0xf66f3973505ef861483a30dc5e85c47625e23eb3864fdd27bacd6805e29bc8d1",
      "kind": "transparent"
    },
    {
      "address": "0x2D6E3479fadb6dc312C95A090E8cf63E53e752EB",
      "txHash": "0x1033fb86a113b1e4e762da793fa078fc34fe0946e7496e49d79b6984c3f6b6eb",
      "kind": "transparent"
    },
    {
      "address": "0xed8d2fc5862A1c7518F3f8AD174c2a5b39Ba7f78",
      "txHash": "0x378550771a64795ad54ec9c319338cca709710e900f28754cff5881af896a3e7",
      "kind": "transparent"
    },
    {
      "address": "0xD34d01f328891868BC2dbb44EAe9c5D10750Ff6B",
      "txHash": "0x1d776d881a4e06182d14af22de3b4ecd7f0d8a2081da937d1af29af6927c30ff",
      "kind": "transparent"
    },
    {
      "address": "0xC7bF7230DF5CEBc2E15e4abA4C400E3fD7655Cd9",
      "txHash": "0x79820b92ed8c37d342a73014b4fa1a3bc6282e52e078f1b0bf706fa48f95d743",
      "kind": "transparent"
    },
    {
      "address": "0x99FaCad3E2B1E1437e61c039C8b5D2ea3f7eFff2",
      "txHash": "0x56ef1d6943c8a650419c88ed472ead3b1c5e0708a0d5840eb3e94d5a582d190e",
      "kind": "transparent"
    },
    {
      "address": "0xEBcdC43648599B464979C29f435822aE91c8e8a3",
      "txHash": "0x2b203f5827bd727188db543df09f2c49733796d49f9c9c76b9d0a0acb1966229",
      "kind": "transparent"
    },
    {
      "address": "0x45c6c4E43d771e1Edf119a121bEFc3D87328D919",
      "txHash": "0x5bf42f29ecea67ce5ea3836a801a2eef2f8f8428d56c13d9fa9199e26bf79166",
      "kind": "transparent"
    },
    {
      "address": "0x343B203925f14745aFA1734c7c40FE638Eed35EA",
      "txHash": "0xe54eec4e0a5b85ad1609282f14ac84085ad2ef6da8b4866a4b51865b828df614",
      "kind": "transparent"
    },
    {
      "address": "0x1A12750BDE5f7EDCCEa8519276778E2A86a75511",
      "txHash": "0x82df778d6a720e3a1f01e0b75235b9a4e5dcfa9d740753bb4a1db28cd7534f03",
      "kind": "transparent"
    },
    {
      "address": "0xF5E89055ba22521ebAC9EdC788F567248AfB5Dd8",
      "txHash": "0x2ca9706a7e867e132d28037ed52d6457d44b169ad9efd623de036cc97479445d",
      "kind": "transparent"
    },
    {
      "address": "0xad2Ed267E057210A9748b1d6B9eCb724c89179eE",
      "txHash": "0x282bff0a63a92ac2fa0fb1974c8f3b9e4abf4cd091bc5d0de08daa389cb8ac84",
      "kind": "transparent"
    },
    {
      "address": "0xe94B1799f53eBE323646718c6C45272987352e43",
      "txHash": "0x6eeb60690a8219546bf8e4d5252ca8e5b313f7e111437c01f7467a3e65d1714e",
      "kind": "transparent"
    },
    {
      "address": "0x0c0D49A5F24bDD70398EC8EA84e1c9c4ac1002ce",
      "txHash": "0x1a2c78cd8094c92ed7d8a40bc65a3c4178fadbc5bf6a0930e6456052b822db04",
      "kind": "transparent"
    },
    {
      "address": "0x450efC5459883002A57F85031f40d396b043A098",
      "txHash": "0x5c40ff929f24159ad27170f5a2ee185cf4b102821c075d467255bc8b3fb01e67",
      "kind": "transparent"
    },
    {
      "address": "0x67e3831Abe1A5B94b0C896EF8d201Fc68C445b5B",
      "txHash": "0xdfdd28c33eef0eea9ff9e7255e0a8d78b2cf1958d3270357764f24b0d83d2689",
      "kind": "transparent"
    },
    {
      "address": "0x2aecA86D9b3B5880b42f36F6ea91f7e7163BDaa7",
      "txHash": "0x2c1625443eca47b56104477d2166e05dfd3a6810454b0f681f5b703f0d192b61",
      "kind": "transparent"
    },
    {
      "address": "0x3a68a39bEA6093035DA08abafdc2aC96492757Ac",
      "txHash": "0x91ab536eff00a24d21e191c217a640b3d9e95d370e32c33a1345228ac2328ef0",
      "kind": "transparent"
    },
    {
      "address": "0x81Af626E7256d6d3329E09efeb57957EB3851f13",
      "txHash": "0x4b6569abfff6e3f57cffabb9463e2b3618439a070f8ea4df5d3f8aec7a0b8971",
      "kind": "transparent"
    },
    {
      "address": "0xEB4B49B9749E96818E462b077F7CfC831aC77C8C",
      "txHash": "0xb0e78944c0a04f8dfde433ee60603d8c77f039dde16a4b61bc9e56bf4d4cc1cf",
      "kind": "transparent"
    },
    {
      "address": "0x9EE7737f13a72e48c2ec73858724e74A7d7eC5e6",
      "txHash": "0x1f42682bf7503510296d304720ff8e5ab15974c18aaec557bf824fc96ab5c5d9",
      "kind": "transparent"
    },
    {
      "address": "0x2c73E07097b87b125E746Faca561367fb28b113A",
      "txHash": "0xc23592a00d9dd71746281eeb4c12ede5e03592071ddd9a1b687fd1215a2f13c5",
      "kind": "transparent"
    },
    {
      "address": "0x2739527E2f5F4De18F8D42F69aE16CE979574340",
      "txHash": "0x62327babe5c8e6661c604a523ebc9b7ca4aabca54277d607aac05c1c855db34d",
      "kind": "transparent"
    },
    {
      "address": "0x12d0586910373C7cCB7BDABBCb8526b0eFdedb87",
      "txHash": "0x6b5355f247e54c6a54bd602e265f53dc3f4c24d4c16b052e9a3d0f5569de0295",
      "kind": "transparent"
    },
    {
      "address": "0x08edDBdc17d50c2C5Fa516460baa5c9c0173319d",
      "txHash": "0xe972db45e253202e4f7e57713f53583294701aa230223986ab4b2a2094907438",
      "kind": "transparent"
    },
    {
      "address": "0xE0cF52467E1908Af05Ebb8e59368b5f4Af180928",
      "txHash": "0x2767c048a9c02c9bf7aa8a3002c885c96531bb9f6403b55302af221b5454af19",
      "kind": "transparent"
    },
    {
      "address": "0x659AE99E8F12f37741BCA4A8E5eA283d347Cc0e2",
      "txHash": "0xaf4c779126cde91386879d53788abf5f4e6532fd0249f4323d78a7530d807447",
      "kind": "transparent"
    },
    {
      "address": "0x59e483A540a334F82d6c8521fb94AC8973B26e33",
      "txHash": "0xc9acfe0a9c7d5dc4a0ebe539dabaf921bf09211eedb58e905d6e2c3543b6c1c7",
      "kind": "transparent"
    },
    {
      "address": "0x809b96C2276575b9a6BE2324f23E401dBE43C96F",
      "txHash": "0x59cf9b773a7477952e1e66ab2b85aef6715a150d6bd17b5b5f781071d356a429",
      "kind": "transparent"
    },
    {
      "address": "0x553B7f574D8723235d53bF2F3ea41cd1a55Cb5b2",
      "txHash": "0xf01b30bfad4f38f8aebb02a70680f2008507fe5fd90366c2fc7b9f0989de0b77",
      "kind": "transparent"
    },
    {
      "address": "0xC13FbA5c16648DEC6811E84F72968C9911116eB1",
      "txHash": "0x11a38defa9aee4b0ee04cce5b583537b1bda21ffc4ec5df2c68abc832048945b",
      "kind": "transparent"
    },
    {
      "address": "0x2c0f671311Ce8D3cC9dE854a8bC33D8c4d8376F4",
      "txHash": "0xee0f28bfb1022b5a5bc3bba31254b153beea9c55451d6369156c6c58d83679b2",
      "kind": "transparent"
    },
    {
      "address": "0x5d54816a8CA907264355037BED8fCE61E1532667",
      "txHash": "0xe8c0417ce78996dabc2608d1cfb0ed5ae0c6ced3ff71d6f539e8baeee9c82718",
      "kind": "transparent"
    },
    {
      "address": "0x38fC2Bf804EcD5A032D224dfF0AE2c804178e5a2",
      "txHash": "0x93a9e35bf029e84627229ae769b34b31897ce215fcd516d13ea5c5cdcb8b3c01",
      "kind": "transparent"
    },
    {
      "address": "0xab1730db711E54EFB1dFDb886cEFb783e84482bB",
      "txHash": "0x4e984ece145508ca046828bb83761c083301408fd9584bb6a24ac989fb0dec19",
      "kind": "transparent"
    },
    {
      "address": "0x87B61D96ECC93485271E7ABA2454747514c8ec5c",
      "txHash": "0xd6bb0dfb7a05a935a275b801287c24d78c0d3c8c64b69bb43abdfaf92051d385",
      "kind": "transparent"
    },
    {
      "address": "0xF0475695Ef8a4831250f3c92e86FF5372D097B07",
      "txHash": "0x48bc460ed93e4280cd41d6424af01e8db59f4e2539b1133e25f0d526cdfb297d",
      "kind": "transparent"
    },
    {
      "address": "0xd4f7762fC402eBA1c3786A5CA0956AE75D23D698",
      "txHash": "0xbd23b20ffa6ee7f175842dafb013ce3d0e84833acf880aac5c84ac7cd8cf15d9",
      "kind": "transparent"
    },
    {
      "address": "0xC73C21A89b49BB0916c4Af039BaF4347f62D305D",
      "txHash": "0x3193898ac90038ca269730b3e88ba08011277ca2ccc4c045cf4820282a9d34e8",
      "kind": "transparent"
    },
    {
      "address": "0x751AB0a84Ccf3721f89e28AEEd96fbB57d745467",
      "txHash": "0x73a30eb3fe7b108fb5ecd1063c253befb8707d7d2187c6ce26e4cff379e59bd6",
      "kind": "transparent"
    },
    {
      "address": "0x22C6DdA268c53DbFDB3f4e215689c0C3b57C63bd",
      "txHash": "0x03eadf77c1e17534e68a12fb2f27d9b2c6f0a343e9b0656f2c4d2bdf8128f5f4",
      "kind": "transparent"
    },
    {
      "address": "0x51fB978CeaB9Ee7cE15A98510e67727fB0015972",
      "txHash": "0xd7623d8239d7b8e0b91f4dcc53f1d26a6946761bf515f0cda888515dadc6cdff",
      "kind": "transparent"
    },
    {
      "address": "0x4c2b500E8c763651B6065355dc15690cB05b7CA0",
      "txHash": "0xd76a2005e5d1bf9635a89843dc5d10f76b58c334a36049614f818f6624ce7b5f",
      "kind": "transparent"
    },
    {
      "address": "0x0880a20fB6ea523D2B3C69699459582120E62e2D",
      "txHash": "0xaca17b423c72568a795e35007edb0f70607b4dffc8bd8906a6ddfaa59f7daadd",
      "kind": "transparent"
    },
    {
      "address": "0x065315D0574D14BC3746E512ccd767169862086F",
      "txHash": "0x496bafd43236ca4eae61acf6a5e5bbd71a3b531f0a45a60361abd462902bbe04",
      "kind": "transparent"
    },
    {
      "address": "0x69738090f2fb07F89Ed9938ee451AE86434D52E9",
      "txHash": "0xe3b37ff7ef71ea1630d44081256b082da0988e8f529b4ecc5a77f6cb8c0c4321",
      "kind": "transparent"
    },
    {
      "address": "0x9fd55B8e4230042EDF5195f4B9F69460CEE6Ddc1",
      "txHash": "0xe09cbcdad8be4959fb8a018c9d72375db35beaf18db8b189f133accb62cf4fb6",
      "kind": "transparent"
    },
    {
      "address": "0x4CdFfe6e3f8F171679497C9b09B224CAF51a2ADC",
      "txHash": "0x9500955eb0ba4dd7fb4041dbb56345fb38d1cf309bdfae8666d11768333142d6",
      "kind": "transparent"
    },
    {
      "address": "0xAa8A029586EE616813DC8f25a40df772fd4D0b54",
      "txHash": "0x5348a26b52f736fd789a715ed7636246d01030c2384eb643afd235a6ca43b1ce",
      "kind": "transparent"
    },
    {
      "address": "0xEb33B1D1ccBA39dE0d4442419668c969E3546e06",
      "txHash": "0xd6a766772ce754b389ffc55681a7e7221d5466bf4f0a330f4590b67b00134c6e",
      "kind": "transparent"
    },
    {
      "address": "0xd875b53e9bd39b362c25eFe0810D03C504E8B096",
      "txHash": "0xfd93a70a87665cf63f3594d5c750e69c026ac022a7784b091764b1053013aaa2",
      "kind": "transparent"
    },
    {
      "address": "0x218c57081ced18Be75C1796d718761dAca131C58",
      "txHash": "0x6824721633ca6a77fc3ea71129c47a6615f8ec3e1d4cc1563823c24cde6d6608",
      "kind": "transparent"
    },
    {
      "address": "0xEf9d3494923F34d531AcCa9b57a17aF08c2e44f3",
      "txHash": "0x2bfe39bff33d8ca4371627043a2265a29a44d7bb197e823ba1041b4c0622ee4a",
      "kind": "transparent"
    },
    {
      "address": "0xade3CfC804b8332Acd3AB4C9A70125E61dE510b4",
      "txHash": "0x19373b760a092154329d528d67c3996a9cdb213d96aea965941c16bf987cd536",
      "kind": "transparent"
    },
    {
      "address": "0xbaBe661d4606B428A62c5050CfAa6D86eeC0ff46",
      "txHash": "0xfd30e6fd5f5932822d00ecd0f304e64dac34b7ce471d6a33e8ca988eb88c0e79",
      "kind": "transparent"
    },
    {
      "address": "0x4d73582FD18548467E939812224dF506245046E2",
      "txHash": "0x6b336c6f2925e76d90ab975aaf7d8e9670ea48cac3c2bea6873c5a78ed45969c",
      "kind": "transparent"
    },
    {
      "address": "0xaD66252c2e29bB36E8f7764Caa3E0eCA458aB48e",
      "txHash": "0x512b8c85bd7c8076a3c3467957a3f20798fe20f2133b55c6a274bf32ff4e8e11",
      "kind": "transparent"
    },
    {
      "address": "0x34Ad9555FAdaD82cB88346703A712f59A5e91D3b",
      "txHash": "0x98cb165271d59f5331db665681cc8f51eb04ed892847c6d2a76abed42502bbfa",
      "kind": "transparent"
    },
    {
      "address": "0x374Be341cAe4B6Ac425fA7dDffcA830EaAd669a1",
      "txHash": "0x1e7650745f7e4c1bb8a44149371db2603a1574418ef3bcd0b4830f6724a3ed54",
      "kind": "transparent"
    },
    {
      "address": "0x12D0562777b7B481520DaA1d6d76d066De25B0eF",
      "txHash": "0xdd67ca6dbc4714cb28d6d1e39b2b8bb34044859a2c206d6da1c8a1d5b6708d1a",
      "kind": "transparent"
    },
    {
      "address": "0xdF10969555C0A2BD03128C25fC08893F1c2C7783",
      "txHash": "0xea65b156d14b538683dfa6ef4df71f0726f7c5520a24d8f1b233b7b32e79ffb9",
      "kind": "transparent"
    },
    {
      "address": "0xe36E6E880507d63C609bEaBf1DDaB0Cd3D8a34e5",
      "txHash": "0x743be07a7ecf7446f7cc5f8215a635e3fcd8fa8750243cb3e7a8332fd056aa11",
      "kind": "transparent"
    },
    {
      "address": "0x4559E6851C4DE170893509914d7e1AeEb0f6e62c",
      "txHash": "0xeba59b7df88fdee1aea29164ad3d0626a0e7f5ffcc417a3da9d70c93fa8840f1",
      "kind": "transparent"
    },
    {
      "address": "0x286a91eA26ED260534c53C0b9fE89F40573268e6",
      "txHash": "0x2f1ada5a08ae5cbc5dc203d9129649a0217d5c9fd36cb9369a76db2d2e9ef547",
      "kind": "transparent"
    },
    {
      "address": "0x32AC711d012bd2842C9E587408Bc494279986D47",
      "txHash": "0x2fd542d4288ff04a82663196b92f44b9b3adbc2918961699c1d8f2a90e2e6e50",
      "kind": "transparent"
    },
    {
      "address": "0x18b6bc4a4c5bF6E3AEEF497290cC91FDA15d538e",
      "txHash": "0xa67a5663a99d654c21caae83f29c6411bd8a9227ba6ccaf0ebc4ce99c7a7bebb",
      "kind": "transparent"
    },
    {
      "address": "0x98647a27CF9Cf93cADeBb9DaeBC772ca12306935",
      "txHash": "0x57f2d1fcc9a73dc98b23d25c382403b0544d0dbb412d9088f00de6f2edd3f7c0",
      "kind": "transparent"
    },
    {
      "address": "0x392e4D656f39f21329BC8246485C96462e7F825C",
      "txHash": "0xd7bd41c606d17fa6f27b85f1c5a54a0bfe9775ddbf5b08957f09926793218812",
      "kind": "transparent"
    },
    {
      "address": "0xBA5dcFC4D0CDe56c19DA1108779b6745c9Fa1E9F",
      "txHash": "0xd9a4da4560cb8126f8a41b444d3058547a743595cf7df98d46a10231a399ee34",
      "kind": "transparent"
    },
    {
      "address": "0x745313A014dA0BBAaB658EffA125D7E02C8b541B",
      "txHash": "0x3ca7a8b02a9c81f116292b57ca05bbbf9daa829336e2b0873817c550d8c3c1be",
      "kind": "transparent"
    },
    {
      "address": "0x3E40D9F1d475a32E35E1609a3d6944394cE0910D",
      "txHash": "0x77e4e24901ef5c383ea222f1813fc35d3fbc0ad36251549486398fd589e902ad",
      "kind": "transparent"
    },
    {
      "address": "0xC16C76F85f289ba04AA240612c5bE6A943C5aC50",
      "txHash": "0x246a8aeab55b453c07a056b5a62dadf9da8e01814aabb593efe2d40f5fd28b6b",
      "kind": "transparent"
    },
    {
      "address": "0x96Fd42C43639Aa1e29C1d1953bF57BfFDd135663",
      "txHash": "0x646362becfc9cf73f91e42755337a25eb7d3efea7619bba6ce89da3fb17dddd3",
      "kind": "transparent"
    },
    {
      "address": "0x8D1B911205fA136542FeAbFCE3e2780a12D90f15",
      "txHash": "0x29935d891ac24a3ebe484b9477d761cd2a2c5748db42a3dea8a712ae8af9d909",
      "kind": "transparent"
    },
    {
      "address": "0x564f1Ae5e78c87bA0dEF9fdc571F36f0Be3869E6",
      "txHash": "0x9bb496ab2b2c6c021eb19ffde664cea313d15f91a6ef2b682a404a3e05aac5f0",
      "kind": "transparent"
    },
    {
      "address": "0x07a914375EA83a8A569eBfa720588573b5daaE4a",
      "txHash": "0x68ae5b9cd7423d37f26604c3a591cea560df5b81a1bec35de201b0541edab4af",
      "kind": "transparent"
    },
    {
      "address": "0x872792b7f27E04C63d70206c49b419Cc61158227",
      "txHash": "0x05bff79cfab8ce63c9d73cd573ca7d06b06e2417c3da76af0e77c785a21de99a",
      "kind": "transparent"
    },
    {
      "address": "0x62aCCAd4f67FC10c4E43695C299eC0fC62D748aB",
      "txHash": "0xd8dee8697f7eca0b17ccff8650408a978b6f10d80af45e140e9673085c400017",
      "kind": "transparent"
    },
    {
      "address": "0x5Ba9AFaD47EB094825D56A1cf0DA64438034F4Af",
      "txHash": "0x5e4fec4de6aa67324ab604379e6ec425b314b3f6b88b51083741a700a63404ec",
      "kind": "transparent"
    },
    {
      "address": "0x3a1C60b9a214A521010897a726914B844F1DFA4A",
      "txHash": "0x22f4094404e7c979d79c62441e14d9ebd4e74c7e02d53fbfc0b4e06eec8dfb78",
      "kind": "transparent"
    },
    {
      "address": "0x67ca66843cdceA80729307E84c2e6c53b4739aAA",
      "txHash": "0xdb7e96b972f5ee594bd71a75f39f251a808786723e6d6e90837b1c6c7c14766a",
      "kind": "transparent"
    },
    {
      "address": "0x5679E1E7373DB5c6cFec7d49284C7dfD20C62C16",
      "txHash": "0x93360946d034d5230bbb951b6ef5d08a0d72ba993e9982d628beabcf5a6f0fb3",
      "kind": "transparent"
    },
    {
      "address": "0x105300a91edd741Be454924a18c5812e52714D78",
      "txHash": "0x71e3021708fcd3099fa35eff5ddabb284bbc079c735da0d4819502ee197b495b",
      "kind": "transparent"
    },
    {
      "address": "0xF4B0DB64aA6ec55FeCCA02C67ae9C41e7F69d32a",
      "txHash": "0x1fc0a7dd4fae7ecb3c4135819101e130e45ed96150ac3d2640709957fefe05b6",
      "kind": "transparent"
    },
    {
      "address": "0xd6d8E9c00624cac107f56CDB5f2891fcAB16Dedc",
      "txHash": "0x23dbe65c1b58aa9c009ff23ffa8483992aa80fd626af689deda25414a61678d2",
      "kind": "transparent"
    },
    {
      "address": "0x1A4E4189e4224e1B7b6B5bAaF04E700982827133",
      "txHash": "0xa803e377c1021326ffa8304d83024cef0b958b10dbebae5fa99fe82c49b8f194",
      "kind": "transparent"
    },
    {
      "address": "0xf14d4591b87B46bB639836541A3024bEB3808C39",
      "txHash": "0x2608ed6c74bf97b425a9a27e351161d45aeafd29522e336380f1ee027387ba80",
      "kind": "transparent"
    },
    {
      "address": "0x6ff27c948c6d6076744716BF1CD7d2f1568a4f2A",
      "txHash": "0xa465da425aedbd650822f22fa258cdf8473a381eb6641a1c7071bb05e7807b35",
      "kind": "transparent"
    },
    {
      "address": "0xD9F411B46DF456aa5537F61628fcb944EFD98bc5",
      "txHash": "0x6898b4b2436c9f0307a4406bb738127106e1e5fd7b43fdc95fa94a197047741a",
      "kind": "transparent"
    },
    {
      "address": "0xcbb7fd4adD080c33e1C1f83C4eC576Bd1C7Ff9d7",
      "txHash": "0x4f4d2a0942520b3c3cbc18f8c00fa7e4982970737365679bf6027fe3261fc826",
      "kind": "transparent"
    },
    {
      "address": "0x7EAE367630B0F995C45927e4D323c20A72D250B3",
      "txHash": "0xf6ee2210237706d7e43266f0f7615683e5f77962ed99385bbf626079023e8321",
      "kind": "transparent"
    },
    {
      "address": "0x760E8898dAfc1be1891915DEb2Dbd2ca997932B9",
      "txHash": "0x13c7b2e9f6a219e62da1148eccc66d108e1ae6057d0c2237bfc58fa0e0d359bb",
      "kind": "transparent"
    },
    {
      "address": "0x9EbB411C8aB39362E18341Eb4C2eC9736Bb5833B",
      "txHash": "0xbeaacbc5deec7de4eee48daf2e5790f085040ee196f28f33286e3870a367812e",
      "kind": "transparent"
    },
    {
      "address": "0x1Af2244c107E3Bbf9AbB7ABba7D6e54ae17dBAB6",
      "txHash": "0x7a33c6f66df1f1c0e28c02946f94c6dfe981b214c36b75e70ae09b37b21492c1",
      "kind": "transparent"
    },
    {
      "address": "0x3d5d7575486c972b49b14A3271F64371B1A6945f",
      "txHash": "0x666217547a2b84584ca0653f9777d88c012b00546624c872fd09f525e5723fb4",
      "kind": "transparent"
    },
    {
      "address": "0x404b913B3f09543897757b8178BfC344aAdbA083",
      "txHash": "0x17b3dbd4befe005d0aeaa62ccd3ce500ac12d0ccd3eb8475e721a4e3efd869b6",
      "kind": "transparent"
    },
    {
      "address": "0x581c6362E32BDfa9Ec6483E48413e0D6937Ba491",
      "txHash": "0xa21f7a8c744bf0f320505241315added7aacdb36ea6f8c81bfe4c904034b0c77",
      "kind": "transparent"
    },
    {
      "address": "0xDE3BBc2CACcD70d7E98ffDE06a6E658fb707facd",
      "txHash": "0xc968cfa12c21dcb2663f85dbd07243e68ef7c362e8b37e26810850c625789647",
      "kind": "transparent"
    },
    {
      "address": "0xf24d4F2578fbCa87711494Bb67a29B917BB790e0",
      "txHash": "0xc110bc3d0e69553f67591a1a1d35b74c3a7aabff3572ea53c79be90c0132e4ea",
      "kind": "transparent"
    },
    {
      "address": "0x3788b26eC915fAb50d557FE4947a8d36406D0323",
      "txHash": "0x1dd2f1b214511d6230daf987e2fb49b37d86dd4ffe5a09ee34f43af7eb935d01",
      "kind": "transparent"
    },
    {
      "address": "0xEc442fcF3625080D6974Ac4fb126531b36a46E24",
      "txHash": "0xaa1ff27db0edb691266e1b2c552973c946faeebbcdc3f7301c526a58d71ed178",
      "kind": "transparent"
    },
    {
      "address": "0x77fe478f613574b7c01500F3551f6e62662A84da",
      "txHash": "0x16d5e9228771133dc0b5463e1aae8d63254e8a680295e43c9eb0508e700bff58",
      "kind": "transparent"
    },
    {
      "address": "0xA5C1Eb282C0FF15e649462e4dD4A28638940EcED",
      "txHash": "0xe3167cad220194f1eb9d978250ad84d8abdac0ed56633c600efb084212a79b9f",
      "kind": "transparent"
    },
    {
      "address": "0x6C9Dbe61cB08C5Ff33a8a994958F9c0a79db6164",
      "txHash": "0xf621832b9e98b8bb001bcae1dd9d3a2a10b00f5867f4fa562eecfdff96eb48ac",
      "kind": "transparent"
    },
    {
      "address": "0xF8834D5cfaf4993230f28A7187E59B51AFebAE17",
      "txHash": "0x4f3dff5a120c0df2c4c4014ff67aa62954f3165588106d130aee2fc20da5168e",
      "kind": "transparent"
    },
    {
      "address": "0xF036627caA54c6230727F4e7EBf9247e784a7AC1",
      "txHash": "0xd50a6e7e5e5eeeb7163f784e5081ce3548d3f384b4cd2ff63620c8451f5bbea8",
      "kind": "transparent"
    },
    {
      "address": "0xcA934781a924b5A9d5bFeB73feF67377302121f0",
      "txHash": "0x33a6b1f78e5b178c5f707913d2811bdcfe7f01c30762ca3124c82477bc5264dc",
      "kind": "transparent"
    },
    {
      "address": "0x93F01b36Ed157F839dc10Eaf243c9E6605fFa786",
      "txHash": "0x779b42376969882faf58296faed230b9ad6fd9ef5b8dd9eb23b70f7f6b7f90ef",
      "kind": "transparent"
    },
    {
      "address": "0x8fFdcb02eb9967f7AC7545c4501fA92D5A6e11cb",
      "txHash": "0x665840786797972b40f4f69ab0f3ca8efb395226d7c90bb3d2af72210c203f21",
      "kind": "transparent"
    },
    {
      "address": "0x6793EE0c885A666E65CEc0C73620b94b8e53Ae2e",
      "txHash": "0x866dcb1eb56f2973936e9cf202623681b83c952b6ad17d8af5c821c7e1724982",
      "kind": "transparent"
    },
    {
      "address": "0xdAc04C69f0bABD35903AB4752Eb4E1c0Ae24403d",
      "txHash": "0xdb9d3d19444c2562d35c5a39b28c37feff32ce268410aead48759ae5017a27ef",
      "kind": "transparent"
    },
    {
      "address": "0xB8fA2A367a280EDd7ffE79c9e97D057eE6E5ae31",
      "txHash": "0xb2247771b65065151394eea0e727dd8c997ff7817cbd5a39ab38f0abfb4b603f",
      "kind": "transparent"
    },
    {
      "address": "0x911c3C2c2992d11f570446B422E8FA590e078c01",
      "txHash": "0x242de472e3e335e544e6e00d92cff017692cbc054ce37d0de8a5ef96790edc24",
      "kind": "transparent"
    },
    {
      "address": "0x9b8ED8DCd2C8712B24eD266191ec55185b72B52e",
      "txHash": "0x57cb4694b3f9583f83b9d1f10b7f384929e8f03a4832e8a95bccdb21407ee5a8",
      "kind": "transparent"
    },
    {
      "address": "0x5803E635efcB00dB3f0194488c58B0977222e259",
      "txHash": "0x52696043959adade014d7464a3494b726af867f82218e6e79cc3e0bbe3d95a05",
      "kind": "transparent"
    },
    {
      "address": "0xfAD27D43940446F42137bA45D7414a03B3db339c",
      "txHash": "0x9cacaaaf33cf0a58d36d548c68810a41f4855f62733f68e2a1382552a8108781",
      "kind": "transparent"
    },
    {
      "address": "0x401FEe1fF93fc669dBAA6CE49179a7F280f5c798",
      "txHash": "0x4b6fcd1cdf147706b501f170b3edebced228d44cb05b72fdaadd45eae5b798d4",
      "kind": "transparent"
    },
    {
      "address": "0xDf3a5EC19D0bf438A4d336C5C1d52f718C121a0B",
      "txHash": "0xd97f138660658e765fd1e6d04ff8a7bd591f19c2cbc190374d79b7b6685949e8",
      "kind": "transparent"
    },
    {
      "address": "0xA4683AA1c91a7ce689c01ec8aD1BCa75502c739D",
      "txHash": "0xc2612ace8a7c418aec841e60d2299f5ae0648cf4ce07c81d9d986dc9960ab681",
      "kind": "transparent"
    },
    {
      "address": "0x25aE838a33b31F6DBB15D22E6f2CAf6659328fc8",
      "txHash": "0x23b66402e24be4cf2287885833a5d4ad60a38a2d57b7acda4f617f149e237be2",
      "kind": "transparent"
    },
    {
      "address": "0x004C5A4e39F11627360c43A928882B4EdD72D8f5",
      "txHash": "0xf19f05595489a3cd0bc3fec142f234b75eddbbc1dcb21760fb4ffaf7db178607",
      "kind": "transparent"
    },
    {
      "address": "0x5f4cFF7670974C273B248033451A8d0947fA75Cf",
      "txHash": "0x83ad8b915134ca597d57e74edb1f5cde1922d463d0fefc71852cd4c6b22c3d41",
      "kind": "transparent"
    },
    {
      "address": "0x8fc2eF081a5Ed09838702F40F7CDF12f3f9307D2",
      "txHash": "0x0769ed409ee5cd829569bb78e47e7a6058cad7f95f07d4eda2c85f6785eae4d0",
      "kind": "transparent"
    },
    {
      "address": "0x84CEf513CB0A5eeD13fc0A9Ee73b3116c582B134",
      "txHash": "0x537ee7c643a6c6935c1ba1e7dc711951d7fe1b34308e20789579f82d971a3509",
      "kind": "transparent"
    },
    {
      "address": "0x366d0aF0Aa166B91010986517abfDcA75e7b1A93",
      "txHash": "0xb410c10f81d2f82f0d8c7fd543f41ac84aabd5b4b4eaa6f9b22e36398452c5a3",
      "kind": "transparent"
    },
    {
      "address": "0xB43a192190336B83Cd28225efd1ae68cA04f8cFB",
      "txHash": "0x49ca97d071bada1a51fe45bcf113ea615839baecf2d6605699377d141e9e207f",
      "kind": "transparent"
    },
    {
      "address": "0xed55A92dB29537Be7F90507878405e83fd942aa3",
      "txHash": "0x28c8c1841acf936e330d03ffa8658e0abaade0ff2e823ae877eef4014ac204f6",
      "kind": "transparent"
    },
    {
      "address": "0xFC163090bF8Aa364d075ac44C68d3bDF729615cF",
      "txHash": "0x5fa31305ce3e89693960d7f58d74201b128b0d356ca3ab1bd2cff67748209294",
      "kind": "transparent"
    },
    {
      "address": "0xd454f3d8c05E8f3A9130D42De0DE69DD59853AE8",
      "txHash": "0x23ba0d77871c426a4563425fcde1e4d18aedb31cf54acd642865e6cb7d39e14d",
      "kind": "transparent"
    },
    {
      "address": "0xEb07558fd1165E827086C5F1501b47C1652A6a43",
      "txHash": "0xb38138472d17ec38225db27591a03dcf6a7c6425d6b093535b053f89d42902fb",
      "kind": "transparent"
    },
    {
      "address": "0x68faD8d1a0904Db085517B4396b88f14afBcF141",
      "txHash": "0xd368470d30b24bb3189c87ab4d59e5dcecb68f69d9523893897cdb5f229f9a9e",
      "kind": "transparent"
    },
    {
      "address": "0xd80932f100dA70ae9D62c07af8260fE7BdaF20E7",
      "txHash": "0x880aab12a5e944d69743fc250a0ff39e4b52c01c9703b5003ad2588602d3223d",
      "kind": "transparent"
    },
    {
      "address": "0x43EBAEca83aF6ED043814bDeFa4e315D0a196B17",
      "txHash": "0x086b1f6d53bbdc82a205d86bd1ca5732368b7290616f9d7b71dc147cfa3827f8",
      "kind": "transparent"
    },
    {
      "address": "0x5FdA63d2F783845398DDdB07FcaAe260Cd87414E",
      "txHash": "0x568bec52afcdbf771e84f82399e92571a6a6c8ff04df5c3b6748a2b992cfcd47",
      "kind": "transparent"
    },
    {
      "address": "0x01aDEB5469a9ffca3078c2447bB64c9E6Fc41E14",
      "txHash": "0x3e6d2e613fadd9566a62a6732315ec09b5358eb7565d2aaeb6296c943c39ea60",
      "kind": "transparent"
    },
    {
      "address": "0x7d4F2abD153c30e1181e9acFbf5B0a24963865EC",
      "txHash": "0xc3161ea71423333633bd77c9d1e7e4f172222971635ee8410b5578b2f0e4b9c3",
      "kind": "transparent"
    },
    {
      "address": "0x4d3d65129dfE51A4C331eCb37C071F10d83FC1c9",
      "txHash": "0xaff3deba90916c4e3e769f3bf5579fb8ee10f671c62480158f37dbd7c349ed98",
      "kind": "transparent"
    },
    {
      "address": "0x9cd959cD4794876fb51112542786ec7bB74dA491",
      "txHash": "0x680400d343e78dcb873d9be95095b1eeba4fc477df85230ed86a1b908f9b57a9",
      "kind": "transparent"
    },
    {
      "address": "0xc659a3A0AcC47ad0851af861168e1c832729C613",
      "txHash": "0xa59c1e10811fe7bd049bd7afc0ab266e3efa3227d6ad9a4bf8d8178fcc748dd4",
      "kind": "transparent"
    },
    {
      "address": "0x2bfe1F354F0C970e7300Da4694d6e91EDF02e0Ef",
      "txHash": "0xda0561868f11800f1b99775c8a21a3dee8299bbcbb22cce115588a24f281dd9c",
      "kind": "transparent"
    },
    {
      "address": "0xFd39FA6E817A9F9687Df2531f613037E396EB02f",
      "txHash": "0x68d710d692b158de3b237cb7c0a0f3db67b9378097dca62453eb02b5c8d1478e",
      "kind": "transparent"
    },
    {
      "address": "0xE581977005144cf603ECfCF70830580240fB2bCC",
      "txHash": "0x04aa1ab3a74bb4cbaccdde83f362b52e873916719513ce836a08755c3859a73c",
      "kind": "transparent"
    },
    {
      "address": "0xF73a43e90658d27803681050da21019cD32EbF39",
      "txHash": "0xf7245e749a72cde06502553d624ebd8b722665d08a6aa16e2d0d679ebef89f5b",
      "kind": "transparent"
    },
    {
      "address": "0x87c05e1c23F32e0d61Ef5d7bE3fe585268FF5f98",
      "txHash": "0xcd8a9bac0eb00592be128e30a43393b3c8a6efcda4694f5a223f01a3f42646bb",
      "kind": "transparent"
    },
    {
      "address": "0xef5d92eF024C086BEFCc1FB6F3c1a833Bf06E925",
      "txHash": "0x2eeb046fc4c9b6dc780da17d9d50f65e3610b8d460ee7a03fa982128ea25855d",
      "kind": "transparent"
    },
    {
      "address": "0xC0Ef1B425FE72B079B27c747d7c72EB3F9b2C8eA",
      "txHash": "0xac9b1d62f2e97ec9dec0657c18181580bfff737f5af8169eea5f7e2af51cb902",
      "kind": "transparent"
    },
    {
      "address": "0xfF9a35B01E332e0387d64256BeDAeb8f6e8705Bf",
      "txHash": "0xe962946612000d322efab2ee7aba8181adb279553fcb05f6a6563a2f9ff3c521",
      "kind": "transparent"
    },
    {
      "address": "0x9C9D8F445ca6FF467A966367a2943988f7b1768a",
      "txHash": "0x85101110948285d93e9d9d423b83c1ed79ce582a669f76690004731e9bdaa4d4",
      "kind": "transparent"
    },
    {
      "address": "0xd3e5327B71C0770b01566FC695DcA1C70aF0CEC5",
      "txHash": "0x4315c83a15b214ddc135689ac5e4f166403442eaf956eb2d7e54766de1517343",
      "kind": "transparent"
    },
    {
      "address": "0x4dCD8bE8A53F92B6576F45f6197E895E36a29E0d",
      "txHash": "0x27b117388b869cbfe98303e253c6aa9a7ef3750563907d88b1120808d0aec2e2",
      "kind": "transparent"
    },
    {
      "address": "0xa855788E310359347891af02B2407E1C63367C48",
      "txHash": "0x86f8620d50908dbfaabe7e2a99e87fd22c5afb580bb1f74f7219e8b202bb9440",
      "kind": "transparent"
    },
    {
      "address": "0xB63C82B147D83AAe78A98C3A778e2e9FF722BD3A",
      "txHash": "0x049218c8279f9ebe8ac64a95521ec39bbe5b38f10d2d8f39751967ebe33ef5a9",
      "kind": "transparent"
    },
    {
      "address": "0x9729A9bc426556BFFaFFD77bfd273D5D75E796Cd",
      "txHash": "0x446374b99ca3ad5d95b1a35f10bf8d8f152dd2fe70dd8c068029c1abd324546d",
      "kind": "transparent"
    },
    {
      "address": "0xF7418a5532B1e1d143AE34fE8cE96fB9A67f9c14",
      "txHash": "0xdf96d6fa91307fc896f6a04f618d1004aaa9fc4f3d740f9c0b87f9baa101fcae",
      "kind": "transparent"
    },
    {
      "address": "0x892F661A45C47d1069Ee16D0294E2031b64B915F",
      "txHash": "0x20ed2b8174a4157373097108d0dfc9c5e4c262cfcbe7c2a9ce1b729b5185e353",
      "kind": "transparent"
    },
    {
      "address": "0xF29818a600d138AC77d052069Bf3b5bf4a686C92",
      "txHash": "0xde05bff68817c679a58ec1eb0d24eb65c262fd412dbd1c843100939c03768313",
      "kind": "transparent"
    },
    {
      "address": "0xA620B32EC15D8A2031607395aed364E04b73760d",
      "txHash": "0x08bb02b8f9a22a53ead3535d54610df9ffd009e86f4a52c7b8e84c5ceb8a6c67",
      "kind": "transparent"
    },
    {
      "address": "0x92273E305924fC295F84B75C1e17886Edb63dD1d",
      "txHash": "0x68abde397ba9175d255d530e302e6633621a356bb89c79fc7979693a81d636ed",
      "kind": "transparent"
    },
    {
      "address": "0x3cD653CF090bE0aB4DBe38fBf1370077B015B576",
      "txHash": "0xf36e84f77145b16f29adf5f62788d472592d6626ae23d5301b1d03dd8f24888c",
      "kind": "transparent"
    },
    {
      "address": "0x630F61099C239558E25EE28E5A666040833834f0",
      "txHash": "0xeb10e6e6415ee570683a940c09a1c40860fa72f0fe8be86108692a52cc4b2ae9",
      "kind": "transparent"
    },
    {
      "address": "0xf76Ae90C7888Bccd231909ab2f86672036C0069d",
      "txHash": "0x592159e59592602f3cc202648e74ee3b95bdf8c5d45244addf67080dfd7b154a",
      "kind": "transparent"
    },
    {
      "address": "0x4e6807Bd87218662d0cc4fBf13aF20977b6B032A",
      "txHash": "0x9593ad866dcb0c4455db8ee0de670dd7680f1442f5a4e5525cf04dc7f3bae10e",
      "kind": "transparent"
    },
    {
      "address": "0xC32fCCda0c372Ee38ea8a2201F13f1B8c60a2be3",
      "txHash": "0x2b54ff5d16e12f2df4c03a3d77f16e7ad01d79edafd1d7b00a52381fbaf0a35f",
      "kind": "transparent"
    },
    {
      "address": "0x4B32b28065e554d40203A77b406529bf4ff712C7",
      "txHash": "0xc199040bb5693e7d6a84b247c0016a5e0a0d9916216545cc1e1cb56f68e93095",
      "kind": "transparent"
    },
    {
      "address": "0x6363D3F35a3b006Cf803d73a8585b92D96b3851d",
      "txHash": "0x227179f81c0cf29c3482b82debccae383580cb5ebfedad7442703bf6fa2963be",
      "kind": "transparent"
    },
    {
      "address": "0x002939c0A7710b07f819d150dCF71bDF334a3125",
      "txHash": "0x197e03e7b07a780af3daed75ec5876ae080e66335ab41deaef8a29a01347b1ce",
      "kind": "transparent"
    },
    {
      "address": "0x5c0e8b08ca5945D32Bf74824a1C9f2E519d13EC9",
      "txHash": "0xc7f2b797efc00ffb491527d440206699dcde50069adf9d503346754b0933ac1c",
      "kind": "transparent"
    },
    {
      "address": "0xcE4B917030abfF907c53FFe7994430D1b8DaaD6b",
      "txHash": "0x13fd061575cc12ce91e16133933fae93952c368d0e74798e8f25e89b5f036a01",
      "kind": "transparent"
    },
    {
      "address": "0xC250dAfe3853B8F3F8076CcF1C23a84F47C3B1E8",
      "txHash": "0x788e39a8e2bd129656d5a30c94b4337315ec71909a176bd9944e6e2b62d6efb5",
      "kind": "transparent"
    },
    {
      "address": "0x2D6E6f08EF00ACEB8a007E5fa8802EAA2EaB34Fc",
      "txHash": "0x87201687264b11b37824346f8257f65ddf38ecb47d2d3df3fe33b5125470fd31",
      "kind": "transparent"
    },
    {
      "address": "0x2D2350D54d3F90272Bad4a72D4Dc060A607658Ca",
      "txHash": "0xacc3520ea504c0d17420d2295ff7e52993119fff1e939b949475fc8275b6dae1",
      "kind": "transparent"
    },
    {
      "address": "0x721Ffe21A46d9B8bCf5c985E3453611933009296",
      "txHash": "0x171176fd21bdc9615734e10ce5314821018dc9c8ea5a1914c5d1b416907136db",
      "kind": "transparent"
    },
    {
      "address": "0x4b120b9EBFe2cc605467DfC526C66D34865931fc",
      "txHash": "0xafcdbf52452dca4fd9579ab97f7b26bb7ff1ac493e0521303c87f76433195550",
      "kind": "transparent"
    },
    {
      "address": "0x2F768862691A389cbfebB770508287f4dDC0C65c",
      "txHash": "0xff51a6f8bee50588d50a9d08a70e74af4d8e3a509bf19e2c1f1761b9fa7b8bfe",
      "kind": "transparent"
    },
    {
      "address": "0xAec2f1FB2abEAe57F5f13feB35B09e7E68C2a0e6",
      "txHash": "0x406f746188e61ea56de73726d1149c5511e74c3cd2af09070701882eac2563f9",
      "kind": "transparent"
    },
    {
      "address": "0x517C7127E4E2C8e53d9185Be7C06Cb4d6EC116d5",
      "txHash": "0x16665b23684a92c84bd62b583e5a3bd406bc1055b1e974a028b0789cee63af4f",
      "kind": "transparent"
    },
    {
      "address": "0x574A053936Ef4b4C06Cbf3264F26E62122896cc7",
      "txHash": "0xe2be3640c228a4a828514bf2beda4abf15c11d65f923ecf39cd328bc0f979be2",
      "kind": "transparent"
    },
    {
      "address": "0x9aE793f37558987bCf86724E9db018a215F2fB8e",
      "txHash": "0x81eda0176859796cfd9a9052d856d572cd262795a4267641225af704c882d590",
      "kind": "transparent"
    },
    {
      "address": "0x554484EC9567214BE84B8FCa2fcf6d4d6b8f110B",
      "txHash": "0x2153595e7a612ffeefd2cff46c3814f6c2bea75dbd0181e177b73e3d5da0f135",
      "kind": "transparent"
    },
    {
      "address": "0x0EDbbF7D958C576Aab0281D31C413dad85051d49",
      "txHash": "0x7d3a845271618a2eefd69e59007cddc0c0387937369838374a2e544e82d90d64",
      "kind": "transparent"
    },
    {
      "address": "0x4F92c20b12772ec16e9C13608EA5E3c6b43B4B56",
      "txHash": "0x1d6ccdc5b424552782a4a3edf61466851eab466f75fe36a7485b2344db779da8",
      "kind": "transparent"
    },
    {
      "address": "0xd9402177419E2cb6A27b81460ab0678604fC8afA",
      "txHash": "0x0afd701527498a7bc5dd22c9c5f65013b5676ff681f8e38a38d0b7872b3ac70f",
      "kind": "transparent"
    },
    {
      "address": "0xeda1Fd6c1589A646b8F9a2a03cf2E62c38ea1d98",
      "txHash": "0x198c5841456f94ba16bc772a56d4afc41c6b1b8e2002b52388ddbf9a327ce45c",
      "kind": "transparent"
    },
    {
      "address": "0x85cA439999ef1CB4824E90E53dDc18d90B100cc2",
      "txHash": "0x1edd62460c34b2f1de57dfa536e2d1f1ff7c13ac145421592810b0913c27b7ee",
      "kind": "transparent"
    },
    {
      "address": "0x88724faFf837aba611dC2D76154584d26f09467D",
      "txHash": "0xcd1e4414fb7af336eed5085b3501acfb7a5954eaa606dcb10ad7c7982848f441",
      "kind": "transparent"
    },
    {
      "address": "0x9240B6d0D857ACaBF4FD03e6A9b3971F18003d00",
      "txHash": "0x59e6c43dcbef68fbc79d0afb9b5adcf1fd2ff7d0f727192c30c79131ba6a3562",
      "kind": "transparent"
    },
    {
      "address": "0xCcf0a896CA19813C9617654d1fA2f4341E29Ef2e",
      "txHash": "0xfa789dbeada80d650301e642ae668de01179ed8a5cd5fb240ae8d64b3db1dfcd",
      "kind": "transparent"
    },
    {
      "address": "0xF4757De16da201fa3e57270D62611d3c4186d7D0",
      "txHash": "0x2dd565332cec477bcb64b475779d35a11948a3bc7e1e1e37fc8a4bc026ed2a83",
      "kind": "transparent"
    },
    {
      "address": "0xC3f6E7448D10e738f38784cc184e6642fDa77d3A",
      "txHash": "0xbf47cdd0c0864b5e9bb9977d192f058688c168dc4c39020f5a9eab910079936c",
      "kind": "transparent"
    },
    {
      "address": "0x97e2bF2e76Cfd1275f4E2521aF1498c9c15bE441",
      "txHash": "0xdbbf91889c9e99d2323a96e7084528718d9a86cf259d05ad7b437ee58c361fb7",
      "kind": "transparent"
    },
    {
      "address": "0x934b5737c5d9184a67636049Da7D983aD96596eE",
      "txHash": "0xe6f867e3f910655800ecbc1b872ca64888c1b725af8c5ff4094ff60aa70c0b75",
      "kind": "transparent"
    },
    {
      "address": "0x2C11f7fc74CafAC8cA97ec4e6215F515C7011Bd0",
      "txHash": "0x8c4b8f6fdee1d518fbedbb2ba23b44ea62ee519bfbbd8d579fb9624d64d0960a",
      "kind": "transparent"
    },
    {
      "address": "0xbb3Db30ED5dc911331D6d2d4ec0b4B4D57A530b1",
      "txHash": "0x21d61f4c8ceb9c7534365b6c003f8f31096e560dc759e0e369af5a3999d18a0b",
      "kind": "transparent"
    },
    {
      "address": "0xdE1d7A45256a5c63b3FB14A193Eb8a33d80C10de",
      "txHash": "0x628050099e2133cb208e71f452eca1704b93ea0879c393a3e65bff6cee1e74a8",
      "kind": "transparent"
    },
    {
      "address": "0xa5a6414bc5e487682491455b5fE29239A64aFA37",
      "txHash": "0x9cbd91cf79297bcdc6714daaa0dad1c0106798b3741e9d44a0e5a99558ca3bd4",
      "kind": "transparent"
    },
    {
      "address": "0xaa47dD6a27025e3A5C8B0F6Cf12dc1a33F2e6CfC",
      "txHash": "0x6dbdf2a06ed7a052fe90724bf95870d7e6da0ba4e1337cc6a931b61054f825aa",
      "kind": "transparent"
    },
    {
      "address": "0x9cb62D625641fC45B1525D2e27821F08B8deE897",
      "txHash": "0x488048974437a1a623c3e7d60d421ea7d9fb3d9347fb6d6124d49f509818afd3",
      "kind": "transparent"
    },
    {
      "address": "0xBDc51C36C797ab82ca4d36a589Ee17eb3e76a51b",
      "txHash": "0xb98c986e5a8f7c532f8ca76ae3163de1b7bc60a0d0017abc8ec4c6351af4b6d8",
      "kind": "transparent"
    },
    {
      "address": "0xeE3C7a0d6278b67132c41bfd7aC15a6080c9cA15",
      "txHash": "0xb08fed5564f647e2f7f1f8e117f12bf3d131542453b9d8d2e7756aa675d183bd",
      "kind": "transparent"
    },
    {
      "address": "0x74f91eC1C802bab65c6aA1880EDc165430Bba780",
      "txHash": "0x93b123ea717a9b11295b50f1a34f93ac60658aafb5876b2a56c9a985128f6d86",
      "kind": "transparent"
    },
    {
      "address": "0xdab126F9592914E8839Af37543fa525f29E5C980",
      "txHash": "0x4a3f8357376c917c55b2f59f7f1fa48a7a8abbd978a144e0363c53df2c3b1baa",
      "kind": "transparent"
    },
    {
      "address": "0xEB633143D7f0795b0DD7704F505c57A7AA9A4c89",
      "txHash": "0x935aff4b8b6322655dbb421794f54007d125e12ed45cad99b788797d4b8e9fed",
      "kind": "transparent"
    },
    {
      "address": "0x06bEb9f0EEe6b7295243294F41A8bD0B2E2E3D32",
      "txHash": "0xbf222c69c636f2295a5e4d5523abab6bcae341659cfb4004670e0431b8e47eaf",
      "kind": "transparent"
    },
    {
      "address": "0xE0448FdffcfC9D512681262b48902953A224D0Ab",
      "txHash": "0x6af29b67b8fc02470a80a139dc41f2ad77a56e76b7ea550cfbbec9bd6bc0ca15",
      "kind": "transparent"
    },
    {
      "address": "0x471596645eB9c4dc63457Fe59508e94Fef3C8D5F",
      "txHash": "0x8316c3129f87f575ad535b5385f688035fbd173793322682e4c9aca82d2583e2",
      "kind": "transparent"
    },
    {
      "address": "0x8a29ee35C779f250E16f2ECd06dDA12fBc1c03bD",
      "txHash": "0xdabd608b89da0e24a9e67f84d86f520cff5edb393e5ed69cabfcc0039848b2a3",
      "kind": "transparent"
    },
    {
      "address": "0xaD69F61D23DC349734D22Cb2bc122a8729249A69",
      "txHash": "0x9235d38791bc266fa1ab350b7d75b79c5963fd9f342c2f8d9cf151ab02820aa7",
      "kind": "transparent"
    },
    {
      "address": "0x8F644883fB2e612f21f2BCAe4dD92a7152234992",
      "txHash": "0x690b7596f7c391874e8b7d11730245e0b61aa1a2be076fbda95d2989bd6a0fd3",
      "kind": "transparent"
    },
    {
      "address": "0x0887c8fE1127a04B7AfFb9a503Cf6663F1CeDc68",
      "txHash": "0x02c888ed697e9fd7defcf69ef0990bae8b70fc35d75847a61ec536a6a4d2446f",
      "kind": "transparent"
    },
    {
      "address": "0xD47A0Fb58985DbF56AE28929D68Ca3Ab64a7EC7B",
      "txHash": "0xb39e32df7f72dc8f28aef859d713a92a7faea8b123a09bd18e2186f35a2ea07a",
      "kind": "transparent"
    },
    {
      "address": "0xdb2C2B16BBAE213fD7b006d8C68f133BD27f66d4",
      "txHash": "0xdc974b66d5a53e2e30f29939afb4efa70345bb1ef3b2423554ed4677c33a057b",
      "kind": "transparent"
    },
    {
      "address": "0xC9b828a7744001C9ca25D20f23b6D34754c11604",
      "txHash": "0x3e37be0bac58117c00e053368e5d0d25042d903f973fd557e4de4e1c9c63656c",
      "kind": "transparent"
    },
    {
      "address": "0x16c8B26F6C5c2fAFd03B09cc87b8541A2B360c94",
      "txHash": "0x2d66e769467ce5b00661cedfe1c120f449ddee07b3778288db2779382f0b7d44",
      "kind": "transparent"
    },
    {
      "address": "0xF7C06950e2a778e047CF9cD3D7cB3808Bc7d8c76",
      "txHash": "0x8e42f7325b5ae1fa33967a1ed552c505cea106d62d61311423f19b84ea6a7322",
      "kind": "transparent"
    },
    {
      "address": "0x592d36E4ddCA8E5468d481ea7aeDF5779fdC3AF7",
      "txHash": "0x35cec1708542ba5854dc5690a0a4278898d3df4180e8f9eb5ac90271318d14d8",
      "kind": "transparent"
    },
    {
      "address": "0xF074C5EC29F407345dDD0aB74c3CB04f36CaF368",
      "txHash": "0xd21cbf45df2169692bf3e449306a5ab92c26a7275c5105ede669e92f7b9ad174",
      "kind": "transparent"
    },
    {
      "address": "0x4fe3566FbBAFf607f328e66Be0e5f11be0EA2122",
      "txHash": "0x5c1ff436f252ec700839f851f9635fc9b0aa509c95fd3b81293cfab34199cf9b",
      "kind": "transparent"
    },
    {
      "address": "0x37052CCe17B8Fa5fF36B270E2f73e0CbBCcBaF29",
      "txHash": "0x2462001215df4d4ffd2dfab43faa09c2316e7c7b1d75640d7e216b6eed92f6cd",
      "kind": "transparent"
    },
    {
      "address": "0xF89F769c61713fEB9b9dfaF0ec001fc6050c5aC7",
      "txHash": "0xb995f55d006c24800e7ec206f52933afc5de317d0f9db0d23847803edbc0e1bf",
      "kind": "transparent"
    },
    {
      "address": "0x8bdF0893a8a7915b05667e6003Fa7b89e0eD5357",
      "txHash": "0x7dc6c1a7b7ac72915900995ddbd42016bfd2e702be18a0a4a1290323b4d24496",
      "kind": "transparent"
    },
    {
      "address": "0xE50a46d9dE63157F5b7bb3Fb9E9AE1cD97375E32",
      "txHash": "0x1e1c7350d984313e1fd6b258ad754defd0b6ffbb180ceb23b03718e64935a1f0",
      "kind": "transparent"
    },
    {
      "address": "0xf6A413191705BC5B02653261DE3BBE27b56B8286",
      "txHash": "0x7757b3dd5c6e8ec42a3f69f62993bf7b8657ec4410d2aab77f329e5b2b3dcee0",
      "kind": "transparent"
    },
    {
      "address": "0x1b8F3970D53ff238d3f389910bbEF556bf55E5D1",
      "txHash": "0xa84eb04fd865ce7ca43204cdcde866b2d3a4c939f8c8766d9830abc6f6129ca4",
      "kind": "transparent"
    },
    {
      "address": "0x8ae64937A29Da375A16E5508B5E8353aa001E21A",
      "txHash": "0x7e3c45bdd5a874cf28ab05d668537884c6b926d60219e3e6b8677489463b6d72",
      "kind": "transparent"
    },
    {
      "address": "0x47027354c9f630b6f3F0EA15fce16ef096880Ae4",
      "txHash": "0xe464ce228577e5d4a34bda88fb30cf395921cf5d8fe789db38c2cfc4f7c74fd6",
      "kind": "transparent"
    },
    {
      "address": "0x82DF6d864e3c4c46e3fB4C3cBd89a20f4F210696",
      "txHash": "0x0db72fccd50f8c99da1ceff810a7fb073008ba43876715324d622be4f144a4a7",
      "kind": "transparent"
    },
    {
      "address": "0xDf056555A59b3E6bF27A547AC0C5878cD3b88c29",
      "txHash": "0xac42567b46cb621c08bc028e315972c0da00d60b71548b1023f462abb7505fdd",
      "kind": "transparent"
    },
    {
      "address": "0xC8BB791eE9E7934b2Ba14A42eEEB6B1b77631299",
      "txHash": "0x76426f76530522391ba2aa4e8cb65f96166adbd6afacbb829aa5f20f4795c2d5",
      "kind": "transparent"
    },
    {
      "address": "0x9E9334a5DeCb143AdAe7C3619f4278c5187CDDDb",
      "txHash": "0x8b35f524e0335c9aa3bd7b166539d8f94852b8532f784f4e6bf93f91352314f9",
      "kind": "transparent"
    },
    {
      "address": "0x83a234590ba93c566D82dB0CBB05Ce9e0792D5A9",
      "txHash": "0x834312063d372439c951a1f2b346d9cde97fcf54d054163fd41741711b7fc671",
      "kind": "transparent"
    },
    {
      "address": "0x0F429b80712882c1781f215F248B56A9896E4105",
      "txHash": "0xe677cff2aeb5a4b456749e5af3efa3a5849df84e573757904cef3286e9a24bb8",
      "kind": "transparent"
    },
    {
      "address": "0x046B8a2a2CeF3A060c0d190AED2EAcc6A985fb92",
      "txHash": "0xc1e19e621d4fd5a421a9a0d309e350a5c6f1689ddfe109f7aa6bb2b543281ef7",
      "kind": "transparent"
    },
    {
      "address": "0xA72B94896151489C5D2F132C7a483b7a373d8620",
      "txHash": "0x6ee5fc08115985a86dded66573f02f76cbe7deb33699dd80f519452c14fb6ca2",
      "kind": "transparent"
    },
    {
      "address": "0xE32dA29171e43e8431561806aC8b93f2bE226728",
      "txHash": "0x8b2c91ae935144153597e6917fcdb3c9c31b92f7fec43c41d2624933af235997",
      "kind": "transparent"
    },
    {
      "address": "0x6ACd780CbB80Ca8E0c4ABc287Bc7f92A736184be",
      "txHash": "0x123e0e9f703dc2e062e2cdcea6566a68663093f1a1ab11c201b392aaee0b1a2e",
      "kind": "transparent"
    },
    {
      "address": "0xb4930075f502d1e4A16055a60957452B220C5d92",
      "txHash": "0xb682c25081ff58147c8cd3150173f92a6a54eff287c3f7c9c63dd47743b3650e",
      "kind": "transparent"
    },
    {
      "address": "0x3EaCf4BcfD92E1Aa4833A12B87686135bc99C993",
      "txHash": "0x279dd1abe4c09d730371f1dd0f93de55fcb06b26b21cd4b3a5cb9ca13bc34981",
      "kind": "transparent"
    },
    {
      "address": "0xEc36C9B2E9355b329D1CED0c2D5EF56CF639812D",
      "txHash": "0x63bce1e8fe7815b9c1697488da6a6ea65ea05d9e3232f0f11275834448b9bf82",
      "kind": "transparent"
    },
    {
      "address": "0xABc3a5ce8f5036328462a88813D10B25208E6A8A",
      "txHash": "0xd5400911223c3737429006d8cfebe71ab43ebd2f99a6c3469fd3e7fe8d050ea4",
      "kind": "transparent"
    },
    {
      "address": "0x0960985f7488ca5854A338f6c249E2BB3f419E5a",
      "txHash": "0x4a326548bf9bb18425c3bcad068cac5b866ee95c8cfe7dfee5a0083404ec870b",
      "kind": "transparent"
    },
    {
      "address": "0x187ceD4D449B7e95c3b31660E26E01468BFb7e43",
      "txHash": "0xb14eb19433149d9abd6a39f39a628d7a784c785071549363fd03d2f7b34cb6d4",
      "kind": "transparent"
    },
    {
      "address": "0xFcd86E9A82584c6B8002b520FcfB178Aae6CB4E4",
      "txHash": "0x05b9ed878219229af6ea98e189fd7c49a87c537f393cdc1a878e26f66bf74877",
      "kind": "transparent"
    },
    {
      "address": "0x830e1Be0ce49ffd218c2e94AB80AfC804Bbfe016",
      "txHash": "0xfa74a821324fe634137021c51e89a8bd2f7618508508952c8753082a30a3e18b",
      "kind": "transparent"
    },
    {
      "address": "0xb1ac2dCb78a9BD64223371951C19EDd24fC3ebc2",
      "txHash": "0x75f6f42c39d74a1b50e7ac38457d76ec489f2468f4df70a830bab0253d86f42d",
      "kind": "transparent"
    },
    {
      "address": "0xc6DC6D207C6A5239b179D4D518070557191e0Df3",
      "txHash": "0x01189e1f8ee7f8cf66b33fc2e0451da4b6296d99bef65f0e2b09bf5516265772",
      "kind": "transparent"
    },
    {
      "address": "0x9F5a5694f0aEc064D45Cbb97445C01009690d1Cb",
      "txHash": "0x887d17bbd7d116a96aefe5b87d7862bebd510ac9a824797ff2c48d8e591a3998",
      "kind": "transparent"
    },
    {
      "address": "0x8239d150684BEA25504C9d819b019931B012E73A",
      "txHash": "0x43ef5edbe47a969273e77572872cf2d9dfb97cc1958a0715f7b8be24a54cde82",
      "kind": "transparent"
    },
    {
      "address": "0xa8918DD17F03b21C5661f31dbc0ce870e0399059",
      "txHash": "0x0668e48cb85fc13295e88f013727256f4917be3f72e6699ebb35a049d7fc0b0c",
      "kind": "transparent"
    },
    {
      "address": "0xc7f9f737581BAe2e7Df74e810FAf660fD4F314aE",
      "txHash": "0x2ec5e0c0c686547290003fd9f53abd81d31d7e7cdc108df534f7e97c559c7447",
      "kind": "transparent"
    },
    {
      "address": "0x399A77B3711DC2DB6dE65b462e4ea28da994cf53",
      "txHash": "0x26543f6fae5ec920217da4c62da96d86abcb1a908a5f34e850d8d147ca90cd0b",
      "kind": "transparent"
    },
    {
      "address": "0xD10E56111E5225278adba52B49b5896320999B98",
      "txHash": "0x8125e1139fbb209f0a18337cb51a845891a2fd12def442985c99521a74fe25d1",
      "kind": "transparent"
    },
    {
      "address": "0x356bba31543DbfdA5FdeA626EF17f515473f160B",
      "txHash": "0xc5590103ce295dddd7a905f9f6418d3a9016cc61fe5edd51586206c5477d977c",
      "kind": "transparent"
    },
    {
      "address": "0x39b0deED7e715A88b6ca6233D5f30A3b8A2eEA2b",
      "txHash": "0x16fec025395930b6f84990aa77833f4a4f23f41673e272a9ac726c6b14001dd3",
      "kind": "transparent"
    },
    {
      "address": "0x7b82Efe6316891E3Aa243A2BA9406f08f9B86130",
      "txHash": "0x88b87e993d8aecc0a53365201864152f44f49a36d3b488d748e291c7541aec43",
      "kind": "transparent"
    },
    {
      "address": "0x335e8A6B5a5937a288280F1342a5E737519eD3a3",
      "txHash": "0xbe814cb89b7d875f854a373e262fdc6b062c6f3fb563724bbba160783f4dc180",
      "kind": "transparent"
    },
    {
      "address": "0x58b8C5E9538BD2c38b2A0a5B67b4c556E66fc1Dc",
      "txHash": "0x04851b198cb154ce052bb276267c1e541f9512615e681998cdfe39384353a5bb",
      "kind": "transparent"
    },
    {
      "address": "0xE0b8ad6A9B5C85dCb2895032589174d051cB0141",
      "txHash": "0xd5d1234540abcbbe64a0076eb18ab751a4a838ab0ee7b2c6db556a724aa38614",
      "kind": "transparent"
    },
    {
      "address": "0xc87259c0253671023ede596F29720e10Bd78077a",
      "txHash": "0xe14befb3e67b8393983c5d719b705d61f333607526166f067106ad0c9ab51157",
      "kind": "transparent"
    },
    {
      "address": "0xDC19637dba1aEfCbb47fF9c6CE430dEe860Ecc23",
      "txHash": "0xad8e8421ee8bda1bc869fce0a4c3ec6b04657b408d4be762627b2836b56d9ff8",
      "kind": "transparent"
    },
    {
      "address": "0x0fe42Cbe7d4dD5f98f02b67b083E94f6E538e2cE",
      "txHash": "0x2ba273aee8d2eedb43b436b4c383ec9fcb92095875ceccd5134babd4690f3e75",
      "kind": "transparent"
    },
    {
      "address": "0x197389011D9a847d81Ea6739B0BfcaF0d94e5cdF",
      "txHash": "0x0594f3a9589ea53df325ca1aa65939787c18385e76d95b9459cd3fcbb4af1d23",
      "kind": "transparent"
    },
    {
      "address": "0xFD667a95DE1a706EFFAffCD825ACcf7fa5ED5106",
      "txHash": "0xc5ec03e802d84590c4f0b201ec2a2e71689ced5fe29cb402ed1c9fe4713a5a9c",
      "kind": "transparent"
    },
    {
      "address": "0xEB51b2c447BcD83aF71845b80b34584e36085757",
      "txHash": "0x039be545d0d5463070f8a00bb47b55e1d65f9a39e4f2dd2173d9b3f01caa5200",
      "kind": "transparent"
    },
    {
      "address": "0x0Ed49F111381bD4a0186F1C7b87C5C332c8D9EE7",
      "txHash": "0x565ec4983bd45741d6bb6f9fc01df3ed427056bd53c121e3c472d5b2456fceaa",
      "kind": "transparent"
    },
    {
      "address": "0x4Fc374bd735C097437389Fb31057B2b06CCEC108",
      "txHash": "0x3a6e3e31897a95a65fc038f379f7fa82a63b1ccc6fcbe2aebf81d2d622fe0940",
      "kind": "transparent"
    },
    {
      "address": "0x08905855D48B0aB44700dF4f6Da201AD42bd443B",
      "txHash": "0xb6ebc7c7d143afbbeb6a6ae9230cf97755757c83208fdfeb3e06e7aecfe43047",
      "kind": "transparent"
    },
    {
      "address": "0xaCE3dbcB1B28FA874A05b84ae049B68Cf1B3bA66",
      "txHash": "0x3c904b934e6654af90aaee7a3817a8ff3b9c892552c147179b390c4c0fa6a771",
      "kind": "transparent"
    },
    {
      "address": "0xaCf792966E1b2AD77ecEa939e94e1fdcF29C78Fa",
      "txHash": "0x88bcd9aab6d4dfa772449c5b380566092b30a069b1b01b59c13dbba9e9694eae",
      "kind": "transparent"
    },
    {
      "address": "0xE71195B15555AbB4912C098fa803028Cbb3AAb3f",
      "txHash": "0x29d1494ce6f6763b369e3ed090def4218b6cd89b0ddca405bdbb7cbf4f970ec7",
      "kind": "transparent"
    },
    {
      "address": "0x0946f93269EC15C8a8C163FDc82135D554499E9F",
      "txHash": "0x2671861f8ef6907a9c9b675c3eed149d37743750efcbe6c5dea8cf195e20be20",
      "kind": "transparent"
    },
    {
      "address": "0xd3ec7e5fBc4bAb202Ed59218a72f84eaDa8717A8",
      "txHash": "0xfeacb572b4d4804fe777ebed53726565b31cb5361ac184a74830baa828bba41b",
      "kind": "transparent"
    },
    {
      "address": "0xc97C330B9f5bEF45807EC16591Ec400c6C43c984",
      "txHash": "0xa17385a416b4777a356d181b8e7bc9576dfb5bce1ed3599c2356c08da987cb09",
      "kind": "transparent"
    },
    {
      "address": "0xc8E81182502f20070f62Bd3d1A0fC93eaC77dF4c",
      "txHash": "0x14ecafbdadb213295ef7e450a3c0bbd54a116f5bce0e8b805b9e795e12d69adc",
      "kind": "transparent"
    },
    {
      "address": "0x2229690bDa8Ee027c9700402E143511Fe358b344",
      "txHash": "0x89f745c5306359e8a694fc18f09d7a2a140b9be6afe5461f4909d698a5a69219",
      "kind": "transparent"
    },
    {
      "address": "0x050F34aA233F59E599Ee94a58522497d0C0b19EB",
      "txHash": "0x18b8a211eeca771e7546df0e0343b09cc73d4f7c47cecd2490f999268a170ffd",
      "kind": "transparent"
    },
    {
      "address": "0x49d05DF08fe1AbC27cD627B29C26E6F05734DAC5",
      "txHash": "0x6b5cdb158e00eb454e1a4e565dca19719b3106be3408c482c4974b6af5583374",
      "kind": "transparent"
    },
    {
      "address": "0x80df0661aF84E0866F98B275b15A471A12825F99",
      "txHash": "0xb2433129daab5b230b5b6cbba8425cc9452a680f7b3f1f8df25144c887402776",
      "kind": "transparent"
    },
    {
      "address": "0xCf4d25c386f3e88c0DC0cb070CFB503b9De8f054",
      "txHash": "0x647466d55ff46b0c35ddf5a63cf24c93072837f9070344a98c410491ed97fb40",
      "kind": "transparent"
    },
    {
      "address": "0x288E8b2d75380A63EbAa858128400336fF5B2145",
      "txHash": "0xd44240cfbda1a9ccc3b26392680f2bf2454e48481fedd3c270218cfb3f6ceba6",
      "kind": "transparent"
    },
    {
      "address": "0x99949cfc5166Fed80F23B4632017d3eF10685fE7",
      "txHash": "0x9daa10fc566da9304d5364d124f7e1db565e0e43a4ee3dc1bdeb87d007182b41",
      "kind": "transparent"
    },
    {
      "address": "0xeFBC881dD4E981309F6a6A40A1E804D35eD7D5b5",
      "txHash": "0x9cf9f543d5e7dc4906f2ea5bed0a88c1409ffb7caa0bc58d3422e681874c65b5",
      "kind": "transparent"
    },
    {
      "address": "0x31CaF93204e37398190dE63C008CE970f1fe3C33",
      "txHash": "0xf91387360bbda9e9042d2896018309db178ab81ff94fa4378e8733ad974617f6",
      "kind": "transparent"
    },
    {
      "address": "0x0fa8c5A4cC1129f000c65d6a6889a04333bA2329",
      "txHash": "0xd68c8a0cc0b142bc445aba0f933cb7746d76c248d48e63794a612d9fb5477945",
      "kind": "transparent"
    },
    {
      "address": "0x3E194e02Ce9Cb0CA3707D5D01b33435Dc6028973",
      "txHash": "0xb628c0d70fc97edad840bf83f5be6ed10711511d755a0ecde8c6d22129024c6b",
      "kind": "transparent"
    },
    {
      "address": "0x77b19AD4aDf7d35A509574EF93ce51F95362E88e",
      "txHash": "0xa1681b362d3ff108e120b50804483b9d6a4e0f29a2665b9949f87a90c844667f",
      "kind": "transparent"
    },
    {
      "address": "0x79d1ab6CaA86072D43439c51BFafB3F58910252F",
      "txHash": "0x25ef6fff5d7ba19eaf8fb0e9a4cfbd5ae18bdf99b6d4d1c69d5dc13b1d42c01d",
      "kind": "transparent"
    },
    {
      "address": "0xDdE3f47d207265e199cc220920CfFAEef05AA7AA",
      "txHash": "0xfdd8748d98136b796437cf0b8b3c3b5a4c81300714ea77d6533ff2b0917b1a45",
      "kind": "transparent"
    },
    {
      "address": "0x1095494be4E03fB70aB4Ab03B1Dd4cE8A6ea0ABe",
      "txHash": "0x03d11ee7e180e03503a6baf8e301830f167408b5d7688edfabf103436d055c88",
      "kind": "transparent"
    },
    {
      "address": "0x134D31bafBf1B69674b33468763CC79061a91438",
      "txHash": "0x53b0a581fb630db6d7ffdaffe031d1707959ac5aeed9e9cc2a6b64c34eedd4d7",
      "kind": "transparent"
    },
    {
      "address": "0x2e5E6f4FcEF9C11354Be5f50ce4385C051Fd71db",
      "txHash": "0x0855170bbf7c799b64696ce9f8c75791837676b2e6b35368c1ae8f5e09f65ea5",
      "kind": "transparent"
    },
    {
      "address": "0xb855d1bD49C5308CE1acA03F99844c802e371F5E",
      "txHash": "0x6f9e5fff9336ef4cb185445cbd0f4a00079db9339820e16a72934cd4c9a85d1c",
      "kind": "transparent"
    },
    {
      "address": "0x59Bf23ed87C7600A98cAc28f870C5A64dB023D8D",
      "txHash": "0xb119811c620aaa8ee8625b7f161f9f4197ccbe68cabaed98904d002145101c71",
      "kind": "transparent"
    },
    {
      "address": "0x605ed5fB9be5Dc319B17b585A0F3d884011Af8b8",
      "txHash": "0xfc43e3e50303beb0ea82900e3737adf45bb2b95df4e17401cadd81d5e8efeffe",
      "kind": "transparent"
    },
    {
      "address": "0x5886d42E3F9217B62f22A1D5FdF4020EB1cCC2F8",
      "txHash": "0x61ca67eccfdde929c9ee8945c13103eda714784d904564f8a33d43a8f6cd99c7",
      "kind": "transparent"
    },
    {
      "address": "0x1974908deEF14201eCa201A62C4a2019cE2F8cA6",
      "txHash": "0xec3867cd5a8a2a1f6bb9a00f96812626e3446190d7b16d29378d9e1531073ed0",
      "kind": "transparent"
    },
    {
      "address": "0x53C03AB9F9D2628C0d16140ed5eFb483Ce62B5b2",
      "txHash": "0xcfe61d28b8cf40abc742581a19ba023caeddd5fc6d8747126742e282363a3b78",
      "kind": "transparent"
    },
    {
      "address": "0xCAD84E67Bde2b67955Cf9FB52EA41efa525B29B6",
      "txHash": "0x44e38bc505374351175d7194f774d240d6f0b469159791703939d381fe775b0e",
      "kind": "transparent"
    },
    {
      "address": "0xEB1A93b438026bEAF66127345cFa2733979c91f1",
      "txHash": "0x10a865e44f16e20ca1422219d89d61fedffd03dd2e1b2c0e584f4adea31794af",
      "kind": "transparent"
    },
    {
      "address": "0x02Bbf80f87431F033f85baff821A20f15E9cAC35",
      "txHash": "0x82f7b973f38a11ff7ca3c5d82ab4dbdb89fcb5c4fc0096cdc8875f98c3d3fc85",
      "kind": "transparent"
    },
    {
      "address": "0x05e3C9AD7D98A9a381901E70769B3d087e8C0B3B",
      "txHash": "0xd918fb4faac1e80a7989931a8e55d789f6e8d5314d92abf932c92e84d1708d79",
      "kind": "transparent"
    },
    {
      "address": "0xC48C6C897bE280e38f5BE9794dcBf90c289679ee",
      "txHash": "0x52af6c5a7539b67a46e21d17c144f279e5cf9ad028e5fa56f85bb1b306c4ed5d",
      "kind": "transparent"
    },
    {
      "address": "0x536c2f1748f0CcbE5Df1DB1A8b928dfd03031159",
      "txHash": "0x26a00a7bbea8dda5790579bb92007564c58ae1147486a408c83858f3aa952db5",
      "kind": "transparent"
    },
    {
      "address": "0x69eEe17f7E2e34589Ef81A7B62BA351C6B5D9eA4",
      "txHash": "0xfa9be2a56ba53d40ec9df0d56c18f6edb1e97e724dbe1edc70a400b9a2c93231",
      "kind": "transparent"
    },
    {
      "address": "0x7d0feef438743B0e9E18C4fbb9816b31A09C6D0B",
      "txHash": "0x3c3cbe5d1d45069f6c782d22ca1f3918b093c3d6ddef44ae5dcb79fe3a295dd9",
      "kind": "transparent"
    },
    {
      "address": "0x40d73B0422223fB294a19e2Fa5A56BEb611FE3D2",
      "txHash": "0x7aa2ac06fbd427e4a5ab0e702aac1d179b2910981cc1fe022f95846129e3d94b",
      "kind": "transparent"
    },
    {
      "address": "0x8163f8BA1A5e036FBDfB97A1Fa50902b68AB59b2",
      "txHash": "0xed7514c65c5a7d628b09579512002e900e870e41668d72df27f43022d10368f2",
      "kind": "transparent"
    },
    {
      "address": "0xC09AD639C14B479e082D2BB6280705a2C188bAb8",
      "txHash": "0x311ea28ad07e247f29b6f366cfd7695d6eae9452df7b1c24b71fada109b8d8b5",
      "kind": "transparent"
    },
    {
      "address": "0x4872a7725225F360176B66727DeB93a8358Db783",
      "txHash": "0x955a63230b4eaa459f9d6d118e3f447ee814633ebfb4db45e215f909536f210d",
      "kind": "transparent"
    },
    {
      "address": "0x87AFbFBa26FcBD1b6Cd40f377e61067FDbD11471",
      "txHash": "0xd45908d2ccc133921d4f7a5e5b9dd9201e1baab06d2b1d17e8ac1a2f2afd59a3",
      "kind": "transparent"
    },
    {
      "address": "0x21372cA3540a4E5179a32FB9176AFb2Ad7d6a3d5",
      "txHash": "0xa7236230e0ab039d75023995fb7b12260480c5172a272c74ca8412130b53ad57",
      "kind": "transparent"
    },
    {
      "address": "0xbEdf82952dC139f8547dFb55DaB64c35a8b1bb43",
      "txHash": "0xa529d6a22849d217ee17d89f36b41dd6af98ee5d6d0d2bdcc15ceff109f7cd4a",
      "kind": "transparent"
    },
    {
      "address": "0xCC8aCb69DD59CCd3210F1B555bD0515FD57F89B6",
      "txHash": "0xe232218799219d7ba215dfabd094bc7289473bc21742236aaa3686ad3ffb2008",
      "kind": "transparent"
    },
    {
      "address": "0x0CA015F84f2c401b00a3fb24D8Fd12E0B283DB0c",
      "txHash": "0xc5b895d64757e5709470852dee3bc0c4ca0851d639fa3ff559e2f751f6fdb807",
      "kind": "transparent"
    }
  ],
  "impls": {
    "30386f4829313f116de72508d1c2c9aa392a019a1be144cb9569a9b13288d1f2": {
      "address": "0x7b0A292e4c0eb28a471bc9a9a9Af76E58bd759a9",
      "txHash": "0x04a6cfa80869f78a211e3e522d776dedf22b85d316c456b12ebc45c114018b1c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Detake3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:7"
          },
          {
            "contract": "Detake3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:8"
          },
          {
            "contract": "Detake3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Detake3Token.sol:9"
          },
          {
            "contract": "Detake3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3Token.sol:10"
          },
          {
            "contract": "Detake3Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Detake3Token.sol:11"
          },
          {
            "contract": "Detake3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:12"
          },
          {
            "contract": "Detake3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:13"
          },
          {
            "contract": "Detake3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:14"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dd9b6377f3fdbb41db386616a1cf6e5fa3c72043909c6037d06b28df11f60116": {
      "address": "0xB1c97f06bd629fA1C4f7a1a566802A2fF06D3f8F",
      "txHash": "0xc0c69880c67dcd510abedf5bacdfba7f73bfc387cfe70b57aac8005856997d7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Detake3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:7"
          },
          {
            "contract": "Detake3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:8"
          },
          {
            "contract": "Detake3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Detake3Token.sol:9"
          },
          {
            "contract": "Detake3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3Token.sol:10"
          },
          {
            "contract": "Detake3Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Detake3Token.sol:11"
          },
          {
            "contract": "Detake3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:12"
          },
          {
            "contract": "Detake3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:13"
          },
          {
            "contract": "Detake3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:14"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1f93aeb0258fa8b492999f24b8d62f9e8c5ac6fb527ac516f5c22a4b8ecafc6b": {
      "address": "0xB0E037176F5810b062e997F8aC9206D1d204389c",
      "txHash": "0x0f0e4ae93a0500d0af8a9dc3534730bf2ba7574aa27d46ea46c03d3c98a9b9f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Detake3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:7"
          },
          {
            "contract": "Detake3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:8"
          },
          {
            "contract": "Detake3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Detake3Token.sol:9"
          },
          {
            "contract": "Detake3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3Token.sol:10"
          },
          {
            "contract": "Detake3Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Detake3Token.sol:11"
          },
          {
            "contract": "Detake3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:12"
          },
          {
            "contract": "Detake3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:13"
          },
          {
            "contract": "Detake3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:14"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1e8e6f050ab226843272652c6fd07c646405b3738f4bd57007c5b2e6d46f28ab": {
      "address": "0x1F6430a27e4b0d84afB08447e921DC8128b86Ef4",
      "txHash": "0xb7d9cf6a1ef086716ceb1f92d3d760284239cc900552f0d4a1f192046900c3e4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Detake3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:7"
          },
          {
            "contract": "Detake3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:8"
          },
          {
            "contract": "Detake3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Detake3Token.sol:9"
          },
          {
            "contract": "Detake3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3Token.sol:10"
          },
          {
            "contract": "Detake3Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Detake3Token.sol:11"
          },
          {
            "contract": "Detake3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:12"
          },
          {
            "contract": "Detake3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:13"
          },
          {
            "contract": "Detake3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:14"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fe7174af9397a460ea355593c7e3e1f245ac1440d7f3ce003e1dca52705b2bf1": {
      "address": "0xD5dD560810d76C0a4e8eD47eBDCe7Dc488180f80",
      "txHash": "0x4c2015cc311e512aaad839c87885280075a363358e48a0320c06dc458b592fba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Detake3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:7"
          },
          {
            "contract": "Detake3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:8"
          },
          {
            "contract": "Detake3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\Detake3Token.sol:9"
          },
          {
            "contract": "Detake3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3Token.sol:10"
          },
          {
            "contract": "Detake3Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\Detake3Token.sol:11"
          },
          {
            "contract": "Detake3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\Detake3Token.sol:12"
          },
          {
            "contract": "Detake3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:13"
          },
          {
            "contract": "Detake3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\Detake3Token.sol:14"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "36047be5af5f6b1f04e62b55bf84b8a3185b4e9e8294cd85af52ab9aab228d78": {
      "address": "0x5B94C5121c919f11B98a8AA4411340196BD23730",
      "txHash": "0x6f68d6c5a06767b495718665a0eeb2c66b5de6ad64362a77857928a80cee8303",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "acc8a5fe8073e8150a08962f57833233df7e64b3d6b87d5d083305a283e0b28c": {
      "address": "0x5702dC26B10e44c2B9e1c8f226eaB741cbf6B196",
      "txHash": "0x41207a3efe0b24afc4c399005cb897e9ca6ee70702efde36c9e46910ab259b7d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "1c5d360ed05dfd77f94ddbac23406fc6864985880ce83ae6c0fc8c503c80f095": {
      "address": "0xD7E465bc5a6aDD72a231D87e64928beACbaA0A02",
      "txHash": "0x2c92a73c4fee0f113b77def3569885475fd4f27efe60bb0c6bd24118def9048b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "a06f48e016ac77bd932b4283dcd035815fa61cab528ce515420b99817d9f0e8d": {
      "address": "0x05569DcFdF317eF30Af67d41E74840bfa094dAbF",
      "txHash": "0xfedb04f182644ae96413d9e3308c220124d639b839ad5c32bbc4e18ff79b8ecc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "75defd91bc818393d13ad2b1c27d1548bf744011b90e75598ac30425898df87b": {
      "address": "0xA8Bdbb1F4d3d270979d92982EB5a8ed369345134",
      "txHash": "0x9f53826a15e4fbbff9510885c8e0d62047c4de2c005b7c0c0f6761b24b78474f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "78d83716964352b5ed83aad59bbc95c8b25fc7dbeb798cc9d21b609173490f42": {
      "address": "0x39f2Af7F39aE081Fec154d261B2E3C82d6F912B4",
      "txHash": "0x3cdca1017bb12659354b3783f5d392473d9150eff3afd0846a29e9bc5699cd56",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "208ce5d604aefe0da9610e2305aad466e82fb4c674b4eee06af7408a56e2ed1e": {
      "address": "0x9adbD214655FEB129C501d3c4bA6c94e12131dfC",
      "txHash": "0xe6ebfbcb01b94b0fd65686f6c847a592c4bb494d1fc378641ab58e6baa3eeef3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "777bbea0ed751fba5e9a4fe63b557ca7427fa08e91a9965f6e5dee3b1047a171": {
      "address": "0xde901445eEFa2e34CD1f8785b02F98377ABD2e13",
      "txHash": "0x7e6889cef2cafe72a72740f5c11785117b0f561ef4a78cc15c781ff5505b758c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "f15dfa330f8832acba7977044d9af5c420e9800a40df516a8e0989aaf33dd369": {
      "address": "0x88943De7FfaA14ddF7605F9A6dF068666652FA94",
      "txHash": "0x55eca1924c063c621a287c92ef50fe75eb615db7f1ba2eaec0d7a9d65868b75e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bbf530e74d33d77bfaa0aa18f9bff5b333338ab799e23f65fade91b073c5d906": {
      "address": "0xdaBaCfB4573B682d3646744233Ed5b4Ac29F73af",
      "txHash": "0x5033cd5e28e5b2aa8406131982486ead5e033181ab58b8cb8aeb68c65766fab8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5231",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4697",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2936",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5231": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4697": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2936": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "06d2213a5adce0eb2594453caaccf19a88701b3617825ae75475d8851fe4d136": {
      "address": "0xf9B9c2797cEa93e3eD94252f538b048beB90c08f",
      "txHash": "0xedb75d1cd3b4edd8d1b807b3fba97cf74430348728d1cec75d72c799388f78c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5251",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4717",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2956",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5251": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4717": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2956": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e132902d65fcb2c5ed5518442673b90aeb259a3798f20708898a28c0dc8c616f": {
      "address": "0x65b79e814249D1774DfAd786727A91845C67b769",
      "txHash": "0xf3575f11d87c3bacf50c0c4bc2ef63d080bd7e7efb31ef36cb03d168dc3854ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2587_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2620_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2611_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:42"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2587_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2587_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2620_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2620_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2611_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2611_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4b6eedf1fff71e811ab29e467c32254c10ff13894fdcc2fcbed1e34a2fcc2cfb": {
      "address": "0xE5822E1F33878639aaAe8AbdB15BC0C1F5a22b1f",
      "txHash": "0x78386f260fedd7e8dd2e945f0c03ab828dd5272ed0d36c90cc03d49e487b451d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5233",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4699",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2938",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5233": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4699": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2938": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bd80525c3fd291adb9056b43aacbfc17a01379cd9d94a08204b92d274ef0ea0e": {
      "address": "0xf9381cdC5021f447fa31e0bF01A9373336E91D00",
      "txHash": "0xe32751e56db0ba0f51be808569131cac0ae82f499db051322a1b291c12a77555",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2587_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2620_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2611_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:42"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2587_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2587_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2620_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2620_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2611_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2611_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d0b8be2238def80845271dd22dbdad441fb76fee1e60e45edc94e2f74ff05b67": {
      "address": "0xbA5F60fa65a4Bc84852F4666CEDd91ef1C5d3a6a",
      "txHash": "0xcb678b3228145439ffde796bd363f602121a6941723aac91d1cae13dbb7d68f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5204",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4670",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2909",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5204": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4670": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2909": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4aeb02550f98bffe4c14f34e1187c5512fb744120cc66eb0bda8270c7d4c9bc0": {
      "address": "0xEEff7c8CB7b64F60D14162E9A73D26e78994330a",
      "txHash": "0x233ae3716da6a2739f27b5342864d94db560ad1e1cda7ab6f9e2458ebab7cf97",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2534_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2567_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2558_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:42"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2534_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2534_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2567_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2567_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2558_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2558_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "127b01bd13da5469b53a3fe8154cf5a61f2fccd973996c833bbb96553028f4ab": {
      "address": "0x64A50F6d794033DA822cA0c08DF71848a14Ac19a",
      "txHash": "0xfdc48853877d70e20d5c2cd83b57a6be895bada8fe1985a1a0cdd7c6f59c2660",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4690",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2929",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5224": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4690": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2929": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d7e73e96ad0128dac6fdb8c1ffcce8e7c62a56a584a0dc23d72b3b085196ba47": {
      "address": "0x0A1eC591d1E726Eb44cF8A7c9bD93Ae541cf6061",
      "txHash": "0xb8d0803477ab29aa4a908b48687cad398885cea5c9b77c223a5449f8a2b5bbb7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2546_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2579_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2570_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2546_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2546_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2579_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2579_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2570_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2570_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "47fc7a3f0549cb26ed5259cb621423a1df7de026121211196f28977047f3b306": {
      "address": "0x73A769917079C2F61d30979715365150D019dA1C",
      "txHash": "0x804fb0d66b7706213443ef11213f35909a90343b458eb693501dd491a13a1d4f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4690",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2929",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5224": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4690": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2929": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4f9a86069ae3f739f55ff2f30a643b469b0a04f95cdb9f506fa17bd56c22d0ab": {
      "address": "0xB41D4779103c9fE6B7D64E7AD6D6C64d59AfE0dA",
      "txHash": "0xe10472e83211c2391df65f6e1fdd30aa1a15ebc7ca26ff9021ed12c371baf8c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5226",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4692",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2931",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5226": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4692": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2931": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "735f6275258944e51e89cebb2e8e428034e09e8a0d144e9992a31e903d0c451b": {
      "address": "0x1e0d2b946d22d86C50aC21483b3f4e2c35d9b417",
      "txHash": "0xe929cd6805dd049b36464cafa551b4e5a5a62969b0bff4974142d086e710b9a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2548_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2581_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2572_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2548_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2548_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2581_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2581_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2572_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2572_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e258b86776c4485b5168cf7a4d4c5ed0e1a3c7957921c2e4c09467be1f126f69": {
      "address": "0x1ce29A0aD4aec0c1485873Ab37fc7507e1c96cfA",
      "txHash": "0xffd06f15b527142096ed3e0651c85897a2b79e8d14cbadfb4c889bad1fcf00b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5264",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4730",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2969",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5264": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4730": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2969": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ec92d450809689b4f5de820490f1c1d7a3060c689bba65583a345c95438532d5": {
      "address": "0x2387bAE84F6212d4CD96e181F0f47219B42654E9",
      "txHash": "0x6ea9748543b932f67029f71250d853afeca0d9b454435395b4d8cd6ca3dfdaba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "931db001dc731709aaf101eac22aa68d3164a5f11561f803ca37fca81b10a49b": {
      "address": "0x1d888B944f51435fb7C31Cb05a989eEAfb9b7aa4",
      "txHash": "0x4bb94f85c96f119ca89dcb85b5d52ca80969b2d043568ae61a586ac86af28e8d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f573b1d933244a3ca020a69fa030ca86e02d12ea545dfc242b4ab9fb5a2f9479": {
      "address": "0x4BC0132d7141bD17B128372d7E30Ee6270E4F367",
      "txHash": "0xb2288e6b8ee0183322856791846b00fc386b2ae8575cb979ac73e4b1197e4df8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "af9973094ef45456aece52791eea5f42ce5d2e2eb9d2e666268e9a99815eec25": {
      "address": "0xD1a17157967F2a56317386cD55e0B5Ce4aECeDf0",
      "txHash": "0x0f7fe1e8aa921bdf5362889033fb3e897cfdedfc61631b7ec25949f24c0a0a1f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "64da7c218318361947f2b54b84799579715a72f1b478139004411187be7d97b9": {
      "address": "0xC43e40Df988F9Af04dCCe75558Ae7ACa6DA6962a",
      "txHash": "0xd02d5115af0d940fc54b7717db02fc8c7e1764936b0a891009bf67a87172611d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5c8ff375da344edc62004ca27b98c97f3762673808d39fcbadb73786c583c769": {
      "address": "0x1Da98a9F80EEE0eD361d6a83fd45B4745F72a738",
      "txHash": "0xfa6b80a3f5d90897c537fdae21e079ac0298f2c79fc262e2af90d0c69dec2b6c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f12111dfd9746e4be58154b0bf395e2d0d318bfebd3443e9d5e35ea9f6fc6966": {
      "address": "0x4dd9530Ae2Fc0a58578d2212DA475E25b77C2514",
      "txHash": "0x7bb5f4694275454315a88b721c2ae90a80a872b6296cd6b14207dd76159a8374",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "58eac37def9dc2a3439a872886530348585859885fc5bca6f2da1303b5d1e285": {
      "address": "0x09F34D1E20fc2bb65a2F1408fA5BDEDcF7f0cB90",
      "txHash": "0x5f3949a0acb2ced71b84a53abddcefd4f3184663483ede6fe3673f9f65fb54a2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7ae903e8940e87bb7a642112c6cf1b0854d9abf8f7c97b3069cb5437d8bb8572": {
      "address": "0xA39ccf1d1f24B479b35f64cFE0e27F35E258Ca25",
      "txHash": "0xa94fea8ea6318220188b2efb0270c009891d22523b6feb12b4e895b7f3ddc04b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_array(t_struct(Round)2592_storage)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:33"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:44"
          }
        ],
        "types": {
          "t_array(t_struct(Round)2592_storage)dyn_storage": {
            "label": "struct Round[]"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "88465cc4fd63300723187a38433b42f7ba3e8d32588d6cae7ec9920d210b5cb1": {
      "address": "0x6714902E7e6f6E4215342bcDC357169bf8AaaDE6",
      "txHash": "0xc71692da4c72f95dc1e520cbbbf31b6ec769b250d250f74ee8dbb2ca644bc9c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2592_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2625_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2616_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Round)2592_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Round)2592_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2625_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2625_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2616_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2616_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4664c6e0875ab4786350aa6a17bf8390e76aabd5e45642bcbbc5c782350dbc3f": {
      "address": "0xcd4De683e6Ba9c6D9faBD1f662AA1eB2Da577f7E",
      "txHash": "0x0d49d5d653ade83534dc9fcbac3e8f9194ee6cfb4cb1601b2776709aad4630c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5239",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4705",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2944",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5239": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4705": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2944": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "942659ceb6228aac42385ea34584244ec215761c603562643e5c9368a3e2aa2d": {
      "address": "0x588A81E7C14e3D1fD93AB311cc72C7f798B58583",
      "txHash": "0x5a6eddeb09f9d6f9bfa9ae3061d288e84d7222dd704e6819fd607f94ea3c237d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2560_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2593_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2584_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2560_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2560_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2593_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2593_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2584_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2584_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5cba6a3e67075570cd1b0ba6994e272076af7055c77470e6b46c75531f1d8c27": {
      "address": "0x1ed9C326607691BE89Bc9fe5E62a84E1b7acd1e7",
      "txHash": "0x5e1dc63164b7050a6d7317072d14bc87913e49d71d17685ead394ae53b2cd7f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2548_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2581_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2572_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2548_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2548_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2581_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2581_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2572_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2572_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "41c22d01609f5c9bf26f280621ccfbe35e10b4e8c990afde2096c91e4c77f340": {
      "address": "0x3f436c675F67bc20D1160e1e92d3820f2ABF40dF",
      "txHash": "0x7cd1cc07a9c5f91f74280b49abac0b7f2aca99964dbef96ade5e17c277fc28d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2548_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2581_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2572_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2548_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2548_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2581_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2581_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2572_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2572_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3e98cf913df8dbe2b01e3bd49156c498e8e5b7228222737111b78f1ecbc45778": {
      "address": "0x4956315Ed4b2b09342f997b4925A0F3564650871",
      "txHash": "0xed4d8c3aefac13da2e3cddedf3556728c5ca7e57ca2ad080d039fb57c9bb5416",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5187",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4653",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2892",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5187": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4653": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2892": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f78a5dcb8be7e652d5c623144cf98f6842f74984e64b4852deb0e6cb458f5b2b": {
      "address": "0xB04e16e50021DB45BB56cf4BfB59C1CBed048d7e",
      "txHash": "0x573b20a2c3bb25f1351173d30571acfe2517dd262037a0c27ecda4e9eaaca3e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5183",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4649",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2888",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5183": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4649": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2888": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "76ebf1ae4b87c0f7de442d9cb8c0e9e3702ebcf61e0f4fe8b765d4ba66e4f47c": {
      "address": "0x54Ce5823137Bd338Cf584dfb93da5DB86df91557",
      "txHash": "0xc8b10b54fbc5d16ba908aa3a463cc267f4f3c1731d20931b10dff656df1bb476",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2530_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2563_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2554_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2530_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2530_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2563_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2563_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2554_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2554_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "06317e9b6c88dfb988867c92962992d68d7d801ccce43b950524fce852ed2d17": {
      "address": "0x25145d8E54dA91c128306BB534d3eD3f7862b1E4",
      "txHash": "0xd36ad61789a83bc00c665952f4a9ee72681123236172d7e11768336262f2f710",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5221",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4687",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2926",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5221": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4687": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2926": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "643baba201a823431741bb114c3ae1e1a36718a72e1f7409f7f6f81342ff2f90": {
      "address": "0x9cbABDD50004e92017fC96F2dC3792a441C16696",
      "txHash": "0x57ceacb0ee8d4d07bc555cda53d0e2e12362bf324617d04a8950196613d3868d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2544_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2577_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2568_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2544_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2544_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2577_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2577_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2568_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2568_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e1b22f576c142f459cab9d1530918230e207eb1e5470ce8e1082cbfd30ef453e": {
      "address": "0xCfD603030eCa0E918F78FD7d2555FfF12871508F",
      "txHash": "0xec69104108b21acec80e9b5de834de1b0b4fe88be5858505d6791a54b545fe43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2544_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2577_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2568_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2544_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2544_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2577_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2577_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2568_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2568_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6e3749743c3f8ac69f8428db389a8cbc60a4509338578c6b2da9fd9d57ddad33": {
      "address": "0x3958e0983b99919B698F1FEe2b98267C8FeefB88",
      "txHash": "0x2f166f1861716a69bc500b01aab7054746c30d2ceff339916f79a9f3d950e367",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5265",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:13"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4731",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:14"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:15"
          },
          {
            "contract": "NodeController",
            "label": "alphaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:16"
          },
          {
            "contract": "NodeController",
            "label": "alphaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:17"
          },
          {
            "contract": "NodeController",
            "label": "betaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:18"
          },
          {
            "contract": "NodeController",
            "label": "betaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:19"
          },
          {
            "contract": "NodeController",
            "label": "gammaDeAntPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:20"
          },
          {
            "contract": "NodeController",
            "label": "gammaGuardianPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:21"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:22"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)2970",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5265": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4731": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)2970": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "447824cd98f5ce53d59f64973bfd71d0890ff3a5452eb0486bbe972c26ae4614": {
      "address": "0xcd4E9491c5ecf5DB39E8DF16734f42FA49edBc06",
      "txHash": "0x19310f4556ab6902181c3c81815de18a42f9b562355b90b22c600560ca4f7575",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "438b76724c30d2340510ff7a7d0cf3d7351be121074bbc4f2c1c5f28714f9661": {
      "address": "0x006e1a2D950B42d49b85C60821B66bAED9694ab1",
      "txHash": "0x7cf900c942be3433651ad73d8dd88d3789aa6fceb1b5a3bf45b1f7990baca95f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c460daf832eb58f38186c54ca3ae3b97d6f66666f22db93933c2338d789b46f4": {
      "address": "0xfd96460f3764c191effE620Ad41c9Aa2CFED4608",
      "txHash": "0xb8b5edc4a7202b5accc3ffdca47b16a3fdf1117517c6d7afce8722a9bf1c1039",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3fb235d173a8c42d7a8480e4acd997c2b4f72243d39c6a24e827fae573a13361": {
      "address": "0x16d7E8b80795e9B9c2a9Ce7EbDFbBc02Df0F9a37",
      "txHash": "0x696347d0cdb3d11e86b3e4c70a7ec3201b3e751e43bbb28caf05b858e92dbfbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b177f443b9d0f816c58320e3a66fb4eb8d3f3937e46c19b6f911cafe8ef6f167": {
      "address": "0x3e596AAc47151dD3eD883fbC46f7b727dcb5C787",
      "txHash": "0x9841310db774a6483e9606624aa3bc856f8b3bc165cb4630278f9abec5798b98",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a2be7ded52af422bdaf710400dc102dcade795a33f4cc41e12c19eebcbf30cef": {
      "address": "0xB59385B9196B48CDD933bdC881a5E4923A4D30B2",
      "txHash": "0xd5f843f88449e3632a30ec6f168888812cd667077a95af158db80923c2da3fb1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "342fbd41052d4d4ea4fc7d3f6ef152b6d1a8e202f956c107265b7b9644ee12ec": {
      "address": "0x43bdEFd1CF8E806BC94B216177c486B3C47fc2cF",
      "txHash": "0x5e3c66514853d37925ff4551cfcf45d751d0f7ab195d0a5cbef707627deb0d55",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "71e51904569f5f32892ca1a093d8f9a63240cdcf7799d4f534e83c62056217f7": {
      "address": "0xcB7CD52Ce3016C704BcA0285A41A23D07259E0Ab",
      "txHash": "0x18f2c66f33381c6c44aa60727f92f47719b63e9ed6c7cad44baddad02bfe78e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b272036b828d88d3d4465a18a346b51ddd277bd8ae8b0f53786acfbb62d1115b": {
      "address": "0x53E01E1fe22442044c88937d6DF7800104564d33",
      "txHash": "0xe215d77c68440ee238f38b10f7f90034a5513a483dcf6f91fdcfd6603fceaac7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:35"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:36"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)2556_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:37"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)2589_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:38"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)2580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:39"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:40"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:45"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)2556_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)2556_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)2589_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)2589_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)2580_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)2580_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "86345321e6354cd26db7ef72f2dd27673f5ec54b38cfe063cc1feb6a2b4ad377": {
      "address": "0x86720c85b00eCf215c63970aA2E2487c516D45ED",
      "txHash": "0x68f7271a344dd415df44f69f4e0b9496c31057d07b63e4b15436f4d1ae8f9605",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5460",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:23"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)4926",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:24"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:25"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2211_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:26"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3165",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5460": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)4926": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2211_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(NodePassive)3165": {
            "label": "contract NodePassive"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9f63f9bdc5bdbfc38902982db2aee3bb1a73c54f70cfde507dab707618d1c33a": {
      "address": "0x837DBe83e5f90DeA86DBC9E55402CAc979a99dAA",
      "txHash": "0x65597f17759bf3dea47a9cef2ade8bd5db7fc63e7ec5ed70c217af6e47f2f089",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "940bee5088f5f7af9f0fdf639e5db76f44817aade97f487ba67233e102c0c8f8": {
      "address": "0x40758aE31BF9E475935e736d80Eee4a773C45df5",
      "txHash": "0x429b573521a7b33978abd1e29702d7fc060a5524231dd440142b71a0d86c2d94",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "f452f2ca117769e20c7c94418002c75cbe509dd140e3d4fbb3924aa915ac8a39": {
      "address": "0xCEEb63A824871DB83947D3A2E62C14b66F02713f",
      "txHash": "0x35733535969a02e2fdd2ee7c26b9b9745864f0bb42664ce7217925bee99fb814",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:15"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:16"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:17"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e4b8e86f84b9e0535ee56133e6aee298bff52cbd1a59143f5686fbca4e298003": {
      "address": "0x00aAF676E67Fb61e1daC3D4244fa5de0BFBB41d3",
      "txHash": "0x46a37ffe03c1ce2d89c32adb2c9f3a3791c0cf796a0bc4b15c5c3f89f6c8d908",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5733",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5184",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3265",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5733": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5184": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3265": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c20d4de36427752b65d05df33e3b2e1059086285c06c4cc3c3314a3b7efb5eec": {
      "address": "0x714293B7Cd10A87d85BA01d3F0DddD08feBA541A",
      "txHash": "0xd73335dc953484f865f941c6712ba238d8f777173274896f4594eff615307f9a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3326_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3359_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3350_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)3326_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)3326_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)3359_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3359_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3350_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3350_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0705ed77981db6c1dac84f8b1cab4abb4ad5a36628531ad930b3036232527f00": {
      "address": "0x4b8f86e752fA7C95adE156bA186B7A24363277cA",
      "txHash": "0x6140ad012aabf18cb23ab4d79f7352dcfa3452da4e5fe1ce2c2a35cef5d7dd0e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5695",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5146",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3227",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5695": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5146": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3227": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "945a87b1ed5973ac0729c3afab58dba6b018b2a7ab190b1c1ae4870d796c51f7": {
      "address": "0xc8426d99306726a2bbF7656e30f65716454D1685",
      "txHash": "0xaa713c76423800af98aa115366264e5f4970d4413290e45a6826754f630480aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5152",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3233",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5701": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5152": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3233": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "658f4727b778824d8724eac6d9686f25d87b15aa48432b9462b2532ac98276f3": {
      "address": "0x00cf9b6025C13a2094d77C5482a914223C738D96",
      "txHash": "0xd8ac03a1a9877a5c6bf27677e75ecd6fa7d75a8b3dd2bea08ab25feb8e30cb35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5727",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5178",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3259",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5727": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5178": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3259": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "288516f78e3cc27dc23762d032d3ac5c5ed26c8ffe0ed941965436df9105b66a": {
      "address": "0x5D5674F18d837f5467981f3198C1F83126567312",
      "txHash": "0xf4298718a2d74d425d7eb5a60cd9b4fc7712883055e8558aae81fcbd61cd105d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5703",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5154",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3235",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5703": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5154": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3235": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c8e4916a206c039eec905d6a0a4e512e433fa07d2eae23e71119d7ec7e635d6a": {
      "address": "0x17E2BFde67f1CB701e4bEe29bB120CCaa2FDd224",
      "txHash": "0x7936951a998cc9d49b8f24a0456c0e5181a771e8a313ca60dc6bbece6f39b42b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5715",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5166",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3247",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5715": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5166": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3247": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c5f252e2f316841b685c5f645b9eb5c20b86e24bda6a3a81d70de9562e9c76d7": {
      "address": "0xFf1AaC792F5Ce7E89D7d205eDB4D09e446463D11",
      "txHash": "0x6edda25600cb4d69d77e36932a660bfd6924061f542d7ac0c79bc038777f1a78",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "b95a9dde6c8749250435fab5dc84b6d369c5396e726cd39b906be233bfa13024": {
      "address": "0x93415E345a33f472174caaAc07d0E5235897658b",
      "txHash": "0x2fee28dd5c619c129dc567f33e50c55d94d6f6cd81c99fc50ec353803779aac8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5796",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5206",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3287",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5796": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5206": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3287": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "234c2b404b79791cab2c95a9326d52ea542ef846e7f3c149b4b26dffd9618e6d": {
      "address": "0x33A663C4820efa89a1F646F1E068B4883F5E81a7",
      "txHash": "0x290ef9b05cb00ee0a74f20bb79c4c807bb73a3ed9bfce0548c1658cdaeee0de6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3348_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3381_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3372_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)3348_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)3348_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)3381_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3381_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3372_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3372_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "05a2a78db4f9dc5a5967d5abcd2270daba02c3c0d90817e634af4ef416a45200": {
      "address": "0xc02b3Ea514C7eb39BdD72bC85A82261A27e8164d",
      "txHash": "0xc4aca55cd0323b05258bedc165a5fa98f56cadcf983cc06df8399a311d26d497",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5784",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5194",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3275",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5784": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5194": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3275": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b47f4b3f8abc41ae26e0d5763c77f8b0d966fd26d2f50ba49b6c55ae89c70754": {
      "address": "0xD6A0C66Cee46333fb108db534995c24A8F694624",
      "txHash": "0x4afbef9172b1351518eb604aad2a63e3f464d6702e055677b1b2a6323b937667",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5778",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5188",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5778": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5188": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3269": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a844a1e9b4e0627b0839c6bdc75647a779d3e356851d0e117883b697cc33c914": {
      "address": "0xcfb16a2150847e3182164daC84722d405C778d4A",
      "txHash": "0xa7bd61510c3b2e4c7906cf42bfc0a22414c4f407dfd41a45c4e2de336760678c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5778",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5188",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5778": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5188": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3269": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5833fd530efee0c9c527ef8c52cef41532ac9b5b141ab9f1b704fe422f4131b8": {
      "address": "0x6f8e8360E940cB0D2f135DafA177EdE529B41235",
      "txHash": "0x776e3a3c32f64d855946d83dd4602b81be18228d2c2fc1d6e4020bf2dba92ae5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5790",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5200",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3281",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5790": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5200": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3281": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0f2e33ccf7f7e276eed5d93afd087546785284ad77acae1f01c2a48788bda485": {
      "address": "0xeF515877D4DB6978190dfA1dA98EFa7bad85Dbe8",
      "txHash": "0x1eae387c197c8d2abbd4e8262ae659ee14caf33ae2f1eef52352a77fb1bd76b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5800",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5210",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3287",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5800": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5210": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3287": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5b62cf219204431f162783708efb9eb6a4025ce89fe3acc7556c023e3f52e1ed": {
      "address": "0x947B8589123B12503055A03F9783EB90Ef6032d9",
      "txHash": "0x63fa1ed50640981967d56f10581582cd096e43dbe27059a9a8bfdb828b867261",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e99fcc0bc5d1a9ade24c9194b18f988c4baa89a312087758cb4abcc40f37b75d": {
      "address": "0x6693356c36B5AAB4f4292E1E861E54B7132a8714",
      "txHash": "0x385c697e9973a3b4b40f27f85a14462f04438d88e3eba65006ffaa04db1ff324",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5782",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5192",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3281",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5782": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5192": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3281": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "28f4ef5cb0a9ed992caec609792a4329f320897fe2e834c13ceca14415709f1f": {
      "address": "0xd561ffd3865B01acB44f27eD0cc57F90cfBE2D45",
      "txHash": "0x99fdcbdea11887114b7c55c5f2352f0cb1bcf853990d6913efea576137a823b0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "86d922da3b9b3c8094a81dc1de8c01a938a2c11e847f7799fa2bdc557d82796c": {
      "address": "0xFBcE73c089c5a4710C0ca23f47A2111765eEEd89",
      "txHash": "0x029deea4291e517b46698df70750184f7f92b9519cc25a9e8348bd54b37677f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "1c70963ea7d514eb45b28f134b7f809ab410b22119147737d4c25e1e0d4d829c": {
      "address": "0x54c3D6e6fD1267E2a4eaf47bDAa02170FCeD2413",
      "txHash": "0x6089aec7c0b444639af85c954fe3ac196239656def89e4ca289ef53cdbada50b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5838",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5248",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3325",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5838": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5248": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3325": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "54d570826163eef83ec4a5dee59957aecb548d750e354a3f5c40ad7cafb7078c": {
      "address": "0xfb78B2Ac5d49e9ad974c08a82f8639C91Edb6b2A",
      "txHash": "0x9400a46cf9adeee89bf4423311268b02b630f20fe80f1c6b240479bdbcce38a6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)6237",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5647",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2579_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)3829",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2549",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3773",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)6237": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5647": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2579_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)3829": {
            "label": "contract INodePassive"
          },
          "t_contract(NodeActiveL1)2549": {
            "label": "contract NodeActiveL1"
          },
          "t_contract(IMemberController)3773": {
            "label": "contract IMemberController"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c6b85c40b93353fc272d6a32759cdce178e905648b7145ed4d2a60abd1cffbb7": {
      "address": "0x722D73f9085efc892f333AbA2fEfE60c97fc6E2D",
      "txHash": "0xf7db850add29233b20c1c4666f2b2cb07f12e09b75f27e32de22059f6b32fb9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:13"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:14"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:15"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:16"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3784_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:17"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3817_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3808_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)3784_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)3784_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)3817_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3817_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3808_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3808_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "82055be866c2094d66644656daf28affcd55445e4481f4dcd2a75bfda79c873f": {
      "address": "0x3183a75241becB98f9b2b5A7eF8c0Cc932656287",
      "txHash": "0xb5285946a2e507c18ab8721b6dde28f09c0e8ac37c64f305cf6a072b9e4f5f0f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)7038",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)6448",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3019_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)4630",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)4561",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)4561",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)4547",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)4561)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)7038": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)6448": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3019_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)4630": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)4561": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)4547": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)4561)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "56923d1bac51b79143d0c6ecab781dfb71e2a24c408712b6cca2861324a35edd": {
      "address": "0x12E4fbC47CE8CDdD28905D2aC29c61aA54ee2207",
      "txHash": "0xf5688c3fb12c05c8d52be75bae33a0bfc1338489af5f254caebcbb106f8574bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:14"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:16"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4574_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4609_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4598_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4574_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4574_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4609_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4609_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4598_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4598_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "07cf502e32cecf0f4e22c0c345a87e1ee7e89cf7e156f4c0f8509edeecfa6a98": {
      "address": "0xff507959f2cfe900eCA08B27AaaFd7c1A03C16F6",
      "txHash": "0x357919dee05c44c9f47eb6b7ce91e03f8b627308fc1ff37d2ad8835a3bccf46d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4574_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4609_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4598_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4574_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4574_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4609_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4609_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4598_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4598_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d48498cebaf61f716a20e9939d54836dbc7d967e3503a942164bd7225ca23d51": {
      "address": "0x0051218D7AAe063753CF63edbDc64e7f7b24FE34",
      "txHash": "0x9ff7a29a5b00e1a6585ed5768424356f98b088785d49a9ec66cd31725a6145bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4454_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4489_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4478_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4454_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4454_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4489_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4489_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4478_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4478_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7680c2127ded87380d86aaad7a16bf4cf3f13fb88173338c7a87348a26178af9": {
      "address": "0xaf6F58a8e45a686513878655a28880f22B7C5712",
      "txHash": "0x66e6f44973daca770354a74915256247050c6a8fe9703c36929e2eedeab46744",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4442_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4477_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4466_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4442_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4442_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4477_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4477_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4466_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4466_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "38811f5675948881f52a1505aaa2f165ae466bf7ebf8756488d71324fe021557": {
      "address": "0x3613Ba881BEf1e4923e41Ff0876B90a426aa1BE6",
      "txHash": "0x79dd24f62e24638b646d3f61c49d08c7fbc5d13482a8b9d0ae695fbf9b348fbd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4452_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4487_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4476_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4452_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4452_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4487_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4487_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4476_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4476_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cf1ded197437e89f0aa8fc2ffee7799741cd9a0856d1e81ac83e052bac4ff6f1": {
      "address": "0xE548FA5dF4D695db70F2d02A63fF9CAC1dECE3d8",
      "txHash": "0x434bba4b324aa12e61d8cad30e12f843974e95bb2828b79f564d49c4ac24063b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4572_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4607_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4596_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4572_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4572_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4607_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4607_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4596_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4596_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f740d3ce5cb1ff496015d0af67c61abc4bdc1226085fbe795666f9efea630ce1": {
      "address": "0xb306e89eCD128bb47b8f8B7B7fAa18945Ced3D38",
      "txHash": "0xf7a4bec4e702b061ac102c3c9882d24b2d3b64b6d5847032347aa5518a8e60eb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4572_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4607_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4596_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4572_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4572_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4607_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4607_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4596_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4596_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "71fb11473b215efe5ea5707e590ddca0e7037a666e4a3cbfc99833e19ee03c84": {
      "address": "0x6D70759EF8EEb5245ccdA37F8B094509d6a1A747",
      "txHash": "0x4d1154627a9908da5d1e1663b580498eedb69dc363f0dd850e95e0d421f9d497",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)7072",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)6482",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3050_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)4664",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)4595",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)4595",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)4581",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)4595)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)7072": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)6482": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3050_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)4664": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)4595": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)4581": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)4595)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "26fdc408c3ef73d6f36916289f0b245e0725970d21e6bd8c93b40eb791a248fe": {
      "address": "0x4fCC8A641f0dcD002ee777b3306FC9A31894763a",
      "txHash": "0x03168417f7bbaf21137ad7ae04c040a9514a8ea887bfcbfab3656b70129545cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:14"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:16"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4557_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4592_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4581_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4557_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4557_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4592_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4592_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4581_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4581_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ed44655afd1bac0363e5ee4eac71794ab1963638d8f4f2a87ec3b36d721c1d3e": {
      "address": "0x184239823BFC40625b4B592E8C01C736e080F0F9",
      "txHash": "0x4686eff2609b1f35f70f79796c052046faf0087eaf9a3476540fcb3c55f5b4dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:14"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:16"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4571_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4606_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4595_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4571_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4571_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4606_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4606_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4595_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4595_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bd892d3f71d004ec23cb5678c51dcfa8fc07337fba4d3933023cf5f785e6c03a": {
      "address": "0xD576593824EE5CA8aedf82806fB4306e83742B83",
      "txHash": "0x7bdf0296c86b6595befa020a9f8dcdaace8f41dd8206c8d1e66f50d8243fdf15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4464_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4499_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4488_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4464_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4464_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4499_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4499_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4488_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4488_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7835cdd3de2803456dc60cd464e9c6c6ebde861ffd18992593f8f2be96842db1": {
      "address": "0x44659810f6064dE5A92488C6C08C3db80e080EB9",
      "txHash": "0x966792452daba49946ca99822c771adb3e88986836c618db8004e6cf11df3575",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4451_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4486_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4475_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4451_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4451_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4486_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4486_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4475_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4475_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "28837d74e6361d0df7235a31eb4a4a3a1ec271055fd1aeb2cf7e7ba200f95fec": {
      "address": "0x6376e1B18D17186D84e46af6645F18a8dA06E423",
      "txHash": "0x19faf8b6c7e5bd791ea0d1871f90738942a16b2112a27412c0d5dbde8668855f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4571_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4606_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4595_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4571_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4571_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4606_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4606_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4595_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4595_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9f11707e747fa06a926f8aaf5d5dc44c7a883db747b9d84802406ec170e4d4c4": {
      "address": "0x49375C6bB8f7e46e5ac987457E3a08ba7B9169E3",
      "txHash": "0x596523ad8d1cb2b9bb041b5f2be09c1f098feb430403c71d34899587ed51fe59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4563_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4598_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4587_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4563_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4563_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4598_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4598_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4587_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4587_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "84040ff1f6039bd765ca94417ff6a42b1796d9e41af0938c8fbf1337ffb1a795": {
      "address": "0xEB5B57BA6f1971BA9FfD901b2340eE7565c7b05f",
      "txHash": "0xf12903019cf542e1b0ca36adbffbad72d2165a98ee57f23d2604a4fb305e6430",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4573_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4608_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4597_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4573_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4573_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4608_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4608_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4597_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4597_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "24838c1021ce4f08e8664df38a5367ee80f56396b5e2fd7385fc8061d06f3412": {
      "address": "0x837388Ce8c6f7AE44622C48178b98ca5b2D6A2b2",
      "txHash": "0x40beb329db4dfaf84de564085c871abd4e64b11cf21906da1823ebe7a71e8b95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4588_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4623_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4612_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4588_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4588_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4623_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4623_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4612_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4612_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7d79e1933611f01096388948b4abaf8c4ab068369cb9569b64f19d0616e21f93": {
      "address": "0x7E216c14eBE2056187FaCd48813CC58E0A67883B",
      "txHash": "0x8ad00fc41c75bc25f9e23807895c85f61877354aef7bd082ad42cadc45f91b45",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:14"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:16"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4604_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4639_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4628_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4604_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4604_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4639_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4639_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4628_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4628_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e3875911d897f2ceeccc7a916cc41291c7d23dfb8212f717ff6e0e64a4ac4e55": {
      "address": "0x8e0442BE79750436B55D814571aC9cd30c19994F",
      "txHash": "0x9e8495bfdcd330425fa12013c8b6195ecbae15b53f44e279b6f27730337b3688",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4604_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4639_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4628_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4604_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4604_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4639_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4639_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4628_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4628_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "aaaca6084fffd0494891330da198cef668a912b33a694773ba3ef197e57250a5": {
      "address": "0x3612Fa9441479FFBa9ACBC6B53121a7a663836D3",
      "txHash": "0x6a20de38b2d5f87bc6ecd122c8cd4d73a66f4f43dd8b92325dba7c5896b831fb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4606_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4641_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4630_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4606_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4606_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4641_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4641_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4630_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4630_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a469f8a744ab7b3ba1bf49a6fa980269cff8dde9d926a5a801b46c912d415008": {
      "address": "0x613D4B271D9A8D99D9f2eB425F3D47649C1CEB25",
      "txHash": "0x3fb5d7be4ad1007905878b4ea883359b73c8bea7ee5fa9a2e7a6a65dc017b445",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)7290",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)6700",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3077_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)4882",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)4813",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)4813",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)4799",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)4813)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)7290": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)6700": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3077_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)4882": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)4813": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)4799": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)4813)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "24627bc11bac919c2f02f1f5d898fdc2172324bb94077b983811e89555c4328b": {
      "address": "0xD29D8509b758830e62Eb32B433aF48717896711D",
      "txHash": "0x5079fa17cd21b14404ee72bd8a761eb5aeda0d783cd580029ed99db3d18e60b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4803_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4838_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4827_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4803_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4803_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4838_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4838_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4827_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4827_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b2fa74ff3884199d42d77b4c389da6da812e5eac42713dc56d364b0011c218bd": {
      "address": "0xD1CdD0924F1575c4a0033A295Af1564519FDFA60",
      "txHash": "0xbb4e03acab8f9a8c9fc71e103e95e9741bf2513da170059837fea927c6a3b784",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4809_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4844_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4833_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4809_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4809_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4844_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4844_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4833_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4833_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bf6f3f89f98fa5472be724a924df763faf31727af9a2896e4f232da5c222afa2": {
      "address": "0x19BAbc7d5A95819587a78613b8BFd0913B4F6555",
      "txHash": "0x893d1db971b1b1076b714199bc31b7383df3eeac36e39eabfaebd6f9c7b58437",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4824_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4859_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4848_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4824_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4824_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4859_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4859_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4848_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4848_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "34e4257c0cb2f5fdbad267f71ef5bba03fb4261bab5679f6753a1015fcfa3069": {
      "address": "0x0771944f5deB16705Ea383ca42b6540e20f47c66",
      "txHash": "0x9ca390de27af7e60b5b41b66056352babe6f72f1ebd336dcc9a50300d6d5ffd4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)7453",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)6863",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3217_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5045",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)4976",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)4976",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)4962",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)4976)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)7453": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)6863": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3217_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5045": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)4976": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)4962": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)4976)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "993a2638ce62640bcc4049cb7e749f830e8e208204b6ca594a37e26019488b0a": {
      "address": "0xBFbB010587aEE7542C1e08998fDdba6819243ddd",
      "txHash": "0xe773d15726ea3c8e571a2ba92c0afca591ab7d98d280771c086afbc8b1ab07cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4847_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4882_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4871_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4847_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4847_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4882_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4882_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4871_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4871_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b75de43d10639b641c6098c643c2fa499344548b0113ce4856d8b9eace4ca4d5": {
      "address": "0xDe4D56D64f1798B5C35754f177c1F22D55c7c700",
      "txHash": "0xfdb7a336b755a14f13c6cdc2c23f11ba2468ca32eb5409156a91e3793cdc42bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4847_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4882_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4871_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4847_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4847_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4882_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4882_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4871_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4871_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d0bffdd63b889a5a6808d54de6bd2a4296a6af274c9809b05abbccc53f46ce2d": {
      "address": "0xf16D523F700f27b3E57c234A8D18821561BCcBe2",
      "txHash": "0xbda4d1b244269fdff5f4754c0a6cc5736851c7b609d03f84b287db10727863a4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4847_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4882_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4871_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4847_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4847_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4882_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4882_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4871_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4871_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d9d5c8abc570e6a4302ab62fb23e3700c45d7f93160bdd3a16bed675911eff45": {
      "address": "0xDc2a7feF83e7FceCcc6c5FaFf9B688Caab8F5Fb3",
      "txHash": "0x1ebdaade5f05f7c14c7d9d6b7ec24dff959d39c06319283463ab797669319b22",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4847_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4882_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4871_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4847_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4847_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4882_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4882_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4871_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4871_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1c8b39dbaab879e1ac046d5da0adcaef926757c195a834ca3667fddcc1f58043": {
      "address": "0x4873480eD0700357493093135C2e7161BedA5ae2",
      "txHash": "0x18c4fcdddfd96420f9474589127217c4a0cec95eeb6adc867be90315b3acfe85",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4859_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4894_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4883_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4859_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4859_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4894_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4894_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4883_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4883_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b51da2b5f49773a7a47dfc48cefebd23f0c2f237631d5b58aacc755ce4403fc5": {
      "address": "0xaEA0D693cEeBf0E29c7F2B7842964E49801B40E7",
      "txHash": "0xd33119af3d3d1c8355efa83149fb2fddf85cd7a1eaa8476d3ef0a40e2ca91fd3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4953_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4988_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4977_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4953_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4953_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4988_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4988_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4977_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4977_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8b3f6f85b0bee94a1a1bd0d048c89a5cd4ca5ef8eb2ba7d11bf156694d702647": {
      "address": "0x9f186818DDB31427FcF9F28E838dCf7E37482FAd",
      "txHash": "0xe8fbe4f702444d0ad8d9caffd2ca88c37125d3b9035e67a674c9db2bac3ed2f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4948_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4983_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4972_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4948_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4948_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4983_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4983_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4972_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4972_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "38b020b1f84176dc90e0b92ca85d2ad7de6d75fcf78fad329ed3acfd091cce34": {
      "address": "0x8866f8ba2d1dACFAA9a81CE346BBfD29D57d8f6c",
      "txHash": "0xef73805d1990d5370748a4248c32025beafbb44dbcd62f6f7f7657406b165af7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4944_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4979_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4968_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4944_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4944_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4979_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4979_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4968_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4968_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "884bc3d81b5f3b23ae230ebe4d4274ba81b16ee088c4e80cc48e0d3f998fe504": {
      "address": "0x904931d27F3eE9C19DC2cdCAaCF6c377616C2ad4",
      "txHash": "0xcd399985049b9b81e990df55d74629a9e892ece339ff2148855293b24cc66fa2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4909_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4944_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4933_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4909_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4909_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4944_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4944_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4933_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4933_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bf8da640eb142cab614105cb49184d3c12d4175569ee7538000897e5d051929f": {
      "address": "0x0220473034fC4E3E41dA0Af4BBFd4e5CE7e498A4",
      "txHash": "0x04517a24170a1224c74437f840bac616668f62b8d9ce0de3ac3c229beaae3a58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4909_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4944_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4933_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4909_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4909_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4944_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4944_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4933_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4933_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5d4862081240a956cb9cfeecca32a28c86b15823a93fd915448da094d5632497": {
      "address": "0x33424753962959c7ab5De48ed24e4c994DA6ce8C",
      "txHash": "0x8187e2a9026132502b079a2e9ac83797bf3d0530f018ccc6e908fc02e7a15f49",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4917_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4952_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4941_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4917_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4917_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4952_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4952_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4941_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4941_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4a338a9e1be99f7c2a1f9baa1e35674d9b8e6318fa97b98b3ed0ccf9113bbbda": {
      "address": "0x12EB9D5d9013a56d985E76C09eB81906b5522028",
      "txHash": "0x87f89494e419a9d937b3ceb60b1ff25382f1e146dca6baee8df9226c3bcdac10",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4922_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4957_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4946_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4922_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4922_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4957_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4957_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4946_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4946_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8dad10fb35775d3bf9b370915719d0fee88a797e71266ce8d9488c4060b578aa": {
      "address": "0x9F426d57694628A3212E8BeE785e2303A12178B8",
      "txHash": "0x591be566513f5e3d8190ed9a28c1dc12fa46ad558147b2e8fe15cb61e121e342",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4953_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4988_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4977_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4953_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4953_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4988_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4988_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4977_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4977_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7dee7a1a39de3bb8e8afc354d22bd1466b4df0f75c86770d670e362bbc62bc39": {
      "address": "0xB4eaCb288ef5435082F00AC4Dcf7d013b820b9b5",
      "txHash": "0x109b7671b167f3575d4a277673721954bfb19d8c67a62cac4ea6f158e0932610",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4948_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4983_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4972_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4948_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4948_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4983_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4983_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4972_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4972_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d48271690d91fd6031c2f9c85662da36ace020e8ee74234cea2559e495f59be3": {
      "address": "0x62933E348ff8033221f30a9EB17a04982D5B9e99",
      "txHash": "0xc61adf0264ff824864e7fc489a2a96708ec0a4e2d0d409f9a41b9888aec2ffe2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4953_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4988_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4977_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4953_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4953_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4988_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4988_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4977_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4977_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1ea9d45ebaf0905db8c6bad77714c1b7a6707d07eb073f47347ba1814e77292a": {
      "address": "0x260310f7d4D9fabD2041af8d013B3e35336A4477",
      "txHash": "0xdabac28ff46d77461602e8b1189808da26e2660e64c1e20c632a110857049e18",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4959_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4994_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4983_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4959_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4959_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4994_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4994_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4983_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4983_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8256ddf910d5e985374b4b5f56b2a1256c9d0c2bde8f27ad86865f9583dc2fe5": {
      "address": "0xABF9B144437A51BD5963c69Abe5076ed058e1893",
      "txHash": "0x7212e08c0d40e75126866b5ab64bd7aa52cc39a4337eb8803d552cd788e66174",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4961_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4996_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4985_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4961_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4961_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4996_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4996_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4985_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4985_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "aaf2f947898a5e5ebd81e9598f3bdf0a723ccba1ed75ded599a888bf8175fd86": {
      "address": "0x5fF30D53286501d2fA6a45E3070788a5d00E56eD",
      "txHash": "0x1e4d123df7a47fcbe1ab10f5d103392a85bd81cd428daea066d930f05306e316",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4971_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5006_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4995_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4971_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4971_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5006_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5006_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4995_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4995_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4341d956e788f2949d9ee9a0af7f5fe01db0e2de9140bd885410a0deba4ef6ae": {
      "address": "0x04aC69AB1E8F6038280179d6d28dDE964B4E7068",
      "txHash": "0x9be9ac04a68ecb284f782b772810e96b7c4a2057e646613ba2d706ddcd960d92",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5032_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5067_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5056_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5032_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5032_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5067_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5067_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5056_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5056_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cf9147dc7d26ab05f48990ec291762a89ae61f34ee09ee6afab1561f596ea52f": {
      "address": "0x00f0b8b649bCfab9C5cE185053Ad1D80Aa0Fe941",
      "txHash": "0x27083a5f749ae89108f3cfbeaee4c1e70177fd284912532a8542a76c403ec270",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5016_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5051_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5040_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5016_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5016_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5051_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5051_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5040_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5040_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7f51e27d3929be68db57ee36c104fcbedb15ac75ac1924c204eaf9268cc545eb": {
      "address": "0xb2a8c3f23819889e1FFe421FF38Dbf5Cfd6CE457",
      "txHash": "0x5c0e4b397691ed6b896dcf3072017fc762c5d28c4b71a1809b31cbed982f25ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4937_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4972_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4961_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4937_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4937_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4972_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4972_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4961_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4961_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4c7b137bcf09caa9f1d8f8a013f59a6280544e2d9cac6f07b417d2d7d6eb8bab": {
      "address": "0xB8b416CAabBCFb86275F89b3d240271BC2539344",
      "txHash": "0xacc0601ded18a26847336b0cb2c4ff702e20038bf1bd2add904ddd1b58c2825a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4978_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5013_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5002_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4978_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4978_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5013_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5013_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5002_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5002_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3c1a5064f7131e7338c57045d2a006592f5df674b5ab3dc947a0d1dc6a38d9e3": {
      "address": "0x86a82669f6C632f81C7bEF82e47ABa14ed03d06f",
      "txHash": "0x0f8ed960116916479275fb3bc0fc1c0c392ab42a0f6aab4a06ce68e337b7ff3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4911_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4946_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4935_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4911_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4911_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4946_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4946_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4935_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4935_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1fcb9f209184f58d4dd5dfccde5226ed1eeda1c3af928a1a42e19ec569f484bb": {
      "address": "0xB05d7B1D27E3d57910162833B91D7628A73A9220",
      "txHash": "0x0d46459f1505952c4dd38676d165c548cddd9161d7778718a70d6b098eb35239",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4936_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4971_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4960_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4936_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4936_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4971_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4971_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4960_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4960_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8476cc292b05737fe2a1735b54b58d4ca041be98ffe5e266152d652d53b440c8": {
      "address": "0xaD609DaA457096dFF63721723145Ec6F3FAF20a3",
      "txHash": "0x0c3eeaee006154c3c4b14bfc4cd30fb8ae8157780bebf876778e68ebbce6d04f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4961_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4996_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4985_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4961_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4961_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4996_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4996_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4985_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4985_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e2ed76acf85914a74b52340fb8ff3fff76d1dcc3750b993d1a4a401461a86eb7": {
      "address": "0xc0D278b716C6A7c4D9d914606F781f55Ef39A0E0",
      "txHash": "0x74a4bff2232fefaf7aa49e13d9d924cbc93e893b6fcd291148904eb8c04af65a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4959_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4994_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4983_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4959_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4959_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4994_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4994_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4983_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4983_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d3057d25c197d3aec043747428b6171d56ed6778d198db6017a0db6584d89a5f": {
      "address": "0x3E7119faE818d962d02a623c30E2207b6Cc912DC",
      "txHash": "0x82f5678b769bc8d753f3b273314c31b29c44feceba19e007ea99f1c2481239b9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4989_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5024_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5013_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4989_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4989_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5024_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5024_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5013_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5013_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "426b50121a78d5efcddac1624ddceaf9653f624f3688b910e4cb39e3a57be4c6": {
      "address": "0x8Fd1780B606c1067a1234a485FE77608e58E647f",
      "txHash": "0xc32225d38cbbad3edee5eaea66142f0e7e7eacaa986e8dd6e60596c0bb936737",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4980_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5015_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5004_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4980_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4980_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5015_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5015_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5004_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5004_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4093e6f4c26e1254cfe99cc21ccf136891901c2924aae5d5dac9c6218c6151fb": {
      "address": "0x2E3A21f98086A7e61954240313Ac61958f07D4E4",
      "txHash": "0x36d82a79c5e55c5e550d3bbdfb5b5b265d5851817a859ad284c450596984350b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4972_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5007_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4996_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4972_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4972_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5007_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5007_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4996_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4996_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e03549920ac548c746f5be9112937bf0b336ce1a8a7b885e3b3806f3557891b": {
      "address": "0x97e243a8c1ff54e5ECd8Fb9Feecb729A1D56806d",
      "txHash": "0x3be01d5dfdbf5a6a835055ada6c8ccbb5bdac54114e58c192c15d68beb923957",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4963_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4998_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4987_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4963_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4963_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4998_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4998_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4987_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4987_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b6dfa33f84f69595bfe5b1b7ad015259fc1f3ada543da0f90521dfbf885100a9": {
      "address": "0x7Db08C9c48f91B7EcFaE3530cE47DF2f50992e88",
      "txHash": "0x4928f7d8103bf24e5fed164b0e0ffae3fc87de62050d6f0c721afbce67270bf9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4961_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4996_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4985_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4961_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4961_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)4996_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4996_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4985_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4985_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9e6c38347b272fc5487f0d6d2ed9f8036ec7f472ae946bfaf57e71f1375d9d84": {
      "address": "0x10F69739d500db1929fc4A0Af69E09a2aA3df69f",
      "txHash": "0x524fc387331268e1b0669698dcdb895a85e85d481d3780add20e69fb133c3244",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4988_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5023_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5012_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4988_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4988_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5023_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5023_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5012_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5012_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3da1ba2a1a6e193060503c0950857e52d337e43fbb908f3b4371ec8d8aed54b1": {
      "address": "0xBF35875035aFF26C6DE52457df0b4A962B7eEA47",
      "txHash": "0xf06985176d892414cfb3f2bd29a71f8d1dcd231dc4b1ecb11080c5ef85ff6015",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4978_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5013_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5002_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4978_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4978_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5013_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5013_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5002_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5002_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "714603cbe040839df89dd6a849d61b2bbdea7840943b82b699d2fe04cefd0d87": {
      "address": "0x0abFECe90964531023D9ab010c6D316430723ccB",
      "txHash": "0x2ff7d457bd2399e6f94fc1218a78e9480d174d3cefefa9577cf615655fea7ea5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4988_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5023_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5012_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4988_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4988_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5023_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5023_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5012_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5012_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d8bfdc072fd5807e1d754c2923f66b72dfc067fc34a64cb4f63cf3f4e65d462f": {
      "address": "0x6Bf11dADDe46fC56B0a65bAF0d297ca45B3bb755",
      "txHash": "0x5769e62d091884c6a6a28246a7c4507503318f397b8002963dd6bbe7373b8a38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4995_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5030_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5019_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4995_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4995_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5030_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5030_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5019_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5019_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6bc6ce6a66295c955c1675487ffe73dec1af394838672c06d679abea080c366e": {
      "address": "0x7324327e1A0C2b573a0F11BD6dB8DE4c11C550A9",
      "txHash": "0x7501b57bb4cc2c1714cce9f688be600cbb2e0f0d38bea4039c1c51a438177bc7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4989_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5024_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5013_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4989_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4989_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5024_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5024_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5013_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5013_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "62164f22cb4344f4b0251a1982518c56cee1dbe7894c4bf3ae6a3e2f9e39645f": {
      "address": "0x2D04B26FEfbeDB25a8B0f5Cc7BE4457592672f89",
      "txHash": "0xec32c1eacc3d22b2467448288310e463087d102c6e14c2c2b92c45e38f46a571",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)4987_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5022_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5011_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)4987_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)4987_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5022_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5022_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5011_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5011_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d8ef45ad7e56db5495a25302c6f62bc69c8b7cbfa8e9233b34f3b866506ca0b5": {
      "address": "0x222E5cc623e2c3Ca3e4bf44afEAA11035FD051ca",
      "txHash": "0x2c9344ece1c9e734b19552b46d8cc7442d0289f6db0dfcbf3e0cf489768658a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)7920",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7330",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3153_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5512",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5434",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5434",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5415",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5434)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)7920": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7330": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3153_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5512": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5434": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5415": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5434)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "f0c0cbce774aec275e77e3d2b2cd567bb51fa4642e1e9f17033dd98379d70541": {
      "address": "0x6c7e05a0397B673AD44A471CA79Dd890d382F591",
      "txHash": "0xcea7ae7cfbd7891592124d5ba5d03bd0ed0c77d4446d5161eb27d942a984b200",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7330",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:16"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5445_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5480_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5469_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7330": {
            "label": "contract Ant3Token"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5445_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5445_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5480_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5480_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5469_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5469_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "cad4b50875d40fb628588fa78b6f923c8e543fde6e7d6f2623d21485b2cdfce4": {
      "address": "0x65FadD02c955a6349b323330348f891315fc18F1",
      "txHash": "0x24fdbde4ab0aca8ea0bfd1615e62f7520b09b39849d5df09da5f1da99b02b3b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7330",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:17"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:19"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5445_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5480_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5469_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7330": {
            "label": "contract Ant3Token"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5445_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5445_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5480_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5480_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)5469_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5469_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "46fde23e062e2caf041d6d2782e54b42e8df91a54aa758b0547dcb78e1b79224": {
      "address": "0xaB866e580D8c1441E57974Ef02f498B7a4af2152",
      "txHash": "0xdba32d5a559869c6da8d322163f589f9ce9a342c34ecc9863cd102a3410ddbe4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)7912",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7322",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3153_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5504",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5426",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5426",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5407",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5426)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)7912": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7322": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3153_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5504": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5426": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5407": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5426)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "918b9ebab839f244fd215b227e6c6ba3fbb3a95f6f62fd0598173cff21516b63": {
      "address": "0x6088eDE59E68F57c1025E2D6431da3610793E146",
      "txHash": "0xfb316951c7de025b05a3b921cec3526b8047f70ce6295d480959b5ca8c22a2bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8220",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7630",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5812",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5724",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5724",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5705",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5724)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8220": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7630": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5812": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5724": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5705": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5724)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "056b329c71d08c1b4d713976d7ed766b14b203b04fb13e68828d1ea0f7e98ea2": {
      "address": "0x31336497DBC08584AE20cb91D99b80Ca1F42432B",
      "txHash": "0xff13e4a2feb16ae961f62e0a74c0062ff4b687f980e485c0c3ece1a3b8759252",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7718",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5808",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5819_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5854_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5843_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7718": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5808": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5819_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5819_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5854_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5854_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5843_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5843_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bb3d292bb433afb4fda1a1014642a7f797a8aee4908e461e96cbcb786f4cf1a9": {
      "address": "0xB00F2405510c8Ea4fB24f4b71C6067fEF7b4bD32",
      "txHash": "0xd1a246f3fef760b375349a60c47aa9c1678ad76b1f8e0686c478108d7c8779f8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7666",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5756",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5767_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5802_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5791_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7666": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5756": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5767_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5767_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5802_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5802_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5791_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5791_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6bc201e7cf721f12e5d619c5e3aec3577f368fde92bae1f9dc3e0d36e72697fc": {
      "address": "0x6e84c095134128dC955722a1940f0B94FB0b9C01",
      "txHash": "0x62bffcf181597b617977581296f181322672a5e6319b2e6f65e7d9453ef8526a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8218",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7628",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5810",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5722",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5722",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5703",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5722)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8218": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7628": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5810": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5722": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5703": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5722)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "17385420ffa690fb23dce7f9ae252b6867ed9981d4d9e1d52fb55a78d25b2fe4": {
      "address": "0x0D80d7578BdCd1988815518f8690f0Cf4Fe38AcE",
      "txHash": "0xc2924804e3c50329252321eeee701d0602db6b49941d3513bc9820e49e267172",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8220",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7630",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5812",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5724",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5724",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5705",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5724)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8220": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7630": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5812": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5724": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5705": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5724)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "21ebf6f0e061834de5b1c2f7f068d1c97d5e48c1720b093b9c56c88db6b89701": {
      "address": "0xADbbfe129B7Bb68B0A009a231a4050762c814cb1",
      "txHash": "0xb8ecff5fc6d9945581eff7b271b839dc59f8f797e74302eb47efecd3baf457af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8151",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7561",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5743",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5655",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5655",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5636",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5655)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8151": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7561": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5743": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5655": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5636": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5655)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3717475f838800a834de782eb63ec61e7c77ca208d460b755a5a04c45e731298": {
      "address": "0xe82Aa007fF01De0B0cFe7833C8Fa1Ffdc1b75867",
      "txHash": "0xe968ff7ff27d5dc6eb021ddda904d13ea5c4d3b02923db6ff8f897f7b41abfa7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8228",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7638",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5820",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5732",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5732",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5713",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5732)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8228": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7638": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5820": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5732": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5713": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5732)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c5b06a6f75168249742c1aa5f196c991a48ef07cfb7fd94ae2dcd1dfe5208834": {
      "address": "0x560F4A380E20508356799F76f0c60d135A1A991D",
      "txHash": "0xf30fc9fef55491362b8c9588c7be81706222cb36b4bb46e79264458cef07a01d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8185",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7595",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5777",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5670",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5689)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8185": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7595": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5777": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5689": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5670": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5689)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b53b7a9b1cdeeb9fa16a23908f7e12b88ee84182d7d6243594e5c2dec00fbe6a": {
      "address": "0x8FD9D318b643aF8cB10c1DE312BB5d7E63A1c8D0",
      "txHash": "0xc736c4f83b01344fa5325f22fa91b4d8cca11033c71b9bd522efb4de126895fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8162",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7572",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5754",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5666",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5666",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5647",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5666)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8162": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7572": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5754": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5666": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5647": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5666)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "fd872afd570faadc9b304334727a64a456cec62ae31010fa03d6a76528c88ab9": {
      "address": "0xa5ae4CD1A6843d525d3B7dE158c2c184E517aD8e",
      "txHash": "0xb1df0dbe4dfea1411c4f62860270a308c24384327e340c080792b958fc927cab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MemberController",
            "label": "root",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:13"
          },
          {
            "contract": "MemberController",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)5691_storage)",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:14"
          },
          {
            "contract": "MemberController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:15"
          },
          {
            "contract": "MemberController",
            "label": "lastReferralCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:16"
          },
          {
            "contract": "MemberController",
            "label": "referralCodeList",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Member)5691_storage)": {
            "label": "mapping(address => struct Member)"
          },
          "t_struct(Member)5691_storage": {
            "label": "struct Member",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "upline",
                "type": "t_address"
              },
              {
                "label": "directs",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "referralCode",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "f7abe2aa9a5f0c0b7908176fa0072f0f0589f9b3e806832824aab00e7ce96f52": {
      "address": "0x947EA95f17E27F25127c0237276dEa7f1A486D56",
      "txHash": "0xaf504fc76a45edc3df7db3a381834dc6d29a25a3c2e0146a18b0d2297d34609e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8170",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7580",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5762",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5674",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5674",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5655",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5674)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8170": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7580": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5762": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5674": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5655": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5674)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "62e69fbf1e57d55bec81a3d2a1e76425d8070826e0d9f235b3496fa1dcb679ce": {
      "address": "0x9e893a0C5e27090bEf00c8fAE8830C08b3A8d769",
      "txHash": "0x730756f0c3eddd8f23d17ea4ffb7047668ecc73ff4c5f48cdc73b2e5a313b5aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8204",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7614",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5796",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5708",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5708",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5708)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8204": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7614": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5796": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5708": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5689": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5708)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "41d7aebd5c30a9dba0e49fa5244db1c8750f3095993ef0124672e9848b3854ae": {
      "address": "0xe5d429c17F3842EE6FeD6357d0919e7A41EaEDe1",
      "txHash": "0x1c89eeacaf6fce4b3468cd87bf410c5cc564f6412a5124806da961a44aea6b23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8217",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7627",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5809",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5721",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5721",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5702",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5721)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8217": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7627": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5809": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5721": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5702": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5721)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "4036ed0264ca7a4ac8e33e3d0a356db45314395c7502bfb337e1ba44cabfcbaa": {
      "address": "0x7b229164E1A454596aaF3CD96E8D60DCf6Ba0dC2",
      "txHash": "0xf8be0c7be94d71f0d15bbe44e3417c291987ed066eccd6c7164b0fc0c29a0368",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8243",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7653",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5835",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5747",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5747",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5728",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5747)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "testLength",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8243": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7653": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5835": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5747": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5728": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5747)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bcb5051b1485cd0d5c6cdbfacb57947874c19ababb93d2920542782fe359c39c": {
      "address": "0xD3eB46e237D078d711Bfa7Eb2Cd146629C038820",
      "txHash": "0xe74a4ff60d3e9130675e3b7c1e90b234a7168172d6fed7868fd981bc27f1ef5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8243",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7653",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5835",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5747",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5747",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5728",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5747)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "testLength",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8243": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7653": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5835": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5747": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5728": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5747)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c27fdbc0d6d017ff6a1a0de04494fa4a54e6c4931a28aba686d550c7bcff2d27": {
      "address": "0x2E3A524195D31BC1f697ebF496Ca39C763845B11",
      "txHash": "0xee15f7da8259438319044b538c1d4475eddd1d92e256a162fbbb9a174f014c6f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8242",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7652",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5834",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5746",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5746",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5727",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5746)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "testLength",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8242": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7652": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5834": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5746": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5727": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5746)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7c43f897682d3b902d5e096bacd6567cfd459c2e026635579abb35a4f63a8eb5": {
      "address": "0x05BeC547c0B1Ab22FdEfC49AeC7E4081450A8D2f",
      "txHash": "0x93862fd6665dce7645e8f4ccdc08155820b8ea6db4765b8c6455b23a6094c8c3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8206",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7616",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5798",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5691",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5710)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "testLength",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8206": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7616": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5798": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5710": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5691": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5710)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "1c326620c378b3c6ab9ccbcfcdbb7ed53ad5b26856164894da8c7649c8f806c5": {
      "address": "0x37aFF662d00584EBB1cE5D839406b71F3c8d5458",
      "txHash": "0x0a6f5a42549bca7fcb8bf71865ed7afb62beca6cf28bc15e47d971a035b6e50e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)7917",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7327",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2885_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5509",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5421",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5421",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5402",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5421)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "testLength",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)7917": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7327": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2885_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5509": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5421": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5402": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5421)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "493a160e1e0916752b7f09d8c4550fc7e66bf089e9cde119854c6d662295d6a7": {
      "address": "0x701fb1d60482fEDB3963db79b5E7F0210211eCB8",
      "txHash": "0x41b397460e8f98d00a4751174991baf6b11acbaefc9bd94a9b6e555761a5346e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7465",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5567",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5578_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5613_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5602_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7465": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5567": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5578_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5578_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5613_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5613_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5602_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5602_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f9dd48a1ae781fa7f24e6fecd228562ef99fa134e1ada1b464e652f2cfb17390": {
      "address": "0x353ABaF3dAaBc5b8Ca0468EF8547145630170823",
      "txHash": "0xac2c20a1bc7e4ee4b6bb1b82d761c8b4ee270a87101763b14f38bbbc456ce9f3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7327",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5429",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5440_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5475_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5464_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7327": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5429": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5440_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5440_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5475_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5475_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5464_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5464_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b358e1cf4f6581a5c46013dfc3c7a5beddc4250d01d11e9f8eda6edab65a86fc": {
      "address": "0x9fF376dcF198cdAF9Ef33008B8565297f64Afce6",
      "txHash": "0xf493f90e0a20c9089015081ccfc4bc2d414df487359b71e980afade9d99d8ed3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8219",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7629",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5811",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5723",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5723",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5704",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5723)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "testLength",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8219": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7629": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5811": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5723": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5704": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5723)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "4702195bc62c0a6f94e0b0b417a7c2d4db62b165ea97914198d1dd1c07370916": {
      "address": "0x34396cC58680f3DE40D130D8E40e04aBffBCf59E",
      "txHash": "0xd1c8d4f301581e65134d9669e9fc2df5876c16eae956c998d7e53295fc401466",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8266",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7676",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5858",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5770",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5770",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5751",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5770)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8266": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7676": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5858": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5770": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5751": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5770)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "6feebaeb26dd458e1f8203bfca4e9d8256533ac44b611dda528a56ca8d8bae39": {
      "address": "0xA6A7F2C2702D58fe54688CF7506466d1996ecd0d",
      "txHash": "0x9c69dd7d98483cc62d3f7c4ae51aa4cd41a4a28bb20376a26e4d6db961ce2f8c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8266",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7676",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5858",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5770",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5770",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5751",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5770)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8266": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7676": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5858": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5770": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5751": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5770)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "be83c1c2145c4e5fe868f52b54db399e860577bb0f03d7bdcd3767f6e2e579f2": {
      "address": "0xf4D188488BbD5d79dd4aeDC026bc3E70d6153a59",
      "txHash": "0xabea58ba51d84220117738448741d7d79523909d2710db1d17d8da3fe583a1d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8228",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7638",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5820",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5732",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5732",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5713",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5732)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8228": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7638": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5820": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5732": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5713": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5732)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "15ce0fee0aa8a949d3e842f1cd623e49bd6f90470cca79b7035cb4171c10b0a9": {
      "address": "0x7F7B1601639fb91c8b7Ca36E54a59a0d0E6A7560",
      "txHash": "0x0c448b0a7f648d1dbe89c0e06437ad3dffbf7f6eaf88700dd26914c3100a39b2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8266",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7676",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5858",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5770",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5770",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5751",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5770)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8266": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7676": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5858": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5770": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5751": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5770)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "5d733882af41c205348f67093ade4c4b4df7c1214b0291b917d2230a10623889": {
      "address": "0x4E7aa2e0b441cFf3664064EC4d80129088F8c16F",
      "txHash": "0x2a762d95332b5a410789aaa101b051e2cd94b8267d204c4bdae3288e53800e38",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8277",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7687",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5869",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5781",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5781",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5762",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5781)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8277": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7687": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5869": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5781": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5762": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5781)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "55144b1f5498a23898a008357f084ee177d14b9e97bbd34d0d537d4f4facdebc": {
      "address": "0x1d9F4EE27018278987d8ea6F5ead15f365fD5722",
      "txHash": "0xd86b2642c32e91b103da0dfc418cfd3618e2f88821886948dc99f34867d68281",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8235",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7645",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5821",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5733",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5733",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5714",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5733)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8235": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7645": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5821": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5733": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5714": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5733)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "9d7cf1c29a194032ac641c46562d044ba2b9ab046af4ba43a8a91f8f3380a65b": {
      "address": "0x630379BDeca0363d804AF2aaf14bF3DEF789Ecbd",
      "txHash": "0xd6d287e460481566affe4700ba3130ba4ff7bd9f99bed10b4a3e7222e2f2cf5f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7666",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5836",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5748",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5748",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5729",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5748)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8256": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7666": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5836": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5748": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5729": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5748)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "58b63cffa908bfba02330a118c10a9bc760c050551f6aaba6d17a008d9662145": {
      "address": "0x3603D03D27689e716c1F76F47551A69d8B0B2a81",
      "txHash": "0x5e259afc8ab2e6b7d5492b823e6a6491c2615b54538c3374bf10b461f238de24",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8308",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7718",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5888",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5800",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5800",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5781",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5800)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8308": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7718": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5888": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5800": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5781": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5800)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "ce8e6790441f164fd19c7f145446d6bef1d85500c16e6aedb62af6ccb31ef00b": {
      "address": "0x86208d0c93b35C06927803fA367F08De8240dFC4",
      "txHash": "0x76dbbb57715dd1a2016f5dd89128cb141d6b57ffb8612d34f55b4bd54a676258",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8281",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7691",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5861",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5773",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5773",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5754",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5773)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8281": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7691": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5861": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5773": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5754": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5773)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "32333db2eba807d1c27182fe82b1d96e6e4dcc14ab16ad6e592093bf55167ef0": {
      "address": "0xCBD3d0c7C3419Ee681D2629fc16A9253E6e29F3b",
      "txHash": "0x7d70db8c21c0aad201a7c3fe1a3f53159078080343456ea555ebbf361374e356",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7462",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5552",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5563_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5598_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5587_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7462": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5552": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5563_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5563_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5598_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5598_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5587_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5587_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "fb9939fb92868b4a979eca9a069bbe37b1009578a32411f1949dd2b49c862258": {
      "address": "0x0EACAbCacEbb0cD8eedD1E40c6c7F31899C64eF3",
      "txHash": "0xd40d3d9c0f39908bf825cb21abde4158f7fd50e6c2fe260d885c56244c473f52",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7551",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5641",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5652_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5687_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5676_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7551": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5641": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5652_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5652_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5687_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5687_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5676_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5676_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "ee5db29db3c8608dd30461d1902dcf08a36dc7ce329f99f35d0c1b68c851accc": {
      "address": "0x10D53e9C5d40437E8Ed6598eA74357Fbb438406a",
      "txHash": "0x4955585fd4fc2e74f124d679f636610df5a6c090297b021c91ba52dcb0ae0882",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7622",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5712",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5723_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5758_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5747_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7622": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5712": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5723_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5723_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5758_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5758_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5747_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5747_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8f74ef7c3ab7edc711a3491d89e475d02282fe60f1544e82e6be4a35b1e96b64": {
      "address": "0x0a01832649f545fd5E0B44beAe07d25e2E99bA9B",
      "txHash": "0xf15238fd02563aee508b550e407b61e7772812a22bd46ab5844a73bfb8044c68",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7612",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5702",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5713_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5748_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5737_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7612": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5702": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5713_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5713_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5748_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5748_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5737_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5737_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "64e1157db3541d45540424500eca858bb7b513895268c8ae7c639133c1c6e790": {
      "address": "0x2DEC862e4Fd7eb327Ea42599025c484b710a7fF5",
      "txHash": "0xc9b9605b23040b24b908f2da0bfb3785f098e63ae0fa1c31e7ed46bf4a3efe6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7571",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5661",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5672_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5707_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5696_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7571": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5661": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5672_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5672_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5707_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5707_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5696_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5696_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "f5e80fd710e9822464f07364294c786dc756745c7ed4413061a7a41e2ea385b4": {
      "address": "0x741c41fd038B32a96Bdef80aa4DA120a9897566C",
      "txHash": "0xc26d87ada81ffcc36b5deea37a017d121c09ae18fa24a6415e30e6e71bfde158",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7560",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5650",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5661_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5696_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5685_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7560": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5650": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5661_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5661_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5696_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5696_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5685_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5685_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7df1bb35029b4800a7c99e8347a3040776fc4e03203d24952c74f18560876681": {
      "address": "0xBbbb38513ed216cEa2d37FC08664c4a0bE1addA9",
      "txHash": "0x7d1c1970bf3b9de754ecf9df5d0032e288a1e084ab5a8f5bf1c1334218b09422",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7618",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5708",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5719_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5754_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5743_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7618": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5708": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5719_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5719_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5754_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5754_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5743_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5743_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "76ddc60e273e919292792085b7780815e09d2b672f0e86a74d2f70e9feb5467a": {
      "address": "0xeE3a87014BCfFf6DDEAcEDA77fE82790F9582631",
      "txHash": "0xa0800f9ee8e399b690a4a7c8b7009e7c889d9e96973276f9e078d2e947626ee2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7577",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5667",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5678_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5713_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5702_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7577": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5667": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5678_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5678_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5713_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5713_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5702_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5702_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "6ce29280883bbac8aa7df97dcfb842dde9fb5dcecd6e5d00643e80ead12b538e": {
      "address": "0xB438143315c0d6a3d73f91255cABD44B26A161Ac",
      "txHash": "0x7f3d2a7ee31ed9128fdfe15179b338b25492eda342291d504434b71741fbd381",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7587",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5677",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5688_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5723_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5712_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7587": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5677": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5688_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5688_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5723_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5723_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5712_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5712_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "36990c6bd68a1cc3fc7265093315c2712be316cd2c7df7de2addf2c9caad9179": {
      "address": "0x42E7480a16E33FC78a733ED8052b57F5aC07F21e",
      "txHash": "0xe62c38529ef2900031d1d977dc80b1391461b200e9de0d21a53fccacdf11d985",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7600",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5690",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5701_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5736_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5725_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7600": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5690": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5701_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5701_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5736_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5736_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5725_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5725_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8bbb0211249360855dc73824507990b9b7fcdcf72cde410cf11e10d951a9b451": {
      "address": "0x07298D31F59c7eCf2C6Bd2DEe7c4d3Bd1a370EdE",
      "txHash": "0x38a696df0a8e0b541214a50dedd329c6fb997be94ff636643eba604d63fe26b4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7612",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5702",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5713_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5748_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5737_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7612": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5702": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5713_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5713_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5748_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5748_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5737_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5737_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a0c69c2686ff7056f4bddf23e98d5c04b360a13cf09ae1ff64fe1f1da61dae54": {
      "address": "0x325686c0ac1Cd0C7264E72589d427F89b74460A5",
      "txHash": "0xbea7a7339d06d841a8c8c7ab60710ae122ad154eb7806b28a169446b75b2c93e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7685",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5775",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5786_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5821_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5810_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7685": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5775": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5786_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5786_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5821_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5821_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5810_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5810_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "01e8c6f3404e7c7054c536a5b5d5186b68c7626fcdddfc938d70c6d391d70699": {
      "address": "0x783783753a9B194CD77C579c75259c10e75680e8",
      "txHash": "0xa491ab9f7767ce43b077e71ee40f0053296540a07af7ea3690c86d98a5d48963",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7796",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5873",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5884_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5919_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5908_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7796": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5873": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5884_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5884_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5919_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5919_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5908_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5908_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3d55ca9997bf07baf8940ad7cfe0fabdbab67812d8506bc96280b30cb12beefb": {
      "address": "0xccBCA4d6c1585FDa7eC99B7c8aFE486043Af7310",
      "txHash": "0x0a3b0df82b584ff35a878d10c3727bf6dd5ac402b034f6ba281186754edd414b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8291",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5871",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5783",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5783",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5764",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5783)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8291": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7701": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5871": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5783": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5764": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5783)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "de9a7bd572573666e62e7ef5bd0e6951f14a31ab13593574e929a109aa5c3951": {
      "address": "0x1dE0A59D7E11F7a45adC2d50AA01fe801d535ceA",
      "txHash": "0xded9b78166f008638e59532123ade5b9acf71d459e964f392cc70b9051547cfa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8285",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7695",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5865",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5777",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5777",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5758",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5777)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8285": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7695": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5865": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5777": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5758": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5777)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "f26d15285c21c841acef06833e4c28421df8180592f36cda5e8126ffd9c0a0f3": {
      "address": "0x93d7D8744D1214ab45D1970eFE13Ee7CF02a52d9",
      "txHash": "0x17d2cce52d7d83fed7e62e1885ea156102f293dc1735d0460aa56b359cd3d427",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7687",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5777",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5788_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5823_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5812_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7687": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5777": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5788_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5788_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5823_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5823_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5812_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5812_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "5274fad044b384e49902a2030f787c5835508f59b124ac1260c62293c97b3db0": {
      "address": "0x9fB400B336e4476a4eaF7FD25fd6c2aAD1C14B89",
      "txHash": "0xde305468d64cb73fabb964b262773e8d6dd15ad7b553a143c28c9a02f90f64ed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8277",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7687",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5857",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5769",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5769",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5750",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5769)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8277": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7687": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5857": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5769": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5750": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5769)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "fad0c2a6b474ec84c42463fd09327ec2f87c0dbef39387a670191fefb1368d59": {
      "address": "0x9C56025c68ACe6389693d2b8217646A72E197b2D",
      "txHash": "0xd9c1370644796729edfebcbdcfedeffb3af98ac54b2fc2af6b54abc57b158c13",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8331",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7741",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5911",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5823",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5823",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5804",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5823)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:64"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8331": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7741": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5911": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5823": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5804": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5823)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "68d84c9cbdb727730759dea9253235b50eceedbb313af2b9aa5f27629ba92821": {
      "address": "0x5Bc604BcaF286F80b1D0B3FcA0fe29F301efd7B8",
      "txHash": "0x29101368ef0f76ea9c2ef090b0143bb9731e1906a59b004442e9cde52cba5598",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8413",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7823",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5993",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5892",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5892",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5860",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5892)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:64"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8413": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7823": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5993": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5892": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5860": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5892)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "9f05361255682f843ad1a9a7f6e1ab9543599fa13f525f2f63fd686edfabb73a": {
      "address": "0xcAdc9D7b39735133a377b0cD77AEa0372Cc84bE7",
      "txHash": "0xf6749fdaff2db525aabdd2088ebcfc00f09d4fd95e7ced0ad837b519a8b8ca3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7796",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5873",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5884_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5919_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5908_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7796": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5873": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5884_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5884_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5919_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5919_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5908_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5908_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "34f30d172cadcdc03a2430fbdfb3d737c5d30c20777e013520780a62b50cb17c": {
      "address": "0x869af04393E6b5F5CB64691F6A68B52d6b6137f3",
      "txHash": "0x01cf09019a72525050ddd3b3b3b5ed87d062508de177da42f390208908d39ac0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7803",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5880",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5891_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5926_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5915_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7803": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5880": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5891_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5891_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5926_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5926_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5915_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5915_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d01025d6830aa0a575fe5f10f422f2b151b958f2d91d4c02faf207790a0b76d3": {
      "address": "0x723891D6e438C193c9D26D3070b15CdeaE9b7879",
      "txHash": "0x4bc598950effa7c264a363446f853aa6dd31ada9c2a54bf5e315523e20c96324",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7812",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5889",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5900_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5935_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5924_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7812": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5889": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5900_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5900_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5935_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5935_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5924_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5924_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e609af612c9b442182b8ac68982582ec2b842d5fd048c811d23a7b4166d9cd47": {
      "address": "0xB6E2EA7dbd4E431b6580B252E10a84405c8e3d39",
      "txHash": "0xeb5888b8015c5632a975e8494bf8295931c59af9df36040c791bfa5088887db3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7806",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5883",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5894_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5929_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5918_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7806": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5883": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5894_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5894_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5929_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5929_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5918_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5918_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c9f7a1b84724592590c30338bde3de827849fae008bc99970e1a84dd74371b95": {
      "address": "0x65C173Dd88492eeCC4BF625c6525b503B914eaF0",
      "txHash": "0x632f03383ff748efa763e6c7e17b5d63d1e3a58794a6517b45688642866e7dc6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7823",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5900",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5911_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5946_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5935_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7823": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5900": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5911_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5911_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5946_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5946_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5935_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5935_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "407ae52e73e7a497ff0b5ce97083f9da05ea61935865cf63e317f249d7c2af7b": {
      "address": "0xCfE774A3BFa00e81fe4Bf578A26dAaFD21593dB4",
      "txHash": "0xa41bdbbb781dabb983eb14a3f83f9ba0a39a9dd1000ad19e64ef69044f2f723c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7823",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5900",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5911_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5946_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5935_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7823": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5900": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5911_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5911_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5946_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5946_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5935_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5935_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b0eddf0c8dcd2ccf24d4689918a5ccbdf025b5d3571c67a8011e2ce3a44f5f50": {
      "address": "0x2baf43CC72c0ba1cA84d14E40f486cfe2A9f5326",
      "txHash": "0x4acfaf00f64a1a3d57b921a88195efa2819ffe7241d70f493ae2110ccde2b271",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:51"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:52"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "534edc21451980d01148325c311bf8d5e327b9a74c50638265eec13b3967761f": {
      "address": "0xBFd108eB48306Db25eA44d6972B789d48cD35BB2",
      "txHash": "0xf8e0b7d5bb4a892bb3d49f7080282161c0d5d5cb20d7b57bdba8093aaccb8571",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MemberController",
            "label": "root",
            "type": "t_address",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:13"
          },
          {
            "contract": "MemberController",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)1863_storage)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:14"
          },
          {
            "contract": "MemberController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:15"
          },
          {
            "contract": "MemberController",
            "label": "lastReferralCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:16"
          },
          {
            "contract": "MemberController",
            "label": "referralCodeList",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Member)1863_storage)": {
            "label": "mapping(address => struct Member)"
          },
          "t_struct(Member)1863_storage": {
            "label": "struct Member",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "upline",
                "type": "t_address"
              },
              {
                "label": "directs",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "referralCode",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "6aac927c883749a67c1784a364680cd11bdb19085fa1e2f9d7ff6379f5181cb2": {
      "address": "0x6F4428bfC3e199324DB90C4011e4237a45DaF5E6",
      "txHash": "0xf61ec938f01cf107571503ce870a96d4d71de2b288c4cb4a4d31dc483332225c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)11646",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11056",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3265_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6265",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6164",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6164",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6164",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6164",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6164",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6164",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6164)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)11646": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)11056": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3265_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6265": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6164": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6164)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "df1b803b466dfb8317e961e0562b39d96467af05053ae283f353e3969e524b19": {
      "address": "0xD16D08797AfE57Ec7c87afbb75710223d1e463c3",
      "txHash": "0xd5f61f1784b30bdcd3923a70d2b4bd977af3bbd3efeaf025fe2faf1bdc30674a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11056",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6172",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6183_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6218_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6207_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11056": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6172": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6183_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6183_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6218_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6218_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6207_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6207_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "631ad7c887366d4624366be4a88769ed6e6ad226c5550db51c8f7d511c1a1f7d": {
      "address": "0xf64b0CbeB1Db6a6c3070d5358Fe92695e636B07f",
      "txHash": "0x7fbcc71150878794bec349a9d3d9d968758f71d2fb308b91c1f10db7065ec5d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11056",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6172",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:30"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:30"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:32"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6183_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6218_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6207_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11056": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6172": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6183_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6183_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6218_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6218_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6207_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6207_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "428606f121f15513468b763a1a746e7ba58eb9a53b58eb7e6e28108332b43169": {
      "address": "0x5f2cA5CB513cA0D3e86466db5932e2649f0300fA",
      "txHash": "0x52bbc18d84de091843f2aa306060e7bf47d3a85b95f2765ea6393e28d8d1c856",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11056",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9177",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9055",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9055",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9055",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9055",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9055",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9055",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6309_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9055)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11056": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9177": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9055": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6309_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9055)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d2b11a69be4ccf7ad4e6d5a8074ba934f434038c228d40ae2b394007b35e03a5": {
      "address": "0xA57008C62eB84f2991EE0448c281a9A70fF84606",
      "txHash": "0xb7d4bba1150c6ed02ed2076e29cb90cffc4c2b2e67d83d3bab201cd0499b080e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11056",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9063",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9074_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9115_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9098_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11056": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9063": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9074_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9074_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9115_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9115_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9098_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9098_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "dd78e17809d071a52d4571265ebb443148d2dd0fb376c9255d598979e73ec285": {
      "address": "0xc1d0b060602850Ba8d1816f821f256071984235b",
      "txHash": "0x8d6293ed794480c878e73f0acb5c1976e2405e3e2f6f0a52b0e541bb3c5ecb7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11057",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9064",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9075_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9116_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9099_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11057": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9064": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9075_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9075_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9116_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9116_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9099_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9099_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "46f12a293b9bc4d2b7c80869f9a4b13548f1e5fe29f360e1f8d5ec40139a2ff5": {
      "address": "0x45b6ae2F3e32936B2DDEAbF7bD332c69839d6e59",
      "txHash": "0x50fe71e100a2e2ceb9e013244d941623b6c6863b5b31c26936b5493100373b47",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11055",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9062",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9073_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9114_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9097_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11055": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9062": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9073_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9073_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9114_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9114_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9097_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9097_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ef6b2e785144afb2c05bd8c105988660daedef19802526853b9ccca57b51fe8f": {
      "address": "0x28872E420235d542244b82a67a1F8c1f2D6acEeD",
      "txHash": "0x3f8e3bc2f0ebacba984f63158ff861f2406c633eef429f1a794c33d6461caab6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)11728",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11138",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3265_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6275",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6174",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6174",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6174",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6174",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6174",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6174",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6174)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)11728": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)11138": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3265_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6275": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6174": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6174)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "5c6f35982b81c60c4eb92161736c33f252816360a8b900b14cc6f2681c3109c8": {
      "address": "0x86136E77272b7ccb56509cB8ceE7b99a852baa4b",
      "txHash": "0x4dbfae949a30a89989ff160c696fb7fb7473624bebea15c3ec4d0fd0b33b3daf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11137",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9258",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6319_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9136)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11137": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9258": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9136": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6319_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9136)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ee9892666f3f39bc8d4ab75ba1a90fce4571fc23a9997e19fa6eb578322ca353": {
      "address": "0xE448F13986112a9234d0fA3ae3f7d519873C04CE",
      "txHash": "0x117cf937119c3180f25d01e5e1706307697199a70e9ec55fa62651f523413e5a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11138",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9145",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9156_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9197_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9180_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11138": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9145": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9156_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9156_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9197_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9197_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9180_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9180_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d074816c82deaddee00054bf71d26192ec1b050ac198abc974c1a583abbe5b69": {
      "address": "0x2297a3eD71F21c4038EA501f610B5f3e3b53c4cb",
      "txHash": "0x9f69951dfd4cd26fc5fbfede56415366d76f085c9e61c34135f7813e3c69f1e7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11137",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9144",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9155_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9196_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9179_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11137": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9144": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9155_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9155_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9196_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9196_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9179_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9179_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7a81f937205a494ba1ef8dbfd9794a56e53954f518b33bd47ba2ef721589319c": {
      "address": "0xE04ec1CB48d57648F22aF98f82062d40d36d537C",
      "txHash": "0x4161090e30202bd62f393093ebc437dbeaa675cdd4834e6500967fe3bc3d6abf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:18"
          },
          {
            "contract": "DeAnt3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmtInPackage",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:20"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "a5fd15f20fce1ceb8e7f9cbf60f95fd40421ab203987804035bd52a83fc3c890": {
      "address": "0x1528E808fC602A563c09de59A59b1d10cAD12430",
      "txHash": "0xe76f6540c573f3cc3457e916838dc1e5b3c872615d73f55265f75e6f806c0854",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:17"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:18"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:19"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:27"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_team2Address",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_gameChangerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "_farmingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "fcaef29a06e9131336df9df3e66001891b5fcd3829819ae1ff96e265980b1dac": {
      "address": "0x0ab04AF9a22F73aaFea5D2E4f86AF294508A4C54",
      "txHash": "0xeb94170753935293698a03091e994ce0e54d09ad02b8c694603556d5ee864967",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MemberController",
            "label": "root",
            "type": "t_address",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:13"
          },
          {
            "contract": "MemberController",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)2218_storage)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:14"
          },
          {
            "contract": "MemberController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:15"
          },
          {
            "contract": "MemberController",
            "label": "lastReferralCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:16"
          },
          {
            "contract": "MemberController",
            "label": "referralCodeList",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:17"
          },
          {
            "contract": "MemberController",
            "label": "burnedLP",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Member)2218_storage)": {
            "label": "mapping(address => struct Member)"
          },
          "t_struct(Member)2218_storage": {
            "label": "struct Member",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "upline",
                "type": "t_address"
              },
              {
                "label": "directs",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "referralCode",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "5c5c6075ccd831b8fc1814fe9b6c194b3b2977c40dbe3a822752f88647faf642": {
      "address": "0x27B0DeC2a1b314F76f4fB2e8B0f5EFAdbd736843",
      "txHash": "0xbf98fe5296a705afd981c82b66c0ade194e11695f940b57d79446289d7c3b41a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)15995",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)15985",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)4332_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)7932",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)7810",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)7810",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)7810",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)7810",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)7810",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)7810",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)7810)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:76"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)15995": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)15985": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)4332_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)7932": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)7810": {
            "label": "contract INodeActive"
          },
          "t_array(t_contract(INodeActive)7810)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2665a71e41c97e631aa7da908978fe1569eec6042d06e86607fa3ed1395ea1d9": {
      "address": "0x67494E6779854E977101E5c032B5090a5344A02f",
      "txHash": "0x2fe9ff0b555fc320a0798e7e6d0e2c13deca5f20cc9b8b2bbc8c30a351dbc09e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)15985",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)7818",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)7829_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)7864_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)7853_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          }
        ],
        "types": {
          "t_contract(IAnt3)15985": {
            "label": "contract IAnt3"
          },
          "t_contract(INodeController)7818": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)7829_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)7829_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)7864_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)7864_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)7853_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)7853_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e6d6d3bacfc7f68e6abd0ed4ec85cd4195fdc39a33d991c602f09ecd9d0d5948": {
      "address": "0xfe58A427b6e752F769b714B7f00Ce32117D963e2",
      "txHash": "0xcf61ab2fee4b87674b7ca27de3de99e219e922b21fafd4ffe894828f78765c42",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)15985",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)7818",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)7829_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)7864_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)7853_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:29"
          }
        ],
        "types": {
          "t_contract(IAnt3)15985": {
            "label": "contract IAnt3"
          },
          "t_contract(INodeController)7818": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)7829_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)7829_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)7864_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)7864_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)7853_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)7853_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "955e3ffad8f682842a598aa66666afd0fa9a40ee65c879a689c1861137ed34d2": {
      "address": "0xf60ec542002954329E0Cd93Ca2E6cd1e391f0A6e",
      "txHash": "0xde1fb2ee60625df63ddfc8905daba58d11a0280fe6f94aeb5212a32626804cd5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)15985",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)12979",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)12831",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)12831",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)12831",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)12831",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)12831",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)12831",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)9304_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)12831)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:48"
          },
          {
            "contract": "StackingController",
            "label": "minStackForReferral",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "shareMultiplier",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          }
        ],
        "types": {
          "t_contract(IAnt3)15985": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)12979": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)12831": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)9304_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)12831)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e44f1207b19d978ec602807d248dd38bd2974a376e230bc2c382da8713fe8356": {
      "address": "0xF840392b5C20B57CaaaD3ea29C227e3728fFB821",
      "txHash": "0xa6d9ab071294965fbeb3be841e0f736b7ebd2cb53b42f85fe1fac3bf1a0ceb57",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)15985",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)12844",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)12855_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)12896_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)12879_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(IAnt3)15985": {
            "label": "contract IAnt3"
          },
          "t_contract(IStackingController)12844": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)12855_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)12855_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)12896_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)12896_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)12879_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)12879_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "442411df49ea225628995ea573afb235c9fa93874ef95afce9d3e05d7380dce2": {
      "address": "0xF218134A9a80D52086396B8473A55AA4B53efA68",
      "txHash": "0x2891a3ef69296ed83eeb2c8e8485ae33e2099c8cbb8055196973a4b7e0523dec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingActiveL1",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)15985",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:18"
          },
          {
            "contract": "StackingActiveL1",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)12844",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:19"
          },
          {
            "contract": "StackingActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:20"
          },
          {
            "contract": "StackingActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:21"
          },
          {
            "contract": "StackingActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:22"
          },
          {
            "contract": "StackingActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:23"
          },
          {
            "contract": "StackingActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:24"
          },
          {
            "contract": "StackingActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)12855_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:25"
          },
          {
            "contract": "StackingActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)12896_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:26"
          },
          {
            "contract": "StackingActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)12879_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:27"
          },
          {
            "contract": "StackingActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:28"
          }
        ],
        "types": {
          "t_contract(IAnt3)15985": {
            "label": "contract IAnt3"
          },
          "t_contract(IStackingController)12844": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)12855_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)12855_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)12896_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)12896_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)12879_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)12879_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0a8f00ff4105fb4ca94fd280ab03b8984a61ce6a6843410a5816087ef812b58a": {
      "address": "0x9d44b10838dF2C485e12c798A10731f6f54A2826",
      "txHash": "0x9f88284839e2e18eb192db02e257508f8e084ce78a3070e39e9e09224ff24296",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "BSCAnt3",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:7"
          },
          {
            "contract": "BSCAnt3",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:8"
          },
          {
            "contract": "BSCAnt3",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:9"
          },
          {
            "contract": "BSCAnt3",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:10"
          },
          {
            "contract": "BSCAnt3",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:11"
          },
          {
            "contract": "BSCAnt3",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:12"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6b51ec21e05fb0796e886fd49308f5b150d835b3b983710081176d98680b1e94": {
      "address": "0x29B2d37c7D787B75C636844cD8B0E0DD550a6f59",
      "txHash": "0x2299fa7840ce3336991dd087487052390773b40c4eac6f6da87d75843f5a1ec9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4e47bb5265d6475089a756305e9b9b2b1f000064e6094ef0f56c92152a95469c": {
      "address": "0xd1CF199Acc224963f4bcCc4eF1cabDd9E32C894C",
      "txHash": "0x6a3e907ce37324ba5a710a65b22a51c860bf2bc1b73757e4dc261fdc8f634475",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16389",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3400_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3400_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3407_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16389": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3400_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3400_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3407_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3407_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2b4b60c24c9efbb2740045f52779c223fbbca180b9e36cb8374e9af6fd6cf25c": {
      "address": "0x202C8bc64c34E97108e98892F9D8ABc4Ed1686d5",
      "txHash": "0x71b4361f9259baedc14cf1348176fcbe01ad90a33e03601f96c9e094b2e25240",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16453",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3464_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3464_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3471_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16453": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3464_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3464_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3471_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3471_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "62b83093fd0f6ee33fafceef09eff00700110dc3c7e231c53c951a1ff4f8f196": {
      "address": "0x2B49Fd64c8db8147d19f125a929930d60A47D792",
      "txHash": "0x379ba4add8f09bcdfcfbdc02c6174bdf84bcd9f1aa5aa9682fa950cfb0c14c2d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16441",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3452_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3452_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3459_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16441": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3452_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3452_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3459_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3459_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a032df54d39ea58be09e9533b67a14065d58caae9a54fa14b105ca53ec9220ba": {
      "address": "0xE267EF2B93005F76D8dACD1FD09ede848398e25B",
      "txHash": "0xdec7fadcea874e40753fd392eee27b0520f3dd1ce4ad2d67a358a29430c5d9cd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16426",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3437_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3437_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3444_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16426": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3437_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3437_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3444_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3444_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b1ec8e7637d460c0a612510688ae1968f774854c52cb040995bf7176698c8e31": {
      "address": "0xe3eF97747fd727fFdB12e71Fa313c759b1Fd9609",
      "txHash": "0xfef4e2a5b739eed002ab030888664db1244dbb9db0251d87cb854be6cb18350b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16434",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3445_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3445_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3452_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16434": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3445_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3445_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3452_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3452_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "6aae47e2d3e14b16fffea69ab93c79b7b4f2668b24e9b0e80aaa59af0793d372": {
      "address": "0x8463258dd7D843Df6DcC2E86A22c7B57776dAe9b",
      "txHash": "0x86f920ccad674d10f1a65b800e101c8c6d41d0fb0319dde37c48dc38ef8b9631",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16433",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3444_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3444_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3451_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16433": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3444_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3444_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3451_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3451_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e59a51906da5081dfa3cab2c93c4389ad2005c8ddfb2dbc6fb79a05c7065ac03": {
      "address": "0x484e0acD346d3A2af94CF58FF7fD9a88b0DD00C5",
      "txHash": "0xf00ce0021b3ca2afa970744e1f42a246a9df3919d21fac9980c746501ce85c5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16364",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3375_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3375_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3382_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16364": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3375_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3375_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3382_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3382_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8e72aad83586611435bf41f6ea2e73757a16b282e7e450e246f42e6c8bc2364f": {
      "address": "0x683a3bF52C6159a56FE83367Bf088D2f29417F94",
      "txHash": "0xb7ca5b3966e8b2b18f3e1e6f6066539f64dea130bb959dcea7bb0532e3d31d4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16324",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3335_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3335_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3342_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16324": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3335_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3335_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3342_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3342_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "97935726d748edb29d699e6bb3c651fb96cc093b192e5378dd4e01a1957607e1": {
      "address": "0x4d3bC1b75808daab83e93da9e98960B598C53Cb1",
      "txHash": "0x153a65dee97661098e4de1b2796a4ada7388587af59836599b2cd2ca6b79564b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16332",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3343_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3343_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3350_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16332": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3343_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3343_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "rewardType",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3350_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3350_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "83c1c56e1e6c1ed2a426e009afbd2a928ffcc3b04deededab44c0baee625d6f2": {
      "address": "0x432B0b90dA20b248c60B71e427bC3449c7Dc2fb4",
      "txHash": "0xba46fc976e066e160d5c6947f351b86dc74daabcaa6237006329eb982f37d060",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16470",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3481_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3481_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3488_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16470": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3481_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3481_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "endTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3488_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3488_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c742cfe784d1eeed490ff7c969d4d4a56de53e6b8f058760c787323cbcc1ff9c": {
      "address": "0x2fA89E1DCe44C1E7558184562bA5C99bb448B785",
      "txHash": "0xd058b3fe117e03b2d357a4873ae7b5e2ef7c1a34868873003c0efa10f2957f18",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16504",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3515_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3515_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3522_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16504": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3515_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3515_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3522_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3522_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a1f5c63b2d966f39c574fb4b4889a8749b6277c3f5585e91c1b5387fbbfee6dd": {
      "address": "0x1A2A574eb132F19159f126b52C3E3705D886B3Cf",
      "txHash": "0x145722605208146e9efd308c7544f79433745e188e33e87308983ab6a861ab95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16504",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3515_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3515_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3522_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16504": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3515_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3515_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3522_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3522_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3f0a415e01010ae231906a7035a42770c632110528ac1a2f165228623bc8c04b": {
      "address": "0xC3DC252A310b9BCC41437eCf246Fb0bF866b0823",
      "txHash": "0xd9529b033d2c230f4f7a941cb51b898b4de01c57a0198dcec0bcb92aa62a4c40",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16506",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3517_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3517_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3524_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16506": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3517_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3517_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3524_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3524_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2bec81f0cb2fac86143e47d2d4530758382a85de15dbec001f10ee9ee61b1da0": {
      "address": "0xcC78dA77a2c3817B97eFd6F6E57F443Fe3229d04",
      "txHash": "0xef2c8250ae0cf009f0101cea43228ebd7dd8696565e704a3c9aca2989c40efcc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16494",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3505_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3505_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3512_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16494": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3505_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3505_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3512_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3512_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "085fdb881f8cc60e95711070856073876c826bd6e03b05d76339365f4d077324": {
      "address": "0xdF83BFB86f5ef890fA40acfDB063a9C93c1C8BeA",
      "txHash": "0x1421dd42be546e2ec11738df84760f2a6a78c2f7d51f3769881de2f5ceb85b31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16506",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3517_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3517_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3524_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16506": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3517_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3517_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3524_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3524_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a9c51c252ce0674f12bed128df2cc8d3005c72451e2dba182cf5db7fc79f5959": {
      "address": "0x3a420B5161d6307B26Fd026133fe9369804B5685",
      "txHash": "0x22df5a048b4825695e0a13fc619b603236e17958b2a0a7b3bc53fe5fc2e2d27a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16506",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3517_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3517_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3524_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16506": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3517_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3517_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3524_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3524_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bb2e716dfddb86be9d0596feb8230e6c07d6179cf9d4cb83848e179f68811c7d": {
      "address": "0xa4e34Ff210b22bb975aF1AC4901844293d121e5E",
      "txHash": "0x52809918f737acf86f388febd241dfd148e3b660388e9d71abf40efa3a7d481d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16499",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3510_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3510_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3517_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16499": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3510_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3510_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3517_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3517_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2786e0ba6ad27c22944eef81c2b3d61480bbc80f4e7c7e7dc3f17ed596e3fd5f": {
      "address": "0xf2Ee2E8E61658F13BD4FaBA986d5A599AF122310",
      "txHash": "0x394ad0a39c7ca1061689b8737143164a30c0038f5557f2a27230c4faf5ab573c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16790",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2628",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3801_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3801_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3808_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16790": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2628": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3801_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3801_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3808_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3808_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a03ef559b49efb81c952c0fe1500ab9cbfabd6e271dc97c261937e8751d499e0": {
      "address": "0xDad93E38624E9318448160E32809d72e50C2DE37",
      "txHash": "0xb4852c5c4bcce87aff54421cc803447fc9c152a8e9ea7a60f56bbc35c960ae0a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16781",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2628",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3792_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3792_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3799_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16781": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2628": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3792_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3792_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3799_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3799_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a4969dfaf3598ed998a366120ed7fb454162b8dc1164f12f4d9dea86f6e6a074": {
      "address": "0x5Aa50132b1e2cdB12992fa5b62008cD584F71675",
      "txHash": "0x32b9f021f52bca901b22de4baebdc6861567e515b748bfe6b182298697f6aee2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16873",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2628",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3884_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3884_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3891_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IAnt3)16873": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2628": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3884_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3884_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3891_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3891_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "847e9ae93cca18beada16d35a1d51f7d65c9c74ffa766633640ae6032b32da2b": {
      "address": "0x0cC70BF7B0dd96539c0F1F49Bab15339E1B36dfB",
      "txHash": "0x753674e05d083759349f5b17e97b6226a7bbc751f620347b959b016d6ed6f022",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "FarmingPoolContract",
            "label": "monthlyPassControllerContract",
            "type": "t_contract(IMonthlyPassController)3965",
            "src": "..\\project:\\contracts\\monthlypass\\FarmingPoolContract.sol:9"
          },
          {
            "contract": "FarmingPoolContract",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)16946",
            "src": "..\\project:\\contracts\\monthlypass\\FarmingPoolContract.sol:10"
          }
        ],
        "types": {
          "t_contract(IMonthlyPassController)3965": {
            "label": "contract IMonthlyPassController"
          },
          "t_contract(IAnt3)16946": {
            "label": "contract IAnt3"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8409e8f2987f286c29234323d53d231da5b93140a945d2f9554156f54b6935ca": {
      "address": "0x4187B8DBA3bfEC653569deD4C2706f4d53d773a1",
      "txHash": "0x4f9646457cf8d01e68bb56a7e717022616176dedaf06cc0f8906272ff2498df3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)3944",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:16"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2628",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3957_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3957_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3964_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)3944": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2628": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3957_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3957_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3964_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3964_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "0e0d67b6e604f2c1f1616c513aa155523ee87a28ac8483a99f6d97c45e93544a": {
      "address": "0xA93524147f45DF5edAAd0E3Ebad0276eF9C97193",
      "txHash": "0xf1c6d1b477fc5a799eb7f8983bd5f01b257aaff7726be31424a09ece4fcd40ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)3936",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:16"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2628",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyAnt3Price",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyLpPrice",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3949_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3949_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3956_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)3936": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)2628": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)3949_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3949_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3956_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3956_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "367d7904f2194346c5cc273fb4dfed67509f958f8b4dc3f08068e15c850de2af": {
      "address": "0x115c7762173000F5bd4ac724001Be9c5b4aed95B",
      "txHash": "0x67f457595a57020418838cab58b32f8eae6a03edd3d7e516ea00b8bf2023d6db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MemberController",
            "label": "root",
            "type": "t_address",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:14"
          },
          {
            "contract": "MemberController",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)3000_storage)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:15"
          },
          {
            "contract": "MemberController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:16"
          },
          {
            "contract": "MemberController",
            "label": "lastReferralCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:17"
          },
          {
            "contract": "MemberController",
            "label": "referralCodeList",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:18"
          },
          {
            "contract": "MemberController",
            "label": "burnedLP",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:19"
          },
          {
            "contract": "MemberController",
            "label": "monthlyPassControllerContract",
            "type": "t_contract(IMonthlyPassController)4644",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Member)3000_storage)": {
            "label": "mapping(address => struct Member)"
          },
          "t_struct(Member)3000_storage": {
            "label": "struct Member",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "upline",
                "type": "t_address"
              },
              {
                "label": "directs",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "referralCode",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IMonthlyPassController)4644": {
            "label": "contract IMonthlyPassController"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "727a806bcc16448348f82004df30907808107a92147bfd6ea122a212634083e4": {
      "address": "0x142AC9cdD1Bf1c3780fA1Ff1c41A3d0DF3aaD326",
      "txHash": "0x0f9edf02f497c26da7d704c40db23cf84780a1ea2b2c7bb3178c69889ab1664c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)17605",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17595",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)5984_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)9585",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)9463",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)9463",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)9463",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)9463",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)9463",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)9463",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)9463)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:76"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)17605": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)17595": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)5984_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)9585": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)9463": {
            "label": "contract INodeActive"
          },
          "t_array(t_contract(INodeActive)9463)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "480756e3d1059c21313917493af4805ea80280e1bc9def323568cabda86697f6": {
      "address": "0xe3eD72AC2b7871E0e58adfE8dA4Ee9Ed01a18039",
      "txHash": "0x560afba7ab461f2d9352f81edaae1b7a40861a2baebba102ca7f97610b8ed057",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17595",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)14589",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)14441",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)14441",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)14441",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)14441",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)14441",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)14441",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)10957_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)14441)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:48"
          },
          {
            "contract": "StackingController",
            "label": "minStackForReferral",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "shareMultiplier",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          }
        ],
        "types": {
          "t_contract(IAnt3)17595": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)14589": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)14441": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)10957_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)14441)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ca53ea3f0e082390d987adc13a1b5edf7e81da811832ca9bc33fb4da8c7fcc26": {
      "address": "0x2Dc85FDE69e672Ef4014973B4023A652e4610D89",
      "txHash": "0x216c64e5ba7390282f2d05bae1cc8458559e9ae711805f22cd98e148afd916a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "BSCAnt3",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:7"
          },
          {
            "contract": "BSCAnt3",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:8"
          },
          {
            "contract": "BSCAnt3",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:9"
          },
          {
            "contract": "BSCAnt3",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:10"
          },
          {
            "contract": "BSCAnt3",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:11"
          },
          {
            "contract": "BSCAnt3",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\BSCAnt3.sol:12"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a28778a037fdfa64388669f2ad4ec1aca17984e44ad138916ecb773be60beabb": {
      "address": "0xb217a7026aF7335EfDB8fb6D939B99acAe7d002c",
      "txHash": "0x104a684621288d75d6b6ac5170912c87db3e9eb59262ef8221739e9e7f209d2a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "TokenRate",
            "label": "tokenRate",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)4479_storage))",
            "src": "..\\project:\\contracts\\monthlypass\\TokenRate.sol:12"
          },
          {
            "contract": "TokenRate",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\monthlypass\\TokenRate.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)4479_storage))": {
            "label": "mapping(address => mapping(address => struct Rate))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Rate)4479_storage)": {
            "label": "mapping(address => struct Rate)"
          },
          "t_struct(Rate)4479_storage": {
            "label": "struct Rate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdate",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "cac7279a4c649e18717f23a83b2a8e5d0cde624caa071ae139a9114db899fdda": {
      "address": "0x955d1Da4cf1Cea9C455d4D21a6069916Cbd4937B",
      "txHash": "0x3551c47911e6148c5811229c808727ee3f06653a603acc48bb9d1c857ed29f15",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4618",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4656",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4636_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4618": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4656": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4631_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4631_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4636_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4636_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2b38c9395717b305207241459194a87a20fb4d82140ded87dd346871ffe08414": {
      "address": "0x8C413933724633D5E468715f6e8E82bf2Fb5626a",
      "txHash": "0xdf05df7e32c02c5bf422106987a5f4c79fadafc705f62b79fc82d2c4508160c2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4615",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4653",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4628_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4628_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4633_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4615": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4653": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4628_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4628_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4633_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4633_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8158cd5bf1010fc05e268178665b0b5b88aebde3fb965107b5c7c15d838d562c": {
      "address": "0xD550130D44707232E78f988261c3A3ba39275904",
      "txHash": "0x879c08736d9939647fda32127f36fadfa9861239aff5d46ae0dbad76185a4602",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4618",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4656",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4636_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4618": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4656": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4631_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4631_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4636_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4636_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8fa3bd69c034e660b24528e0b662fd7ab478c8a956b880c3e3db18a95d242d57": {
      "address": "0x28a995dee8c1857bFC4cA123C88d3226861de9Fe",
      "txHash": "0x177dd147bcdd56141998ce6a51738900dc179d6ab73e21854539605af47de170",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:17"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:18"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:19"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:27"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_team2Address",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_gameChangerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "_farmingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "05d887359e5d07015182948853fda3676de27e9d28bbc0b5e53fbae691febc20": {
      "address": "0x12A263DD21C6eF9C53B43573761FEA2F4183334A",
      "txHash": "0x7468f835c46638a0434102af89a0b2a26502d1912b504a33ef1ff19b2027fa7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4618",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4656",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4636_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4618": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4656": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4631_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4631_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4636_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4636_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7a092efdb0313976d43060e09edda8cfccce22b7b1af76b0e9474761c01fdc93": {
      "address": "0x2C721D98e4f322e37aa45f1c496BB9f0d60B3533",
      "txHash": "0x0f9af1fae8c93fbc349d02f3b2bf5cc308f299ae465257d003296896ca4e1f8f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4636",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4674",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4649_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4649_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4654_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4636": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4674": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4649_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4649_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4654_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4654_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "efce7d6fdf49836c9bf17f22d2a76b4492d1803554c74ae465cca4699654891a": {
      "address": "0x247D3B8ccc3805D92CCa33760fe614fb6EC39756",
      "txHash": "0x9189ef19391c83fea63a6906e759c72e21e8a6f0f829049183af8abf6058c603",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:17"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:18"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:19"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:27"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_team2Address",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_gameChangerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "_farmingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d43ff9d74413f131f431fd789399bac00eadc41c5d65eddec9e83c88c74edb73": {
      "address": "0x34FD660236544f0661DDa7F98e8beBa7A5068CC5",
      "txHash": "0xdc0fdf0ddfedfd0b1c14e0888ef57cb69759f4a1dc69a7da4923d06be3fb0c58",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)18020",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)18010",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6018_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)9640",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)9526",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)9526",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)9526",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)9526",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)9526",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)9526",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)9526)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:76"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)18020": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)18010": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)6018_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)9640": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)9526": {
            "label": "contract INodeActive"
          },
          "t_array(t_contract(INodeActive)9526)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "23e85c06ae2307337d168aed61fc4eaf1b120381b727eace0edd84c6133bbaa4": {
      "address": "0xB312db118B2B8cc2D5bf6023945129589cC179d9",
      "txHash": "0xcb743d5fc2cda50d8392a0a97ae965dfdcf58d4213d6b84c7fbf07df225f0272",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)18010",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)9534",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9545_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9580_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9569_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          }
        ],
        "types": {
          "t_contract(IAnt3)18010": {
            "label": "contract IAnt3"
          },
          "t_contract(INodeController)9534": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9545_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9545_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9580_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9580_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9569_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9569_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "9e95a1efc62e94e449a542ccae11f8445677831e9418942db744933f25be0d30": {
      "address": "0x719aC534F2431b0Ca337fdd1Cd121d0Fb487656e",
      "txHash": "0x476bce0be0babc263a6d1fd3dab69765f5be8e8253e70fd82e284d354905dbed",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)18010",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)14978",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)14838",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)14838",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)14838",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)14838",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)14838",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)14838",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)11012_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)14838)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:48"
          },
          {
            "contract": "StackingController",
            "label": "minStackForReferral",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "shareMultiplier",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          }
        ],
        "types": {
          "t_contract(IAnt3)18010": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)14978": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)14838": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)11012_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)14838)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "45c0e81fb99e8717f2b8661938f479ccbaccc1fb4c28185b98fe0f8241204dd2": {
      "address": "0xc6bAfDE75B9e188c3B674218F7C4Ba0015b9418D",
      "txHash": "0x7b3482ec3b83425eafe3a510ea6008e60f2f5a09adce0873615027f99ed111aa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)18010",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)14851",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)14862_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)14903_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)14886_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(IAnt3)18010": {
            "label": "contract IAnt3"
          },
          "t_contract(IStackingController)14851": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)14862_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)14862_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)14903_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)14903_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)14886_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)14886_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1423c70dab3568aa25c3a4aed6414e2d34a24a829f24a657432bf8935ab3d8bb": {
      "address": "0x5ffd51d1927C7238270c1F3934EAaF3D129f889f",
      "txHash": "0x5a0663b0f8b5e4731d7300d570c181f69c58ec799c82f37b3a0e141f2361c535",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4652",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4690",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4665_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4665_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4670_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4652": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4690": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4665_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4665_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4670_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4670_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "041a0db8cdfcc3e997fc0cb5a9fb736956f848272902a4505e171937b2a58f89": {
      "address": "0x7b7AF33Faa13777a1F40760272ee3eD37F465e5d",
      "txHash": "0x73d4cc8f1397ab49350b711c4cee9bd8a8edc2cebe0b1e7a4f2bba153c8d8f73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Oracle",
            "label": "pancakeswapV2Router",
            "type": "t_contract(IPancakeswapV2Router)2223",
            "src": "..\\project:\\contracts\\Oracle\\Oracle.sol:11"
          }
        ],
        "types": {
          "t_contract(IPancakeswapV2Router)2223": {
            "label": "contract IPancakeswapV2Router"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3942c01e3a79087a143d1bef4d57eaca4a753a9788753097c859a10f891b28ac": {
      "address": "0x5186B710CdA68eFc0018fF7E5623F9B01d0e3E49",
      "txHash": "0x1f89f11fe9d2b506909fd35f5a22719a14dbeb8ede07cbe1492376a9bbadee3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Storage",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:8"
          },
          {
            "contract": "Storage",
            "label": "userLastClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:9"
          },
          {
            "contract": "Storage",
            "label": "maxClaimRds",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:10"
          },
          {
            "contract": "Storage",
            "label": "userstartingIndexForAddShare",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:12"
          },
          {
            "contract": "Storage",
            "label": "usersortedRoundForAddShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b1d228f9d920c46ea632457f33ff68ca9eb30b24c56250bbd1224221c25fe7f0": {
      "address": "0x3570C8fBc01c547A49D8A912CF18F0B4f29436C3",
      "txHash": "0x1dd7c37a6b8f8fb7a0e82963952deebe37bfbeefa2727b5d51fa636772dfae8b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Storage",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:8"
          },
          {
            "contract": "Storage",
            "label": "userLastClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:9"
          },
          {
            "contract": "Storage",
            "label": "maxClaimRds",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:10"
          },
          {
            "contract": "Storage",
            "label": "userstartingIndexForAddShare",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:12"
          },
          {
            "contract": "Storage",
            "label": "usersortedRoundForAddShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5ad8796e0fb419eebaaa436c0af2dae651146c24c95db70b08c461b8f6b92fa0": {
      "address": "0xfcac85afc0e596EF08393f738b3411Dd15a43c96",
      "txHash": "0xff9192718461a78c4759bcdabef680c5b06f2f44ab1088a2477e9c9dc9b998c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Storage",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:8"
          },
          {
            "contract": "Storage",
            "label": "userLastClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:9"
          },
          {
            "contract": "Storage",
            "label": "maxClaimRds",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:10"
          },
          {
            "contract": "Storage",
            "label": "userstartingIndexForAddShare",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:12"
          },
          {
            "contract": "Storage",
            "label": "usersortedRoundForAddShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "108df9be3fb43e2db173404782a2b78482887029ccf26f08a62c31438b8103eb": {
      "address": "0x236C12384aF95B19B06E480affDa1cE20079Ff0e",
      "txHash": "0x069c3f869294a677497601d25413ab58d4134ff7e51b3180526cdc6ff2df84cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Storage",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:8"
          },
          {
            "contract": "Storage",
            "label": "userLastClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:9"
          },
          {
            "contract": "Storage",
            "label": "maxClaimRds",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:10"
          },
          {
            "contract": "Storage",
            "label": "userstartingIndexForAddShare",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:12"
          },
          {
            "contract": "Storage",
            "label": "usersortedRoundForAddShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cac7786a638cc5a6a70261346374809fb9640e7aa5ce6ee2ea81113f94370686": {
      "address": "0x46b2121572A30974541B92117CfE35e16a759fE2",
      "txHash": "0x470d21c47e8ea7c7df4e54b2745826c9f930377b05ccdeac9a7c7819a5304b27",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Storage",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:8"
          },
          {
            "contract": "Storage",
            "label": "userLastClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:9"
          },
          {
            "contract": "Storage",
            "label": "maxClaimRds",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:10"
          },
          {
            "contract": "Storage",
            "label": "userstartingIndexForAddShare",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:12"
          },
          {
            "contract": "Storage",
            "label": "usersortedRoundForAddShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a15e5a6bad4223644952d36a0f6e7f24ede270af0ae5ae206ec62c92eab54d1a": {
      "address": "0x7805f449a8d4453844B81e36f180860802AC406B",
      "txHash": "0x4d250cbee551d42950abbf6e08444611f564b80d367a14d8abb69e99062a5c87",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Storage",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:8"
          },
          {
            "contract": "Storage",
            "label": "userLastClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:9"
          },
          {
            "contract": "Storage",
            "label": "maxClaimRds",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:10"
          },
          {
            "contract": "Storage",
            "label": "userstartingIndexForAddShare",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:12"
          },
          {
            "contract": "Storage",
            "label": "usersortedRoundForAddShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "25e0c3c012b1e48eaeadf23874b775265b333bdd45d5245fc79708daae3f144b": {
      "address": "0x4223260b17333AC57c235E64C309611c33E9cC2F",
      "txHash": "0x6efaac3002b4e955ca0d03b0f569a1c9f5ac357dde075922730ae263b42d3b32",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Storage",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:8"
          },
          {
            "contract": "Storage",
            "label": "userLastClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:9"
          },
          {
            "contract": "Storage",
            "label": "maxClaimRds",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:10"
          },
          {
            "contract": "Storage",
            "label": "userstartingIndexForAddShare",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:12"
          },
          {
            "contract": "Storage",
            "label": "usersortedRoundForAddShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\Storage.sol:14"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
