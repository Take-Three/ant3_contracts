{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD4f2e00609eDD3f10D6c879B4C46EBFB76E9424F",
    "txHash": "0x2fa34072e6907ff855077e44f509177b1712b9b2dd339e6a969cc38b5d0e4632"
  },
  "proxies": [
    {
      "address": "0x9F936cF3b38438c0d630e39B609f4d9592B72B9d",
      "txHash": "0xef93ad57c06be70ee96e3e700bb3af559c20f96dc87c802db1a2135d90f871b9",
      "kind": "transparent"
    },
    {
      "address": "0xCc10b58A38302A764105ccFFBC3833dDb6C6819e",
      "txHash": "0x269f24cffc97f456d25fd7651a2d69652aff905ef02377f3df30edd0ee4238a0",
      "kind": "transparent"
    },
    {
      "address": "0xBffA392818629d7D1072aA706cb4592879283d7E",
      "txHash": "0xb9ffee50737993c570c6b984b5ecb25cb025021dc348717e1101fc5b8b48d7f0",
      "kind": "transparent"
    },
    {
      "address": "0xCAA48e81Ba042449bB45c186fE8b7a401FAFe6EE",
      "txHash": "0x0f2562bcba7faf4add9d8fbdc412ba5a6dcd37aefd6da37850b66680ede141f8",
      "kind": "transparent"
    },
    {
      "address": "0xd2017764E61905c66B72071C9c3728B6dCc6E5Aa",
      "txHash": "0x61b50b2dc7ec0da1ebad2f9876b123f5c4d64f5de90ba01c12ba128be4164fa9",
      "kind": "transparent"
    },
    {
      "address": "0xD559b345b7749bE055CE046A1Ac23bd4d6BC7c48",
      "txHash": "0xaab3e397812d6266a4bee83f9395ee5cc2a2c3bcd3d048a09519068cba920272",
      "kind": "transparent"
    },
    {
      "address": "0xF63690DEF75b83f2B49Fe2c919a7286f31cB8C90",
      "txHash": "0xf6822337ed105770e04e0aa28eb5b21df8e359c17ed53865d5a66e58f7027b8c",
      "kind": "transparent"
    },
    {
      "address": "0x600De1bD47820D8747D413Afd876eeb0987b044D",
      "txHash": "0xab299947f38d0b16d2efd6e9e0ba2ed19100bbcc6f5e35234266ea4612b8a6c2",
      "kind": "transparent"
    },
    {
      "address": "0x560E2454E9A41AC274b5E4c90260CB229657Daa0",
      "txHash": "0x2d365b883173cb3b4d4727a00cbf12fab26cdc14bd471ce0772486b0fdc2d16a",
      "kind": "transparent"
    },
    {
      "address": "0x8848dF3056cBfa62E54B994Cc9BD6c15e69a968b",
      "txHash": "0xd2b0417530d0c89fb8d328ad45916397264403e331609fc1225c615c4a98b7d2",
      "kind": "transparent"
    },
    {
      "address": "0x2B846d21D04D6E0C4e6E9e20Ad2aFa34Fdd2AADe",
      "txHash": "0x6e92d3e33fbbba1d199be69a9bef54bb92076c83a3a9022cc26e35d8cdff5a9d",
      "kind": "transparent"
    },
    {
      "address": "0xB8133e63E66C140595fB202212d576BBd42F8727",
      "txHash": "0x09f00586d1b5d0f2ae9618ea4fd6371cee9f94adad17ab3cb982e64e68e95285",
      "kind": "transparent"
    },
    {
      "address": "0x3D73BE7397d78F1AA1A4B09E5FB08BF538404784",
      "txHash": "0xf3b6223747a21577ea2ecf714135eb76708faba538f8dc83c1620f9350f9fdb7",
      "kind": "transparent"
    },
    {
      "address": "0x4cDf7ac84F1Ecd77C9C13695c48711538E0689Fb",
      "txHash": "0x5f16813ae9ccdfd31650bf772292183cfcf94c36c48b319ea291248ed9449a0f",
      "kind": "transparent"
    },
    {
      "address": "0x348015fb5CBF843f5c6B7bFfC0Dfae121D979218",
      "txHash": "0x0452dcd315ad7401118b9d546baba23fab1d556e3cd7a8caa5435e7ea7c76de9",
      "kind": "transparent"
    },
    {
      "address": "0x9Eb256067676F034167cD1f8fF666202e124252B",
      "txHash": "0x2c7188ce869132785ce7b77e4e85960b1b7c1c7cccbd6557713a72ff5074cfab",
      "kind": "transparent"
    },
    {
      "address": "0x7e48fEFA447FEf16DCeE2Dc524c293fFb7D1DE0b",
      "txHash": "0xcc853de35758a824bae95c673ffbc318838dbb45f20f341aa942476e647d01eb",
      "kind": "transparent"
    },
    {
      "address": "0x6210bdF62c6561020D6FdCb659c1521B708BFb24",
      "txHash": "0x9a77ae8968690b37286606ddb3fb39764ee95cd635f9c8e3824a204aa4fdad08",
      "kind": "transparent"
    },
    {
      "address": "0x181747fc1B697A400Ce42943eAc7dbf77BbE70f7",
      "txHash": "0xbdfb6c142f35dfb860975395eae73d5a830a33e7d7809fcddebd466a1b0451b1",
      "kind": "transparent"
    },
    {
      "address": "0x4Bc03ebE9CE903b61E10b4949fC6c92aa4F82e80",
      "txHash": "0xd2f1546e149506ddca66db1f65d56fe6578ea70dccca83c9bac2ab5b480af994",
      "kind": "transparent"
    },
    {
      "address": "0x9CbC4A6867e7B382bA73AE22Fbf038CCfcBa7A93",
      "txHash": "0xbb8bd2a49c85980a9172b636db66121cb59e63c1524cc0d3cde82d8af8ee8276",
      "kind": "transparent"
    },
    {
      "address": "0x742187Dff379530c5dCfB298dcF48c0C41bA5eB5",
      "txHash": "0x22287df2b6de95dc1989f513d40b73edd0d2748e50ca70ac6eec286ff1956a84",
      "kind": "transparent"
    },
    {
      "address": "0x5bD35d82b0eA4fFEaE2a57851eeE08aAB00e94D8",
      "txHash": "0x530e57d77095420055b6f2b620fe14525d8b2bba2c5e2cc48f9762c34435e8ae",
      "kind": "transparent"
    },
    {
      "address": "0x20b6ee38B0B573a06b6E8577266a10FBe3E5De3C",
      "txHash": "0x3814bb5f2b20e38e0f094b69f66e203aae686def80802b479ddbb61ee5e7e2d4",
      "kind": "transparent"
    },
    {
      "address": "0x662E362ad1d62EEbb3D909afeEef881Da5Cf0C9a",
      "txHash": "0xe3644b9894e7f298bae835b7708cd80f6ac726f03b6aef4a7b417a8aeb8ed2a9",
      "kind": "transparent"
    },
    {
      "address": "0xCE9AFF043035D4d95b7CdeaAE6047E4Acc78f72D",
      "txHash": "0x943603974f42a814b8327d2e3cd6a37d4f4d1b29fcc7f991deae20f97563b754",
      "kind": "transparent"
    },
    {
      "address": "0x0a871fb352769543f9c97F0f22bA641069E0512B",
      "txHash": "0x21977e1e0878b954dc137eae1e61509bc5769a197b07cd475b57d2b9163c4ddf",
      "kind": "transparent"
    },
    {
      "address": "0x83218Ebe43E40333b43638F72B3f377Bb71810b7",
      "txHash": "0x0565c1a86b65eeaf678e369e1ecb6903f88d707bc3d9ef3882b027e42d6db62a",
      "kind": "transparent"
    },
    {
      "address": "0x42488BF8A6840B36AA78fAf5c7c77a054bA25038",
      "txHash": "0xa59e18e0b8d7c3468ba266d6a35143f8cfbfc960c99d6b433aee02cf21331b0f",
      "kind": "transparent"
    },
    {
      "address": "0x7CCF0413Ff6f7001F28974AA13616C74BC8cAA42",
      "txHash": "0x7be6a981a3e5b589cdf3ca2b00814748646607820de0ef28750d35137b7d4863",
      "kind": "transparent"
    },
    {
      "address": "0x4E15D8235c64Ed5734691d54eFA91eBB241FEdDE",
      "txHash": "0xd9791091ebe45e1df65188857b299645ff7125dafa02ec4026691d8073fc15fb",
      "kind": "transparent"
    },
    {
      "address": "0x54DEfdC344241Dc1064bb70c74a6F08af2D4Bb57",
      "txHash": "0x4d4143f0967204ca8c150becdbbf05f751e3bc14536037abb0cb9d64d992ce73",
      "kind": "transparent"
    },
    {
      "address": "0x981aa207919213dFeeC3aBF4AC9814E8b5904f6C",
      "txHash": "0xe53c6b4715d32b6dd8a69a807033adb3dab2d3f073e43c6e355c0e4e2b6ab4a4",
      "kind": "transparent"
    },
    {
      "address": "0x7Db71272322AF940828055b4186Eeac9fb9dFF90",
      "txHash": "0xc0ef682bc5dd99417b83054c826d1a2fcd3d0fa90be429d4e50d8b6c22dfb6bf",
      "kind": "transparent"
    },
    {
      "address": "0x0959d96ED72e4d12B6DBEB7E3B3Fcb2058807b5b",
      "txHash": "0x52f45b48b2035f9e367509454e2d562793d1ee6a3ca04c8b2499ea7045b6bd6d",
      "kind": "transparent"
    },
    {
      "address": "0x92E2C2ddd78fD110Cc780dB60bD9d6E992Eb6f73",
      "txHash": "0xf510d92f7ecaff9fe629466003a90e360f42481e48c57026d314b55528937e6f",
      "kind": "transparent"
    },
    {
      "address": "0x5F99E7cdf887Bc9D0FF02a47971198D8FaEA56f8",
      "txHash": "0x40fa0e4508422d0d8c5c4324af1894df3cfc322e7e200c7c5803b95739698f00",
      "kind": "transparent"
    },
    {
      "address": "0xA9795F69112b7C661A381fcF2F026C36CCd1A6b6",
      "txHash": "0x17668a93318061a2785780207364789c83087347fadad0c3cc61fa0ec94e46c0",
      "kind": "transparent"
    },
    {
      "address": "0xEDa56C7209Fb2472A5696C42b57C2710C6Fd4187",
      "txHash": "0xac47b0f7967e9257d2ec8325896fddefe42e8eb6c0e292fe46b1415f62ac812e",
      "kind": "transparent"
    },
    {
      "address": "0x190ec66277A94C285842eEc4C7BdbE8392F49Bf0",
      "txHash": "0xcea8658bd60c8394388acff3ae6db3b3f3d7629ac395e657ebd2d661a781f692",
      "kind": "transparent"
    },
    {
      "address": "0x14102ad2c258a2dEdc178d380e3263D2a7D85a93",
      "txHash": "0x318bbbf9d0eac1af47e7759971db1d741b0b0e920e112605f550d0326cb50ba3",
      "kind": "transparent"
    },
    {
      "address": "0x4F85212967012D22C2Da8159fD2b71e494D208E1",
      "txHash": "0x1977dc95db20e67fc278e629982d2a2c644a918d222d23cd9d258578ce9cf23a",
      "kind": "transparent"
    },
    {
      "address": "0xac848161ABD00ba24527eb334156212AbD7956F8",
      "txHash": "0x3c83bfebb411ee3f26e8e6ce544f52bff45d441b3fb3a01749e51164728dd0ad",
      "kind": "transparent"
    },
    {
      "address": "0xA121A891acA99926FaE06e0e0b452b7CB8F5Df4D",
      "txHash": "0x0e9654d0fa6f318647b8a41281120857b49f85159074996075ace3f5e613302c",
      "kind": "transparent"
    },
    {
      "address": "0x695E8E58908A282DfEd406b33481E29C8f4ae79d",
      "txHash": "0x811383e690d82342619be4ebaa47bde5c2b0e75df68df4e4fdf18a8373e9ce8b",
      "kind": "transparent"
    },
    {
      "address": "0x4d4ebbDFc739b470b6454eD4e1169297Ed4E1FAd",
      "txHash": "0x9cc0279230d630ca83cf139a97f01a4dde9b4cfac60e025938359c4e10a78006",
      "kind": "transparent"
    },
    {
      "address": "0xBC7c1D6B0f96012C056C1Dda3cC9A8C57B157646",
      "txHash": "0x99978b0fc4040598eccb80d1d24ae6f0a28a7fee84843756dae5e2e639b36e6d",
      "kind": "transparent"
    },
    {
      "address": "0xF533F815426562d6ABD060b1f312230d674C339c",
      "txHash": "0xf27c33df124a1d3f1c5e6af575d013bd91e666c71fb4b1deef34a970e67f9cd7",
      "kind": "transparent"
    },
    {
      "address": "0xA4cAA80784DD37747A9f5A5f72737b6Fe4d440c4",
      "txHash": "0x14891a9dc28bface62e01cd7fe0ddbe638141f8d8c3daed19e75cbd917bccf01",
      "kind": "transparent"
    },
    {
      "address": "0x9a2A021fE94DBaE21EAf70701D83042156C23c80",
      "txHash": "0x83dc7da5627b0222ad1d0be18ac09bafda0c8a21bf2ced0caa2f43da01860a62",
      "kind": "transparent"
    },
    {
      "address": "0x42d1b511510a29e3324f70E3C2466F4b38E35B91",
      "txHash": "0x0913f42f2128517ec27c12d994e8f01cbd299132cbe3bc7434b3b4714b3594fc",
      "kind": "transparent"
    },
    {
      "address": "0x5390489f31045776FF470505c719fba94d6c5029",
      "txHash": "0xa88717e98383e038574889dc4597daaaf9b0b8c66a34f6b6c76c1b6db8e52bf6",
      "kind": "transparent"
    },
    {
      "address": "0x5aEbCc0B0b6EaB16b754def3555e2196609f3b36",
      "txHash": "0xaa11a84b9061bb91ff58f6c8e47353c6a82f94692f7851e6e779e9775b1328ae",
      "kind": "transparent"
    },
    {
      "address": "0xfC0AaBc12CCC4A9f54771e8663e19F1aaf6E130E",
      "txHash": "0xf344a4625c3f6a10eb65255ee15f927faef36caf4505a1168a9bb24a98965410",
      "kind": "transparent"
    },
    {
      "address": "0x21783B9b425B3c5C41aEbE4F513158dAd917240E",
      "txHash": "0x844b2df7d77793e5465623047c5769afccf4a969ef28d5dccb89fa239fb079d9",
      "kind": "transparent"
    },
    {
      "address": "0x17e5cde20e0cF4468e8A02Dd6D4fb569A5F8729F",
      "txHash": "0x5af65d2ec0aab747a9a20837a074b4932e0e80b2ed7f907107eb932cd5aadc74",
      "kind": "transparent"
    },
    {
      "address": "0xE2b7E8F1c1FB87d4748Fb1110735DdBCB3C460F4",
      "txHash": "0xff9dd88f66c5c51087584c5094d4755b936b6697a86d42419e0871e3a145441e",
      "kind": "transparent"
    },
    {
      "address": "0x66D36eF25F9d8B000cAcD0fd0227cdB0a5B58fe3",
      "txHash": "0x86ae4db6f5e5201aac47ab7f8ee33d9f3717e014020312d86d7960a38ef80181",
      "kind": "transparent"
    },
    {
      "address": "0x49B1B91B33A6A9237857173dCB9f3f70b762EA7A",
      "txHash": "0x5b627252db99601f3380ce280f397f86630c29ca009e9077b53dabfc6e95c9fa",
      "kind": "transparent"
    },
    {
      "address": "0x788dd764f689983929a3a9230a742166FC490B4B",
      "txHash": "0xa27ead89cd9c8444ee6b9a0e124d4c1b5ac1aca80ebdb4d648ea63bc02f76d2c",
      "kind": "transparent"
    },
    {
      "address": "0x02a267ee4F214B25302B18C44928057550abb836",
      "txHash": "0xeddb94a1f3b213692ab878f8f32ed17207dee034539c7aa3221deeed6a77a071",
      "kind": "transparent"
    },
    {
      "address": "0xe83D443c6a560C875fD32499e289C0F39c383618",
      "txHash": "0x043275a3888634d5ff63281773115bc7e21e3b567bc0d98d2cc67052c1e7cccc",
      "kind": "transparent"
    },
    {
      "address": "0x1174B33cDb258BBbECB2E4fb47dE933ce524EE46",
      "txHash": "0x5f8aa7ef5267a77c39412a997367de9ca470f57197b090655f822c7ac9f48c38",
      "kind": "transparent"
    },
    {
      "address": "0x20a56E817Fd18fa3B48641B633a64E20f98c1A4a",
      "txHash": "0xa8e96fedefa0a5a4e469bbcc4ea0fb65e1e366cd8936127cbd3d7fdb0d042b26",
      "kind": "transparent"
    },
    {
      "address": "0xEbE66cdC64C7562976CaEE5da48c83b9fdE5e276",
      "txHash": "0xc38ef9988af2ed2f8cbf8dc718fbd1c377277944a3ccc674103c936fd2eaa243",
      "kind": "transparent"
    },
    {
      "address": "0x07A4b526E76022890ACf2A09BBebB3a4C844B494",
      "txHash": "0xf348c76a9b04ac09f191e113e0b24d65d687f85d227d99bedd306d9c9720b332",
      "kind": "transparent"
    },
    {
      "address": "0x34149c500cff7bdD1472F956e603680cdec18130",
      "txHash": "0x96b91fcaa41ba72e0d5179401776e5cc4bc050a5bf9036d53b1a405a7510fd25",
      "kind": "transparent"
    },
    {
      "address": "0xBC28dB788dEb120b1844cF0a58F588A448592E6d",
      "txHash": "0x0b0613cb581f74f0c8ff51a175e5433e49bac579d76b4017d5eca53697fbe3fa",
      "kind": "transparent"
    },
    {
      "address": "0xB7ADb545811bBFD2400D77b4E33794f52e763DDa",
      "txHash": "0xd1c3ee603b6697439cda439e1b08f0a77deab255228470cb2f0c3099438e7356",
      "kind": "transparent"
    },
    {
      "address": "0x0934dDB32Da8eD8a125BDeb83eEdA74B770FBBB6",
      "txHash": "0x8b38d01f9fb2b2322b76c697b5416633856fd70a5d42effa406e823e986b12bf",
      "kind": "transparent"
    },
    {
      "address": "0x9935A2cd3deB366e94FE838F05B815d0b28c4727",
      "txHash": "0xb223204979fb96c8f0cd16e66818c2e76304a2ab7b091388c35f449ff6a9b571",
      "kind": "transparent"
    },
    {
      "address": "0x979AB49E2572EB61f5c79dd689E2542f20b976A1",
      "txHash": "0xf164338fdea65d149bbe76346685dfc7aab37e816c3deb6c0284100f9d835b50",
      "kind": "transparent"
    },
    {
      "address": "0x3730e3c9E56eFCe622b54131eA56BcB724154555",
      "txHash": "0x185d31b8ddc3ba5208e574d7b86cb176d7ce68daa05a2ecee93dce56e6541773",
      "kind": "transparent"
    },
    {
      "address": "0x6051C758D942e7495707Bdaf97174abCa29651E8",
      "txHash": "0xfce314dc5580758fab551307410e24cb3709ca26e281eb4234552f5da2bb691e",
      "kind": "transparent"
    },
    {
      "address": "0x57205CEE4E0E6680140340eE45dE382463F689aD",
      "txHash": "0x730a0a280cda2a7f16672afe71ec011dede1f0c1cc29cb6965c7850f172e8d44",
      "kind": "transparent"
    },
    {
      "address": "0x4f6F10742fD3e2209701a6A48b0fE12479E3d169",
      "txHash": "0x19608ddf18e7a3354cbdf987644e8220542faf97387ad6dfe91bc9723995c30b",
      "kind": "transparent"
    },
    {
      "address": "0x63594EDB70c16548d6F0143978d788810cd067A3",
      "txHash": "0x8a90b9ffd5aa0089e46fa4e9e056d07d128c405a0176499343d69147388cd940",
      "kind": "transparent"
    },
    {
      "address": "0x63962C93962575EeBD95D85046D558D7F705a90E",
      "txHash": "0x60bc894bed48720f707f84f18c216e640e349dad4735b3ae71f7fdb02b500dba",
      "kind": "transparent"
    },
    {
      "address": "0xC40d71Fe266acCcEF9E1C46Fb1F89619545c6aF1",
      "txHash": "0xc51e8020681cdf8f3144298b91dd541349e4f3a5895ffa8d0de9e8132145fc89",
      "kind": "transparent"
    },
    {
      "address": "0x4842BE107b6573873A7CCc3f4d03368BF30859E0",
      "txHash": "0xc254e29e5fa15534871066d60db9f642441550ff64a2e4a1c9d77910099dbe77",
      "kind": "transparent"
    },
    {
      "address": "0x26097738Ae54dAE2105fee2D4FF159d2c6a46179",
      "txHash": "0xfb1ed9e5fe278125843d9d794f2b9ca36f1423c57c309ce9127a096d20925a26",
      "kind": "transparent"
    },
    {
      "address": "0xfee0f223268C4Ad443951582F57967A93E60cE01",
      "txHash": "0xff409182ad3393eeb4a1c894dad5dd778c6733bf8a920aabe0d5f54377382d97",
      "kind": "transparent"
    },
    {
      "address": "0xD5820c26F03F911c8A43fca879360C8DAf3Ec37d",
      "txHash": "0x18774eb5df66d45722458991cd6fe6cd708a8f6abb735c5cdf0c0e53b560be64",
      "kind": "transparent"
    },
    {
      "address": "0xd66066423216f2829d7e648278457723871dDAa7",
      "txHash": "0xf4a7c9852e1ea6bee6e54b477722df9607bd421c434d4aba5de025c35ad343a1",
      "kind": "transparent"
    },
    {
      "address": "0x9dbe31Bd624B0a6bE7535600Ab11dF4EDFF8f874",
      "txHash": "0xc0d753a8919b31d5045b35bcc20aa143e0ac39ad380951e0ea4542516afb0002",
      "kind": "transparent"
    },
    {
      "address": "0x2CAa67e6624d4885Fac591C55A1499a7887DAcdd",
      "txHash": "0x913e15ee1b0471d1a1403ff19983a5b4687751a18e6b1f1702f84ccff4b49565",
      "kind": "transparent"
    },
    {
      "address": "0x2D056d746A84f12b003c9D3a37496eA81E903232",
      "txHash": "0xd04728d70f7ea3c871a2d0f2ffddc14334e31979d21d787062b5b324ec77f7a9",
      "kind": "transparent"
    },
    {
      "address": "0x838DD8BDCf348F86BBd5DE1E293c0778343049DA",
      "txHash": "0xf22601f11ced136787375db4b83fd20d596dd5b33c6ccaa49c9ff264cee79afb",
      "kind": "transparent"
    },
    {
      "address": "0x6Ff97A0A37C16b03a120Dc4c4394c1C457E611f9",
      "txHash": "0x5d572e44d4a7419353a5965aa474ad511ce44fbd775c16055e726899066ac0ba",
      "kind": "transparent"
    },
    {
      "address": "0x1c775a7287B9AEacD9E8252aCFA2Bf95811a005e",
      "txHash": "0x3c35000a5cfcc320f631e3f62c5b59bcdec5ae1e71b67de46ba77da6d1df21f3",
      "kind": "transparent"
    },
    {
      "address": "0x70CA5dAE7aD9365B2c283Fa503B0fC453342bF84",
      "txHash": "0x8d6b9e0bb8466c6833c866027d5966bc67e092f57da7c46570abc6e203929b8b",
      "kind": "transparent"
    },
    {
      "address": "0xF130f15AbDD434Dc1a8BB308c53c2A9eFb3315E6",
      "txHash": "0x8843109673500826a108cd832e83245429914ee217018be67c1d633960f96b2a",
      "kind": "transparent"
    },
    {
      "address": "0xe2410D5A24cEdE8e1698878E37E36be7917f35d1",
      "txHash": "0x9ed590f8e6d72b50430bd70796b477e45d73342c527f519b364a008c5809665f",
      "kind": "transparent"
    },
    {
      "address": "0xf56417ea4e37520739Cebd628128d46283fC6459",
      "txHash": "0x218d9cfabc7d65509c0ede7cec37ac728a6c2b4068444748e0a3b46415afc0a6",
      "kind": "transparent"
    },
    {
      "address": "0x2e6B4d5C154ebC22470861dF718EA9030aeD88Ce",
      "txHash": "0x0512d1a0e66cb779f4e7c82ace9ef7ab5a1b57c6cc710198847f58add1c7dc7b",
      "kind": "transparent"
    },
    {
      "address": "0x7475f0a108f4108E20572E6f5e9512f62231ABA6",
      "txHash": "0x66e62fac765112b1a1d15f2ebf5d78709a0c7998103177f7d54b5daf9fbae2ba",
      "kind": "transparent"
    },
    {
      "address": "0x4c957E4DD582C2BEfc4C227E65da9C5c07B43a6C",
      "txHash": "0xf75b5b3533432cf4f20cd480f4c46aa28a57fc1db465d1d18d58cad108b2cd76",
      "kind": "transparent"
    },
    {
      "address": "0x545502CCd1B2afdF7300649485Eb8bf2e918FE32",
      "txHash": "0xd1a0ac73992d4b3ace13fb36c77dc4c7fa1164b3b5a377e96c4c98dce81de0fc",
      "kind": "transparent"
    },
    {
      "address": "0x61ED028793dF5F557d74F56158EB07Fd50fC4428",
      "txHash": "0x89c00fc19178b646cb3f8091c287e86fe87e459fa57f2f890acd4eee78689f3e",
      "kind": "transparent"
    },
    {
      "address": "0x38B2d07DeE12954cc93bC4950527f1e7EF02bf2A",
      "txHash": "0xcf90c57771862da2722de4b51e154216e80a71a9dd1bd9945f681f8571c6a6da",
      "kind": "transparent"
    },
    {
      "address": "0x90F9f787c58DA65b0B5Ab41421E46CE3E86043cE",
      "txHash": "0xec0eea56a22f93402722416819c044792edf2a95e0bead7b43b2a0d210ba6e79",
      "kind": "transparent"
    },
    {
      "address": "0x3221fd214F7Bc4F4dF77Bf4630154Dc97FBa3aB1",
      "txHash": "0x63fd41b487e3370339720119bdea252e1e9be176cdd84c158efe8e0b5f96118f",
      "kind": "transparent"
    },
    {
      "address": "0x4455654322D064DEbfa19C762F8397B9f634B66F",
      "txHash": "0x798434627bf34e075b38a0e21be5dc9dacfd7e039029c2b2b6378031168a8b2b",
      "kind": "transparent"
    },
    {
      "address": "0x49Af736aA4bB1B48f47050Df8E0eB606CfBC0C31",
      "txHash": "0xee6e64f8c9fa8ed93405e78929d675c7b15f27ae28d2ed2769d3a91a261e21e1",
      "kind": "transparent"
    },
    {
      "address": "0xddA3047f057eca6033839d0BA45a65E63A83C843",
      "txHash": "0x5ab73d721e0f1cba3de42203979ca82c1e8af0460b8730368af1f142356f87ed",
      "kind": "transparent"
    },
    {
      "address": "0xb66fd7752F2F3Bfbf4F635518E8f07a855790808",
      "txHash": "0xefa1d08585a0f0cf0e9907b0346157475ccbbac4542f8ccea622fcd5338a4e7f",
      "kind": "transparent"
    },
    {
      "address": "0xa31057aeFC4b26e5Fff81c4F6e3DBAF8Cd0C7fB2",
      "txHash": "0x0faa61eaf714d6c7eadc15a21fa22c23ce4ea8c125a70c498112963e070ee602",
      "kind": "transparent"
    },
    {
      "address": "0x0C8f9e170Dc8cFbAb1c53B89490C311DF7b056D3",
      "txHash": "0x74682cffb33f2c368987a701e213ecd9aa19bfe91b49a9c146fe4aba925453c2",
      "kind": "transparent"
    },
    {
      "address": "0x604486157e3843366C45b93cBf07e86965f1741e",
      "txHash": "0x3a217313e57aa0a659d76e691e1e79bfabedf291a816f0d905bfb8849a720804",
      "kind": "transparent"
    },
    {
      "address": "0xf5d5211Ee06c52B8c09A0C6d256C9Dd39353DcCA",
      "txHash": "0x88032c79cc52fd429bd83d9c68e7dbe2f7edae516993e0ab43c00430ad38ef1f",
      "kind": "transparent"
    },
    {
      "address": "0x260a88Cf2ca20c9e452C96c8689a91e423605146",
      "txHash": "0x565e9b38ded8d4b4f0387643dcca5cbdc0fc06f111d14e81c661615acb2450c8",
      "kind": "transparent"
    },
    {
      "address": "0x870259d2AAD779a9bb3998D5Bc7368ba158F57db",
      "txHash": "0x0da67c91577c0d15d158c3615e982fdd525ca9663ff4a7c2d9d2b4aca874eff1",
      "kind": "transparent"
    },
    {
      "address": "0x7A5256e365f2c1d7843A0EcE727C31B6CA38aDb6",
      "txHash": "0xa15cafca6667086840485982e47a2aed52040805acb411c89cf3d4cd17f5692c",
      "kind": "transparent"
    },
    {
      "address": "0x02a6dc57290F738C7ECF34cBD06F742c4F884287",
      "txHash": "0x0596ca2d7fae238b3fe7b72e8ab9749f2cfdacd3356a2b1e666d39a0d863bb0b",
      "kind": "transparent"
    },
    {
      "address": "0x6632e5126600D0D4A0615dEF8F5eD344B6A46DA9",
      "txHash": "0x624cacc776cf58ed57f8f4eedf43ded1c0f60863c010146c4d7cf38e13635d60",
      "kind": "transparent"
    },
    {
      "address": "0x7C74b782d78bA78b15B2BDB0e9c82Ff9d3e8e396",
      "txHash": "0x6d56f3f6d22ed12267b2b0b2dc26a7e10436cc4d3e3c6c76815502ae543b6d32",
      "kind": "transparent"
    },
    {
      "address": "0x2388d89842DFD6E08863607C02a0662c2224D286",
      "txHash": "0x4b0215f2c059258577601879ebf7484c98e52c536aca5327c90236aaa6b32bdc",
      "kind": "transparent"
    },
    {
      "address": "0x69a801e0a58d1C909361E91917beBaA82832B0e8",
      "txHash": "0x304e6bbcc1933cf2d6f9b8d69d829d68b969c8ef733da29afe144d76dc8762cb",
      "kind": "transparent"
    },
    {
      "address": "0x303C3169630401f1E96Cf9dC2B32FE750D8f1B99",
      "txHash": "0x779fec65cbe41c3bc4e9ee43dbe433913b800b48aaa122129a7ec36b19eb834e",
      "kind": "transparent"
    },
    {
      "address": "0x913d34910f5183B00F69B53E0F8a4A41d2ACE458",
      "txHash": "0x15ecca7e332a1ac6d06b50e1de96e8a2b1ff7c99b27c154f49162d91877a435d",
      "kind": "transparent"
    },
    {
      "address": "0x4ECc961484791146B3E0B5d1eBA434bf675409b7",
      "txHash": "0x2ae056d447158089a659107f2a8f42c4b4d7576ecfc768c170c4c436acc7186d",
      "kind": "transparent"
    },
    {
      "address": "0x5839E3866637D3B46Fc6fDBBDe8677b11810a1e5",
      "txHash": "0xf05643a3c5b566ea10d0c33d900c0da069ef7c93d14357989de92bce78132ef0",
      "kind": "transparent"
    },
    {
      "address": "0x2714392f5429489f31515c9c5707F382db3516c7",
      "txHash": "0x7bef9a55b099c369395d9df41c6406ae3e7c84d8c680471226114dbb668637bc",
      "kind": "transparent"
    },
    {
      "address": "0x430AacFcBf4533660511Fa60a3EE8f38C5ff06fA",
      "txHash": "0x00a4468d083c828465e9d5350c3c34ba1ed4f1f35b757c999e0a9673c9ca77fb",
      "kind": "transparent"
    },
    {
      "address": "0x16887b8025e797D5E1d7255f56B725e24d0C4F8F",
      "txHash": "0x4d909ed1d332d7252baa55462950573d1c072ff8469fd1312334c204c5c1061e",
      "kind": "transparent"
    },
    {
      "address": "0x5d44e718a70758013A4A1fDD04114a29feD6f0E8",
      "txHash": "0x0283a53ae0ffca9342040f43908a087382768cda2e3cfea1758af23766588056",
      "kind": "transparent"
    },
    {
      "address": "0x9bA22d5A6BAFEC3936BAcb06a8d21399545C2D6b",
      "txHash": "0xa7a42f706a019b27e955e2aa5028d18daf46a74618667afe40036d7a510649da",
      "kind": "transparent"
    },
    {
      "address": "0x779BD8190Af6e7Fa89a9cc962C726687B1670c93",
      "txHash": "0xb6882b8223158f571033a74bf87e62fe68841fe1e62e0b26c6a63a45936e6725",
      "kind": "transparent"
    },
    {
      "address": "0xDD364208c1b8AC0360bE7Db017883E6C32bd616c",
      "txHash": "0xce6337fc0b2c2bbe67ecaf559d8f883e2338567f80b7514403979a2249f98e31",
      "kind": "transparent"
    },
    {
      "address": "0x32EE03412174F06C1B66386D032c2337cae2AC5B",
      "txHash": "0x678eccb13f79f877ba75367d48b1d3c72c17c81f8761851a58c3fb8b59207415",
      "kind": "transparent"
    },
    {
      "address": "0xe0bf8a661Bbc2D653883A378C7f44e24aC41620A",
      "txHash": "0x844b956c5c6d3b08932ce7c1fa627924913fc0a7fc8a2f3bd309d2aa85cf49ef",
      "kind": "transparent"
    },
    {
      "address": "0x9C167c214081C38A5da6306Aeca0Fb3FCD4A30E7",
      "txHash": "0x162bb6a856e0f605fbcc8435d08cf711fe3f3593fffee69c358cc4c9b6fd8d64",
      "kind": "transparent"
    },
    {
      "address": "0x4273Ac9cF19d749c76D30e52F73e54C46832B363",
      "txHash": "0x7846f2db4aaef6603c5b5da525bf2cfe6a0478bfd44c1fb8416b3bee90bbe011",
      "kind": "transparent"
    },
    {
      "address": "0x2C3d03E0f73e8d5E406f37fcf7449Ef8759e1bFB",
      "txHash": "0x49b42cf2d481c532ff9b0db1d2130fde8c314acd255d600ca1fade9aa4fd2c02",
      "kind": "transparent"
    },
    {
      "address": "0x7B919c6245C5971F331Ebe827DEe15EE1f2eF7ac",
      "txHash": "0x2940869736c20940ed2d0a900b511e5d0938b0b8f8decd6c1259a45306fe1fcf",
      "kind": "transparent"
    },
    {
      "address": "0xc536427e3deF885D49a15c203880C7a2060C6A01",
      "txHash": "0x969921b21fad383e100f0d85abe16bab5941db6a1f1038c7e853144a08631216",
      "kind": "transparent"
    },
    {
      "address": "0x6617d6d8F024a488A9B809fbd69b5b7E8005c060",
      "txHash": "0x6a8879d138715ebdcb091bf88fe89088d381697671a9d3cef4c9a6a6f1b9f83d",
      "kind": "transparent"
    },
    {
      "address": "0x95d6De6822C5BDB08f02917824A86a499Fd78d5A",
      "txHash": "0xcc1523ee9f72c74ad60db594bbaf46662c4d347059ba45bdbcefba2e10ea6ff5",
      "kind": "transparent"
    },
    {
      "address": "0x21998c713e12D745d0e2776B5613C669E84a5FeF",
      "txHash": "0x525554d2ad4604e511a792b098d8ac0e4cc6222dcff467325093974d10e15912",
      "kind": "transparent"
    },
    {
      "address": "0x065B3f69f3e2da47128acF58a1938001283c527C",
      "txHash": "0xdded984b083f4fce196dc3238e155d3eb8a393d8840fbfe7635eb644c785ab4f",
      "kind": "transparent"
    },
    {
      "address": "0x4b53F9b93A35F4b7Afef535cFc6200dEcF581A68",
      "txHash": "0x0c5ff5a01a0a1ea7f7432d6f82bb3940bb0ffcd7aa8ca0fad56fe28b80ab9627",
      "kind": "transparent"
    },
    {
      "address": "0x920A7F7801c410C6E80129Fb642E4eA3F55625F3",
      "txHash": "0x379a2c9308d36abf100c5d692a2063b3c8bc13f0d4979fbf52a5fda7adc3dd8d",
      "kind": "transparent"
    },
    {
      "address": "0x8F493B4817301A034F1D7c5e1786e21Ba40fF032",
      "txHash": "0x38d8697d7c04f1936849885dece0b391422ac7e31923edc1a87fb00983fcae04",
      "kind": "transparent"
    },
    {
      "address": "0x6D95cB25c2da429E08Edb1291Ce543Dff8c68282",
      "txHash": "0x884d8cb17ff77f5dd83e1d968065b3ddbc9c7727ea04057a1f54b3e1b6cc4108",
      "kind": "transparent"
    },
    {
      "address": "0x862db1771e5637CA805C1D14808c1461335D4730",
      "txHash": "0x6009171f52512cb141f6f39c9720ae4c2f350e1a3d626d82671040b55a84b63b",
      "kind": "transparent"
    },
    {
      "address": "0x62CBC2440571AF4398b5120fec6Bc8e76955Ac82",
      "txHash": "0x888744b1fc980dcd9e891c5bb3d46b3305175d70832b5d6002e64ce947842750",
      "kind": "transparent"
    },
    {
      "address": "0x8f350E6a5d62465D25f4436f30c423fc5957838b",
      "txHash": "0x1a6d0ffa991cd802934ae8297942f253ba496e5056b95e09c5014f09e4388437",
      "kind": "transparent"
    },
    {
      "address": "0x968Ba62Ce88C699daDd6dc4f23E5192CABBCe22f",
      "txHash": "0x69ebd17292606b088b91dd08a77a0a49e604c326c1e38980ff031e0119989468",
      "kind": "transparent"
    },
    {
      "address": "0x8a59Ba219d1410819dc1e3D736499096Be97332c",
      "txHash": "0x3438f0016b76c9ed574f068a629de26304bc1ecace2f35ce4182415148d7ab2a",
      "kind": "transparent"
    },
    {
      "address": "0x39F622a0587dEe9E95E553A19c52dc7941851e91",
      "txHash": "0xfd4374b63562cc506d607db878cc7172db0151f28dcfe2ffa6b796ec9f5f76cf",
      "kind": "transparent"
    },
    {
      "address": "0x5a983E34E2cC46bca3DB99Be93f72D58925D241F",
      "txHash": "0x9b9bd557e92aa2b4024a825ba0e48ba8b0503b8cca2d4d22f8ad8532cdf8113a",
      "kind": "transparent"
    },
    {
      "address": "0x058bD0992Fd1DfD76Ac45f3a531Ab4Ad4415a094",
      "txHash": "0xae9259d73ee62c198ddd8a8ab3011cdb106bc155624fd6fe764dcdb58bfeb228",
      "kind": "transparent"
    },
    {
      "address": "0xAb6719E3979f1f2896D48Ac3007BCb944775DB08",
      "txHash": "0x15a7dc7b8da3ef512cde83fd9e779df794b58270c9fe671aa7bc0ea78a7568f1",
      "kind": "transparent"
    },
    {
      "address": "0xC47700b83cEcA45c407c693D11Aa79ba77aF2F05",
      "txHash": "0x0b17422029bff0f8991390fd12e9a14d92e111bd7da4bbfb8a21e0256d76d5f9",
      "kind": "transparent"
    },
    {
      "address": "0x86e10c7dD0394795553DdC9ac8eCA38C4C5ACa52",
      "txHash": "0x7c723fadfcc5a997ee170b9ff6fffecb964363e05800393167aa7e4ab772137a",
      "kind": "transparent"
    },
    {
      "address": "0x222C7422942284bcDa150867E5Bac2032B1aE855",
      "txHash": "0x056cd8711ba71210246b369d3412519eb2f900f492fc9c2fdc3452c9794c6f43",
      "kind": "transparent"
    },
    {
      "address": "0xbdcbcDD2Ea28F28c972abF9f3A142Dc5f28F9435",
      "txHash": "0xb14e4e38f31a1184018557fd7d83418d60578bc6168f23b44bcdb63f4eaf26a4",
      "kind": "transparent"
    },
    {
      "address": "0xB44237cbB3bE2ADA3A247BAdb690378a16007770",
      "txHash": "0xf4df369430a8e42bbbf2b0862cfe84d4db186340887d09c155639f8a2492b387",
      "kind": "transparent"
    },
    {
      "address": "0xCd112db30c686675183C94E459625Ce2E5f1775c",
      "txHash": "0x2a37025acbc2e615fe38edab97087601b262ff280303fd952c1cbb3a3355f5a9",
      "kind": "transparent"
    },
    {
      "address": "0x31aE64180aAf3004697678a3Ed06ffA9027789Ff",
      "txHash": "0x0a2921c8d7839fddb7dcff2e10be274a13f69f695612aef837fad020ccef8f6f",
      "kind": "transparent"
    },
    {
      "address": "0xca02978A28496968089417ADB48b3eE43D98d4c2",
      "txHash": "0x0b3d2053f5144876dd7d345acc1c23bacb04d55026fb7b63ce45620fa685837c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "aac1e1d3b9dc8238bb0981b8b0e1c5d8fda43eb288f4194d294c8d9fb3f564d8": {
      "address": "0x5A8863d94fddFF7a6F64De1Da7A503D2681dFDEc",
      "txHash": "0x4115ad07e61312fdfd7d588b1c7ca81f979894b84efe0edc2b79038477ce4f52",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Detake3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\Detake3.sol:14"
          },
          {
            "contract": "Detake3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Detake3.sol:15"
          },
          {
            "contract": "Detake3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\Detake3.sol:16"
          },
          {
            "contract": "Detake3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\Detake3.sol:17"
          },
          {
            "contract": "Detake3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Detake3.sol:18"
          },
          {
            "contract": "Detake3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Detake3.sol:19"
          },
          {
            "contract": "Detake3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\Detake3.sol:20"
          },
          {
            "contract": "Detake3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3.sol:23"
          },
          {
            "contract": "Detake3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3.sol:24"
          },
          {
            "contract": "Detake3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3.sol:25"
          },
          {
            "contract": "Detake3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3.sol:27"
          },
          {
            "contract": "Detake3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\Detake3.sol:28"
          },
          {
            "contract": "Detake3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3.sol:29"
          },
          {
            "contract": "Detake3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3.sol:31"
          },
          {
            "contract": "Detake3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3.sol:32"
          },
          {
            "contract": "Detake3Token",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\Detake3.sol:33"
          },
          {
            "contract": "Detake3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\Detake3.sol:35"
          },
          {
            "contract": "Detake3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\Detake3.sol:36"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "208ce5d604aefe0da9610e2305aad466e82fb4c674b4eee06af7408a56e2ed1e": {
      "address": "0x67750FE6B0CD866032EbDA506efEC9432165b62F",
      "txHash": "0x047c56662b6052acddad1061ba59b9633cca0cf9fa74f26ef7991ed24e5aac4a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "9d432432c140904ae63a96ab2f20d20889b6d3a36f1d1fd7f65e316b344ef406": {
      "address": "0x5E03165811cCf8407f84b57BF668A70f4418A856",
      "txHash": "0xb474272ab4260bedb0707659e3f96bcf329d368a9852692cd33c98a80ae22b5e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "4339fddc20f1079610a0451062fc31b96cc0b354b0e4afe516bad69fee2bde43": {
      "address": "0xf8037BD9259DFCc30977a3245c0cdDF9b89F6713",
      "txHash": "0xc5e7a04cd93ec0df9471fcfec8e6992ee8bd7187542ed9bfe2447c662a33ef09",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "recoveredAddressTest",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "da3e80058db8d8b33813d37f46153c775aeaab1371b5bbb942a0ec3aa2a870e6": {
      "address": "0x2A78662A514E81B0841Ab004e57a8bA0182D0580",
      "txHash": "0x1f58188f82b5979cc5bc81d75082b938d9811f31894d8a6aaa0a5d891f25b960",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "recoveredAddressTest",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "f716d88c521b00825c9ce1cb0590235f1ab876bbac7c882d86cc7eae42619407": {
      "address": "0xeeBd370Bb82364f42aE2257632e27e89C670AaC2",
      "txHash": "0xb1fca5c8acc766ec4d86887da95c79be69d26e50697db091c190795c588f9bba",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "recoveredAddressTest",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "90748a78a7648eafacfe2b1db264b37b1a8ccaf0514d9af7e2d5a3ab717cf946": {
      "address": "0xeBe7f10409415B5304538E23cE2b88A89D636F9C",
      "txHash": "0xbd8aea7d49e8cc189e8f054422fef566db338c20aeff1477bbefbd2f672a30de",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "recoveredAddressTest",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "336ffd93303de4dcd7673966ca58fb6d7a6551ff60e690745daa4aba35a3b217": {
      "address": "0xcc6F67DDB6d649343F31163933fD83b0c86F801D",
      "txHash": "0x15019ad1b935b609e85e81be8ab32ac16328f9f8d2f3916eb95be540c1c9c8a0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "recoveredAddressTest",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "5da266291d8093dfba0a385c07c5fdec7b1d9483a998e4f6ed42ddf74270555f": {
      "address": "0x2E35A7339C6b963745a328F4e4D4A37adE1922E0",
      "txHash": "0xa4a01a518b219318b89baeeeccf7417c9449dc2f44006f02cf90de39830536cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "recoveredAddressTest",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "38022ed93ccb418e433f04fd6c151fdcbfc7a8292f665299f5f5f077b34e4044": {
      "address": "0xb176723840052C1B810F3dcb060e046B94b28D29",
      "txHash": "0x44412535c918dd9b75a7118a95762c5dee505c355af33d2383c70b0a8e60ff92",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "recoveredAddressTest",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "12b09a0d2db1f3463bcbc49b979608e4b7b5ef823c90351fadc5b18fc42d4380": {
      "address": "0xe706DCB332d59dcFe92977a65a9bce8f0689f233",
      "txHash": "0x6a7255d4e4683a0ff994a8882741dc50aeee85174511b9a67d52690f49dd7d77",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "recoveredAddressTest",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "0a3a6608d8aed97467b141bef6e50ffa8f564209ced73da9e968dc0f8b2ba381": {
      "address": "0xBc5D0C48E99752A062c84a1b292133093702935B",
      "txHash": "0xb647030d8ac2541fe474c11639f56e52ffcb0c8e55ebe0613bd9146cd267e87c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "3d3acda9c62376421c5547f38ad202c83693509c1f5ae85b1f9c85b2b33154b6": {
      "address": "0xC238f4017Fca2662384C26246D5654aF4a842B9F",
      "txHash": "0xa5c95e4d23180e6c94c61fbfb4265ceef73fdc5acf41ad3f00715b43b5f3ec07",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "b868180187ff449473ee0e0c50155509d26ca16817e659695464e998749a973e": {
      "address": "0x0eF6e3Ee156f1Aaf8dF30E837a4fC8BEBEb64944",
      "txHash": "0x67c41fe9de54fc45515dbaf67ab65a5c4d6c7ed910a0f8bcb8e2458ec88a47bd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "c592a980c5501def9d1723156d0dfddd5a01e91ee21fb49b34b22b7b9ee1acb2": {
      "address": "0x9d2725c3faA642E9c4Fe3385d9c140429C8b799e",
      "txHash": "0xcfdc3836ee3fb10d7e32cad93ca39db3ab49244eaa9804a9f73b469764c655dc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "72d6d816fcabf0b35810067c32e5ba6795eb38ad329b42e6ae538771f235b964": {
      "address": "0x18062F0fd00C6d742165eDdDD6d3b798F0081435",
      "txHash": "0x53a1f87e6fa3d3cb8514647bf693b0543e0778222c3c6c3dece883ee2c309e0d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "777bbea0ed751fba5e9a4fe63b557ca7427fa08e91a9965f6e5dee3b1047a171": {
      "address": "0x387aB1cE4D9ec0a63e3C0f1b3724755d19394AF7",
      "txHash": "0xfb1670c475605900a4e56f7a941f93584d18b04c968a817402f2736786f83935",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "802567029f20b905a5e6f2fea3d36454718454060d27b8c1abeac94e9eb89521": {
      "address": "0x57911a97d3a28810aC69EB0cd0F1D01a35FEaF9B",
      "txHash": "0xa2e9c8a0efe0a1b5be621e3e00de7299a4d2ec0769fedfbcd2cae09c10cdbd0f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "6eaf13511796cfe6961935f7297f1f995f1ea60d8ec24313ab50e44ec7359e93": {
      "address": "0xFCbdFD34EaE8cbFbf8B8EF75796cDD13f4C2e934",
      "txHash": "0xec75dd527ec13bcbc49459c687ee921b15a2053c99ecae2d8ea388806dc38d27",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "df1055d8663e127a58e9e848830eaf1249c924b3ef64ee214c263d7b4d38a5fc": {
      "address": "0x1AC1A7b246d45C126a1E3E9Fed1561fa0c81978d",
      "txHash": "0xf2d77cd3265968493ff24b4807e73c819c1d30f194c66c81d2b02f43074e075e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "testRecAddress",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "71db988847a5e68852a814dd30f2eb0adb36d4bb7a28b31cc894694e5b8fad4f": {
      "address": "0xa69E773EB84Fc7285BFD1490EBeeF941A666D7aC",
      "txHash": "0x29ef4b78f93bdc90f6fa93381a741c7e8ea5e391f843fb0500d0035213144c7c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "testRecAddress",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "5ec6a0ee8bcfaf87eae222914919976c9b49b3176beb6131e5c35c31220bd270": {
      "address": "0x6E3e843A1726C33BbA205674C65c79c12baF06Fc",
      "txHash": "0xc5cc55944bec492c515bf5886ba0a98c963a195d430a957cb6f74ae248c3df93",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "testRecAddress",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "a4a9a78ae4f0ec7efa6de30684571677a313b41b1e5cdfc4c9fa654e221f7c18": {
      "address": "0x9bfC98f2B466Ec0020270793E5ECE5b00c866319",
      "txHash": "0x3da25ea1847fe3f2a54c077ab5a5019eab467cb9c4437c1f4afc8a039d5d74c9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "testRecAddress",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "3bfc32e32cbe4ad059490e5255d452e601913970792a5e498f5d6ccea9f1669d": {
      "address": "0x50F69a7436C6F180dC0F1E5FDe4Eea2aa6583355",
      "txHash": "0x5fb6083f09a2e66d7c6bd648e7617d700bf7f4623d173ea60e19a820f5851239",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "testRecAddress",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "2356704d167380f6206620f49601f17601bd91a9855f0122ce48df54fabaf6f1": {
      "address": "0xdE49Bee0e15efDeBc0ca2Fe1c5A1701ECDc7B7e4",
      "txHash": "0xc2bbba906a8d67c8b9beba3df722839020bafa65e217df623f4919e0030babe0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "testRecAddress",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "5e4ebd7188b846b224e441f859818ce85c9f5ecbd0f8f5ff381cf18bde8b5284": {
      "address": "0x17ed5813e5bec7c0736d2A529C2Ea367A5Ce2B2c",
      "txHash": "0xebbcba656308ada8cdd071edfb347a7dc4c8dc4bbdde74c8105f5abdc4051d23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "019b6a63e531aaa933bd8f44ef0e78d75745b4a85af58ddb270c5145fa5249e3": {
      "address": "0xFF3ad6195D5dA23B3D0fa7CE220Ba02803944b8D",
      "txHash": "0x842bfff86b1171e9ddd91f8d42bb3aaa62ff5e919d36a7003808872142ac8843",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "f15dfa330f8832acba7977044d9af5c420e9800a40df516a8e0989aaf33dd369": {
      "address": "0xA9F013E5AcE4b73847fe5ff210c848D2f6D0A707",
      "txHash": "0x971efffc2aa127ca22e33370f9f2ae70394b97db6e04f791f69b786cf798b006",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "940bee5088f5f7af9f0fdf639e5db76f44817aade97f487ba67233e102c0c8f8": {
      "address": "0x3C4e6248030B86a68982485DFCD7681885E7E5F4",
      "txHash": "0x398b4909eaa0c95d21937b63964468f27f8ad4f6b405c6640f67b6eae2241c5c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "48f98e3eb9e4890dc02a6b953d2856669c4143d39df5cf322e2be27a1a10f82e": {
      "address": "0x6EBF8EF231b217f300a08C5cCEc4C23fA579414F",
      "txHash": "0x6cf63234f910180758e64a77086b672138f457ba8e93be3f9ac36ed1fb59e0d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:15"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:16"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:17"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f677a5f1231986dd6059b01ef49d40d23ff8d9348f863d4e80147a47a3d62f78": {
      "address": "0x7f559C45b8d6F67f29edAE8586EBF905f04Da0B9",
      "txHash": "0xf272ae132ae1903f857df77c6928dce6cab39b36307feacf6e405cdbd7478694",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5718",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5184",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3265",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5718": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5184": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3265": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c20d4de36427752b65d05df33e3b2e1059086285c06c4cc3c3314a3b7efb5eec": {
      "address": "0x01dD7F2128B19d42e8979B31a193AfE747d43fc3",
      "txHash": "0x5176dd59b22085b21c6ae36a36628841d75d7bffc1bb46db6c4f6e4532aee167",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3326_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3359_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3350_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)3326_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)3326_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)3359_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3359_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3350_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3350_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f452f2ca117769e20c7c94418002c75cbe509dd140e3d4fbb3924aa915ac8a39": {
      "address": "0x92732ed86ccf6de253f699567A4ad93e66F29953",
      "txHash": "0xae0c791d166a063d6d1c033312750ba4ea0ed50eabc50e90fd6d25098313eff3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:15"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:16"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:17"
          },
          {
            "contract": "TokenMintERC20Token",
            "label": "_tokenOwnerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\TokenMintERC20Token.sol:18"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9f63f9bdc5bdbfc38902982db2aee3bb1a73c54f70cfde507dab707618d1c33a": {
      "address": "0xB6eCB354cE594974F2ED16a43aC8fA22C6E34e81",
      "txHash": "0x4180d97bdd4687ae088424c5655c013c27a3970017e48941280e9d3d9b85c265",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "f61f29f3e558acc417403231b4c7013d18034182e0aba83099239edaf9f636ef": {
      "address": "0x49AF73eC8247a0d0d397c22fC26B4a91cce094d2",
      "txHash": "0x359cfa87266ea115db012a671d1b716bf0bcf6dbb1ad7915ca4ac50f96b9178a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5733",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5184",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3265",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5733": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5184": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3265": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0cb47174b777c4265e7be6f1671422c7b043e190030641b502a5a5e997705361": {
      "address": "0x7F531a7b0cF11b74f773001B85ba50c050e70b34",
      "txHash": "0x3a44717297b685a3cc12ddf64e6a51679ccfe5ef53d1a59103649358001f8aaa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5152",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3233",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5701": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5152": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3233": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e4b8e86f84b9e0535ee56133e6aee298bff52cbd1a59143f5686fbca4e298003": {
      "address": "0xC88380A4751889E0F47fbb923854567f8B4876b5",
      "txHash": "0x16e268a743261236772196dde0f218869678a997f8050f951696c19f34202ca5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5733",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5184",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3265",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5733": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5184": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3265": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c768ac5054f6375e0e6ff58380e75ba764aad6621c99b1382c3b2b489b5c28c1": {
      "address": "0xF8E2905F1d5F56625e3Cb74981073346Db669f49",
      "txHash": "0x9922454d46d0f797524dc9649a79a0161cf8ac082c74695b4cde9f1dae744768",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)5739",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:27"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5190",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2253_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3271",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2224",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)5739": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5190": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2253_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3271": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2224": {
            "label": "contract NodeActiveL1"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8b2462071b719c522d4405e24a6a01f7bd008de741ac96f18a307090574e3021": {
      "address": "0x8Ef62B91361Cba239D92E93334A79371d8538801",
      "txHash": "0xa7c73032b6b921fdb79172ccfc7a2db6c899a7ab24ea34fef2a18e832158fd23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3332_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3365_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3356_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)3332_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)3332_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)3365_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3365_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3356_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3356_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c5f252e2f316841b685c5f645b9eb5c20b86e24bda6a3a81d70de9562e9c76d7": {
      "address": "0xDc04784a3104FCD0989D3C8014Ab7a8017D563C0",
      "txHash": "0x0505c9f7d651eaa1ce955f70d9e1b1604f0c762eecf94acfc812ef3d860341f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:7"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "86d922da3b9b3c8094a81dc1de8c01a938a2c11e847f7799fa2bdc557d82796c": {
      "address": "0xf63e62EcdBaf7fc4bFf61cdBe45d94236131d499",
      "txHash": "0xf30377ef27c0cb95aae8afec0a12d26bf78f35552146d91777dbbad22e289c59",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:51"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e5ee505656388929705fb7a0a1c8b8943551bb405657a9604a70c3d52afb3735": {
      "address": "0x663A8Ce99F4c466B79F15630F1EC91b3F4190496",
      "txHash": "0xc4034ab1647abb5047c529c13d3fe87e17a837e051a1a1afdd2d585292bbe9d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)6246",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5656",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2581_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3733",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2551",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3783",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)6246": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5656": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2581_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3733": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2551": {
            "label": "contract NodeActiveL1"
          },
          "t_contract(IMemberController)3783": {
            "label": "contract IMemberController"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "54d570826163eef83ec4a5dee59957aecb548d750e354a3f5c40ad7cafb7078c": {
      "address": "0x1c26744e9f43dDB42a1C2551C9DadacAc888b3a9",
      "txHash": "0x5f6e5efba1691933333ecfd7ba78e7b62503cc44871f6993909432b49ad49e36",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)6238",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:28"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)5648",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)2581_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(NodePassive)3725",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(NodeActiveL1)2551",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3775",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)6238": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)5648": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)2581_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(NodePassive)3725": {
            "label": "contract NodePassive"
          },
          "t_contract(NodeActiveL1)2551": {
            "label": "contract NodeActiveL1"
          },
          "t_contract(IMemberController)3775": {
            "label": "contract IMemberController"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "234c2b404b79791cab2c95a9326d52ea542ef846e7f3c149b4b26dffd9618e6d": {
      "address": "0x96CD485b1e897C17792a5bBdB314c61125A04008",
      "txHash": "0x0bbb1ad1bf6d37ea9147cff91dc8d489cf97ef4eebf23b65eeefe88b33c9938f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:15"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:16"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)3786_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)3819_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)3810_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Round)3786_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)3786_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)3819_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)3819_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)3810_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)3810_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fd872afd570faadc9b304334727a64a456cec62ae31010fa03d6a76528c88ab9": {
      "address": "0x9469E1B9c40D959E289844B77CA352ab377560d5",
      "txHash": "0x4b2cbfa64f1201a44af46491b807ce307cebddca9e0f6f460b1d7553f6db4856",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MemberController",
            "label": "root",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:13"
          },
          {
            "contract": "MemberController",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)5713_storage)",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:14"
          },
          {
            "contract": "MemberController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:15"
          },
          {
            "contract": "MemberController",
            "label": "lastReferralCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:16"
          },
          {
            "contract": "MemberController",
            "label": "referralCodeList",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\MemberController.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Member)5713_storage)": {
            "label": "mapping(address => struct Member)"
          },
          "t_struct(Member)5713_storage": {
            "label": "struct Member",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "upline",
                "type": "t_address"
              },
              {
                "label": "directs",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "referralCode",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "4702195bc62c0a6f94e0b0b417a7c2d4db62b165ea97914198d1dd1c07370916": {
      "address": "0x1c790627354A91832f435Ab95E3BE8465e5B0a42",
      "txHash": "0x85b649b086bdf71a21b88cb96c30cf9a48375aad97dd59c2cee1a1730a8f264a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8266",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7676",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5858",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5770",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5770",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5751",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5770)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8266": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7676": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5858": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5770": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5751": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5770)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bb3d292bb433afb4fda1a1014642a7f797a8aee4908e461e96cbcb786f4cf1a9": {
      "address": "0x3fEAcd142BBcd8B5490b9c48dE5aACab1CC09E0D",
      "txHash": "0x1dd8c362bf914ebcb060b19e94cdc39c986d762ba259842227f29d5fa8d7ce09",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7676",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5778",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5789_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5824_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5813_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7676": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5778": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5789_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5789_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5824_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5824_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5813_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5813_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "056b329c71d08c1b4d713976d7ed766b14b203b04fb13e68828d1ea0f7e98ea2": {
      "address": "0xDA5E50Df2aF542d4C1cADC86dc4875584d041728",
      "txHash": "0x07d433c987676c9c7f9fa841f72e4930de5b9c300b9a309682236a0da28d205f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7676",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5778",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5789_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5824_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5813_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7676": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5778": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5789_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5789_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5824_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5824_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5813_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5813_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "58b63cffa908bfba02330a118c10a9bc760c050551f6aaba6d17a008d9662145": {
      "address": "0x6552D2c06632BA41Fd069Aa237D89e22C70C9Aa4",
      "txHash": "0x36bd8986bdecd6bd34c5650152611017a88708ff0b5022f4f7abd8d7b76abac6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8302",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7712",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5882",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5794",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5794",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5775",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5794)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8302": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7712": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5882": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5794": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5775": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5794)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e6a932798310086bcaeb0c4ff347b33a012b77156cc05296822ff27cbf4d76e2": {
      "address": "0x52E74f13951CC2B553107A271901DC68fc42E86e",
      "txHash": "0x0d4c12abe48316bea8214276df1caf69aa1c81141c21defd5d7782ac91954e9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8285",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7695",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5865",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5777",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5777",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5758",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5777)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8285": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7695": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5865": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5777": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5758": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5777)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "09ef1482ab60667befc9e849bf1b9bf9034d129ffa54f666c2382f208d31c528": {
      "address": "0x92C4DfAC3a4E9FD46d336898Bf34F6C357c99e74",
      "txHash": "0x9d5ccc9671979942e40de3d8b59689bcb06e2535f87d1d68d5623d2f22a739bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7715",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5805",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5816_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5851_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5840_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7715": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5805": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5816_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5816_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5851_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5851_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5840_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5840_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "19af69f3d7acf4d4f7d226f7b2b25427017f19741fff0b20ce21a7fb3a45d5aa": {
      "address": "0x3D915C8fB63f195C8fAC3Dc78667ff4fC33125a7",
      "txHash": "0x43145e09f6fbe048bf737e34d60ac908eda2fd423d1a6bffe3b2a626d33b0f66",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7558",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5648",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5659_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5694_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5683_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7558": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5648": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5659_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5659_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5694_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5694_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5683_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5683_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c8765b82d6de03815698e4c4d674a056e89187cb969d9f14263680d282e0888e": {
      "address": "0xc104E0E19FB8972809C8d8E5810742e0C9782dC1",
      "txHash": "0x57d67c6e7c69bb113b963bf878abe7750b4f3e8b3179e85f7d024e7e7d9f0e73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8136",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7546",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5716",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5628",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5628",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5609",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5628)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8136": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7546": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5716": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5628": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5609": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5628)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "73e028d0680c693ba62b964fbf3642d5041d067383f6054dc238f0c7e62757dd": {
      "address": "0xe9128db8daC8877965A8b40c3899699849444481",
      "txHash": "0xc4f180d256b7cffa072d10ad53a26fe2d7de2cc3beccd83672f109b601fe37c6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8304",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7714",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5884",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5796",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5796",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5777",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5796)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8304": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7714": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5884": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5796": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5777": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5796)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "dcdc3fb2a1e8052d5dd1abe2ed88f518f80caeda96cc5125db6f230a13d4b4c9": {
      "address": "0xb19E8De580d5A0187C2a8e19ee47BEe1ded7fC29",
      "txHash": "0xb702eefbe9f0d1fa60dab66d27cf57663231f6102896496635cfa8586b56ddd3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8300",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5880",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5792",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5792",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5773",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5792)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8300": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7710": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5880": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5792": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5773": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5792)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "01e8c6f3404e7c7054c536a5b5d5186b68c7626fcdddfc938d70c6d391d70699": {
      "address": "0xc3F6a24201ADDD3D4765e367aEE8425755e4ff45",
      "txHash": "0x1721dc0550450698fc05541369cb23a6d9dab74b27998042e71ab74cb8a4bf18",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7796",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5873",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5884_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5919_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5908_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7796": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5873": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5884_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5884_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5919_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5919_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5908_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5908_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "34f30d172cadcdc03a2430fbdfb3d737c5d30c20777e013520780a62b50cb17c": {
      "address": "0x3b7d97840891f7251d05A21A08BD39f980CBef43",
      "txHash": "0x64b46e98c22948d8f9781cc4553f511bd3685aef2b033e525905d4f99867d606",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7803",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5880",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5891_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5926_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5915_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)7803": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5880": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5891_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5891_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5926_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5926_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5915_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5915_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "68d84c9cbdb727730759dea9253235b50eceedbb313af2b9aa5f27629ba92821": {
      "address": "0xa2EBDe801C716d7096c7D163Cd4F1908B4328737",
      "txHash": "0xac134d5b8a0a0693cb71aef03f49aba5148a7512deaf4010a290aac7ba2cf963",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8393",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7803",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5973",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5872",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5872",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5840",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5872)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:64"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8393": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7803": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5973": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5872": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5840": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5872)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "ff6b26769f54d6a2f0cc9dc06c1794d3394a7e4b0513e09defa1169ec38ccfc8": {
      "address": "0x1497122DC09dd3A65fE92DC94410D0E88723b59f",
      "txHash": "0x54b2d4f0c50342bfa0134ed2eeca8ee4c02830959035071f2635b662d58d5c95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)8403",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)7813",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3191_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)5983",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)5882",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)5882",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)5850",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)5882)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:49"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:63"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:64"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)8403": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)7813": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3191_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)5983": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)5882": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)5850": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)5882)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "407ae52e73e7a497ff0b5ce97083f9da05ea61935865cf63e317f249d7c2af7b": {
      "address": "0x83D06c6a80277b5387e377364b976570BbF141F9",
      "txHash": "0x2e34bfc235621795c0ed03293d1254fcf78ab455b3776d56f3544d53aefd7a44",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)9369",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)5892",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:30"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:30"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:32"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)5903_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)5938_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)5927_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          }
        ],
        "types": {
          "t_contract(Ant3Token)9369": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)5892": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)5903_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)5903_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)5938_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)5938_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)5927_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)5927_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "84a2cd762dfd152451bd40681318a4a78fbe1961b58d04dd7196f3e925fbb8c7": {
      "address": "0xa14757648DF16AE00127cBF3Dd876AAeea5DC929",
      "txHash": "0x093296724cfac7e5ba1e10e78041e40d014810a21861dbb4e5194b9752a3f005",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)11604",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11014",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3267_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6223",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6122)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:68"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:69"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)11604": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)11014": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3267_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6223": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6122": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6122)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c6ac1a85ce78183c959790b776ba3e10f9d47e562486cc07cf0b8c200df876e8": {
      "address": "0x9ED50d395A391AE9606a609890f2eccA3716a63B",
      "txHash": "0xca496383cc1792505810785f20332ff1a48e5ece2cb4eb3360ea4600f79d9f95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11014",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6130",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6141_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6176_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6165_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11014": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6130": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6141_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6141_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6176_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6176_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6165_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6165_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f67efc1341188ade6567afb750e9f4ce254134e92d50541ca6869e881cf2cedf": {
      "address": "0x478d9dd31F9DE1C5F40A013e0CC558ab13E7D24a",
      "txHash": "0xa606f700e14f18f33bebf356aef947805bbbf804cd3d6601f67399287ef9b58f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11014",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6130",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:30"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:30"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:32"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6141_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6176_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6165_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11014": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6130": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6141_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6141_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6176_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6176_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6165_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6165_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "545803baf3d76af4e50eaabda7ed0d9cabe7fea24eb053316d711cf25b5eee20": {
      "address": "0x634ceA9e423acc71A65CaAE6A59c64E7d0c43C06",
      "txHash": "0x09f76d8219b943ce7b4c81eada9a335889c63a62aa75931da05fe1ec77ddc8af",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)11585",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)10995",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3267_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6204",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6103",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6103",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6103",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6103",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6103",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6103",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6103)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:68"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:69"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)11585": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)10995": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3267_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6204": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6103": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6103)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "534edc21451980d01148325c311bf8d5e327b9a74c50638265eec13b3967761f": {
      "address": "0xF4e93c95CA3115224Ad57B14bEfB02757F14A040",
      "txHash": "0x7ad418011cf4c187d8d7ea524418efcaf5cc979fb95c2f3ae47c2e32dfe85992",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MemberController",
            "label": "root",
            "type": "t_address",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:13"
          },
          {
            "contract": "MemberController",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)1863_storage)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:14"
          },
          {
            "contract": "MemberController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:15"
          },
          {
            "contract": "MemberController",
            "label": "lastReferralCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:16"
          },
          {
            "contract": "MemberController",
            "label": "referralCodeList",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Member)1863_storage)": {
            "label": "mapping(address => struct Member)"
          },
          "t_struct(Member)1863_storage": {
            "label": "struct Member",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "upline",
                "type": "t_address"
              },
              {
                "label": "directs",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "referralCode",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "c3e530328ba3d1493917222ba0c11c45f2b984529cedda44993bf54528a500bd": {
      "address": "0x0C1e6a63E3d71C37131C4fb79A9969aF29065B22",
      "txHash": "0xa936d9bc534ce1483384e26015b1c3173ebbedaad6a1d5494e91fe662b079b5b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)11587",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)10997",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3267_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6206",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6105",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6105",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6105",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6105",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6105",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6105",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6105)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:68"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:69"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)11587": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)10997": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3267_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6206": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6105": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6105)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "b0eddf0c8dcd2ccf24d4689918a5ccbdf025b5d3571c67a8011e2ce3a44f5f50": {
      "address": "0x4Dccf551E2680CA6E1bB89c967A35B64dd454633",
      "txHash": "0x830b22fad0069e247cbc893a1a8e77017668bea0af7065ce714f1bbb6ceddea4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:23"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:37"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:41"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:45"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:46"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:47"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:51"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:52"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3df17a0cccafa7136ae3a927b9b4f242ce8da2468f3b8f24074f1cf81135b366": {
      "address": "0x177731E1eeAa0FE278F1fB32924e47A021c2aCA0",
      "txHash": "0xbc72fef4af432d100afd9970a6d0af936fe8f615dd6091da083c7189f8d7a607",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)11604",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11014",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3267_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6223",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6122",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6122)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:68"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:69"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)11604": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)11014": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3267_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6223": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6122": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6122)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "428606f121f15513468b763a1a746e7ba58eb9a53b58eb7e6e28108332b43169": {
      "address": "0x2B2074F42b2216808bc8F1235179fAa98086d531",
      "txHash": "0x0d5b0ca934d337b012db024a36d15caa1cc77d8988bf4e8b008d63a4ece61e6a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11014",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9135",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9013",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9013",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9013",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9013",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9013",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9013",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6267_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9013)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11014": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9135": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9013": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6267_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9013)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2dc2913bd319c22ca90a94e08e3f1f1c1e3c73442a17b118f85710518e6fecf8": {
      "address": "0x9c963a3164Ac75bFf8873e075bdaD6bB4b52d694",
      "txHash": "0x1cbe313697019df3bd5ece95528514a818b8a7e4c06e845512485eb48f0416f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11049",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6165",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6176_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6211_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6200_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11049": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6165": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6176_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6176_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6211_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6211_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6200_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6200_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1fcfdde6e42425b94422357304291bcca8c237418b4b0896be40b9ad4971a8a5": {
      "address": "0x301E2879db58Bf6cEdA5C580B974509958A77b88",
      "txHash": "0xc11816037a2057b97be3407147b3ed990848821db3103cea492a9bdd21c18f35",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11053",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6169",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:30"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:30"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:32"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6180_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6215_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6204_storage)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\interfaces\\INodes.sol:34"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11053": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6169": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6180_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6180_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6215_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6215_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6204_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6204_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "068be392bdfd719de8d3c9914c353530e1cdd5625f6a9563fafb353e27377978": {
      "address": "0x6EE320CA3a666e92A58Da76696C1843745C14b30",
      "txHash": "0x3d1c97c5f395530d88f8ed24a8f03b02950401cbf352d2a42ae94c3d5e9944ad",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11053",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6169",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6180_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6215_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6204_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11053": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6169": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6180_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6180_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6215_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6215_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6204_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6204_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cc0c934c884df29277662b9b524654192fd6bdb80ff6dd766ccb4a1eaedd2a01": {
      "address": "0x74457E4131DE626a41Ce61a5396e98A33e164F99",
      "txHash": "0xe453363b579265dc504c5de1c6d5a445706347c0f737f312750d7bedcb7c3418",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11046",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6162",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6173_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6208_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6197_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11046": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6162": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6173_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6173_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6208_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6208_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6197_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6197_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "df1b803b466dfb8317e961e0562b39d96467af05053ae283f353e3969e524b19": {
      "address": "0x1339244F0561D5478E174C09097843fe6D634e41",
      "txHash": "0x0bb96c0a08937d1c0c7fdc328879b85daeefcce47f275fd01953c1bc4e865aeb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11056",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6172",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6183_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6218_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6207_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActiveL1.sol:29"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11056": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6172": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6183_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6183_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6218_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6218_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6207_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6207_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "824cdc1df078c4d01d2309e4dc0c9b14a1669032e181d87db4ef932c6ba99b9f": {
      "address": "0x5981d502298Ea1C2789CC878445F940C50c2f211",
      "txHash": "0x3df2611c4eee89ec0240ab6013ef8014c45475c8b9c1485b9cfc6ec4dd70945c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11067",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9074",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9085_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9126_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9109_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11067": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9074": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9085_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9085_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9126_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9126_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9109_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9109_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "12cc72ebfac068e1edd0d74dbdad3aa7eb25e12e243ab71e6dfda6a0f50a882e": {
      "address": "0xC6c36533Ac615064681fcE12381E3a1E509cfAE0",
      "txHash": "0x534369b19cbd8f9a43badc6422c28b5ab4308793bb2a145e8fd2b394a05ceee8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11079",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9200",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9078",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9078",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9078",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9078",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9078",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9078",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6309_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9078)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11079": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9200": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9078": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6309_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9078)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b92f7f903f902893ec3105005ccd6a2a5addaa86dc41d5408f39e486ecdb9a41": {
      "address": "0x96767E9428F37394f7aaa742BA5B2AE2fA293db0",
      "txHash": "0x67a6ed02fdbfe622aab9718f55431121918fbdd7a1e2e0ebb3040beffb1b4692",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11008",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9129",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9007",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9007",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9007",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9007",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9007",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9007",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6309_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9007)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11008": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9129": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9007": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6309_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9007)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "377d6135bc51b93c2176656c8cdd37b02cbd3fd576679d5d8feba4ee2831984a": {
      "address": "0xe6ec7E8377866CF13bF7D9698eCeA9Bb68C1F4C4",
      "txHash": "0xd2ff8319a7f2fead32ae4e62d973fec4bff3e7b71087f9192fe9bcf1877767db",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11022",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9143",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9021",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9021",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9021",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9021",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9021",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9021",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6309_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9021)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11022": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9143": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9021": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6309_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9021)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f6cc0196f57ccadc2087e00353e00b8debcc0f099233e693015edecfac526be1": {
      "address": "0xefcBF52166A7227BBbbC99F84fE1ddec2582B750",
      "txHash": "0xc33391dd2e9817eae774bb9fd4cba73048ae61d5147ec1692cbc8262a3fe5664",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11032",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9153",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9031",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9031",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9031",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9031",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9031",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9031",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6309_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9031)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11032": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9153": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9031": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6309_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9031)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c96065176fda70b292b1c441dd3a93e2b8573850f07e9e11a67444ac9be79dc3": {
      "address": "0x62703eBb168779Bc28137D8Cf32710BbBf161Dd9",
      "txHash": "0x28bb779e483bf0833c44084ead0c40bd74653f388a030da1ce391c4332c6deb0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11003",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9124",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9002",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9002",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9002",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9002",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9002",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9002",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6309_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9002)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11003": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9124": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9002": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6309_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9002)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e59312395d881ff061d18d4622a89202f361c4d1aabe7f57ff1e8a042a0afd0c": {
      "address": "0xB466AF7033516eFD7eC040A011e346d7dc755037",
      "txHash": "0xd9a99186a192c42b84435a73f87fa5c823cf7eb103a45678a21e4d4512476bd2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11013",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9134",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9012",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9012",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9012",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9012",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9012",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9012",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6309_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9012)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11013": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9134": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9012": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6309_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9012)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5a75fa54b687b2d6671db72887f6501fc9740c83109bc07a2c3bdfd328094f20": {
      "address": "0x6324d509Fd9E5f86c8Ee693896d3Bece89876d02",
      "txHash": "0x8cc2fc4fb04f3ef1a8a099547af7e8b9862be5e74b64a452061582b6bac132fd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11097",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9218",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9096",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9096",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9096",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9096",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9096",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9096",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6318_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9096)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11097": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9218": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9096": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6318_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9096)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2596e97d8123439766223ffccb3d29588adcf88d2dd60c43fd455d4e6e4932df": {
      "address": "0x10127B82c09372C72F45b8A691dF95A0A68bD052",
      "txHash": "0xb9879d8b8723cee18891ec7e46d9946fa126e2d40535dfb76297d50becdfc540",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11134",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9255",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9133",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9133",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9133",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9133",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9133",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9133",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6319_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9133)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11134": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9255": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9133": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6319_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9133)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d9d274a57455fdfb552505a80f638642310a750f3e387cc78db8d0b41963d036": {
      "address": "0x21db55B7caCBAcEEe52879fA4de1D312081D26D7",
      "txHash": "0xcfae3915e889b662b79d89142b025debb6fa2c3cac45dfdce55e5ceb0c7c770a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11128",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9135",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9146_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9187_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9170_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11128": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9135": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9146_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9146_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9187_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9187_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9170_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9170_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ee9892666f3f39bc8d4ab75ba1a90fce4571fc23a9997e19fa6eb578322ca353": {
      "address": "0xCea139B1A14c31D12f37fC3527E292fd1637e5B6",
      "txHash": "0x5f57d04b1e900124ac1a0b83b538b85bc8b6eb4101c1937509c04ea65d4048b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11138",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9145",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9156_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9197_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9180_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11138": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9145": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9156_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9156_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9197_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9197_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9180_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9180_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5c6f35982b81c60c4eb92161736c33f252816360a8b900b14cc6f2681c3109c8": {
      "address": "0x1cd62aA278eAd7b91Cf5a2574DC0967cc27d9CE6",
      "txHash": "0xb3ba6750869209f9e4e0ad6159d419559455c4d1484469194531dac0f8088f4b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11137",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:28"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)9258",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)9136",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)1909",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)6319_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)9136)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11137": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)9258": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)9136": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)1909": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)6319_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)9136)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "d074816c82deaddee00054bf71d26192ec1b050ac198abc974c1a583abbe5b69": {
      "address": "0x9882f9702eC83257cbB0fAC780eF6d0a43eCd1C4",
      "txHash": "0x67578d32d70bd97161f53febbc6397d16f58a28c70744f29db2ca8c34e6d40d7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11137",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9144",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9155_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9196_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9179_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11137": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9144": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9155_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9155_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9196_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9196_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9179_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9179_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "665bb8a8d3920c83cdce99c546c23a747f99a5e9d4fd4fdd38e7e346abeb2fd0": {
      "address": "0x1993C5b2268b802aBA294611FF2bAcA9835e17e1",
      "txHash": "0x74ce6b4a742145fde346efc4216d66aaeb069c1bff570fb901744d24a235ea3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)11143",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)9150",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9161_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9202_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9185_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)11143": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)9150": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9161_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9161_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9202_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9202_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9185_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9185_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9d820bd9c9058aeded8074591b7a2cd838c1066e94a598c6b3b29bd54eb5172d": {
      "address": "0xbFC88C31184036F0B533db8D8C8ac26b58282752",
      "txHash": "0x0f3fae4e46a7974a8ec4ba47247076c5dfda3383a5ed4c563ce11f928083406d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12425",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)10432",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)10443_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)10484_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)10467_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12425": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)10432": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)10443_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)10443_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)10484_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)10484_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)10467_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)10467_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7359c8cd7577d323351bffd8d03a35f3d66f5426190fe6d1828e5c273e064961": {
      "address": "0x8667600B412fc4068ad4208aA2dE86D11100f9DD",
      "txHash": "0x16dcff7c076f6060a31d71082531d7709545496bd5446b90c3d1e075971ca591",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12422",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10543",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10421",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10421",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10421",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10421",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10421",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10421",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7558_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10421)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12422": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10543": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10421": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7558_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10421)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ef6b2e785144afb2c05bd8c105988660daedef19802526853b9ccca57b51fe8f": {
      "address": "0x20383d856ea4f280B2c9198369F9c3f3A8fF0380",
      "txHash": "0xe05f8d043d53f0aec5c2957bbabe5ba04c3f85cbb127e6727a3ac641f06cc5cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(DeAnt3Token)13012",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:29"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12422",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3582_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6592",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6491",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6491",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6491",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6491",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6491",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6491",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6491)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          }
        ],
        "types": {
          "t_contract(DeAnt3Token)13012": {
            "label": "contract DeAnt3Token"
          },
          "t_contract(Ant3Token)12422": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3582_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6592": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6491": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6491)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "631ad7c887366d4624366be4a88769ed6e6ad226c5550db51c8f7d511c1a1f7d": {
      "address": "0x568D386cc46838afa3a971aEC5D83F50e9d82736",
      "txHash": "0x5d3d35c26fe33985c1e1d61948fb1c7faf5723aefdcacce39cf9a7c353bb1e5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12422",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)6499",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)6510_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)6545_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)6534_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12422": {
            "label": "contract Ant3Token"
          },
          "t_contract(INodeController)6499": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)6510_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)6510_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)6545_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)6545_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)6534_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)6534_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "f4dc562234804f6a116e042494e8d57c418526ef3828228c34b58350f96c7422": {
      "address": "0xca725DE126685f0c29d881376A85B4A242FCd6bd",
      "txHash": "0x56d3019af4215aab5344938c5471304b6982c516009f54e21664298ee835164e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12390",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10511",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10389",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10389",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10389",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10389",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10389",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10389",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7558_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10389)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12390": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10511": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10389": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7558_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10389)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "58eeba99344c0a7eeea7edf984555476904766dd4e3c4a8861e05fb03294a334": {
      "address": "0x0050B1871EA22Ade24297a0608208fF86c819E4E",
      "txHash": "0xc59df47807e7b7737ede7ad97037135471d8455a2080ebdabcf67fb4ca9c9bbe",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12418",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10539",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10417",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10417",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10417",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10417",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10417",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10417",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7558_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10417)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12418": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10539": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10417": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7558_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10417)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "26911f74f605a01da921fad71f8d2f75c6515dee7397cac730992bd19ea4b295": {
      "address": "0xf250B4F2124c4D7355dE8dcAD1c8BCDFB9145e41",
      "txHash": "0x9154726962a3a0f0e729290c77fac0d3b7e4472efa3c7618659dbeab2c5d70e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12361",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10482",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10360",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10360",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10360",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10360",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10360",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10360",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7558_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10360)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12361": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10482": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10360": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7558_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10360)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "3fc685b4186a1bceca72bf772524d2329e4f107623f0c570b158fa257853b495": {
      "address": "0x1CB46115188B520AFA8216a9D688453953d08c1d",
      "txHash": "0xa4f52fca5dba2fdd4790d8c14f6c667167b9ef1b56f65f0e7669d632ba64bc60",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12408",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10529",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10407",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10407",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10407",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10407",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10407",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10407",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7558_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10407)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12408": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10529": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10407": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7558_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10407)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "f5edae51925c122a961936a605a42eeaa68479ca1ba840e4c79949e572003ab5": {
      "address": "0x8d4cBeb7B1645000f083e32A21D338145BFd59c1",
      "txHash": "0x73c33b540dbe7cb68f7dafb8bc68a90dd0e116fc681959211dc4e5159e81aef4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12418",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:19"
          },
          {
            "contract": "StackingActiveL1",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:21"
          },
          {
            "contract": "StackingActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:22"
          },
          {
            "contract": "StackingActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:23"
          },
          {
            "contract": "StackingActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:24"
          },
          {
            "contract": "StackingActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:25"
          },
          {
            "contract": "StackingActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:26"
          },
          {
            "contract": "StackingActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)10436_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:27"
          },
          {
            "contract": "StackingActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)10477_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:28"
          },
          {
            "contract": "StackingActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)10460_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:29"
          },
          {
            "contract": "StackingActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12418": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)10425": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)10436_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)10436_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)10477_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)10477_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)10460_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)10460_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "956e10072fef2ebd4fb011f3983dece84d885f8a0ed82bde106b5655cf349ddf": {
      "address": "0x63947b543EFa2e4D4454dBb9CB8b880F0aFcdDFc",
      "txHash": "0x43d053c66a7210f6c1b0b88185628769ac12b19fd49635b83e8f908e25f4469e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12415",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10536",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10414",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10414",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10414",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10414",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10414",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10414",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7561_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10414)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12415": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10536": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10414": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7561_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10414)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9fe14e00f4b78eed328bb96410f21bceb4f0fe9750fcf74f2b1efb97e9e95369": {
      "address": "0xECC069E60b1EF0150B22E1F726DA80c1aCe98901",
      "txHash": "0xa82a5e15dbaee0030b648fb54adcdfef9cba14a4717f8b85eedfd1520b1bda62",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12330",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10451",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10329",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10329",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10329",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10329",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10329",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10329",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7561_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10329)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12330": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10451": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10329": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7561_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10329)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7917c2cf89f70f68796e82bd57762b8298b894cfe118ab7dbef84e5da0d492f6": {
      "address": "0xc3089B8C11B8413804966a59bAA4d2de77A36Cc3",
      "txHash": "0xa6e5406485632854481c998d3ec666dfd32e093948c0b38788467eb07134fffd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12364",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10485",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10363",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10363",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10363",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10363",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10363",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10363",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7561_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10363)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12364": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10485": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10363": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7561_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10363)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "29ae19266ca59cdb47a5a46a6b2a641e0b4a80ccf775a6a0ab7ee3d67f1bb01d": {
      "address": "0x66906d3C34C5e42d30EAC669a59c2A56f80ae017",
      "txHash": "0x40017bcf6e758625409494c22d67b00fa6bee307f5428e18085c9d35ea62e951",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12374",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10495",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10373",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10373",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10373",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10373",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10373",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10373",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7561_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10373)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12374": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10495": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10373": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7561_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10373)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "43fed5eca4bc0cb517fdce4d871b743b32cc0188c9c5882021484fc6debcfc89": {
      "address": "0x048C213f7fC861F418C8584dDE20253FE3C2A93e",
      "txHash": "0x776f2c8c5aa0fcb31604cd3fcf5aa6204dafd646201383718e37b3af2e210573",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12387",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10508",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10386",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10386",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10386",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10386",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10386",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10386",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7561_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10386)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12387": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10508": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10386": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7561_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10386)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b337fcd4340b675d75f297557844174845c169e68d121d26d0a55b3350ff8e61": {
      "address": "0x39546Ca8c60c09964AC4a3c2583a4c78ebE98010",
      "txHash": "0xea038da5ddedb3bbbf81473f426cbac5cf3ca088fbb2e98459e1b3fb72287ab6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12406",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10527",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10405",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10405",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10405",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10405",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10405",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10405",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7561_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10405)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12406": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10527": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10405": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7561_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10405)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "53b87920b08506d48d23a0e422cb303f140d6b605a511be681ff70d3b23b5ac6": {
      "address": "0x11Fb6475A41373E119559D6205154daefa55c371",
      "txHash": "0x62cc418ac564c3ea73ae3241eb839ec549489a2704d296e866d8ea81743ba935",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12421",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10542",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10420",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10420",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10420",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10420",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10420",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10420",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7561_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10420)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12421": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10542": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10420": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7561_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10420)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "93214d36740b5f217f22f199a0b64443bdb198aad99beca82f31f71fa0e5be38": {
      "address": "0x513FDB62a421B6c0953d0c782c9A6c03a6290deE",
      "txHash": "0x1609a096a3222929293d02f4995bafd4def1681771c35691f6f984630e9a5c61",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingActiveL1",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12425",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:19"
          },
          {
            "contract": "StackingActiveL1",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)10432",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:21"
          },
          {
            "contract": "StackingActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:22"
          },
          {
            "contract": "StackingActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:23"
          },
          {
            "contract": "StackingActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:24"
          },
          {
            "contract": "StackingActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:25"
          },
          {
            "contract": "StackingActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:26"
          },
          {
            "contract": "StackingActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)10443_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:27"
          },
          {
            "contract": "StackingActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)10484_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:28"
          },
          {
            "contract": "StackingActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)10467_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:29"
          },
          {
            "contract": "StackingActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:30"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12425": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)10432": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)10443_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)10443_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)10484_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)10484_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)10467_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)10467_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "7a02b07533ba190d40cd4c00d323b66633c0230abf56cc49109f046ba30c1f7b": {
      "address": "0xf5Db0FBE0149007df5d4bC913D31ffC8545aEbcd",
      "txHash": "0xf98f17f078533f2e9f6209a1ae4b201f91fce2d13e8142a50768734ad6656776",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12425",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)10432",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)10443_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)10484_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)10467_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12425": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)10432": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)10443_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)10443_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)10484_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)10484_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)10467_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)10467_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "74ef42d38e3500faca31fe84d8ffb1fe5b00c4e1cce6ab7b548b43eac8f7065c": {
      "address": "0xf1D457C96836e72400d077F1b9364d05D2C586f7",
      "txHash": "0x12db318132ef0b9470a5423b5447d4c0229da2360859940f60da30a966624f5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12396",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)10403",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)10414_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)10455_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)10438_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12396": {
            "label": "contract Ant3Token"
          },
          "t_contract(IStackingController)10403": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)10414_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)10414_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)10455_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)10455_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)10438_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)10438_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e310ed56cc152c35f26285831231f3bd327b740b3e634552cbdd430c03fe2246": {
      "address": "0xcEeD3A3d38DC20999649653C6CA6c90f31BF2B1d",
      "txHash": "0x2f3ed30ea7664ba47415b35d7c886f623beb82467c655239f30145ad6d6d4c73",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(Ant3Token)12437",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10558",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10436",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10436",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10436",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10436",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10436",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10436",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7561_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10436)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(Ant3Token)12437": {
            "label": "contract Ant3Token"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10558": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10436": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7561_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10436)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fec1f2d4cf640360a34f440348486deb6b097de8cda0fb451b614ba6c06c0e3d": {
      "address": "0x380eAA39d77DDF52dbbC97B0c5AD5661D62E7DbE",
      "txHash": "0x8a731be545050738f90fc3a9f8c56b838dc8e3325008ec38cba4c4906c099936",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:18"
          },
          {
            "contract": "DeAnt3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:20"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "33365063691ae83d8c83715f398cce5626996b57bc0efea2cc916139491694ab": {
      "address": "0x13E665B83B8188b95d8373D37c328345AE0A5b1E",
      "txHash": "0xd5d62c363eac90efbe2c4613e4b0b01940fb8c92b682eeee79df13defeaf7542",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)13113",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10547",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7562_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10425)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(IAnt3)13113": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10547": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10425": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7562_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10425)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "71ca31b8b51fecaeae77f0ab1a95696c1fc61b88b337c48e10464a774b6659b5": {
      "address": "0x2Af6D357cbB4fdB0Fb439B0f64D16b263B3c9B2d",
      "txHash": "0x6f3ae8fee53478e6fb7cddcb25028ea8e64194509d5b94484223d158818f5054",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)13113",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)10547",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)10425",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2226",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)7562_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:40"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)10425)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:46"
          },
          {
            "contract": "StackingController",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:47"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "minAccmStack",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:58"
          }
        ],
        "types": {
          "t_contract(IAnt3)13113": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)10547": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)10425": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2226": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)7562_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)10425)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "157191e185b219a3b5e7fc93b9c8ac0027371446a77c8f98bc660a3a6a879b50": {
      "address": "0x73F7D5098518B560A8672eB166ae0117C55942b5",
      "txHash": "0x12afbebcf987f7e5603ba0d49699a7cd45f74de678ccd9584277a6a5bc2505bc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:17"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:18"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:19"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:27"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_team2Address",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_gameChangerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "_farmingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "d1bbc709f26a4a6274f73d6e0fc1782b7b5aaa73e81110b4926cfcceafbdd16c": {
      "address": "0x44bD7A6d2685160e6b67d9B5E22E49f0735c2e6F",
      "txHash": "0x666cea3609af3f80eac909fc6b4df902216db3c318ceb0f29dbe2db836c3457f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)14012",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)14002",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3662_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6806",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6698",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6698",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6698",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6698",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6698",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6698",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6698)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:79"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)14012": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)14002": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3662_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6806": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6698": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6698)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "adabd13e97ba781d5859978b96ce4c7dd22b2c9133aaf05ce250d1065ad369c7": {
      "address": "0xe8AE6817dd4DF80C79E9Ac7748934b6fe98d9Fd0",
      "txHash": "0x9bda94b099b15403738d3b76b3d41d871d0780603c6cc959eb734339ea9076d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)14024",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)14014",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3662_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6818",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6710",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6710)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:79"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)14024": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)14014": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3662_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6818": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6710": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6710)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "9f1f978daae3034f9a1cce66b985a04a68e0bd40064ff07617b2a416d29845c6": {
      "address": "0x7Dc0C6D55fca96Eca35DC855A238296DaD5b64a0",
      "txHash": "0x48a425639f6f123183670781f9aa00dab0f987e42ddb74ea7b213420b22f13ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)14015",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)14005",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3662_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6809",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6701",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6701)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:79"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)14015": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)14005": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3662_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6809": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6701": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6701)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "016031b645d90972b95a6ab0394d0027318b933a57104d00dc4d4b747e41f9d3": {
      "address": "0x6d043FacE6d4939556327caA9A4d0CBDee59Ec6f",
      "txHash": "0x9b3f997dda297f013847d03d4b6c284608352d335fcd00734afecb8b89a88b80",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)14007",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)13997",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3662_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6801",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6693",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6693",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6693",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6693",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6693",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6693",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6693)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:79"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)14007": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)13997": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3662_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6801": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6693": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6693)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "4aa48d7f1a6316ac3043e18c370d586f686ee65c22976ee7ef916d1eb868271f": {
      "address": "0x1240B0B6eE6Bea772da5690Ce6578CA664070259",
      "txHash": "0x16cfa4827ef168824483a74ff883faf2e5bb9260c715617aabc42ae522defdcf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)14003",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)13993",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3662_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6797",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6689",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6689)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:79"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)14003": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)13993": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3662_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6797": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6689": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6689)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "0d0295b87b80dc60c92e6d7bfda6903c8efdd0673523ee38341382d8954b3d6e": {
      "address": "0x95CcE0b85F691FEa52aAD7D212F99523dD13EFe7",
      "txHash": "0xd8e05b67a62fcebbcd4164971120412817d399253bf1054f2e469aaf1cdf0ee6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)13954",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)13944",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)3662_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)6748",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)6640",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)6640",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)6640",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)6640",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)6640",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)6640",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2269",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)6640)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:48"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:56"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:79"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)13954": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)13944": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)3662_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)6748": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)6640": {
            "label": "contract INodeActive"
          },
          "t_contract(IMemberController)2269": {
            "label": "contract IMemberController"
          },
          "t_array(t_contract(INodeActive)6640)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7a81f937205a494ba1ef8dbfd9794a56e53954f518b33bd47ba2ef721589319c": {
      "address": "0xEc60C5a1DE99257aB48E31bcC14Bc059b20B7F6D",
      "txHash": "0x1db592da563c32cc1d9ad296e39f0b2d2eeb2371e7eb6127ac6781fcfa64ea31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:15"
          },
          {
            "contract": "ERC20CappedUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC20\\extensions\\ERC20CappedUpgradeable.sol:50"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:8"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:9"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:10"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:11"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_cap",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:12"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:13"
          },
          {
            "contract": "DeAnt3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:14"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:15"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:16"
          },
          {
            "contract": "DeAnt3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:17"
          },
          {
            "contract": "DeAnt3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:18"
          },
          {
            "contract": "DeAnt3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:19"
          },
          {
            "contract": "DeAnt3Token",
            "label": "_rewardAmtInPackage",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\token\\DeAnt3Token.sol:20"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          }
        }
      }
    },
    "a5fd15f20fce1ceb8e7f9cbf60f95fd40421ab203987804035bd52a83fc3c890": {
      "address": "0xc3297986E6364a233481cD8e0322fBEBd622c80E",
      "txHash": "0x98dd8f6966f7bc01f03dfb42a6484cc357f6dd78224829a6b0ba0ed6fa62a9a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:17"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:18"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:19"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:27"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_team2Address",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_gameChangerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "_farmingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "fcaef29a06e9131336df9df3e66001891b5fcd3829819ae1ff96e265980b1dac": {
      "address": "0xDeCbe07d8Fca23Cc2272C7f5B95890FFa57F7020",
      "txHash": "0xc250a995e24bd3568f621e7167992b01e1b0917afd493c16e65bf4a443e937a7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MemberController",
            "label": "root",
            "type": "t_address",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:13"
          },
          {
            "contract": "MemberController",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)2218_storage)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:14"
          },
          {
            "contract": "MemberController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:15"
          },
          {
            "contract": "MemberController",
            "label": "lastReferralCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:16"
          },
          {
            "contract": "MemberController",
            "label": "referralCodeList",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:17"
          },
          {
            "contract": "MemberController",
            "label": "burnedLP",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Member)2218_storage)": {
            "label": "mapping(address => struct Member)"
          },
          "t_struct(Member)2218_storage": {
            "label": "struct Member",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "upline",
                "type": "t_address"
              },
              {
                "label": "directs",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "referralCode",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "367d7904f2194346c5cc273fb4dfed67509f958f8b4dc3f08068e15c850de2af": {
      "address": "0xc15C771D60B4F3aD2C3038F9f7eA8c0c4B8EB618",
      "txHash": "0xbb1e9ae6daf023880878842f6707e42fc8c818d0259e2c9e1c1d2ea9956ac352",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MemberController",
            "label": "root",
            "type": "t_address",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:14"
          },
          {
            "contract": "MemberController",
            "label": "members",
            "type": "t_mapping(t_address,t_struct(Member)2837_storage)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:15"
          },
          {
            "contract": "MemberController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:16"
          },
          {
            "contract": "MemberController",
            "label": "lastReferralCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:17"
          },
          {
            "contract": "MemberController",
            "label": "referralCodeList",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:18"
          },
          {
            "contract": "MemberController",
            "label": "burnedLP",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:19"
          },
          {
            "contract": "MemberController",
            "label": "monthlyPassControllerContract",
            "type": "t_contract(IMonthlyPassController)4461",
            "src": "..\\project:\\contracts\\members\\MemberController.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Member)2837_storage)": {
            "label": "mapping(address => struct Member)"
          },
          "t_struct(Member)2837_storage": {
            "label": "struct Member",
            "members": [
              {
                "label": "active",
                "type": "t_bool"
              },
              {
                "label": "upline",
                "type": "t_address"
              },
              {
                "label": "directs",
                "type": "t_array(t_address)dyn_storage"
              },
              {
                "label": "referralCode",
                "type": "t_uint256"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_contract(IMonthlyPassController)4461": {
            "label": "contract IMonthlyPassController"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "727a806bcc16448348f82004df30907808107a92147bfd6ea122a212634083e4": {
      "address": "0x0EDE042c709F7c49da57e58332345588054FFcB2",
      "txHash": "0x22718ad15d8ee24a02b39aea664b1b7b17f5659ec9a0d05a7d93f51df21ae49e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)17422",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17412",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)5801_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)9402",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)9280",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)9280",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)9280",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)9280",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)9280",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)9280",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)9280)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2895",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:76"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)17422": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)17412": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)5801_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)9402": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)9280": {
            "label": "contract INodeActive"
          },
          "t_array(t_contract(INodeActive)9280)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_contract(IMemberController)2895": {
            "label": "contract IMemberController"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2665a71e41c97e631aa7da908978fe1569eec6042d06e86607fa3ed1395ea1d9": {
      "address": "0xA57138a4208d8135D204e151EcA66b70fef230af",
      "txHash": "0x3d4a5c288585b035a953d6fdff9d4b006c874e75b244d11989263e9a4c92232e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodePassive",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17412",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:17"
          },
          {
            "contract": "NodePassive",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)9288",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:18"
          },
          {
            "contract": "NodePassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:19"
          },
          {
            "contract": "NodePassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:20"
          },
          {
            "contract": "NodePassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:21"
          },
          {
            "contract": "NodePassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:22"
          },
          {
            "contract": "NodePassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:23"
          },
          {
            "contract": "NodePassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9299_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:24"
          },
          {
            "contract": "NodePassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9334_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:25"
          },
          {
            "contract": "NodePassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9323_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:26"
          },
          {
            "contract": "NodePassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:27"
          },
          {
            "contract": "NodePassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:28"
          },
          {
            "contract": "NodePassive",
            "label": "userValidOrderCount",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\nodes\\NodePassive.sol:29"
          }
        ],
        "types": {
          "t_contract(IAnt3)17412": {
            "label": "contract IAnt3"
          },
          "t_contract(INodeController)9288": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9299_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9299_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9334_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9334_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9323_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9323_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e6d6d3bacfc7f68e6abd0ed4ec85cd4195fdc39a33d991c602f09ecd9d0d5948": {
      "address": "0xBec60aAA61FF9241a33461A455F3a85B03D9a749",
      "txHash": "0xca6d90b5bfa0a476fb8f99d30a48648988bed9f49cf2e342a6d0050feeaabece",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeActiveL1",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17412",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:18"
          },
          {
            "contract": "NodeActiveL1",
            "label": "nodeControllerContract",
            "type": "t_contract(INodeController)9288",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:20"
          },
          {
            "contract": "NodeActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:21"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:22"
          },
          {
            "contract": "NodeActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:23"
          },
          {
            "contract": "NodeActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:24"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:25"
          },
          {
            "contract": "NodeActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)9299_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:26"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)9334_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:27"
          },
          {
            "contract": "NodeActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)9323_storage)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:28"
          },
          {
            "contract": "NodeActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeActive.sol:29"
          }
        ],
        "types": {
          "t_contract(IAnt3)17412": {
            "label": "contract IAnt3"
          },
          "t_contract(INodeController)9288": {
            "label": "contract INodeController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)9299_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)9299_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)9334_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)9334_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)9323_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)9323_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "480756e3d1059c21313917493af4805ea80280e1bc9def323568cabda86697f6": {
      "address": "0x1fCCe0a759429C2e17458833D450D09076950a25",
      "txHash": "0x145b74b458846ab1ee433f62cd0b68fe3b5bf63da8431b248fc6ba340ac32c82",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17412",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)14406",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)14258",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)14258",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)14258",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)14258",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)14258",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)14258",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)2895",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)10774_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)14258)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:48"
          },
          {
            "contract": "StackingController",
            "label": "minStackForReferral",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "shareMultiplier",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          }
        ],
        "types": {
          "t_contract(IAnt3)17412": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)14406": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)14258": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)2895": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)10774_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)14258)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e44f1207b19d978ec602807d248dd38bd2974a376e230bc2c382da8713fe8356": {
      "address": "0xa87214f61273E4b05a6Baf465c0faBbD755883AF",
      "txHash": "0xfe06ced815ae20fc18b05294dd8a36cebde5cc1e343234b678f62c73fc486aa5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingPassive",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17412",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:17"
          },
          {
            "contract": "StackingPassive",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)14271",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:18"
          },
          {
            "contract": "StackingPassive",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:19"
          },
          {
            "contract": "StackingPassive",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:20"
          },
          {
            "contract": "StackingPassive",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:21"
          },
          {
            "contract": "StackingPassive",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:22"
          },
          {
            "contract": "StackingPassive",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:23"
          },
          {
            "contract": "StackingPassive",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)14282_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:24"
          },
          {
            "contract": "StackingPassive",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)14323_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:25"
          },
          {
            "contract": "StackingPassive",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)14306_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:26"
          },
          {
            "contract": "StackingPassive",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:27"
          },
          {
            "contract": "StackingPassive",
            "label": "userClockActive",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingPassive.sol:28"
          }
        ],
        "types": {
          "t_contract(IAnt3)17412": {
            "label": "contract IAnt3"
          },
          "t_contract(IStackingController)14271": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)14282_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)14282_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)14323_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)14323_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)14306_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)14306_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "442411df49ea225628995ea573afb235c9fa93874ef95afce9d3e05d7380dce2": {
      "address": "0x40d017E97e7D684936DFaA3Eb2145d3E0c42aa3B",
      "txHash": "0x82a4d8220523dd4ca428510171ca5247df4e1ae60c66c2faab90dd679c0752a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingActiveL1",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17412",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:18"
          },
          {
            "contract": "StackingActiveL1",
            "label": "stackingControllerContract",
            "type": "t_contract(IStackingController)14271",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:19"
          },
          {
            "contract": "StackingActiveL1",
            "label": "dividingValue",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:20"
          },
          {
            "contract": "StackingActiveL1",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:21"
          },
          {
            "contract": "StackingActiveL1",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:22"
          },
          {
            "contract": "StackingActiveL1",
            "label": "sortedRoundForDeductShare",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:23"
          },
          {
            "contract": "StackingActiveL1",
            "label": "roundDeductShare",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:24"
          },
          {
            "contract": "StackingActiveL1",
            "label": "rounds",
            "type": "t_mapping(t_uint256,t_struct(Round)14282_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:25"
          },
          {
            "contract": "StackingActiveL1",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)14323_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:26"
          },
          {
            "contract": "StackingActiveL1",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)14306_storage)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:27"
          },
          {
            "contract": "StackingActiveL1",
            "label": "roundTime",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingActive.sol:28"
          }
        ],
        "types": {
          "t_contract(IAnt3)17412": {
            "label": "contract IAnt3"
          },
          "t_contract(IStackingController)14271": {
            "label": "contract IStackingController"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(Round)14282_storage)": {
            "label": "mapping(uint256 => struct Round)"
          },
          "t_struct(Round)14282_storage": {
            "label": "struct Round",
            "members": [
              {
                "label": "toDistribute",
                "type": "t_uint256"
              },
              {
                "label": "toCarryForward",
                "type": "t_uint256"
              },
              {
                "label": "accmStakedShare",
                "type": "t_uint256"
              },
              {
                "label": "startTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(Order)14323_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)14323_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startRound",
                "type": "t_uint256"
              },
              {
                "label": "endRound",
                "type": "t_uint256"
              },
              {
                "label": "shareReward",
                "type": "t_uint256"
              },
              {
                "label": "oriClock",
                "type": "t_uint256"
              },
              {
                "label": "endClock",
                "type": "t_uint256"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(User)14306_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)14306_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "startingIndexForAddShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForAddShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundAddShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "startingIndexForDeductShare",
                "type": "t_uint256"
              },
              {
                "label": "sortedRoundForDeductShare",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "roundDeductShare",
                "type": "t_mapping(t_uint256,t_uint256)"
              },
              {
                "label": "userOrders",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "847e9ae93cca18beada16d35a1d51f7d65c9c74ffa766633640ae6032b32da2b": {
      "address": "0x704C650284E86EbADf16a692525C57E0656B5bef",
      "txHash": "0xba27f82227c18ce578fe2a322ed43a1096e7fcc0420199f814d44a2de039e9d2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "FarmingPoolContract",
            "label": "monthlyPassControllerContract",
            "type": "t_contract(IMonthlyPassController)4644",
            "src": "..\\project:\\contracts\\monthlypass\\FarmingPoolContract.sol:9"
          },
          {
            "contract": "FarmingPoolContract",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17595",
            "src": "..\\project:\\contracts\\monthlypass\\FarmingPoolContract.sol:10"
          }
        ],
        "types": {
          "t_contract(IMonthlyPassController)4644": {
            "label": "contract IMonthlyPassController"
          },
          "t_contract(IAnt3)17595": {
            "label": "contract IAnt3"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "a28778a037fdfa64388669f2ad4ec1aca17984e44ad138916ecb773be60beabb": {
      "address": "0x333a9F971c8f88F0AC2A19E25D830FB740E633b1",
      "txHash": "0xe1edb597f7546bc682bc6f42d223123c215510b09607d213b3f88ba26670bb31",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "TokenRate",
            "label": "tokenRate",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)4479_storage))",
            "src": "..\\project:\\contracts\\monthlypass\\TokenRate.sol:12"
          },
          {
            "contract": "TokenRate",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\monthlypass\\TokenRate.sol:13"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_address,t_struct(Rate)4479_storage))": {
            "label": "mapping(address => mapping(address => struct Rate))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(Rate)4479_storage)": {
            "label": "mapping(address => struct Rate)"
          },
          "t_struct(Rate)4479_storage": {
            "label": "struct Rate",
            "members": [
              {
                "label": "rate",
                "type": "t_uint256"
              },
              {
                "label": "lastUpdate",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "cac7279a4c649e18717f23a83b2a8e5d0cde624caa071ae139a9114db899fdda": {
      "address": "0x93e6Cae7B96Fd603acD14D86600813e1723CdA1b",
      "txHash": "0x15e45e627833c1c25c69fe379b6b11573e21046bdb3e277eb60c258a82a537ca",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4618",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4656",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4636_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4618": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4656": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4631_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4631_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4636_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4636_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "041a0db8cdfcc3e997fc0cb5a9fb736956f848272902a4505e171937b2a58f89": {
      "address": "0xbF0eDaDF710F687ff6d9C632d9C754931e1d0908",
      "txHash": "0x1918b14232725eb4613bce51c5fd3a701de572a32e50ed85ac01cce5fdfecbf9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Oracle",
            "label": "pancakeswapV2Router",
            "type": "t_contract(IPancakeswapV2Router)2223",
            "src": "..\\project:\\contracts\\Oracle\\Oracle.sol:11"
          }
        ],
        "types": {
          "t_contract(IPancakeswapV2Router)2223": {
            "label": "contract IPancakeswapV2Router"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8fa3bd69c034e660b24528e0b662fd7ab478c8a956b880c3e3db18a95d242d57": {
      "address": "0xFbfceC25e6d97B55a5893A0Ab564671759349fAD",
      "txHash": "0x20f5dc233ec7e1607317d252aac00e5b6a13d3380210ce022bbea0c493171bdb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:17"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:18"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:19"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:27"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_team2Address",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_gameChangerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "_farmingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "8158cd5bf1010fc05e268178665b0b5b88aebde3fb965107b5c7c15d838d562c": {
      "address": "0xfdD3b6CeE8eA2379c50b77b49f64C46f23f103bD",
      "txHash": "0x8f929085d837059a7b51c26a2a002b57a1562acb778f7d16a324e30e67e0d358",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4618",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4656",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4636_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4618": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4656": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4631_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4631_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4636_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4636_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "ceec37dd674642809996a581ebd02921b50ace2b9f578a310408198e2b649e83": {
      "address": "0x3a7928B328Db1E1257724E65C836B86b78a9a4a7",
      "txHash": "0x80fe8d56fa1ffdabb3889ccefe2ef31412b6e1881b35698d8681358ec1aa27e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4591",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4629",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4604_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4604_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4609_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4591": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4629": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4604_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4604_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4609_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4609_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "2d6ed3af05496a56f2969fe8dddf64dd834030c6278ce43169b3736842a640ab": {
      "address": "0x1C30816B47C1f8592c2BB6917c8f66E26C21A197",
      "txHash": "0xba249c4de40ef2809195196682e1d47b05436f80219e1b2ef58b501b9487dae4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4591",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4629",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4604_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4604_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4609_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4591": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4629": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4604_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4604_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4609_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4609_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "96631107a0eb7820529a5dc2f0225074cd742026e1b218a8a5df04b29cac4619": {
      "address": "0x133425dC0503Ceb57a7630819C2Fce5Ccda98877",
      "txHash": "0x881f82eb59824b1c3f9e5b7c3f654d58b742ed595b731949e50de43899832220",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4603",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4641",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4616_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4616_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4621_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4603": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4641": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4616_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4616_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4621_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4621_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "16c2053203437af92142d71656918d65f4d7b42785e9b6fd7db9b0c750ab6b23": {
      "address": "0xd1f1eD7D27e2B4c00482984095AF91b474C638d7",
      "txHash": "0xd49051874e7fc3e77b86b44fc16f3f82c8af1923aee39607dbb6c6805231e5e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4492",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4530",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4505_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4505_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4510_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4492": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4530": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4505_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4505_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4510_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4510_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "963bdb839f5e13549b010b9834489a3d7e46da19cf74de033799c8baaf38e9f6": {
      "address": "0x040cb404d25c467824bBcFeC83C488C233351874",
      "txHash": "0x3ba10dadaabe3885c40fe48ec0910386aba3ae4850b44cc11e718c254776d411",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4534",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4572",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4547_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4547_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4552_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4534": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4572": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4547_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4547_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4552_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4552_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7eddf6c33b23aebf1ab58830e3bbd3313e0c87a69738b42d32d023f123d5f67e": {
      "address": "0xDa7660D31b82fB9A9e3C0576cd9F19E90E1e8859",
      "txHash": "0xde833f90f52ac9c125a3ddd4fdba752c1a3ebe0274987ef205cd97c64b099070",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4499",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4537",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4512_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4512_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4517_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4499": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4537": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4512_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4512_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4517_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4517_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "05d887359e5d07015182948853fda3676de27e9d28bbc0b5e53fbae691febc20": {
      "address": "0x78b97de8C0F287f4d4585E5e4c5639230fBEc02a",
      "txHash": "0x0ed19408f1229dd74381a3bf9320e1fc7010d5c15b417127376083061fa21f5b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4618",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4656",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4631_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4636_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4618": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4656": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4631_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4631_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4636_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4636_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "be01a531ab7c097bb8e229cc995a66c6c302aa4b9f439a77d6609e89e14f1106": {
      "address": "0xa55CCe7A465FFe81E5F26562A006200DBF083Ab6",
      "txHash": "0x5c8f256cb5c386e310c687384ba43cc8d293b34a14423717cb0ae61cfb5d7a6c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4627",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4665",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4640_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4640_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4645_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4627": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4665": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4640_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4640_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4645_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4645_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "7ac9884c2a20696bc0063c092015aee73c2a7273ad10f279dc5df08579b2986a": {
      "address": "0xfD748B0F56a2a131B0d82140e307E2d8321eF604",
      "txHash": "0xba9113a1e30d14e4f61a1762954659478e6f5c8b93ceb62b5c6f0aa6d95484e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "StackingController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17620",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:29"
          },
          {
            "contract": "StackingController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:30"
          },
          {
            "contract": "StackingController",
            "label": "stackingPassive",
            "type": "t_contract(IStackingPassive)14602",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:31"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL1",
            "type": "t_contract(IStackingActive)14454",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:32"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL2",
            "type": "t_contract(IStackingActive)14454",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:33"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL3",
            "type": "t_contract(IStackingActive)14454",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:34"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL4",
            "type": "t_contract(IStackingActive)14454",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:35"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL5",
            "type": "t_contract(IStackingActive)14454",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:36"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveL6",
            "type": "t_contract(IStackingActive)14454",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:37"
          },
          {
            "contract": "StackingController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:38"
          },
          {
            "contract": "StackingController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)10968_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:39"
          },
          {
            "contract": "StackingController",
            "label": "stackingActiveArray",
            "type": "t_array(t_contract(IStackingActive)14454)dyn_storage",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:41"
          },
          {
            "contract": "StackingController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:42"
          },
          {
            "contract": "StackingController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:43"
          },
          {
            "contract": "StackingController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:44"
          },
          {
            "contract": "StackingController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:45"
          },
          {
            "contract": "StackingController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:48"
          },
          {
            "contract": "StackingController",
            "label": "minStackForReferral",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:49"
          },
          {
            "contract": "StackingController",
            "label": "defaultSystemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:50"
          },
          {
            "contract": "StackingController",
            "label": "systemQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:51"
          },
          {
            "contract": "StackingController",
            "label": "defaultUserQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:52"
          },
          {
            "contract": "StackingController",
            "label": "userQuota",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:53"
          },
          {
            "contract": "StackingController",
            "label": "userToday",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:54"
          },
          {
            "contract": "StackingController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:55"
          },
          {
            "contract": "StackingController",
            "label": "minStackAmt",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:56"
          },
          {
            "contract": "StackingController",
            "label": "shareMultiplier",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\stacking\\StackingController.sol:57"
          }
        ],
        "types": {
          "t_contract(IAnt3)17620": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IStackingPassive)14602": {
            "label": "contract IStackingPassive"
          },
          "t_contract(IStackingActive)14454": {
            "label": "contract IStackingActive"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_struct(PackagePrice)10968_storage": {
            "label": "struct StackingController.PackagePrice",
            "members": [
              {
                "label": "alphaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "alphaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "betaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "betaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "gammaLockPeriod",
                "type": "t_uint256"
              },
              {
                "label": "gammaShareRate",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_contract(IStackingActive)14454)dyn_storage": {
            "label": "contract IStackingActive[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "8a6d1547024a222f1fe1d7aee545f0630f98787ad466e04df8da1280d4be910f": {
      "address": "0x16Fb5129A542F1625FcC3E7D9a68ED1B2Cd8F980",
      "txHash": "0x270613fba1d87252d9e82453347f62533af34fc578cff9d604dcdcb03f87dc50",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Token",
            "type": "t_contract(IDeAnt3)17630",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:30"
          },
          {
            "contract": "NodeController",
            "label": "ant3Token",
            "type": "t_contract(IAnt3)17620",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:31"
          },
          {
            "contract": "NodeController",
            "label": "guardianToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:32"
          },
          {
            "contract": "NodeController",
            "label": "packagePrices",
            "type": "t_struct(PackagePrice)5993_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:33"
          },
          {
            "contract": "NodeController",
            "label": "nodePassive",
            "type": "t_contract(INodePassive)9596",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:34"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL1",
            "type": "t_contract(INodeActive)9474",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:35"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL2",
            "type": "t_contract(INodeActive)9474",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:36"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL3",
            "type": "t_contract(INodeActive)9474",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:37"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL4",
            "type": "t_contract(INodeActive)9474",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:38"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL5",
            "type": "t_contract(INodeActive)9474",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:39"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveL6",
            "type": "t_contract(INodeActive)9474",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:40"
          },
          {
            "contract": "NodeController",
            "label": "nodeActiveArray",
            "type": "t_array(t_contract(INodeActive)9474)dyn_storage",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:41"
          },
          {
            "contract": "NodeController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:42"
          },
          {
            "contract": "NodeController",
            "label": "alphaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:43"
          },
          {
            "contract": "NodeController",
            "label": "betaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:44"
          },
          {
            "contract": "NodeController",
            "label": "gammaAccmQty",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:45"
          },
          {
            "contract": "NodeController",
            "label": "referralRank",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:46"
          },
          {
            "contract": "NodeController",
            "label": "validCaller",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:47"
          },
          {
            "contract": "NodeController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:50"
          },
          {
            "contract": "NodeController",
            "label": "defaultQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:51"
          },
          {
            "contract": "NodeController",
            "label": "allQuota",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:52"
          },
          {
            "contract": "NodeController",
            "label": "lastPromoCode",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:53"
          },
          {
            "contract": "NodeController",
            "label": "maxClaimRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:54"
          },
          {
            "contract": "NodeController",
            "label": "allPromoCode",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:55"
          },
          {
            "contract": "NodeController",
            "label": "deAnt3Decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:76"
          },
          {
            "contract": "NodeController",
            "label": "guardianDecimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:77"
          },
          {
            "contract": "NodeController",
            "label": "_guardianCollectAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\nodes\\NodeController.sol:78"
          }
        ],
        "types": {
          "t_contract(IDeAnt3)17630": {
            "label": "contract IDeAnt3"
          },
          "t_contract(IAnt3)17620": {
            "label": "contract IAnt3"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_struct(PackagePrice)5993_storage": {
            "label": "struct NodeController.PackagePrice",
            "members": [
              {
                "label": "alphaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "alphaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "betaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaDeAntPrice",
                "type": "t_uint256"
              },
              {
                "label": "gammaGuardianPrice",
                "type": "t_uint256"
              },
              {
                "label": "packageId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(INodePassive)9596": {
            "label": "contract INodePassive"
          },
          "t_contract(INodeActive)9474": {
            "label": "contract INodeActive"
          },
          "t_array(t_contract(INodeActive)9474)dyn_storage": {
            "label": "contract INodeActive[]"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "0044325436cf85263f0b788adf4f0816d86ff4ed0b176a1f5fe0a10a3349c7dd": {
      "address": "0x6264B11196fF8708aCf735Cc9e316f7Cc328c2e1",
      "txHash": "0xbe60598009b4d56541f5ee45b8031b1e21754be9134126061c61944fd03ed3c7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4649",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4687",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4662_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4662_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4667_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4649": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4687": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4662_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4662_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4667_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4667_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "93903a8921078d8b96b2472e9bd7eb3b99a9c6cc870ea4d95f04f48a24f763b8": {
      "address": "0x7c4a890899C9cd626E149aC0a3D176a98aCBc083",
      "txHash": "0x19e0e6bab22223f3ce8f501fdad0259f1930f18228e8ff79fd3cc58f0d0e98a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:17"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:18"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:19"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:27"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_team2Address",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_gameChangerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "_farmingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "3f39a937f015c208701a9ad03fc15dc9a9ea17d902c6f04a21be86b0a6af5e1a": {
      "address": "0x54Cb04eE8ec64Dd14933C9d5A831541768667067",
      "txHash": "0xe3924a8cc9a4875ff72022d6182bf62dcedbb93f1f5f986cb5df5f6601e529c4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4649",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4687",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4662_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4662_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4667_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4649": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4687": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4662_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4662_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4667_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4667_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "efce7d6fdf49836c9bf17f22d2a76b4492d1803554c74ae465cca4699654891a": {
      "address": "0x2Fe9De0Aaad8aFFFF1A0eC9BF810B2FE5E5a2973",
      "txHash": "0x5fc534b52e10e60dcfef1a3e4909e4a7f2e4999a1638eaa63acb1ddff06c1b70",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "Ant3Token",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:17"
          },
          {
            "contract": "Ant3Token",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:18"
          },
          {
            "contract": "Ant3Token",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:19"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:20"
          },
          {
            "contract": "Ant3Token",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:21"
          },
          {
            "contract": "Ant3Token",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:22"
          },
          {
            "contract": "Ant3Token",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:24"
          },
          {
            "contract": "Ant3Token",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:25"
          },
          {
            "contract": "Ant3Token",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:26"
          },
          {
            "contract": "Ant3Token",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:27"
          },
          {
            "contract": "Ant3Token",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:28"
          },
          {
            "contract": "Ant3Token",
            "label": "_decimals",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:29"
          },
          {
            "contract": "Ant3Token",
            "label": "_taxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:30"
          },
          {
            "contract": "Ant3Token",
            "label": "_previousTaxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:31"
          },
          {
            "contract": "Ant3Token",
            "label": "totalBurned",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:32"
          },
          {
            "contract": "Ant3Token",
            "label": "holderTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:33"
          },
          {
            "contract": "Ant3Token",
            "label": "teamTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:34"
          },
          {
            "contract": "Ant3Token",
            "label": "burnTaxFeePercentage",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:35"
          },
          {
            "contract": "Ant3Token",
            "label": "_teamAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:36"
          },
          {
            "contract": "Ant3Token",
            "label": "_signers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:38"
          },
          {
            "contract": "Ant3Token",
            "label": "nodeControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:39"
          },
          {
            "contract": "Ant3Token",
            "label": "stackingControllerContract",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:40"
          },
          {
            "contract": "Ant3Token",
            "label": "_mapSigners",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:42"
          },
          {
            "contract": "Ant3Token",
            "label": "uniqueIdExists",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:43"
          },
          {
            "contract": "Ant3Token",
            "label": "userTotalBurned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:44"
          },
          {
            "contract": "Ant3Token",
            "label": "_team2Address",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:48"
          },
          {
            "contract": "Ant3Token",
            "label": "_gameChangerAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:49"
          },
          {
            "contract": "Ant3Token",
            "label": "_farmingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\token\\Ant3Token.sol:50"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e24c705f4d18fedd307613e8e0210a8943de753971490c93ee94463cc53d2ce4": {
      "address": "0x8454Cf450bA32f02c75a3FcbB81272bA79B77944",
      "txHash": "0x2be915b19d5ae73969f080ee77002722a3c871d54ca134e3838b5a4b9970107d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4674",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4712",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4687_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4687_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4692_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4674": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4712": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4687_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4687_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4692_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4692_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "dc2b739770c9eb2afb1194a23976479e0dd2152945d17d35d675259df665cc45": {
      "address": "0xC8B362a15932239AD30Db9AF8314e95d19b0fE9c",
      "txHash": "0x1aa4d9b0d5b99fc52b900f726451654184b467b931241178dc2dc547442ffabb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4675",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4713",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4688_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4688_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4693_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4675": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4713": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4688_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4688_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4693_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4693_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "1423c70dab3568aa25c3a4aed6414e2d34a24a829f24a657432bf8935ab3d8bb": {
      "address": "0xD1aDb376CE1f1FB4C76d7f5a2d2ae97a19550c8b",
      "txHash": "0x37c682387985e1e860da469ace0e44d66de7e25d18bc166302a7ec95ec5ec341",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "contract": "MonthlyPassController",
            "label": "farmingPoolContract",
            "type": "t_contract(IFarmingPoolContract)4652",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:17"
          },
          {
            "contract": "MonthlyPassController",
            "label": "tokenRateContract",
            "type": "t_contract(ITokenRate)4690",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:18"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lpToken",
            "type": "t_contract(IERC20Upgradeable)971",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:19"
          },
          {
            "contract": "MonthlyPassController",
            "label": "memberController",
            "type": "t_contract(IMemberController)3058",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:20"
          },
          {
            "contract": "MonthlyPassController",
            "label": "ant3Token",
            "type": "t_address",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:21"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastRound",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:22"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:23"
          },
          {
            "contract": "MonthlyPassController",
            "label": "lastActiveMoId",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:24"
          },
          {
            "contract": "MonthlyPassController",
            "label": "today",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:25"
          },
          {
            "contract": "MonthlyPassController",
            "label": "monthlyBlock",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:26"
          },
          {
            "contract": "MonthlyPassController",
            "label": "dailyQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:27"
          },
          {
            "contract": "MonthlyPassController",
            "label": "defaultQuota",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:28"
          },
          {
            "contract": "MonthlyPassController",
            "label": "reservedReward",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:29"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4665_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:30"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allActiveOrders",
            "type": "t_mapping(t_uint256,t_struct(Order)4665_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:31"
          },
          {
            "contract": "MonthlyPassController",
            "label": "allUsers",
            "type": "t_mapping(t_address,t_struct(User)4670_storage)",
            "src": "..\\project:\\contracts\\monthlypass\\MonthlyPassController.sol:32"
          }
        ],
        "types": {
          "t_contract(IFarmingPoolContract)4652": {
            "label": "contract IFarmingPoolContract"
          },
          "t_contract(ITokenRate)4690": {
            "label": "contract ITokenRate"
          },
          "t_contract(IERC20Upgradeable)971": {
            "label": "contract IERC20Upgradeable"
          },
          "t_contract(IMemberController)3058": {
            "label": "contract IMemberController"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Order)4665_storage)": {
            "label": "mapping(uint256 => struct Order)"
          },
          "t_struct(Order)4665_storage": {
            "label": "struct Order",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint256"
              },
              {
                "label": "rewardAmt",
                "type": "t_uint256"
              },
              {
                "label": "owner",
                "type": "t_address"
              },
              {
                "label": "lastClaimRound",
                "type": "t_uint256"
              },
              {
                "label": "levels",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_struct(User)4670_storage)": {
            "label": "mapping(address => struct User)"
          },
          "t_struct(User)4670_storage": {
            "label": "struct User",
            "members": [
              {
                "label": "userOrders",
                "type": "t_mapping(t_uint256,t_bool)"
              }
            ]
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
